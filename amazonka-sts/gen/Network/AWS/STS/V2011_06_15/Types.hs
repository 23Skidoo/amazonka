{-# LANGUAGE DeriveDataTypeable          #-}
{-# LANGUAGE DeriveGeneric               #-}
{-# LANGUAGE FlexibleInstances           #-}
{-# LANGUAGE OverloadedStrings           #-}
{-# LANGUAGE StandaloneDeriving          #-}
{-# LANGUAGE TemplateHaskell             #-}
{-# LANGUAGE TypeFamilies                #-}

{-# OPTIONS_GHC -fno-warn-unused-imports #-}

-- Module      : Network.AWS.STS.V2011_06_15.Types
-- Copyright   : (c) 2013-2014 Brendan Hay <brendan.g.hay@gmail.com>
-- License     : This Source Code Form is subject to the terms of
--               the Mozilla Public License, v. 2.0.
--               A copy of the MPL can be found in the LICENSE file or
--               you can obtain it at http://mozilla.org/MPL/2.0/.
-- Maintainer  : Brendan Hay <brendan.g.hay@gmail.com>
-- Stability   : experimental
-- Portability : non-portable (GHC extensions)

-- | The AWS Security Token Service (STS) is a web service that enables you to
-- request temporary, limited-privilege credentials for AWS Identity and
-- Access Management (IAM) users or for users that you authenticate (federated
-- users).
module Network.AWS.STS.V2011_06_15.Types
    ( module Network.AWS.STS.V2011_06_15.Types
    ) where

import Network.AWS.Prelude
import Network.AWS.Signing.V4

-- | Supported version (@2011-06-15@) of the
-- @AWS Security Token Service@ service.
data STS deriving (Typeable)

instance AWSService STS where
    type Sg STS = V4
    data Er STS
        = ExpiredTokenException
            { _eteMessage :: Maybe Text
            }
        | IDPCommunicationErrorException
            { _idpceeMessage :: Maybe Text
            }
        | IDPRejectedClaimException
            { _idprceMessage :: Maybe Text
            }
        | InvalidAuthorizationMessageException
            { _iameMessage :: Maybe Text
            }
        | InvalidIdentityTokenException
            { _iiteMessage :: Maybe Text
            }
        | MalformedPolicyDocumentException
            { _mpdeMessage :: Maybe Text
            }
        | PackedPolicyTooLargeException
            { _pptleMessage :: Maybe Text
            }
        | STSClient HttpException
        | STSSerializer String
        | STSService String

    service = Service'
        { _svcEndpoint = Regional
        , _svcPrefix   = "sts"
        , _svcVersion  = "2011-06-15"
        , _svcTarget   = Nothing
        }

deriving instance Show    (Er STS)
deriving instance Generic (Er STS)

instance AWSError (Er STS) where
    awsError = const "STSError"

instance AWSServiceError (Er STS) where
    serviceError    = STSService
    clientError     = STSClient
    serializerError = STSSerializer

instance Exception (Er STS)

xmlOptions :: Tagged a XMLOptions
xmlOptions = Tagged def
    { xmlNamespace = Just "https://sts.amazonaws.com/doc/2011-06-15/"
    }

-- | The Amazon Resource Name (ARN) and the assumed role ID, which are
-- identifiers that you can use to refer to the resulting temporary security
-- credentials. For example, you can reference these credentials as a
-- principal in a resource-based policy by using the ARN or assumed role ID.
-- The ARN and ID include the RoleSessionName that you specified when you
-- called AssumeRole.
data AssumedRoleUser = AssumedRoleUser
    { _aruArn :: Text
      -- ^ The ARN of the temporary security credentials that are returned
      -- from the AssumeRole action. For more information about ARNs and
      -- how to use them in policies, see Identifiers for IAM Entities in
      -- Using IAM.
    , _aruAssumedRoleId :: Text
      -- ^ A unique identifier that contains the role ID and the role
      -- session name of the role that is being assumed. The role ID is
      -- generated by AWS when the role is created.
    } deriving (Show, Generic)

instance FromXML AssumedRoleUser where
    fromXMLOptions = xmlOptions
    fromXMLRoot    = fromRoot "AssumedRoleUser"

-- | The temporary security credentials, which include an access key ID, a
-- secret access key, and a security (or session) token.
data Credentials = Credentials
    { _cSecretAccessKey :: Text
      -- ^ The secret access key that can be used to sign requests.
    , _cSessionToken :: Text
      -- ^ The token that users must pass to the service API to use the
      -- temporary credentials.
    , _cExpiration :: ISO8601
      -- ^ The date on which the current credentials expire.
    , _cAccessKeyId :: Text
      -- ^ The access key ID that identifies the temporary security
      -- credentials.
    } deriving (Show, Generic)

instance FromXML Credentials where
    fromXMLOptions = xmlOptions
    fromXMLRoot    = fromRoot "Credentials"

-- | Identifiers for the federated user associated with the credentials (such as
-- arn:aws:sts::123456789012:federated-user/Bob or 123456789012:Bob). You can
-- use the federated user's ARN in your resource-based policies, such as an
-- Amazon S3 bucket policy.
data FederatedUser = FederatedUser
    { _fuArn :: Text
      -- ^ The ARN that specifies the federated user that is associated with
      -- the credentials. For more information about ARNs and how to use
      -- them in policies, see Identifiers for IAM Entities in Using IAM.
    , _fuFederatedUserId :: Text
      -- ^ The string that identifies the federated user associated with the
      -- credentials, similar to the unique ID of an IAM user.
    } deriving (Show, Generic)

instance FromXML FederatedUser where
    fromXMLOptions = xmlOptions
    fromXMLRoot    = fromRoot "FederatedUser"

makeLenses ''AssumedRoleUser
makeLenses ''Credentials
makeLenses ''FederatedUser
