{-# LANGUAGE DataKinds                  #-}
{-# LANGUAGE DeriveGeneric              #-}
{-# LANGUAGE FlexibleInstances          #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE LambdaCase                 #-}
{-# LANGUAGE NoImplicitPrelude          #-}
{-# LANGUAGE OverloadedStrings          #-}
{-# LANGUAGE RecordWildCards            #-}
{-# LANGUAGE TypeFamilies               #-}
{-# LANGUAGE ViewPatterns               #-}

{% include "_include/license.ede" %}

module {{ moduleName }}
    (
    ) where

import           Network.AWS.Prelude
import           Network.AWS.Signing
import qualified GHC.Exts
{% for shape in shapes %}
  {% case shape.value.type %}
  {% when "product" %}

    {% include "_include/product.ede" with shape = shape.value %}
  {% when "sum" %}

    {% include "_include/sum.ede" with shape = shape.value %}
  {% endcase %}
{% endfor %}
