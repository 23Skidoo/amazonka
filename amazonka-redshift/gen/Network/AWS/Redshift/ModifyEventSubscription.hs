{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric      #-}
{-# LANGUAGE OverloadedStrings  #-}
{-# LANGUAGE RecordWildCards    #-}
{-# LANGUAGE TypeFamilies       #-}

{-# OPTIONS_GHC -fno-warn-unused-binds   #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.Redshift.ModifyEventSubscription
-- Copyright   : (c) 2013-2015 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay@gmail.com>
-- Stability   : experimental
-- Portability : non-portable (GHC extensions)
--
-- Modifies an existing Amazon Redshift event notification subscription.
--
-- <http://docs.aws.amazon.com/redshift/latest/APIReference/API_ModifyEventSubscription.html>
module Network.AWS.Redshift.ModifyEventSubscription
    (
    -- * Request
      ModifyEventSubscription
    -- ** Request constructor
    , modifyEventSubscription
    -- ** Request lenses
    , mesrqSNSTopicARN
    , mesrqEnabled
    , mesrqSourceType
    , mesrqSeverity
    , mesrqEventCategories
    , mesrqSourceIds
    , mesrqSubscriptionName

    -- * Response
    , ModifyEventSubscriptionResponse
    -- ** Response constructor
    , modifyEventSubscriptionResponse
    -- ** Response lenses
    , mesrsEventSubscription
    , mesrsStatus
    ) where

import           Network.AWS.Prelude
import           Network.AWS.Redshift.Types
import           Network.AWS.Request
import           Network.AWS.Response

-- |
--
-- /See:/ 'modifyEventSubscription' smart constructor.
--
-- The fields accessible through corresponding lenses are:
--
-- * 'mesrqSNSTopicARN'
--
-- * 'mesrqEnabled'
--
-- * 'mesrqSourceType'
--
-- * 'mesrqSeverity'
--
-- * 'mesrqEventCategories'
--
-- * 'mesrqSourceIds'
--
-- * 'mesrqSubscriptionName'
data ModifyEventSubscription = ModifyEventSubscription'
    { _mesrqSNSTopicARN      :: !(Maybe Text)
    , _mesrqEnabled          :: !(Maybe Bool)
    , _mesrqSourceType       :: !(Maybe Text)
    , _mesrqSeverity         :: !(Maybe Text)
    , _mesrqEventCategories  :: !(Maybe [Text])
    , _mesrqSourceIds        :: !(Maybe [Text])
    , _mesrqSubscriptionName :: !Text
    } deriving (Eq,Read,Show,Data,Typeable,Generic)

-- | 'ModifyEventSubscription' smart constructor.
modifyEventSubscription :: Text -> ModifyEventSubscription
modifyEventSubscription pSubscriptionName_ =
    ModifyEventSubscription'
    { _mesrqSNSTopicARN = Nothing
    , _mesrqEnabled = Nothing
    , _mesrqSourceType = Nothing
    , _mesrqSeverity = Nothing
    , _mesrqEventCategories = Nothing
    , _mesrqSourceIds = Nothing
    , _mesrqSubscriptionName = pSubscriptionName_
    }

-- | The Amazon Resource Name (ARN) of the SNS topic to be used by the event
-- notification subscription.
mesrqSNSTopicARN :: Lens' ModifyEventSubscription (Maybe Text)
mesrqSNSTopicARN = lens _mesrqSNSTopicARN (\ s a -> s{_mesrqSNSTopicARN = a});

-- | A Boolean value indicating if the subscription is enabled. @true@
-- indicates the subscription is enabled
mesrqEnabled :: Lens' ModifyEventSubscription (Maybe Bool)
mesrqEnabled = lens _mesrqEnabled (\ s a -> s{_mesrqEnabled = a});

-- | The type of source that will be generating the events. For example, if
-- you want to be notified of events generated by a cluster, you would set
-- this parameter to cluster. If this value is not specified, events are
-- returned for all Amazon Redshift objects in your AWS account. You must
-- specify a source type in order to specify source IDs.
--
-- Valid values: cluster, cluster-parameter-group, cluster-security-group,
-- and cluster-snapshot.
mesrqSourceType :: Lens' ModifyEventSubscription (Maybe Text)
mesrqSourceType = lens _mesrqSourceType (\ s a -> s{_mesrqSourceType = a});

-- | Specifies the Amazon Redshift event severity to be published by the
-- event notification subscription.
--
-- Values: ERROR, INFO
mesrqSeverity :: Lens' ModifyEventSubscription (Maybe Text)
mesrqSeverity = lens _mesrqSeverity (\ s a -> s{_mesrqSeverity = a});

-- | Specifies the Amazon Redshift event categories to be published by the
-- event notification subscription.
--
-- Values: Configuration, Management, Monitoring, Security
mesrqEventCategories :: Lens' ModifyEventSubscription [Text]
mesrqEventCategories = lens _mesrqEventCategories (\ s a -> s{_mesrqEventCategories = a}) . _Default;

-- | A list of one or more identifiers of Amazon Redshift source objects. All
-- of the objects must be of the same type as was specified in the source
-- type parameter. The event subscription will return only events generated
-- by the specified objects. If not specified, then events are returned for
-- all objects within the source type specified.
--
-- Example: my-cluster-1, my-cluster-2
--
-- Example: my-snapshot-20131010
mesrqSourceIds :: Lens' ModifyEventSubscription [Text]
mesrqSourceIds = lens _mesrqSourceIds (\ s a -> s{_mesrqSourceIds = a}) . _Default;

-- | The name of the modified Amazon Redshift event notification
-- subscription.
mesrqSubscriptionName :: Lens' ModifyEventSubscription Text
mesrqSubscriptionName = lens _mesrqSubscriptionName (\ s a -> s{_mesrqSubscriptionName = a});

instance AWSRequest ModifyEventSubscription where
        type Sv ModifyEventSubscription = Redshift
        type Rs ModifyEventSubscription =
             ModifyEventSubscriptionResponse
        request = post
        response
          = receiveXMLWrapper "ModifyEventSubscriptionResult"
              (\ s h x ->
                 ModifyEventSubscriptionResponse' <$>
                   (x .@? "EventSubscription") <*> (pure (fromEnum s)))

instance ToHeaders ModifyEventSubscription where
        toHeaders = const mempty

instance ToPath ModifyEventSubscription where
        toPath = const "/"

instance ToQuery ModifyEventSubscription where
        toQuery ModifyEventSubscription'{..}
          = mconcat
              ["Action" =:
                 ("ModifyEventSubscription" :: ByteString),
               "Version" =: ("2012-12-01" :: ByteString),
               "SnsTopicArn" =: _mesrqSNSTopicARN,
               "Enabled" =: _mesrqEnabled,
               "SourceType" =: _mesrqSourceType,
               "Severity" =: _mesrqSeverity,
               "EventCategories" =:
                 toQuery
                   (toQueryList "EventCategory" <$>
                      _mesrqEventCategories),
               "SourceIds" =:
                 toQuery (toQueryList "SourceId" <$> _mesrqSourceIds),
               "SubscriptionName" =: _mesrqSubscriptionName]

-- | /See:/ 'modifyEventSubscriptionResponse' smart constructor.
--
-- The fields accessible through corresponding lenses are:
--
-- * 'mesrsEventSubscription'
--
-- * 'mesrsStatus'
data ModifyEventSubscriptionResponse = ModifyEventSubscriptionResponse'
    { _mesrsEventSubscription :: !(Maybe EventSubscription)
    , _mesrsStatus            :: !Int
    } deriving (Eq,Read,Show,Data,Typeable,Generic)

-- | 'ModifyEventSubscriptionResponse' smart constructor.
modifyEventSubscriptionResponse :: Int -> ModifyEventSubscriptionResponse
modifyEventSubscriptionResponse pStatus_ =
    ModifyEventSubscriptionResponse'
    { _mesrsEventSubscription = Nothing
    , _mesrsStatus = pStatus_
    }

-- | FIXME: Undocumented member.
mesrsEventSubscription :: Lens' ModifyEventSubscriptionResponse (Maybe EventSubscription)
mesrsEventSubscription = lens _mesrsEventSubscription (\ s a -> s{_mesrsEventSubscription = a});

-- | FIXME: Undocumented member.
mesrsStatus :: Lens' ModifyEventSubscriptionResponse Int
mesrsStatus = lens _mesrsStatus (\ s a -> s{_mesrsStatus = a});
