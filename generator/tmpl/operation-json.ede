{-# LANGUAGE DeriveGeneric               #-}
{-# LANGUAGE FlexibleInstances           #-}
{-# LANGUAGE NoImplicitPrelude           #-}
{-# LANGUAGE OverloadedStrings           #-}
{-# LANGUAGE RecordWildCards             #-}
{-# LANGUAGE TemplateHaskell             #-}
{-# LANGUAGE TypeFamilies                #-}

{-# OPTIONS_GHC -fno-warn-unused-imports #-}

{% include "_include/license.ede" with namespace %}

{% if documentation %}
{{ documentation | above76 }}
{% endif %}
module {{ namespace }} where

import           {{ types_namespace }}
import           Network.AWS.Prelude
import           Network.AWS.Request.JSON
import qualified Network.AWS.Types.Map    as Map
{% if alias %}

type {{ alias }} = {{ request.name }}
{% endif %}
{% include "_include/method.ede" with request %}

data {{ request.name }} = {{ request.name }}
{% include "_include/record.ede" with request.fields %}

makeLenses ''{{ request.name }}

{% include "_include/path.ede" with request %}

{% include "_include/query.ede" with request %}

{% include "_include/headers.ede" with request %}
{% include "_include/json-to.ede" with request.shape %}

data {{ response.name }} = {{ response.name }}
{% include "_include/record.ede" with response.fields %}

makeLenses ''{{ response.name }}
{% if response.type == "json" %}

instance FromJSON {{ response.name }}
{% endif %}

instance AWSRequest {{ request.name }} where
    type Sv {{ request.name }} = {{ service }}
    type Rs {{ request.name }} = {{ response.name }}

    request = {{ request.method }}
{% include "_include/response.ede" %}
{% if service == "DynamoDB" %}
  {% case request.name %}
  {% when "Scan" %}
    {% include "_include/pager-monoid.ede" %}
  {% when "Query" %}
    {% include "_include/pager-monoid.ede" %}
  {% else %}
    {% include "_include/pager.ede" %}
  {% endcase %}
{% else %}
  {% include "_include/pager.ede" %}
{% endif %}
