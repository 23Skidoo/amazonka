{
    "waiters": {
        "waiters": {},
        "namespace": "Network.AWS.CloudSearchDomains.Waiters",
        "imports": [
            "Network.AWS.CloudSearchDomains.Types"
        ]
    },
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "CloudSearchDomains",
        "error": "JSONError",
        "url": "http://docs.aws.amazon.com/cloudsearch/latest/developerguide/what-is-cloudsearch.html",
        "namespace": "Network.AWS.CloudSearchDomains",
        "protocol": "rest-json",
        "imports": [
            "Network.AWS.CloudSearchDomains.Search",
            "Network.AWS.CloudSearchDomains.Suggest",
            "Network.AWS.CloudSearchDomains.Types",
            "Network.AWS.CloudSearchDomains.UploadDocuments"
        ],
        "name": "Amazon CloudSearch Domain",
        "version": "2013-01-01",
        "documentation": "-- | Pending",
        "xmlNamespace": null,
        "jsonVersion": "1.1",
        "retryDelay": {
            "base": 5.0e-2,
            "attempts": 5,
            "growth": 2
        },
        "endpointPrefix": "cloudsearchdomain",
        "retryPolicies": {
            "service_unavailable": {
                "error": null,
                "code": 503
            },
            "general_server_error": {
                "error": null,
                "code": 500
            },
            "limit_exceeded": {
                "error": null,
                "code": 509
            }
        },
        "targetPrefix": null
    },
    "cabal": {
        "other": [],
        "library": "amazonka-cloudsearch-domains",
        "abbrev": "CloudSearchDomains",
        "exposed": [
            "Network.AWS.CloudSearchDomains",
            "Network.AWS.CloudSearchDomains.Search",
            "Network.AWS.CloudSearchDomains.Suggest",
            "Network.AWS.CloudSearchDomains.Types",
            "Network.AWS.CloudSearchDomains.UploadDocuments"
        ],
        "url": "http://docs.aws.amazon.com/cloudsearch/latest/developerguide/what-is-cloudsearch.html",
        "protocol": "rest-json",
        "name": "Amazon CloudSearch Domain",
        "version": "0.1.4",
        "description": "Pending"
    },
    "types": {
        "namespace": "Network.AWS.CloudSearchDomains.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 9,
                "ctor": "searchStatus",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "ssTimems",
                        "name": "_ssTimems",
                        "shape": "Long",
                        "locationName": "timems",
                        "documentation": "-- | How long it took to process the request, in milliseconds.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "ssRid",
                        "name": "_ssRid",
                        "shape": "String",
                        "locationName": "rid",
                        "documentation": "-- | The encrypted resource ID for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 7,
                "name": "SearchStatus",
                "locationPad": 7,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "ssTimems",
                        "name": "_ssTimems",
                        "shape": "Long",
                        "locationName": "timems",
                        "documentation": "-- | How long it took to process the request, in milliseconds.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "ssRid",
                        "name": "_ssRid",
                        "shape": "String",
                        "locationName": "rid",
                        "documentation": "-- | The encrypted resource ID for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "ssRid",
                        "name": "_ssRid",
                        "shape": "String",
                        "locationName": "rid",
                        "documentation": "-- | The encrypted resource ID for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "ssTimems",
                        "name": "_ssTimems",
                        "shape": "Long",
                        "locationName": "timems",
                        "documentation": "-- | How long it took to process the request, in milliseconds.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Lucene": "lucene",
                    "Dismax": "dismax",
                    "Simple": "simple",
                    "Structured": "structured"
                },
                "valuePad": 11,
                "name": "QueryParser",
                "type": "nullary",
                "branchPad": 10
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 14,
                "ctor": "hit",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "hitId",
                        "name": "_hitId",
                        "shape": "String",
                        "locationName": "id",
                        "documentation": "-- | The document ID of a document that matches the search request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "hitFields",
                        "name": "_hitFields",
                        "shape": "Fields",
                        "locationName": "fields",
                        "documentation": "-- | The fields returned from a document that matches the search request.",
                        "typeExposed": "HashMap Text [Text]",
                        "type": "Map Text (List \"fields\" Text)"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "hitHighlights",
                        "name": "_hitHighlights",
                        "shape": "Highlights",
                        "locationName": "highlights",
                        "documentation": "-- | The highlights returned from a document that matches the search request.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 11,
                "name": "Hit",
                "locationPad": 11,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "hitId",
                        "name": "_hitId",
                        "shape": "String",
                        "locationName": "id",
                        "documentation": "-- | The document ID of a document that matches the search request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "hitFields",
                        "name": "_hitFields",
                        "shape": "Fields",
                        "locationName": "fields",
                        "documentation": "-- | The fields returned from a document that matches the search request.",
                        "typeExposed": "HashMap Text [Text]",
                        "type": "Map Text (List \"fields\" Text)"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "hitHighlights",
                        "name": "_hitHighlights",
                        "shape": "Highlights",
                        "locationName": "highlights",
                        "documentation": "-- | The highlights returned from a document that matches the search request.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "hitFields",
                        "name": "_hitFields",
                        "shape": "Fields",
                        "locationName": "fields",
                        "documentation": "-- | The fields returned from a document that matches the search request.",
                        "typeExposed": "HashMap Text [Text]",
                        "type": "Map Text (List \"fields\" Text)"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "hitHighlights",
                        "name": "_hitHighlights",
                        "shape": "Highlights",
                        "locationName": "highlights",
                        "documentation": "-- | The highlights returned from a document that matches the search request.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "hitId",
                        "name": "_hitId",
                        "shape": "String",
                        "locationName": "id",
                        "documentation": "-- | The document ID of a document that matches the search request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 10,
                "ctor": "suggestStatus",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "ss1Timems",
                        "name": "_ss1Timems",
                        "shape": "Long",
                        "locationName": "timems",
                        "documentation": "-- | How long it took to process the request, in milliseconds.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "ss1Rid",
                        "name": "_ss1Rid",
                        "shape": "String",
                        "locationName": "rid",
                        "documentation": "-- | The encrypted resource ID for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 7,
                "name": "SuggestStatus",
                "locationPad": 7,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "ss1Timems",
                        "name": "_ss1Timems",
                        "shape": "Long",
                        "locationName": "timems",
                        "documentation": "-- | How long it took to process the request, in milliseconds.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "ss1Rid",
                        "name": "_ss1Rid",
                        "shape": "String",
                        "locationName": "rid",
                        "documentation": "-- | The encrypted resource ID for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "ss1Rid",
                        "name": "_ss1Rid",
                        "shape": "String",
                        "locationName": "rid",
                        "documentation": "-- | The encrypted resource ID for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "ss1Timems",
                        "name": "_ss1Timems",
                        "shape": "Long",
                        "locationName": "timems",
                        "documentation": "-- | How long it took to process the request, in milliseconds.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 7,
                "ctor": "bucket",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "bValue",
                        "name": "_bValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "-- | The facet value being counted.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "bCount",
                        "name": "_bCount",
                        "shape": "Long",
                        "locationName": "count",
                        "documentation": "-- | The number of hits that contain the facet value in the specified facet field.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 6,
                "name": "Bucket",
                "locationPad": 6,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "bValue",
                        "name": "_bValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "-- | The facet value being counted.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "bCount",
                        "name": "_bCount",
                        "shape": "Long",
                        "locationName": "count",
                        "documentation": "-- | The number of hits that contain the facet value in the specified facet field.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "bCount",
                        "name": "_bCount",
                        "shape": "Long",
                        "locationName": "count",
                        "documentation": "-- | The number of hits that contain the facet value in the specified facet field.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "bValue",
                        "name": "_bValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "-- | The facet value being counted.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 13,
                "ctor": "suggestionMatch",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smSuggestion",
                        "name": "_smSuggestion",
                        "shape": "String",
                        "locationName": "suggestion",
                        "documentation": "-- | The string that matches the query string specified in the 'SuggestRequest'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smScore",
                        "name": "_smScore",
                        "shape": "Long",
                        "locationName": "score",
                        "documentation": "-- | The relevance score of a suggested match.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smId",
                        "name": "_smId",
                        "shape": "String",
                        "locationName": "id",
                        "documentation": "-- | The document ID of the suggested document.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 11,
                "name": "SuggestionMatch",
                "locationPad": 11,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smSuggestion",
                        "name": "_smSuggestion",
                        "shape": "String",
                        "locationName": "suggestion",
                        "documentation": "-- | The string that matches the query string specified in the 'SuggestRequest'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smScore",
                        "name": "_smScore",
                        "shape": "Long",
                        "locationName": "score",
                        "documentation": "-- | The relevance score of a suggested match.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smId",
                        "name": "_smId",
                        "shape": "String",
                        "locationName": "id",
                        "documentation": "-- | The document ID of the suggested document.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smId",
                        "name": "_smId",
                        "shape": "String",
                        "locationName": "id",
                        "documentation": "-- | The document ID of the suggested document.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smScore",
                        "name": "_smScore",
                        "shape": "Long",
                        "locationName": "score",
                        "documentation": "-- | The relevance score of a suggested match.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smSuggestion",
                        "name": "_smSuggestion",
                        "shape": "String",
                        "locationName": "suggestion",
                        "documentation": "-- | The string that matches the query string specified in the 'SuggestRequest'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "listElement": "Bucket",
                "fieldPad": 0,
                "ctor": "bucketInfo",
                "field": {
                    "location": null,
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "rest-json",
                    "flattened": false,
                    "required": true,
                    "lens": "biBuckets",
                    "name": "_biBuckets",
                    "shape": "BucketList",
                    "locationName": "buckets",
                    "documentation": "-- | A list of the calculated facet values and counts.",
                    "typeExposed": "[Bucket]",
                    "type": "List \"buckets\" Bucket"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "biBuckets",
                        "name": "_biBuckets",
                        "shape": "BucketList",
                        "locationName": "buckets",
                        "documentation": "-- | A list of the calculated facet values and counts.",
                        "typeExposed": "[Bucket]",
                        "type": "List \"buckets\" Bucket"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "BucketInfo",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "biBuckets",
                        "name": "_biBuckets",
                        "shape": "BucketList",
                        "locationName": "buckets",
                        "documentation": "-- | A list of the calculated facet values and counts.",
                        "typeExposed": "[Bucket]",
                        "type": "List \"buckets\" Bucket"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "biBuckets",
                        "name": "_biBuckets",
                        "shape": "BucketList",
                        "locationName": "buckets",
                        "documentation": "-- | A list of the calculated facet values and counts.",
                        "typeExposed": "[Bucket]",
                        "type": "List \"buckets\" Bucket"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "documentServiceWarning",
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "rest-json",
                    "flattened": false,
                    "required": false,
                    "lens": "dswMessage",
                    "name": "_dswMessage",
                    "shape": "String",
                    "locationName": "message",
                    "documentation": "-- | The description for a warning returned by the document service.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "dswMessage",
                        "name": "_dswMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | The description for a warning returned by the document service.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "DocumentServiceWarning",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "dswMessage",
                        "name": "_dswMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | The description for a warning returned by the document service.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "dswMessage",
                        "name": "_dswMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | The description for a warning returned by the document service.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 14,
                "ctor": "suggestModel",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smQuery",
                        "name": "_smQuery",
                        "shape": "String",
                        "locationName": "query",
                        "documentation": "-- | The query string specified in the suggest request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smFound",
                        "name": "_smFound",
                        "shape": "Long",
                        "locationName": "found",
                        "documentation": "-- | The number of documents that were found to match the query string.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "smSuggestions",
                        "name": "_smSuggestions",
                        "shape": "Suggestions",
                        "locationName": "suggestions",
                        "documentation": "-- | The documents that match the query string.",
                        "typeExposed": "[SuggestionMatch]",
                        "type": "List \"suggestions\" SuggestionMatch"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 12,
                "name": "SuggestModel",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smQuery",
                        "name": "_smQuery",
                        "shape": "String",
                        "locationName": "query",
                        "documentation": "-- | The query string specified in the suggest request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smFound",
                        "name": "_smFound",
                        "shape": "Long",
                        "locationName": "found",
                        "documentation": "-- | The number of documents that were found to match the query string.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "smSuggestions",
                        "name": "_smSuggestions",
                        "shape": "Suggestions",
                        "locationName": "suggestions",
                        "documentation": "-- | The documents that match the query string.",
                        "typeExposed": "[SuggestionMatch]",
                        "type": "List \"suggestions\" SuggestionMatch"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smFound",
                        "name": "_smFound",
                        "shape": "Long",
                        "locationName": "found",
                        "documentation": "-- | The number of documents that were found to match the query string.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "smQuery",
                        "name": "_smQuery",
                        "shape": "String",
                        "locationName": "query",
                        "documentation": "-- | The query string specified in the suggest request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "smSuggestions",
                        "name": "_smSuggestions",
                        "shape": "Suggestions",
                        "locationName": "suggestions",
                        "documentation": "-- | The documents that match the query string.",
                        "typeExposed": "[SuggestionMatch]",
                        "type": "List \"suggestions\" SuggestionMatch"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 8,
                "ctor": "hits",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "hFound",
                        "name": "_hFound",
                        "shape": "Long",
                        "locationName": "found",
                        "documentation": "-- | The total number of documents that match the search request.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "hStart",
                        "name": "_hStart",
                        "shape": "Long",
                        "locationName": "start",
                        "documentation": "-- | The index of the first matching document.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "hCursor",
                        "name": "_hCursor",
                        "shape": "String",
                        "locationName": "cursor",
                        "documentation": "-- | A cursor that can be used to retrieve the next set of matching documents when\n-- you want to page through a large result set.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "hHit",
                        "name": "_hHit",
                        "shape": "HitList",
                        "locationName": "hit",
                        "documentation": "-- | A document that matches the search request.",
                        "typeExposed": "[Hit]",
                        "type": "List \"hit\" Hit"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 7,
                "name": "Hits",
                "locationPad": 7,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "hFound",
                        "name": "_hFound",
                        "shape": "Long",
                        "locationName": "found",
                        "documentation": "-- | The total number of documents that match the search request.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "hStart",
                        "name": "_hStart",
                        "shape": "Long",
                        "locationName": "start",
                        "documentation": "-- | The index of the first matching document.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "hCursor",
                        "name": "_hCursor",
                        "shape": "String",
                        "locationName": "cursor",
                        "documentation": "-- | A cursor that can be used to retrieve the next set of matching documents when\n-- you want to page through a large result set.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "hHit",
                        "name": "_hHit",
                        "shape": "HitList",
                        "locationName": "hit",
                        "documentation": "-- | A document that matches the search request.",
                        "typeExposed": "[Hit]",
                        "type": "List \"hit\" Hit"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "hCursor",
                        "name": "_hCursor",
                        "shape": "String",
                        "locationName": "cursor",
                        "documentation": "-- | A cursor that can be used to retrieve the next set of matching documents when\n-- you want to page through a large result set.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "hFound",
                        "name": "_hFound",
                        "shape": "Long",
                        "locationName": "found",
                        "documentation": "-- | The total number of documents that match the search request.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "hHit",
                        "name": "_hHit",
                        "shape": "HitList",
                        "locationName": "hit",
                        "documentation": "-- | A document that matches the search request.",
                        "typeExposed": "[Hit]",
                        "type": "List \"hit\" Hit"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "hStart",
                        "name": "_hStart",
                        "shape": "Long",
                        "locationName": "start",
                        "documentation": "-- | The index of the first matching document.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "ApplicationJson": "application/json",
                    "ApplicationXml": "application/xml"
                },
                "valuePad": 17,
                "name": "ContentType",
                "type": "nullary",
                "branchPad": 15
            }
        ],
        "imports": [],
        "shared": []
    },
    "operations": [
        {
            "service": "CloudSearchDomains",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 10,
                "ctor": "searchResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "sr1Status",
                        "name": "_sr1Status",
                        "shape": "SearchStatus",
                        "locationName": "status",
                        "documentation": "-- | The status information returned for the search request.",
                        "typeExposed": "Maybe SearchStatus",
                        "type": "Maybe SearchStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "sr1Hits",
                        "name": "_sr1Hits",
                        "shape": "Hits",
                        "locationName": "hits",
                        "documentation": "-- | The documents that match the search criteria.",
                        "typeExposed": "Maybe Hits",
                        "type": "Maybe Hits"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "sr1Facets",
                        "name": "_sr1Facets",
                        "shape": "Facets",
                        "locationName": "facets",
                        "documentation": "-- | The requested facet information.",
                        "typeExposed": "HashMap Text BucketInfo",
                        "type": "Map Text BucketInfo"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 7,
                "name": "SearchResponse",
                "resultWrapper": null,
                "locationPad": 7,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "sr1Status",
                        "name": "_sr1Status",
                        "shape": "SearchStatus",
                        "locationName": "status",
                        "documentation": "-- | The status information returned for the search request.",
                        "typeExposed": "Maybe SearchStatus",
                        "type": "Maybe SearchStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "sr1Hits",
                        "name": "_sr1Hits",
                        "shape": "Hits",
                        "locationName": "hits",
                        "documentation": "-- | The documents that match the search criteria.",
                        "typeExposed": "Maybe Hits",
                        "type": "Maybe Hits"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "sr1Facets",
                        "name": "_sr1Facets",
                        "shape": "Facets",
                        "locationName": "facets",
                        "documentation": "-- | The requested facet information.",
                        "typeExposed": "HashMap Text BucketInfo",
                        "type": "Map Text BucketInfo"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "sr1Facets",
                        "name": "_sr1Facets",
                        "shape": "Facets",
                        "locationName": "facets",
                        "documentation": "-- | The requested facet information.",
                        "typeExposed": "HashMap Text BucketInfo",
                        "type": "Map Text BucketInfo"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "sr1Hits",
                        "name": "_sr1Hits",
                        "shape": "Hits",
                        "locationName": "hits",
                        "documentation": "-- | The documents that match the search criteria.",
                        "typeExposed": "Maybe Hits",
                        "type": "Maybe Hits"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "sr1Status",
                        "name": "_sr1Status",
                        "shape": "SearchStatus",
                        "locationName": "status",
                        "documentation": "-- | The status information returned for the search request.",
                        "typeExposed": "Maybe SearchStatus",
                        "type": "Maybe SearchStatus"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_Search.html",
            "namespace": "Network.AWS.CloudSearchDomains.Search",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.RestJSON",
                "Network.AWS.CloudSearchDomains.Types"
            ],
            "pager": null,
            "name": "Search",
            "method": "get",
            "documentation": "-- | Retrieves a list of documents that match the specified search criteria. How\n-- you specify the search criteria depends on which query parser you use. Amazon\n-- CloudSearch supports four query parsers:\n--\n-- 'simple': search all 'text' and 'text-array' fields for the specified string.\n-- Search for phrases, individual terms, and prefixes.   'structured': search\n-- specific fields, construct compound queries using Boolean operators, and use\n-- advanced features such as term boosting and proximity searching.  'lucene':\n-- specify search criteria using the Apache Lucene query parser syntax.  'dismax':\n-- specify search criteria using the simplified subset of the Apache Lucene\n-- query parser syntax defined by the DisMax query parser.  For more\n-- information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching.html Searching Your Data\u003e in the /Amazon CloudSearch Developer Guide/\n-- .\n--\n-- The endpoint for submitting 'Search' requests is domain-specific. You submit\n-- search requests to a domain's search endpoint. To get the search endpoint for\n-- your domain, use the Amazon CloudSearch configuration service 'DescribeDomains'\n-- action. A domain's endpoints are also displayed on the domain dashboard in\n-- the Amazon CloudSearch console.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 15,
                "ctor": "search",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/2013-01-01/search",
                        "type": "const"
                    }
                ],
                "protocol": "rest-json",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "s1Query",
                        "name": "_s1Query",
                        "shape": "Query",
                        "locationName": "q",
                        "documentation": "-- | Specifies the search criteria for the request. How you specify the search\n-- criteria depends on the query parser used for the request and the parser\n-- options specified in the 'queryOptions' parameter. By default, the 'simple' query\n-- parser is used to process requests. To use the 'structured', 'lucene', or 'dismax'\n-- query parser, you must also specify the 'queryParser' parameter.\n--\n-- For more information about specifying search criteria, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching.html Searching YourData\u003e in the /Amazon CloudSearch Developer Guide/.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "Search",
                "query": [
                    {
                        "value": "format=sdk&pretty=true",
                        "type": "const"
                    },
                    {
                        "field": "_s1Cursor",
                        "locationName": "cursor",
                        "type": "field"
                    },
                    {
                        "field": "_s1Expr",
                        "locationName": "expr",
                        "type": "field"
                    },
                    {
                        "field": "_s1Facet",
                        "locationName": "facet",
                        "type": "field"
                    },
                    {
                        "field": "_s1FilterQuery",
                        "locationName": "fq",
                        "type": "field"
                    },
                    {
                        "field": "_s1Highlight",
                        "locationName": "highlight",
                        "type": "field"
                    },
                    {
                        "field": "_s1Partial",
                        "locationName": "partial",
                        "type": "field"
                    },
                    {
                        "field": "_s1Query",
                        "locationName": "q",
                        "type": "field"
                    },
                    {
                        "field": "_s1QueryOptions",
                        "locationName": "q.options",
                        "type": "field"
                    },
                    {
                        "field": "_s1QueryParser",
                        "locationName": "q.parser",
                        "type": "field"
                    },
                    {
                        "field": "_s1Return",
                        "locationName": "return",
                        "type": "field"
                    },
                    {
                        "field": "_s1Size",
                        "locationName": "size",
                        "type": "field"
                    },
                    {
                        "field": "_s1Sort",
                        "locationName": "sort",
                        "type": "field"
                    },
                    {
                        "field": "_s1Start",
                        "locationName": "start",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Cursor",
                        "name": "_s1Cursor",
                        "shape": "Cursor",
                        "locationName": "cursor",
                        "documentation": "-- | Retrieves a cursor value you can use to page through large result sets. Use\n-- the 'size' parameter to control the number of hits to include in each response.\n-- You can specify either the 'cursor' or 'start' parameter in a request; they are\n-- mutually exclusive. To get the first cursor, set the cursor value to 'initial'.\n-- In subsequent requests, specify the cursor value returned in the hits section\n-- of the response.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/paginating-results.html Paginating Results\u003e in the /Amazon CloudSearchDeveloper Guide/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Expr",
                        "name": "_s1Expr",
                        "shape": "Expr",
                        "locationName": "expr",
                        "documentation": "-- | Defines one or more numeric expressions that can be used to sort results or\n-- specify search or filter criteria. You can also specify expressions as return\n-- fields.\n--\n-- For more information about defining and using expressions, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html ConfiguringExpressions\u003e in the /Amazon CloudSearch Developer Guide/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Facet",
                        "name": "_s1Facet",
                        "shape": "Facet",
                        "locationName": "facet",
                        "documentation": "-- | Specifies one or more fields for which to get facet information, and options\n-- that control how the facet information is returned. Each specified field must\n-- be facet-enabled in the domain configuration. The fields and options are\n-- specified in JSON using the form '{\"FIELD\":{\"OPTION\":VALUE,\"OPTION:\"STRING\"},\"FIELD\":{\"OPTION\":VALUE,\"OPTION\":\"STRING\"}}'.\n--\n-- You can specify the following faceting options:\n--\n-- 'buckets' specifies an array of the facet values or ranges to count. Ranges\n-- are specified using the same syntax that you use to search for a range of\n-- values. For more information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-ranges.html  Searching for a Range of Values\u003e in the /Amazon CloudSearch Developer Guide/. Buckets are returned in the order they are specified in the request. The 'sort' and 'size' options are not valid if you specify 'buckets'.\n--\n-- 'size' specifies the maximum number of facets to include in the results. By\n-- default, Amazon CloudSearch returns counts for the top 10. The 'size' parameter\n-- is only valid when you specify the 'sort' option; it cannot be used in\n-- conjunction with 'buckets'.\n--\n-- 'sort' specifies how you want to sort the facets in the results: 'bucket' or 'count'. Specify 'bucket' to sort alphabetically or numerically by facet value (in\n-- ascending order). Specify 'count' to sort by the facet counts computed for each\n-- facet value (in descending order). To retrieve facet counts for particular\n-- values or ranges of values, use the 'buckets' option instead of 'sort'.\n--\n-- If no facet options are specified, facet counts are computed for all field\n-- values, the facets are sorted by facet count, and the top 10 facets are\n-- returned in the results.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/faceting.html Getting and Using Facet Information\u003e in the /AmazonCloudSearch Developer Guide/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1FilterQuery",
                        "name": "_s1FilterQuery",
                        "shape": "FilterQuery",
                        "locationName": "fq",
                        "documentation": "-- | Specifies a structured query that filters the results of a search without\n-- affecting how the results are scored and sorted. You use 'filterQuery' in\n-- conjunction with the 'query' parameter to filter the documents that match the\n-- constraints specified in the 'query' parameter. Specifying a filter controls\n-- only which matching documents are included in the results, it has no effect\n-- on how they are scored and sorted. The 'filterQuery' parameter supports the\n-- full structured query syntax.\n--\n-- For more information about using filters, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/filtering-results.html Filtering Matching Documents\u003e\n-- in the /Amazon CloudSearch Developer Guide/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Highlight",
                        "name": "_s1Highlight",
                        "shape": "Highlight",
                        "locationName": "highlight",
                        "documentation": "-- | Retrieves highlights for matches in the specified 'text' or 'text-array' fields.\n-- Each specified field must be highlight enabled in the domain configuration.\n-- The fields and options are specified in JSON using the form '{\"FIELD\":{\"OPTION\":VALUE,\"OPTION:\"STRING\"},\"FIELD\":{\"OPTION\":VALUE,\"OPTION\":\"STRING\"}}'.\n--\n-- You can specify the following highlight options:\n--\n-- 'format': specifies the format of the data in the text field: 'text' or 'html'.\n-- When data is returned as HTML, all non-alphanumeric characters are encoded.\n-- The default is 'html'.   'max_phrases': specifies the maximum number of\n-- occurrences of the search term(s) you want to highlight. By default, the\n-- first occurrence is highlighted.   'pre_tag': specifies the string to prepend\n-- to an occurrence of a search term. The default for HTML highlights is '&lt;em&gt;'. The default for text highlights is '*'.   'post_tag': specifies the string to\n-- append to an occurrence of a search term. The default for HTML highlights is '&lt;/em&gt;'. The default for text highlights is '*'.   If no highlight options are\n-- specified for a field, the returned field text is treated as HTML and the\n-- first match is highlighted with emphasis tags: '&lt;em\u003esearch-term&lt;/em&gt;'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Partial",
                        "name": "_s1Partial",
                        "shape": "Partial",
                        "locationName": "partial",
                        "documentation": "-- | Enables partial results to be returned if one or more index partitions are\n-- unavailable. When your search index is partitioned across multiple search\n-- instances, by default Amazon CloudSearch only returns results if every\n-- partition can be queried. This means that the failure of a single search\n-- instance can result in 5xx (internal server) errors. When you enable partial\n-- results, Amazon CloudSearch returns whatever results are available and\n-- includes the percentage of documents searched in the search results\n-- (percent-searched). This enables you to more gracefully degrade your users'\n-- search experience. For example, rather than displaying no results, you could\n-- display the partial results and a message indicating that the results might\n-- be incomplete due to a temporary system outage.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1QueryOptions",
                        "name": "_s1QueryOptions",
                        "shape": "QueryOptions",
                        "locationName": "q.options",
                        "documentation": "-- | Configures options for the query parser specified in the 'queryParser'\n-- parameter.\n--\n-- The options you can configure vary according to which parser you use:\n--\n-- 'defaultOperator': The default operator used to combine individual terms in\n-- the search string. For example: 'defaultOperator: 'or''. For the 'dismax' parser,\n-- you specify a percentage that represents the percentage of terms in the\n-- search string (rounded down) that must match, rather than a default operator.\n-- A value of '0%' is the equivalent to OR, and a value of '100%' is equivalent to\n-- AND. The percentage must be specified as a value in the range 0-100 followed\n-- by the percent (%) symbol. For example, 'defaultOperator: 50%'. Valid values: 'and', 'or', a percentage in the range 0%-100% ('dismax'). Default: 'and' ('simple', 'structured', 'lucene') or '100' ('dismax'). Valid for: 'simple', 'structured', 'lucene', and 'dismax'.\n-- 'fields': An array of the fields to search when no fields are specified in a\n-- search. If no fields are specified in a search and this option is not\n-- specified, all text and text-array fields are searched. You can specify a\n-- weight for each field to control the relative importance of each field when\n-- Amazon CloudSearch calculates relevance scores. To specify a field weight,\n-- append a caret ('^') symbol and the weight to the field name. For example, to\n-- boost the importance of the 'title' field over the 'description' field you could\n-- specify: '\"fields\":[\"title^5\",\"description\"]'. Valid values: The name of any\n-- configured field and an optional numeric value greater than zero. Default:\n-- All 'text' and 'text-array' fields. Valid for: 'simple', 'structured', 'lucene', and 'dismax'.  'operators': An array of the operators or special characters you want to\n-- disable for the simple query parser. If you disable the 'and', 'or', or 'not'\n-- operators, the corresponding operators ('+', '|', '-') have no special meaning and\n-- are dropped from the search string. Similarly, disabling 'prefix' disables the\n-- wildcard operator ('*') and disabling 'phrase' disables the ability to search for\n-- phrases by enclosing phrases in double quotes. Disabling precedence disables\n-- the ability to control order of precedence using parentheses. Disabling 'near'\n-- disables the ability to use the ~ operator to perform a sloppy phrase search.\n-- Disabling the 'fuzzy' operator disables the ability to use the ~ operator to\n-- perform a fuzzy search. 'escape' disables the ability to use a backslash ('\\') to\n-- escape special characters within the search string. Disabling whitespace is\n-- an advanced option that prevents the parser from tokenizing on whitespace,\n-- which can be useful for Vietnamese. (It prevents Vietnamese words from being\n-- split incorrectly.) For example, you could disable all operators other than\n-- the phrase operator to support just simple term and phrase queries: '\"operators\":[\"and\",\"not\",\"or\", \"prefix\"]'. Valid values: 'and', 'escape', 'fuzzy', 'near', 'not', 'or', 'phrase', 'precedence', 'prefix',\n-- 'whitespace'. Default: All operators and special characters are enabled. Valid\n-- for: 'simple'.  'phraseFields': An array of the 'text' or 'text-array' fields you\n-- want to use for phrase searches. When the terms in the search string appear\n-- in close proximity within a field, the field scores higher. You can specify a\n-- weight for each field to boost that score. The 'phraseSlop' option controls how\n-- much the matches can deviate from the search string and still be boosted. To\n-- specify a field weight, append a caret ('^') symbol and the weight to the field\n-- name. For example, to boost phrase matches in the 'title' field over the 'abstract' field, you could specify: '\"phraseFields\":[\"title^3\", \"plot\"]' Valid values:\n-- The name of any 'text' or 'text-array' field and an optional numeric value\n-- greater than zero. Default: No fields. If you don't specify any fields with 'phraseFields', proximity scoring is disabled even if 'phraseSlop' is specified. Valid for: 'dismax'.  'phraseSlop': An integer value that specifies how much matches can deviate\n-- from the search phrase and still be boosted according to the weights\n-- specified in the 'phraseFields' option; for example, 'phraseSlop: 2'. You must\n-- also specify 'phraseFields' to enable proximity scoring. Valid values: positive\n-- integers. Default: 0. Valid for: 'dismax'.  'explicitPhraseSlop': An integer\n-- value that specifies how much a match can deviate from the search phrase when\n-- the phrase is enclosed in double quotes in the search string. (Phrases that\n-- exceed this proximity distance are not considered a match.) For example, to\n-- specify a slop of three for dismax phrase queries, you would specify '\"explicitPhraseSlop\":3'. Valid values: positive integers. Default: 0. Valid for: 'dismax'.  'tieBreaker': When a term in the search string is found in a document's field, a score is calculated for that field based on how common the word is in that field compared to other documents. If the term occurs in multiple fields within a document, by default only the highest scoring field contributes to the document's overall score. You can specify a\n-- 'tieBreaker' value to enable the matches in lower-scoring fields to contribute\n-- to the document's score. That way, if two documents have the same max field\n-- score for a particular term, the score for the document that has matches in\n-- more fields will be higher. The formula for calculating the score with a\n-- tieBreaker is '(max field score) + (tieBreaker) * (sum of the scores for therest of the matching fields)'. Set 'tieBreaker' to 0 to disregard all but the\n-- highest scoring field (pure max): '\"tieBreaker\":0'. Set to 1 to sum the scores\n-- from all fields (pure sum): '\"tieBreaker\":1'. Valid values: 0.0 to 1.0.\n-- Default: 0.0. Valid for: 'dismax'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1QueryParser",
                        "name": "_s1QueryParser",
                        "shape": "QueryParser",
                        "locationName": "q.parser",
                        "documentation": "-- | Specifies which query parser to use to process the request. If 'queryParser' is\n-- not specified, Amazon CloudSearch uses the 'simple' query parser.\n--\n-- Amazon CloudSearch supports four query parsers:\n--\n-- 'simple': perform simple searches of 'text' and 'text-array' fields. By default,\n-- the 'simple' query parser searches all 'text' and 'text-array' fields. You can\n-- specify which fields to search by with the 'queryOptions' parameter. If you\n-- prefix a search term with a plus sign (+) documents must contain the term to\n-- be considered a match. (This is the default, unless you configure the default\n-- operator with the 'queryOptions' parameter.) You can use the '-' (NOT), '|' (OR),\n-- and '*' (wildcard) operators to exclude particular terms, find results that\n-- match any of the specified terms, or search for a prefix. To search for a\n-- phrase rather than individual terms, enclose the phrase in double quotes. For\n-- more information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-text.html Searching for Text\u003e in the /Amazon CloudSearch DeveloperGuide/.   'structured': perform advanced searches by combining multiple\n-- expressions to define the search criteria. You can also search within\n-- particular fields, search for values and ranges of values, and use advanced\n-- options such as term boosting, 'matchall', and 'near'. For more information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-compound-queries.html Constructing Compound Queries\u003e in the /Amazon CloudSearch Developer Guide/.   'lucene': search using the Apache\n-- Lucene query parser syntax. For more information, see \u003chttp://lucene.apache.org/core/4_6_0/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#package_description Apache Lucene QueryParser Syntax\u003e.   'dismax': search using the simplified subset of the Apache\n-- Lucene query parser syntax defined by the DisMax query parser. For more\n-- information, see \u003chttp://wiki.apache.org/solr/DisMaxQParserPlugin#Query_Syntax DisMax Query Parser Syntax\u003e.",
                        "typeExposed": "Maybe QueryParser",
                        "type": "Maybe QueryParser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Return",
                        "name": "_s1Return",
                        "shape": "Return",
                        "locationName": "return",
                        "documentation": "-- | Specifies the field and expression values to include in the response.\n-- Multiple fields or expressions are specified as a comma-separated list. By\n-- default, a search response includes all return enabled fields ('_all_fields').\n-- To return only the document IDs for the matching documents, specify '_no_fields'\n-- . To retrieve the relevance score calculated for each document, specify '_score'\n-- .",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Size",
                        "name": "_s1Size",
                        "shape": "Size",
                        "locationName": "size",
                        "documentation": "-- | Specifies the maximum number of search hits to include in the response.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Sort",
                        "name": "_s1Sort",
                        "shape": "Sort",
                        "locationName": "sort",
                        "documentation": "-- | Specifies the fields or custom expressions to use to sort the search results.\n-- Multiple fields or expressions are specified as a comma-separated list. You\n-- must specify the sort direction ('asc' or 'desc') for each field; for example, 'year desc,title asc'. To use a field to sort results, the field must be sort-enabled in the\n-- domain configuration. Array type fields cannot be used for sorting. If no 'sort'\n-- parameter is specified, results are sorted by their default relevance scores\n-- in descending order: '_score desc'. You can also sort by document ID ('_id asc')\n-- and version ('_version desc').\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/sorting-results.html Sorting Results\u003e in the /Amazon CloudSearchDeveloper Guide/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Start",
                        "name": "_s1Start",
                        "shape": "Start",
                        "locationName": "start",
                        "documentation": "-- | Specifies the offset of the first search hit you want to return. Note that\n-- the result set is zero-based; the first result is at index 0. You can specify\n-- either the 'start' or 'cursor' parameter in a request, they are mutually\n-- exclusive.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/paginating-results.html Paginating Results\u003e in the /Amazon CloudSearchDeveloper Guide/.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Cursor",
                        "name": "_s1Cursor",
                        "shape": "Cursor",
                        "locationName": "cursor",
                        "documentation": "-- | Retrieves a cursor value you can use to page through large result sets. Use\n-- the 'size' parameter to control the number of hits to include in each response.\n-- You can specify either the 'cursor' or 'start' parameter in a request; they are\n-- mutually exclusive. To get the first cursor, set the cursor value to 'initial'.\n-- In subsequent requests, specify the cursor value returned in the hits section\n-- of the response.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/paginating-results.html Paginating Results\u003e in the /Amazon CloudSearchDeveloper Guide/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Expr",
                        "name": "_s1Expr",
                        "shape": "Expr",
                        "locationName": "expr",
                        "documentation": "-- | Defines one or more numeric expressions that can be used to sort results or\n-- specify search or filter criteria. You can also specify expressions as return\n-- fields.\n--\n-- For more information about defining and using expressions, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html ConfiguringExpressions\u003e in the /Amazon CloudSearch Developer Guide/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Facet",
                        "name": "_s1Facet",
                        "shape": "Facet",
                        "locationName": "facet",
                        "documentation": "-- | Specifies one or more fields for which to get facet information, and options\n-- that control how the facet information is returned. Each specified field must\n-- be facet-enabled in the domain configuration. The fields and options are\n-- specified in JSON using the form '{\"FIELD\":{\"OPTION\":VALUE,\"OPTION:\"STRING\"},\"FIELD\":{\"OPTION\":VALUE,\"OPTION\":\"STRING\"}}'.\n--\n-- You can specify the following faceting options:\n--\n-- 'buckets' specifies an array of the facet values or ranges to count. Ranges\n-- are specified using the same syntax that you use to search for a range of\n-- values. For more information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-ranges.html  Searching for a Range of Values\u003e in the /Amazon CloudSearch Developer Guide/. Buckets are returned in the order they are specified in the request. The 'sort' and 'size' options are not valid if you specify 'buckets'.\n--\n-- 'size' specifies the maximum number of facets to include in the results. By\n-- default, Amazon CloudSearch returns counts for the top 10. The 'size' parameter\n-- is only valid when you specify the 'sort' option; it cannot be used in\n-- conjunction with 'buckets'.\n--\n-- 'sort' specifies how you want to sort the facets in the results: 'bucket' or 'count'. Specify 'bucket' to sort alphabetically or numerically by facet value (in\n-- ascending order). Specify 'count' to sort by the facet counts computed for each\n-- facet value (in descending order). To retrieve facet counts for particular\n-- values or ranges of values, use the 'buckets' option instead of 'sort'.\n--\n-- If no facet options are specified, facet counts are computed for all field\n-- values, the facets are sorted by facet count, and the top 10 facets are\n-- returned in the results.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/faceting.html Getting and Using Facet Information\u003e in the /AmazonCloudSearch Developer Guide/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1FilterQuery",
                        "name": "_s1FilterQuery",
                        "shape": "FilterQuery",
                        "locationName": "fq",
                        "documentation": "-- | Specifies a structured query that filters the results of a search without\n-- affecting how the results are scored and sorted. You use 'filterQuery' in\n-- conjunction with the 'query' parameter to filter the documents that match the\n-- constraints specified in the 'query' parameter. Specifying a filter controls\n-- only which matching documents are included in the results, it has no effect\n-- on how they are scored and sorted. The 'filterQuery' parameter supports the\n-- full structured query syntax.\n--\n-- For more information about using filters, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/filtering-results.html Filtering Matching Documents\u003e\n-- in the /Amazon CloudSearch Developer Guide/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Highlight",
                        "name": "_s1Highlight",
                        "shape": "Highlight",
                        "locationName": "highlight",
                        "documentation": "-- | Retrieves highlights for matches in the specified 'text' or 'text-array' fields.\n-- Each specified field must be highlight enabled in the domain configuration.\n-- The fields and options are specified in JSON using the form '{\"FIELD\":{\"OPTION\":VALUE,\"OPTION:\"STRING\"},\"FIELD\":{\"OPTION\":VALUE,\"OPTION\":\"STRING\"}}'.\n--\n-- You can specify the following highlight options:\n--\n-- 'format': specifies the format of the data in the text field: 'text' or 'html'.\n-- When data is returned as HTML, all non-alphanumeric characters are encoded.\n-- The default is 'html'.   'max_phrases': specifies the maximum number of\n-- occurrences of the search term(s) you want to highlight. By default, the\n-- first occurrence is highlighted.   'pre_tag': specifies the string to prepend\n-- to an occurrence of a search term. The default for HTML highlights is '&lt;em&gt;'. The default for text highlights is '*'.   'post_tag': specifies the string to\n-- append to an occurrence of a search term. The default for HTML highlights is '&lt;/em&gt;'. The default for text highlights is '*'.   If no highlight options are\n-- specified for a field, the returned field text is treated as HTML and the\n-- first match is highlighted with emphasis tags: '&lt;em\u003esearch-term&lt;/em&gt;'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Partial",
                        "name": "_s1Partial",
                        "shape": "Partial",
                        "locationName": "partial",
                        "documentation": "-- | Enables partial results to be returned if one or more index partitions are\n-- unavailable. When your search index is partitioned across multiple search\n-- instances, by default Amazon CloudSearch only returns results if every\n-- partition can be queried. This means that the failure of a single search\n-- instance can result in 5xx (internal server) errors. When you enable partial\n-- results, Amazon CloudSearch returns whatever results are available and\n-- includes the percentage of documents searched in the search results\n-- (percent-searched). This enables you to more gracefully degrade your users'\n-- search experience. For example, rather than displaying no results, you could\n-- display the partial results and a message indicating that the results might\n-- be incomplete due to a temporary system outage.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "s1Query",
                        "name": "_s1Query",
                        "shape": "Query",
                        "locationName": "q",
                        "documentation": "-- | Specifies the search criteria for the request. How you specify the search\n-- criteria depends on the query parser used for the request and the parser\n-- options specified in the 'queryOptions' parameter. By default, the 'simple' query\n-- parser is used to process requests. To use the 'structured', 'lucene', or 'dismax'\n-- query parser, you must also specify the 'queryParser' parameter.\n--\n-- For more information about specifying search criteria, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching.html Searching YourData\u003e in the /Amazon CloudSearch Developer Guide/.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1QueryOptions",
                        "name": "_s1QueryOptions",
                        "shape": "QueryOptions",
                        "locationName": "q.options",
                        "documentation": "-- | Configures options for the query parser specified in the 'queryParser'\n-- parameter.\n--\n-- The options you can configure vary according to which parser you use:\n--\n-- 'defaultOperator': The default operator used to combine individual terms in\n-- the search string. For example: 'defaultOperator: 'or''. For the 'dismax' parser,\n-- you specify a percentage that represents the percentage of terms in the\n-- search string (rounded down) that must match, rather than a default operator.\n-- A value of '0%' is the equivalent to OR, and a value of '100%' is equivalent to\n-- AND. The percentage must be specified as a value in the range 0-100 followed\n-- by the percent (%) symbol. For example, 'defaultOperator: 50%'. Valid values: 'and', 'or', a percentage in the range 0%-100% ('dismax'). Default: 'and' ('simple', 'structured', 'lucene') or '100' ('dismax'). Valid for: 'simple', 'structured', 'lucene', and 'dismax'.\n-- 'fields': An array of the fields to search when no fields are specified in a\n-- search. If no fields are specified in a search and this option is not\n-- specified, all text and text-array fields are searched. You can specify a\n-- weight for each field to control the relative importance of each field when\n-- Amazon CloudSearch calculates relevance scores. To specify a field weight,\n-- append a caret ('^') symbol and the weight to the field name. For example, to\n-- boost the importance of the 'title' field over the 'description' field you could\n-- specify: '\"fields\":[\"title^5\",\"description\"]'. Valid values: The name of any\n-- configured field and an optional numeric value greater than zero. Default:\n-- All 'text' and 'text-array' fields. Valid for: 'simple', 'structured', 'lucene', and 'dismax'.  'operators': An array of the operators or special characters you want to\n-- disable for the simple query parser. If you disable the 'and', 'or', or 'not'\n-- operators, the corresponding operators ('+', '|', '-') have no special meaning and\n-- are dropped from the search string. Similarly, disabling 'prefix' disables the\n-- wildcard operator ('*') and disabling 'phrase' disables the ability to search for\n-- phrases by enclosing phrases in double quotes. Disabling precedence disables\n-- the ability to control order of precedence using parentheses. Disabling 'near'\n-- disables the ability to use the ~ operator to perform a sloppy phrase search.\n-- Disabling the 'fuzzy' operator disables the ability to use the ~ operator to\n-- perform a fuzzy search. 'escape' disables the ability to use a backslash ('\\') to\n-- escape special characters within the search string. Disabling whitespace is\n-- an advanced option that prevents the parser from tokenizing on whitespace,\n-- which can be useful for Vietnamese. (It prevents Vietnamese words from being\n-- split incorrectly.) For example, you could disable all operators other than\n-- the phrase operator to support just simple term and phrase queries: '\"operators\":[\"and\",\"not\",\"or\", \"prefix\"]'. Valid values: 'and', 'escape', 'fuzzy', 'near', 'not', 'or', 'phrase', 'precedence', 'prefix',\n-- 'whitespace'. Default: All operators and special characters are enabled. Valid\n-- for: 'simple'.  'phraseFields': An array of the 'text' or 'text-array' fields you\n-- want to use for phrase searches. When the terms in the search string appear\n-- in close proximity within a field, the field scores higher. You can specify a\n-- weight for each field to boost that score. The 'phraseSlop' option controls how\n-- much the matches can deviate from the search string and still be boosted. To\n-- specify a field weight, append a caret ('^') symbol and the weight to the field\n-- name. For example, to boost phrase matches in the 'title' field over the 'abstract' field, you could specify: '\"phraseFields\":[\"title^3\", \"plot\"]' Valid values:\n-- The name of any 'text' or 'text-array' field and an optional numeric value\n-- greater than zero. Default: No fields. If you don't specify any fields with 'phraseFields', proximity scoring is disabled even if 'phraseSlop' is specified. Valid for: 'dismax'.  'phraseSlop': An integer value that specifies how much matches can deviate\n-- from the search phrase and still be boosted according to the weights\n-- specified in the 'phraseFields' option; for example, 'phraseSlop: 2'. You must\n-- also specify 'phraseFields' to enable proximity scoring. Valid values: positive\n-- integers. Default: 0. Valid for: 'dismax'.  'explicitPhraseSlop': An integer\n-- value that specifies how much a match can deviate from the search phrase when\n-- the phrase is enclosed in double quotes in the search string. (Phrases that\n-- exceed this proximity distance are not considered a match.) For example, to\n-- specify a slop of three for dismax phrase queries, you would specify '\"explicitPhraseSlop\":3'. Valid values: positive integers. Default: 0. Valid for: 'dismax'.  'tieBreaker': When a term in the search string is found in a document's field, a score is calculated for that field based on how common the word is in that field compared to other documents. If the term occurs in multiple fields within a document, by default only the highest scoring field contributes to the document's overall score. You can specify a\n-- 'tieBreaker' value to enable the matches in lower-scoring fields to contribute\n-- to the document's score. That way, if two documents have the same max field\n-- score for a particular term, the score for the document that has matches in\n-- more fields will be higher. The formula for calculating the score with a\n-- tieBreaker is '(max field score) + (tieBreaker) * (sum of the scores for therest of the matching fields)'. Set 'tieBreaker' to 0 to disregard all but the\n-- highest scoring field (pure max): '\"tieBreaker\":0'. Set to 1 to sum the scores\n-- from all fields (pure sum): '\"tieBreaker\":1'. Valid values: 0.0 to 1.0.\n-- Default: 0.0. Valid for: 'dismax'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1QueryParser",
                        "name": "_s1QueryParser",
                        "shape": "QueryParser",
                        "locationName": "q.parser",
                        "documentation": "-- | Specifies which query parser to use to process the request. If 'queryParser' is\n-- not specified, Amazon CloudSearch uses the 'simple' query parser.\n--\n-- Amazon CloudSearch supports four query parsers:\n--\n-- 'simple': perform simple searches of 'text' and 'text-array' fields. By default,\n-- the 'simple' query parser searches all 'text' and 'text-array' fields. You can\n-- specify which fields to search by with the 'queryOptions' parameter. If you\n-- prefix a search term with a plus sign (+) documents must contain the term to\n-- be considered a match. (This is the default, unless you configure the default\n-- operator with the 'queryOptions' parameter.) You can use the '-' (NOT), '|' (OR),\n-- and '*' (wildcard) operators to exclude particular terms, find results that\n-- match any of the specified terms, or search for a prefix. To search for a\n-- phrase rather than individual terms, enclose the phrase in double quotes. For\n-- more information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-text.html Searching for Text\u003e in the /Amazon CloudSearch DeveloperGuide/.   'structured': perform advanced searches by combining multiple\n-- expressions to define the search criteria. You can also search within\n-- particular fields, search for values and ranges of values, and use advanced\n-- options such as term boosting, 'matchall', and 'near'. For more information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-compound-queries.html Constructing Compound Queries\u003e in the /Amazon CloudSearch Developer Guide/.   'lucene': search using the Apache\n-- Lucene query parser syntax. For more information, see \u003chttp://lucene.apache.org/core/4_6_0/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#package_description Apache Lucene QueryParser Syntax\u003e.   'dismax': search using the simplified subset of the Apache\n-- Lucene query parser syntax defined by the DisMax query parser. For more\n-- information, see \u003chttp://wiki.apache.org/solr/DisMaxQParserPlugin#Query_Syntax DisMax Query Parser Syntax\u003e.",
                        "typeExposed": "Maybe QueryParser",
                        "type": "Maybe QueryParser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Return",
                        "name": "_s1Return",
                        "shape": "Return",
                        "locationName": "return",
                        "documentation": "-- | Specifies the field and expression values to include in the response.\n-- Multiple fields or expressions are specified as a comma-separated list. By\n-- default, a search response includes all return enabled fields ('_all_fields').\n-- To return only the document IDs for the matching documents, specify '_no_fields'\n-- . To retrieve the relevance score calculated for each document, specify '_score'\n-- .",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Size",
                        "name": "_s1Size",
                        "shape": "Size",
                        "locationName": "size",
                        "documentation": "-- | Specifies the maximum number of search hits to include in the response.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Sort",
                        "name": "_s1Sort",
                        "shape": "Sort",
                        "locationName": "sort",
                        "documentation": "-- | Specifies the fields or custom expressions to use to sort the search results.\n-- Multiple fields or expressions are specified as a comma-separated list. You\n-- must specify the sort direction ('asc' or 'desc') for each field; for example, 'year desc,title asc'. To use a field to sort results, the field must be sort-enabled in the\n-- domain configuration. Array type fields cannot be used for sorting. If no 'sort'\n-- parameter is specified, results are sorted by their default relevance scores\n-- in descending order: '_score desc'. You can also sort by document ID ('_id asc')\n-- and version ('_version desc').\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/sorting-results.html Sorting Results\u003e in the /Amazon CloudSearchDeveloper Guide/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "s1Start",
                        "name": "_s1Start",
                        "shape": "Start",
                        "locationName": "start",
                        "documentation": "-- | Specifies the offset of the first search hit you want to return. Note that\n-- the result set is zero-based; the first result is at index 0. You can specify\n-- either the 'start' or 'cursor' parameter in a request, they are mutually\n-- exclusive.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/paginating-results.html Paginating Results\u003e in the /Amazon CloudSearchDeveloper Guide/.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ]
            }
        },
        {
            "service": "CloudSearchDomains",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 10,
                "ctor": "suggestResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "srStatus",
                        "name": "_srStatus",
                        "shape": "SuggestStatus",
                        "locationName": "status",
                        "documentation": "-- | The status of a 'SuggestRequest'. Contains the resource ID ('rid') and how long\n-- it took to process the request ('timems').",
                        "typeExposed": "Maybe SuggestStatus",
                        "type": "Maybe SuggestStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "srSuggest",
                        "name": "_srSuggest",
                        "shape": "SuggestModel",
                        "locationName": "suggest",
                        "documentation": "-- | Container for the matching search suggestion information.",
                        "typeExposed": "Maybe SuggestModel",
                        "type": "Maybe SuggestModel"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 8,
                "name": "SuggestResponse",
                "resultWrapper": null,
                "locationPad": 8,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "srStatus",
                        "name": "_srStatus",
                        "shape": "SuggestStatus",
                        "locationName": "status",
                        "documentation": "-- | The status of a 'SuggestRequest'. Contains the resource ID ('rid') and how long\n-- it took to process the request ('timems').",
                        "typeExposed": "Maybe SuggestStatus",
                        "type": "Maybe SuggestStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "srSuggest",
                        "name": "_srSuggest",
                        "shape": "SuggestModel",
                        "locationName": "suggest",
                        "documentation": "-- | Container for the matching search suggestion information.",
                        "typeExposed": "Maybe SuggestModel",
                        "type": "Maybe SuggestModel"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "srStatus",
                        "name": "_srStatus",
                        "shape": "SuggestStatus",
                        "locationName": "status",
                        "documentation": "-- | The status of a 'SuggestRequest'. Contains the resource ID ('rid') and how long\n-- it took to process the request ('timems').",
                        "typeExposed": "Maybe SuggestStatus",
                        "type": "Maybe SuggestStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "srSuggest",
                        "name": "_srSuggest",
                        "shape": "SuggestModel",
                        "locationName": "suggest",
                        "documentation": "-- | Container for the matching search suggestion information.",
                        "typeExposed": "Maybe SuggestModel",
                        "type": "Maybe SuggestModel"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_Suggest.html",
            "namespace": "Network.AWS.CloudSearchDomains.Suggest",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.RestJSON",
                "Network.AWS.CloudSearchDomains.Types"
            ],
            "pager": null,
            "name": "Suggest",
            "method": "get",
            "documentation": "-- | Retrieves autocomplete suggestions for a partial query string. You can use\n-- suggestions enable you to display likely matches before users finish typing.\n-- In Amazon CloudSearch, suggestions are based on the contents of a particular\n-- text field. When you request suggestions, Amazon CloudSearch finds all of the\n-- documents whose values in the suggester field start with the specified query\n-- string. The beginning of the field must match the query string to be\n-- considered a match.\n--\n-- For more information about configuring suggesters and retrieving\n-- suggestions, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html Getting Suggestions\u003e in the /Amazon CloudSearch Developer Guide/\n-- .\n--\n-- The endpoint for submitting 'Suggest' requests is domain-specific. You submit\n-- suggest requests to a domain's search endpoint. To get the search endpoint\n-- for your domain, use the Amazon CloudSearch configuration service 'DescribeDomains' action. A domain's endpoints are also displayed on the domain dashboard in\n-- the Amazon CloudSearch console.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 11,
                "ctor": "suggest",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/2013-01-01/suggest",
                        "type": "const"
                    }
                ],
                "protocol": "rest-json",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "sQuery",
                        "name": "_sQuery",
                        "shape": "Query",
                        "locationName": "q",
                        "documentation": "-- | Specifies the string for which you want to get suggestions.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "sSuggester",
                        "name": "_sSuggester",
                        "shape": "Suggester",
                        "locationName": "suggester",
                        "documentation": "-- | Specifies the name of the suggester to use to find suggested matches.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "Suggest",
                "query": [
                    {
                        "value": "format=sdk&pretty=true",
                        "type": "const"
                    },
                    {
                        "field": "_sQuery",
                        "locationName": "q",
                        "type": "field"
                    },
                    {
                        "field": "_sSuggester",
                        "locationName": "suggester",
                        "type": "field"
                    },
                    {
                        "field": "_sSize",
                        "locationName": "size",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "sSize",
                        "name": "_sSize",
                        "shape": "SuggestionsSize",
                        "locationName": "size",
                        "documentation": "-- | Specifies the maximum number of suggestions to return.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "sQuery",
                        "name": "_sQuery",
                        "shape": "Query",
                        "locationName": "q",
                        "documentation": "-- | Specifies the string for which you want to get suggestions.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "sSize",
                        "name": "_sSize",
                        "shape": "SuggestionsSize",
                        "locationName": "size",
                        "documentation": "-- | Specifies the maximum number of suggestions to return.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "sSuggester",
                        "name": "_sSuggester",
                        "shape": "Suggester",
                        "locationName": "suggester",
                        "documentation": "-- | Specifies the name of the suggester to use to find suggested matches.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "CloudSearchDomains",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 12,
                "ctor": "uploadDocumentsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "udrStatus",
                        "name": "_udrStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "-- | The status of an 'UploadDocumentsRequest'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "udrAdds",
                        "name": "_udrAdds",
                        "shape": "Adds",
                        "locationName": "adds",
                        "documentation": "-- | The number of documents that were added to the search domain.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "udrDeletes",
                        "name": "_udrDeletes",
                        "shape": "Deletes",
                        "locationName": "deletes",
                        "documentation": "-- | The number of documents that were deleted from the search domain.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "udrWarnings",
                        "name": "_udrWarnings",
                        "shape": "DocumentServiceWarnings",
                        "locationName": "warnings",
                        "documentation": "-- | Any warnings returned by the document service about the documents being\n-- uploaded.",
                        "typeExposed": "[DocumentServiceWarning]",
                        "type": "List \"warnings\" DocumentServiceWarning"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 9,
                "name": "UploadDocumentsResponse",
                "resultWrapper": null,
                "locationPad": 9,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "udrStatus",
                        "name": "_udrStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "-- | The status of an 'UploadDocumentsRequest'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "udrAdds",
                        "name": "_udrAdds",
                        "shape": "Adds",
                        "locationName": "adds",
                        "documentation": "-- | The number of documents that were added to the search domain.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "udrDeletes",
                        "name": "_udrDeletes",
                        "shape": "Deletes",
                        "locationName": "deletes",
                        "documentation": "-- | The number of documents that were deleted from the search domain.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "udrWarnings",
                        "name": "_udrWarnings",
                        "shape": "DocumentServiceWarnings",
                        "locationName": "warnings",
                        "documentation": "-- | Any warnings returned by the document service about the documents being\n-- uploaded.",
                        "typeExposed": "[DocumentServiceWarning]",
                        "type": "List \"warnings\" DocumentServiceWarning"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "udrAdds",
                        "name": "_udrAdds",
                        "shape": "Adds",
                        "locationName": "adds",
                        "documentation": "-- | The number of documents that were added to the search domain.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "udrDeletes",
                        "name": "_udrDeletes",
                        "shape": "Deletes",
                        "locationName": "deletes",
                        "documentation": "-- | The number of documents that were deleted from the search domain.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": false,
                        "lens": "udrStatus",
                        "name": "_udrStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "-- | The status of an 'UploadDocumentsRequest'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "udrWarnings",
                        "name": "_udrWarnings",
                        "shape": "DocumentServiceWarnings",
                        "locationName": "warnings",
                        "documentation": "-- | Any warnings returned by the document service about the documents being\n-- uploaded.",
                        "typeExposed": "[DocumentServiceWarning]",
                        "type": "List \"warnings\" DocumentServiceWarning"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_UploadDocuments.html",
            "namespace": "Network.AWS.CloudSearchDomains.UploadDocuments",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.RestJSON",
                "Network.AWS.CloudSearchDomains.Types"
            ],
            "pager": null,
            "name": "UploadDocuments",
            "method": "post",
            "documentation": "-- | Posts a batch of documents to a search domain for indexing. A document batch\n-- is a collection of add and delete operations that represent the documents you\n-- want to add, update, or delete from your domain. Batches can be described in\n-- either JSON or XML. Each item that you want Amazon CloudSearch to return as a\n-- search result (such as a product) is represented as a document. Every\n-- document has a unique ID and one or more fields that contain the data that\n-- you want to search and return in results. Individual documents cannot contain\n-- more than 1 MB of data. The entire batch cannot exceed 5 MB. To get the best\n-- possible upload performance, group add and delete operations in batches that\n-- are close the 5 MB limit. Submitting a large volume of single-document\n-- batches can overload a domain's document service.\n--\n-- The endpoint for submitting 'UploadDocuments' requests is domain-specific. To\n-- get the document endpoint for your domain, use the Amazon CloudSearch\n-- configuration service 'DescribeDomains' action. A domain's endpoints are also\n-- displayed on the domain dashboard in the Amazon CloudSearch console.\n--\n-- For more information about formatting your data for Amazon CloudSearch, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/preparing-data.html Preparing Your Data\u003e in the /Amazon CloudSearch Developer Guide/. For more information about\n-- uploading data for indexing, see \u003chttp://docs.aws.amazon.com/cloudsearch/latest/developerguide/uploading-data.html Uploading Data\u003e in the /Amazon CloudSearchDeveloper Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json-headers",
                "fieldPad": 14,
                "ctor": "uploadDocuments",
                "headerPad": 13,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "udDocuments",
                        "name": "_udDocuments",
                        "shape": "Blob",
                        "locationName": "documents",
                        "documentation": "-- | A batch of documents formatted in JSON or HTML.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    }
                ],
                "path": [
                    {
                        "value": "/2013-01-01/documents/batch",
                        "type": "const"
                    }
                ],
                "protocol": "rest-json",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "rest-json",
                    "flattened": false,
                    "required": true,
                    "lens": "udDocuments",
                    "name": "_udDocuments",
                    "shape": "Blob",
                    "locationName": "documents",
                    "documentation": "-- | A batch of documents formatted in JSON or HTML.",
                    "typeExposed": "Base64",
                    "type": "Base64"
                },
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "udDocuments",
                        "name": "_udDocuments",
                        "shape": "Blob",
                        "locationName": "documents",
                        "documentation": "-- | A batch of documents formatted in JSON or HTML.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "udContentType",
                        "name": "_udContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "-- | The format of the batch you are uploading. Amazon CloudSearch supports two\n-- document batch formats:\n--\n-- application/json application/xml",
                        "typeExposed": "ContentType",
                        "type": "ContentType"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_udContentType",
                        "locationName": "Content-Type",
                        "type": "field"
                    }
                ],
                "contentPad": 10,
                "queryPad": 0,
                "name": "UploadDocuments",
                "query": [
                    {
                        "value": "format=sdk",
                        "type": "const"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "udContentType",
                        "name": "_udContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "-- | The format of the batch you are uploading. Amazon CloudSearch supports two\n-- document batch formats:\n--\n-- application/json application/xml",
                        "typeExposed": "ContentType",
                        "type": "ContentType"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "rest-json",
                        "flattened": false,
                        "required": true,
                        "lens": "udDocuments",
                        "name": "_udDocuments",
                        "shape": "Blob",
                        "locationName": "documents",
                        "documentation": "-- | A batch of documents formatted in JSON or HTML.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    }
                ]
            }
        }
    ]
}