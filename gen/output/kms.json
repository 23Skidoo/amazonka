{
    "waiters": {
        "waiters": {},
        "namespace": "Network.AWS.KMS.Waiters",
        "imports": [
            "Network.AWS.KMS.Types"
        ]
    },
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "KMS",
        "error": "JSONError",
        "url": "http://docs.aws.amazon.com/kms/latest/APIReference/Welcome.html",
        "namespace": "Network.AWS.KMS",
        "protocol": "json",
        "imports": [
            "Network.AWS.KMS.CreateAlias",
            "Network.AWS.KMS.CreateGrant",
            "Network.AWS.KMS.CreateKey",
            "Network.AWS.KMS.Decrypt",
            "Network.AWS.KMS.DeleteAlias",
            "Network.AWS.KMS.DescribeKey",
            "Network.AWS.KMS.DisableKey",
            "Network.AWS.KMS.DisableKeyRotation",
            "Network.AWS.KMS.EnableKey",
            "Network.AWS.KMS.EnableKeyRotation",
            "Network.AWS.KMS.Encrypt",
            "Network.AWS.KMS.GenerateDataKey",
            "Network.AWS.KMS.GenerateDataKeyWithoutPlaintext",
            "Network.AWS.KMS.GenerateRandom",
            "Network.AWS.KMS.GetKeyPolicy",
            "Network.AWS.KMS.GetKeyRotationStatus",
            "Network.AWS.KMS.ListAliases",
            "Network.AWS.KMS.ListGrants",
            "Network.AWS.KMS.ListKeyPolicies",
            "Network.AWS.KMS.ListKeys",
            "Network.AWS.KMS.PutKeyPolicy",
            "Network.AWS.KMS.ReEncrypt",
            "Network.AWS.KMS.RetireGrant",
            "Network.AWS.KMS.RevokeGrant",
            "Network.AWS.KMS.Types",
            "Network.AWS.KMS.UpdateKeyDescription"
        ],
        "name": "Amazon Key Management Service",
        "version": "2014-11-01",
        "documentation": "-- | Amazon Key Management Service (KMS) is a managed service that makes it easy\n-- for you to create and control the encryption keys used to encrypt your data,\n-- and uses Hardware Security Modules (HSMs) to protect the security of your\n-- keys. Amazon Key Management Service is integrated with other Amazon services\n-- including Amazon EBS, Amazon S3, and Amazon Redshift. Amazon Key Management\n-- Service is also integrated with Amazon CloudTrail to provide you with logs of\n-- all key usage to help meet your regulatory and compliance needs.",
        "xmlNamespace": null,
        "jsonVersion": "1.1",
        "retryDelay": {
            "base": 5.0e-2,
            "attempts": 5,
            "growth": 2
        },
        "endpointPrefix": "kms",
        "retryPolicies": {
            "service_unavailable": {
                "error": null,
                "code": 503
            },
            "general_server_error": {
                "error": null,
                "code": 500
            },
            "limit_exceeded": {
                "error": null,
                "code": 509
            }
        },
        "targetPrefix": "TrentService"
    },
    "cabal": {
        "other": [],
        "library": "amazonka-kms",
        "abbrev": "KMS",
        "exposed": [
            "Network.AWS.KMS",
            "Network.AWS.KMS.CreateAlias",
            "Network.AWS.KMS.CreateGrant",
            "Network.AWS.KMS.CreateKey",
            "Network.AWS.KMS.Decrypt",
            "Network.AWS.KMS.DeleteAlias",
            "Network.AWS.KMS.DescribeKey",
            "Network.AWS.KMS.DisableKey",
            "Network.AWS.KMS.DisableKeyRotation",
            "Network.AWS.KMS.EnableKey",
            "Network.AWS.KMS.EnableKeyRotation",
            "Network.AWS.KMS.Encrypt",
            "Network.AWS.KMS.GenerateDataKey",
            "Network.AWS.KMS.GenerateDataKeyWithoutPlaintext",
            "Network.AWS.KMS.GenerateRandom",
            "Network.AWS.KMS.GetKeyPolicy",
            "Network.AWS.KMS.GetKeyRotationStatus",
            "Network.AWS.KMS.ListAliases",
            "Network.AWS.KMS.ListGrants",
            "Network.AWS.KMS.ListKeyPolicies",
            "Network.AWS.KMS.ListKeys",
            "Network.AWS.KMS.PutKeyPolicy",
            "Network.AWS.KMS.ReEncrypt",
            "Network.AWS.KMS.RetireGrant",
            "Network.AWS.KMS.RevokeGrant",
            "Network.AWS.KMS.Types",
            "Network.AWS.KMS.UpdateKeyDescription"
        ],
        "url": "http://docs.aws.amazon.com/kms/latest/APIReference/Welcome.html",
        "protocol": "json",
        "name": "Amazon Key Management Service",
        "version": "0.2.0",
        "description": "Amazon Key Management Service (KMS) is a managed service that makes it easy\nfor you to create and control the encryption keys used to encrypt your data,\nand uses Hardware Security Modules (HSMs) to protect the security of your\nkeys. Amazon Key Management Service is integrated with other Amazon services\nincluding Amazon EBS, Amazon S3, and Amazon Redshift. Amazon Key Management\nService is also integrated with Amazon CloudTrail to provide you with logs of\nall key usage to help meet your regulatory and compliance needs."
    },
    "types": {
        "namespace": "Network.AWS.KMS.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "EncryptDecrypt": "ENCRYPT_DECRYPT"
                },
                "valuePad": 16,
                "name": "KeyUsageType",
                "type": "nullary",
                "branchPad": 14
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "keyMetadata",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmAWSAccountId",
                        "name": "_kmAWSAccountId",
                        "shape": "AWSAccountIdType",
                        "locationName": "AWSAccountId",
                        "documentation": "-- | Account ID number.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "kmKeyId",
                        "name": "_kmKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier for the key.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmArn",
                        "name": "_kmArn",
                        "shape": "ArnType",
                        "locationName": "Arn",
                        "documentation": "-- | Key ARN (Amazon Resource Name).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmCreationDate",
                        "name": "_kmCreationDate",
                        "shape": "DateType",
                        "locationName": "CreationDate",
                        "documentation": "-- | Date the key was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmEnabled",
                        "name": "_kmEnabled",
                        "shape": "BooleanType",
                        "locationName": "Enabled",
                        "documentation": "-- | Value that specifies whether the key is enabled.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmDescription",
                        "name": "_kmDescription",
                        "shape": "DescriptionType",
                        "locationName": "Description",
                        "documentation": "-- | The description of the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmKeyUsage",
                        "name": "_kmKeyUsage",
                        "shape": "KeyUsageType",
                        "locationName": "KeyUsage",
                        "documentation": "-- | A value that specifies what operation(s) the key can perform.",
                        "typeExposed": "Maybe KeyUsageType",
                        "type": "Maybe KeyUsageType"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "kmKeyId",
                        "name": "_kmKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier for the key.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 13,
                "name": "KeyMetadata",
                "locationPad": 13,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmAWSAccountId",
                        "name": "_kmAWSAccountId",
                        "shape": "AWSAccountIdType",
                        "locationName": "AWSAccountId",
                        "documentation": "-- | Account ID number.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmArn",
                        "name": "_kmArn",
                        "shape": "ArnType",
                        "locationName": "Arn",
                        "documentation": "-- | Key ARN (Amazon Resource Name).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmCreationDate",
                        "name": "_kmCreationDate",
                        "shape": "DateType",
                        "locationName": "CreationDate",
                        "documentation": "-- | Date the key was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmEnabled",
                        "name": "_kmEnabled",
                        "shape": "BooleanType",
                        "locationName": "Enabled",
                        "documentation": "-- | Value that specifies whether the key is enabled.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmDescription",
                        "name": "_kmDescription",
                        "shape": "DescriptionType",
                        "locationName": "Description",
                        "documentation": "-- | The description of the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmKeyUsage",
                        "name": "_kmKeyUsage",
                        "shape": "KeyUsageType",
                        "locationName": "KeyUsage",
                        "documentation": "-- | A value that specifies what operation(s) the key can perform.",
                        "typeExposed": "Maybe KeyUsageType",
                        "type": "Maybe KeyUsageType"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmAWSAccountId",
                        "name": "_kmAWSAccountId",
                        "shape": "AWSAccountIdType",
                        "locationName": "AWSAccountId",
                        "documentation": "-- | Account ID number.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmArn",
                        "name": "_kmArn",
                        "shape": "ArnType",
                        "locationName": "Arn",
                        "documentation": "-- | Key ARN (Amazon Resource Name).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmCreationDate",
                        "name": "_kmCreationDate",
                        "shape": "DateType",
                        "locationName": "CreationDate",
                        "documentation": "-- | Date the key was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmDescription",
                        "name": "_kmDescription",
                        "shape": "DescriptionType",
                        "locationName": "Description",
                        "documentation": "-- | The description of the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmEnabled",
                        "name": "_kmEnabled",
                        "shape": "BooleanType",
                        "locationName": "Enabled",
                        "documentation": "-- | Value that specifies whether the key is enabled.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "kmKeyId",
                        "name": "_kmKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier for the key.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kmKeyUsage",
                        "name": "_kmKeyUsage",
                        "shape": "KeyUsageType",
                        "locationName": "KeyUsage",
                        "documentation": "-- | A value that specifies what operation(s) the key can perform.",
                        "typeExposed": "Maybe KeyUsageType",
                        "type": "Maybe KeyUsageType"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "AES128": "AES_128",
                    "AES256": "AES_256"
                },
                "valuePad": 8,
                "name": "DataKeySpec",
                "type": "nullary",
                "branchPad": 6
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 26,
                "ctor": "grantConstraints",
                "contents": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gcEncryptionContextSubset",
                        "name": "_gcEncryptionContextSubset",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContextSubset",
                        "documentation": "-- | The constraint equals the full encryption context.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gcEncryptionContextEquals",
                        "name": "_gcEncryptionContextEquals",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContextEquals",
                        "documentation": "-- | The constraint contains additional key/value pairs that serve to further\n-- limit the grant.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 24,
                "name": "GrantConstraints",
                "locationPad": 24,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gcEncryptionContextSubset",
                        "name": "_gcEncryptionContextSubset",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContextSubset",
                        "documentation": "-- | The constraint equals the full encryption context.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gcEncryptionContextEquals",
                        "name": "_gcEncryptionContextEquals",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContextEquals",
                        "documentation": "-- | The constraint contains additional key/value pairs that serve to further\n-- limit the grant.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gcEncryptionContextEquals",
                        "name": "_gcEncryptionContextEquals",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContextEquals",
                        "documentation": "-- | The constraint contains additional key/value pairs that serve to further\n-- limit the grant.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gcEncryptionContextSubset",
                        "name": "_gcEncryptionContextSubset",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContextSubset",
                        "documentation": "-- | The constraint equals the full encryption context.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "aliasListEntry",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "aleAliasName",
                        "name": "_aleAliasName",
                        "shape": "AliasNameType",
                        "locationName": "AliasName",
                        "documentation": "-- | String that contains the alias.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "aleAliasArn",
                        "name": "_aleAliasArn",
                        "shape": "ArnType",
                        "locationName": "AliasArn",
                        "documentation": "-- | String that contains the key ARN.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "aleTargetKeyId",
                        "name": "_aleTargetKeyId",
                        "shape": "KeyIdType",
                        "locationName": "TargetKeyId",
                        "documentation": "-- | String that contains the key identifier pointed to by the alias.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 12,
                "name": "AliasListEntry",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "aleAliasName",
                        "name": "_aleAliasName",
                        "shape": "AliasNameType",
                        "locationName": "AliasName",
                        "documentation": "-- | String that contains the alias.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "aleAliasArn",
                        "name": "_aleAliasArn",
                        "shape": "ArnType",
                        "locationName": "AliasArn",
                        "documentation": "-- | String that contains the key ARN.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "aleTargetKeyId",
                        "name": "_aleTargetKeyId",
                        "shape": "KeyIdType",
                        "locationName": "TargetKeyId",
                        "documentation": "-- | String that contains the key identifier pointed to by the alias.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "aleAliasArn",
                        "name": "_aleAliasArn",
                        "shape": "ArnType",
                        "locationName": "AliasArn",
                        "documentation": "-- | String that contains the key ARN.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "aleAliasName",
                        "name": "_aleAliasName",
                        "shape": "AliasNameType",
                        "locationName": "AliasName",
                        "documentation": "-- | String that contains the alias.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "aleTargetKeyId",
                        "name": "_aleTargetKeyId",
                        "shape": "KeyIdType",
                        "locationName": "TargetKeyId",
                        "documentation": "-- | String that contains the key identifier pointed to by the alias.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "grantListEntry",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleGrantId",
                        "name": "_gleGrantId",
                        "shape": "GrantIdType",
                        "locationName": "GrantId",
                        "documentation": "-- | Unique grant identifier.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleGranteePrincipal",
                        "name": "_gleGranteePrincipal",
                        "shape": "PrincipalIdType",
                        "locationName": "GranteePrincipal",
                        "documentation": "-- | The principal that receives the grant permission.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleRetiringPrincipal",
                        "name": "_gleRetiringPrincipal",
                        "shape": "PrincipalIdType",
                        "locationName": "RetiringPrincipal",
                        "documentation": "-- | The principal that can retire the account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleIssuingAccount",
                        "name": "_gleIssuingAccount",
                        "shape": "PrincipalIdType",
                        "locationName": "IssuingAccount",
                        "documentation": "-- | The account under which the grant was issued.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gleOperations",
                        "name": "_gleOperations",
                        "shape": "GrantOperationList",
                        "locationName": "Operations",
                        "documentation": "-- | List of operations permitted by the grant. This can be any combination of one\n-- or more of the following values:  Decrypt Encrypt GenerateDataKey GenerateDataKeyWithoutPlaintext\n-- ReEncryptFrom ReEncryptTo CreateGrant",
                        "typeExposed": "[GrantOperation]",
                        "type": "List \"Operations\" GrantOperation"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleConstraints",
                        "name": "_gleConstraints",
                        "shape": "GrantConstraints",
                        "locationName": "Constraints",
                        "documentation": "-- | Specifies the conditions under which the actions specified by the 'Operations'\n-- parameter are allowed.",
                        "typeExposed": "Maybe GrantConstraints",
                        "type": "Maybe GrantConstraints"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 18,
                "name": "GrantListEntry",
                "locationPad": 18,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleGrantId",
                        "name": "_gleGrantId",
                        "shape": "GrantIdType",
                        "locationName": "GrantId",
                        "documentation": "-- | Unique grant identifier.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleGranteePrincipal",
                        "name": "_gleGranteePrincipal",
                        "shape": "PrincipalIdType",
                        "locationName": "GranteePrincipal",
                        "documentation": "-- | The principal that receives the grant permission.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleRetiringPrincipal",
                        "name": "_gleRetiringPrincipal",
                        "shape": "PrincipalIdType",
                        "locationName": "RetiringPrincipal",
                        "documentation": "-- | The principal that can retire the account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleIssuingAccount",
                        "name": "_gleIssuingAccount",
                        "shape": "PrincipalIdType",
                        "locationName": "IssuingAccount",
                        "documentation": "-- | The account under which the grant was issued.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gleOperations",
                        "name": "_gleOperations",
                        "shape": "GrantOperationList",
                        "locationName": "Operations",
                        "documentation": "-- | List of operations permitted by the grant. This can be any combination of one\n-- or more of the following values:  Decrypt Encrypt GenerateDataKey GenerateDataKeyWithoutPlaintext\n-- ReEncryptFrom ReEncryptTo CreateGrant",
                        "typeExposed": "[GrantOperation]",
                        "type": "List \"Operations\" GrantOperation"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleConstraints",
                        "name": "_gleConstraints",
                        "shape": "GrantConstraints",
                        "locationName": "Constraints",
                        "documentation": "-- | Specifies the conditions under which the actions specified by the 'Operations'\n-- parameter are allowed.",
                        "typeExposed": "Maybe GrantConstraints",
                        "type": "Maybe GrantConstraints"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleConstraints",
                        "name": "_gleConstraints",
                        "shape": "GrantConstraints",
                        "locationName": "Constraints",
                        "documentation": "-- | Specifies the conditions under which the actions specified by the 'Operations'\n-- parameter are allowed.",
                        "typeExposed": "Maybe GrantConstraints",
                        "type": "Maybe GrantConstraints"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleGrantId",
                        "name": "_gleGrantId",
                        "shape": "GrantIdType",
                        "locationName": "GrantId",
                        "documentation": "-- | Unique grant identifier.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleGranteePrincipal",
                        "name": "_gleGranteePrincipal",
                        "shape": "PrincipalIdType",
                        "locationName": "GranteePrincipal",
                        "documentation": "-- | The principal that receives the grant permission.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleIssuingAccount",
                        "name": "_gleIssuingAccount",
                        "shape": "PrincipalIdType",
                        "locationName": "IssuingAccount",
                        "documentation": "-- | The account under which the grant was issued.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gleOperations",
                        "name": "_gleOperations",
                        "shape": "GrantOperationList",
                        "locationName": "Operations",
                        "documentation": "-- | List of operations permitted by the grant. This can be any combination of one\n-- or more of the following values:  Decrypt Encrypt GenerateDataKey GenerateDataKeyWithoutPlaintext\n-- ReEncryptFrom ReEncryptTo CreateGrant",
                        "typeExposed": "[GrantOperation]",
                        "type": "List \"Operations\" GrantOperation"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gleRetiringPrincipal",
                        "name": "_gleRetiringPrincipal",
                        "shape": "PrincipalIdType",
                        "locationName": "RetiringPrincipal",
                        "documentation": "-- | The principal that can retire the account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "GOEncrypt": "Encrypt",
                    "GOGenerateDataKeyWithoutPlaintext": "GenerateDataKeyWithoutPlaintext",
                    "GOCreateGrant": "CreateGrant",
                    "GORetireGrant": "RetireGrant",
                    "GOGenerateDataKey": "GenerateDataKey",
                    "GODecrypt": "Decrypt",
                    "GOReEncryptTo": "ReEncryptTo",
                    "GOReEncryptFrom": "ReEncryptFrom"
                },
                "valuePad": 32,
                "name": "GrantOperation",
                "type": "nullary",
                "branchPad": 33
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 10,
                "ctor": "keyListEntry",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kleKeyId",
                        "name": "_kleKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kleKeyArn",
                        "name": "_kleKeyArn",
                        "shape": "ArnType",
                        "locationName": "KeyArn",
                        "documentation": "-- | ARN of the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 7,
                "name": "KeyListEntry",
                "locationPad": 7,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kleKeyId",
                        "name": "_kleKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kleKeyArn",
                        "name": "_kleKeyArn",
                        "shape": "ArnType",
                        "locationName": "KeyArn",
                        "documentation": "-- | ARN of the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kleKeyArn",
                        "name": "_kleKeyArn",
                        "shape": "ArnType",
                        "locationName": "KeyArn",
                        "documentation": "-- | ARN of the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "kleKeyId",
                        "name": "_kleKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        ],
        "imports": [],
        "shared": [
            "KeyMetadata",
            "DataKeySpec"
        ]
    },
    "operations": [
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "createAliasResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CreateAliasResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_CreateAlias.html",
            "namespace": "Network.AWS.KMS.CreateAlias",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "CreateAlias",
            "method": "post",
            "documentation": "-- | Creates a display name for a customer master key. An alias can be used to\n-- identify a key and should be unique. The console enforces a one-to-one\n-- mapping between the alias and a key. An alias name can contain only\n-- alphanumeric characters, forward slashes (/), underscores (_), and dashes\n-- (-). An alias must start with the word \"alias\" followed by a forward slash\n-- (alias/). An alias that begins with \"aws\" after the forward slash\n-- (alias/aws...) is reserved by Amazon Web Services (AWS).",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "createAlias",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "caAliasName",
                        "name": "_caAliasName",
                        "shape": "AliasNameType",
                        "locationName": "AliasName",
                        "documentation": "-- | String that contains the display name. Aliases that begin with AWS are\n-- reserved.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "caTargetKeyId",
                        "name": "_caTargetKeyId",
                        "shape": "KeyIdType",
                        "locationName": "TargetKeyId",
                        "documentation": "-- | An identifier of the key for which you are creating the alias. This value\n-- cannot be another alias.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "caAliasName",
                        "name": "_caAliasName",
                        "shape": "AliasNameType",
                        "locationName": "AliasName",
                        "documentation": "-- | String that contains the display name. Aliases that begin with AWS are\n-- reserved.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "caTargetKeyId",
                        "name": "_caTargetKeyId",
                        "shape": "KeyIdType",
                        "locationName": "TargetKeyId",
                        "documentation": "-- | An identifier of the key for which you are creating the alias. This value\n-- cannot be another alias.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 12,
                "queryPad": 0,
                "name": "CreateAlias",
                "query": [],
                "locationPad": 12,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "caAliasName",
                        "name": "_caAliasName",
                        "shape": "AliasNameType",
                        "locationName": "AliasName",
                        "documentation": "-- | String that contains the display name. Aliases that begin with AWS are\n-- reserved.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "caTargetKeyId",
                        "name": "_caTargetKeyId",
                        "shape": "KeyIdType",
                        "locationName": "TargetKeyId",
                        "documentation": "-- | An identifier of the key for which you are creating the alias. This value\n-- cannot be another alias.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "createGrantResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "cgrGrantToken",
                        "name": "_cgrGrantToken",
                        "shape": "GrantTokenType",
                        "locationName": "GrantToken",
                        "documentation": "-- | The grant token. A grant token is a string that identifies a grant and which\n-- can be used to make a grant take effect immediately. A token contains all of\n-- the information necessary to create a grant.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "cgrGrantId",
                        "name": "_cgrGrantId",
                        "shape": "GrantIdType",
                        "locationName": "GrantId",
                        "documentation": "-- | Unique grant identifier. You can use the /GrantId/ value to revoke a grant.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 11,
                "name": "CreateGrantResponse",
                "resultWrapper": null,
                "locationPad": 11,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "cgrGrantToken",
                        "name": "_cgrGrantToken",
                        "shape": "GrantTokenType",
                        "locationName": "GrantToken",
                        "documentation": "-- | The grant token. A grant token is a string that identifies a grant and which\n-- can be used to make a grant take effect immediately. A token contains all of\n-- the information necessary to create a grant.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "cgrGrantId",
                        "name": "_cgrGrantId",
                        "shape": "GrantIdType",
                        "locationName": "GrantId",
                        "documentation": "-- | Unique grant identifier. You can use the /GrantId/ value to revoke a grant.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "cgrGrantId",
                        "name": "_cgrGrantId",
                        "shape": "GrantIdType",
                        "locationName": "GrantId",
                        "documentation": "-- | Unique grant identifier. You can use the /GrantId/ value to revoke a grant.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "cgrGrantToken",
                        "name": "_cgrGrantToken",
                        "shape": "GrantTokenType",
                        "locationName": "GrantToken",
                        "documentation": "-- | The grant token. A grant token is a string that identifies a grant and which\n-- can be used to make a grant take effect immediately. A token contains all of\n-- the information necessary to create a grant.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_CreateGrant.html",
            "namespace": "Network.AWS.KMS.CreateGrant",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "CreateGrant",
            "method": "post",
            "documentation": "-- | Adds a grant to a key to specify who can access the key and under what\n-- conditions. Grants are alternate permission mechanisms to key policies. If\n-- absent, access to the key is evaluated based on IAM policies attached to the\n-- user. By default, grants do not expire. Grants can be listed, retired, or\n-- revoked as indicated by the following APIs. Typically, when you are finished\n-- using a grant, you retire it. When you want to end a grant immediately,\n-- revoke it. For more information about grants, see \u003chttp://docs.aws.amazon.com/kms/latest/developerguide/grants.html Grants\u003e.  'ListGrants' 'RetireGrant' 'RevokeGrant'",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 20,
                "ctor": "createGrant",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "cgKeyId",
                        "name": "_cgKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | A unique key identifier for a customer master key. This value can be a\n-- globally unique identifier, an ARN, or an alias.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "cgGranteePrincipal",
                        "name": "_cgGranteePrincipal",
                        "shape": "PrincipalIdType",
                        "locationName": "GranteePrincipal",
                        "documentation": "-- | Principal given permission by the grant to use the key identified by the 'keyId'\n-- parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "cgRetiringPrincipal",
                        "name": "_cgRetiringPrincipal",
                        "shape": "PrincipalIdType",
                        "locationName": "RetiringPrincipal",
                        "documentation": "-- | Principal given permission to retire the grant. For more information, see 'RetireGrant'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "cgOperations",
                        "name": "_cgOperations",
                        "shape": "GrantOperationList",
                        "locationName": "Operations",
                        "documentation": "-- | List of operations permitted by the grant. This can be any combination of one\n-- or more of the following values:  Decrypt Encrypt GenerateDataKey GenerateDataKeyWithoutPlaintext\n-- ReEncryptFrom ReEncryptTo CreateGrant",
                        "typeExposed": "[GrantOperation]",
                        "type": "List \"Operations\" GrantOperation"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "cgConstraints",
                        "name": "_cgConstraints",
                        "shape": "GrantConstraints",
                        "locationName": "Constraints",
                        "documentation": "-- | Specifies the conditions under which the actions specified by the 'Operations'\n-- parameter are allowed.",
                        "typeExposed": "Maybe GrantConstraints",
                        "type": "Maybe GrantConstraints"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "cgGrantTokens",
                        "name": "_cgGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | List of grant tokens.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "cgKeyId",
                        "name": "_cgKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | A unique key identifier for a customer master key. This value can be a\n-- globally unique identifier, an ARN, or an alias.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "cgGranteePrincipal",
                        "name": "_cgGranteePrincipal",
                        "shape": "PrincipalIdType",
                        "locationName": "GranteePrincipal",
                        "documentation": "-- | Principal given permission by the grant to use the key identified by the 'keyId'\n-- parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 18,
                "queryPad": 0,
                "name": "CreateGrant",
                "query": [],
                "locationPad": 18,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "cgRetiringPrincipal",
                        "name": "_cgRetiringPrincipal",
                        "shape": "PrincipalIdType",
                        "locationName": "RetiringPrincipal",
                        "documentation": "-- | Principal given permission to retire the grant. For more information, see 'RetireGrant'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "cgOperations",
                        "name": "_cgOperations",
                        "shape": "GrantOperationList",
                        "locationName": "Operations",
                        "documentation": "-- | List of operations permitted by the grant. This can be any combination of one\n-- or more of the following values:  Decrypt Encrypt GenerateDataKey GenerateDataKeyWithoutPlaintext\n-- ReEncryptFrom ReEncryptTo CreateGrant",
                        "typeExposed": "[GrantOperation]",
                        "type": "List \"Operations\" GrantOperation"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "cgConstraints",
                        "name": "_cgConstraints",
                        "shape": "GrantConstraints",
                        "locationName": "Constraints",
                        "documentation": "-- | Specifies the conditions under which the actions specified by the 'Operations'\n-- parameter are allowed.",
                        "typeExposed": "Maybe GrantConstraints",
                        "type": "Maybe GrantConstraints"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "cgGrantTokens",
                        "name": "_cgGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | List of grant tokens.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "cgConstraints",
                        "name": "_cgConstraints",
                        "shape": "GrantConstraints",
                        "locationName": "Constraints",
                        "documentation": "-- | Specifies the conditions under which the actions specified by the 'Operations'\n-- parameter are allowed.",
                        "typeExposed": "Maybe GrantConstraints",
                        "type": "Maybe GrantConstraints"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "cgGrantTokens",
                        "name": "_cgGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | List of grant tokens.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "cgGranteePrincipal",
                        "name": "_cgGranteePrincipal",
                        "shape": "PrincipalIdType",
                        "locationName": "GranteePrincipal",
                        "documentation": "-- | Principal given permission by the grant to use the key identified by the 'keyId'\n-- parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "cgKeyId",
                        "name": "_cgKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | A unique key identifier for a customer master key. This value can be a\n-- globally unique identifier, an ARN, or an alias.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "cgOperations",
                        "name": "_cgOperations",
                        "shape": "GrantOperationList",
                        "locationName": "Operations",
                        "documentation": "-- | List of operations permitted by the grant. This can be any combination of one\n-- or more of the following values:  Decrypt Encrypt GenerateDataKey GenerateDataKeyWithoutPlaintext\n-- ReEncryptFrom ReEncryptTo CreateGrant",
                        "typeExposed": "[GrantOperation]",
                        "type": "List \"Operations\" GrantOperation"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "cgRetiringPrincipal",
                        "name": "_cgRetiringPrincipal",
                        "shape": "PrincipalIdType",
                        "locationName": "RetiringPrincipal",
                        "documentation": "-- | Principal given permission to retire the grant. For more information, see 'RetireGrant'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "createKeyResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": false,
                    "lens": "ckrKeyMetadata",
                    "name": "_ckrKeyMetadata",
                    "shape": "KeyMetadata",
                    "locationName": "KeyMetadata",
                    "documentation": "-- | Metadata associated with the key.",
                    "typeExposed": "Maybe KeyMetadata",
                    "type": "Maybe KeyMetadata"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ckrKeyMetadata",
                        "name": "_ckrKeyMetadata",
                        "shape": "KeyMetadata",
                        "locationName": "KeyMetadata",
                        "documentation": "-- | Metadata associated with the key.",
                        "typeExposed": "Maybe KeyMetadata",
                        "type": "Maybe KeyMetadata"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateKeyResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ckrKeyMetadata",
                        "name": "_ckrKeyMetadata",
                        "shape": "KeyMetadata",
                        "locationName": "KeyMetadata",
                        "documentation": "-- | Metadata associated with the key.",
                        "typeExposed": "Maybe KeyMetadata",
                        "type": "Maybe KeyMetadata"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ckrKeyMetadata",
                        "name": "_ckrKeyMetadata",
                        "shape": "KeyMetadata",
                        "locationName": "KeyMetadata",
                        "documentation": "-- | Metadata associated with the key.",
                        "typeExposed": "Maybe KeyMetadata",
                        "type": "Maybe KeyMetadata"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html",
            "namespace": "Network.AWS.KMS.CreateKey",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "CreateKey",
            "method": "post",
            "documentation": "-- | Creates a customer master key. Customer master keys can be used to encrypt\n-- small amounts of data (less than 4K) directly, but they are most commonly\n-- used to encrypt or envelope data keys that are then used to encrypt customer\n-- data. For more information about data keys, see 'GenerateDataKey' and 'GenerateDataKeyWithoutPlaintext'.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "createKey",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ckPolicy",
                        "name": "_ckPolicy",
                        "shape": "PolicyType",
                        "locationName": "Policy",
                        "documentation": "-- | Policy to be attached to the key. This is required and delegates back to the\n-- account. The key is the root of trust.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ckDescription",
                        "name": "_ckDescription",
                        "shape": "DescriptionType",
                        "locationName": "Description",
                        "documentation": "-- | Description of the key. We recommend that you choose a description that helps\n-- your customer decide whether the key is appropriate for a task.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ckKeyUsage",
                        "name": "_ckKeyUsage",
                        "shape": "KeyUsageType",
                        "locationName": "KeyUsage",
                        "documentation": "-- | Specifies the intended use of the key. Currently this defaults to\n-- ENCRYPT/DECRYPT, and only symmetric encryption and decryption are supported.",
                        "typeExposed": "Maybe KeyUsageType",
                        "type": "Maybe KeyUsageType"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 12,
                "queryPad": 0,
                "name": "CreateKey",
                "query": [],
                "locationPad": 12,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ckPolicy",
                        "name": "_ckPolicy",
                        "shape": "PolicyType",
                        "locationName": "Policy",
                        "documentation": "-- | Policy to be attached to the key. This is required and delegates back to the\n-- account. The key is the root of trust.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ckDescription",
                        "name": "_ckDescription",
                        "shape": "DescriptionType",
                        "locationName": "Description",
                        "documentation": "-- | Description of the key. We recommend that you choose a description that helps\n-- your customer decide whether the key is appropriate for a task.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ckKeyUsage",
                        "name": "_ckKeyUsage",
                        "shape": "KeyUsageType",
                        "locationName": "KeyUsage",
                        "documentation": "-- | Specifies the intended use of the key. Currently this defaults to\n-- ENCRYPT/DECRYPT, and only symmetric encryption and decryption are supported.",
                        "typeExposed": "Maybe KeyUsageType",
                        "type": "Maybe KeyUsageType"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ckDescription",
                        "name": "_ckDescription",
                        "shape": "DescriptionType",
                        "locationName": "Description",
                        "documentation": "-- | Description of the key. We recommend that you choose a description that helps\n-- your customer decide whether the key is appropriate for a task.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ckKeyUsage",
                        "name": "_ckKeyUsage",
                        "shape": "KeyUsageType",
                        "locationName": "KeyUsage",
                        "documentation": "-- | Specifies the intended use of the key. Currently this defaults to\n-- ENCRYPT/DECRYPT, and only symmetric encryption and decryption are supported.",
                        "typeExposed": "Maybe KeyUsageType",
                        "type": "Maybe KeyUsageType"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ckPolicy",
                        "name": "_ckPolicy",
                        "shape": "PolicyType",
                        "locationName": "Policy",
                        "documentation": "-- | Policy to be attached to the key. This is required and delegates back to the\n-- account. The key is the root of trust.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 12,
                "ctor": "decryptResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "drKeyId",
                        "name": "_drKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier created by the system for the key. This value is always\n-- returned as long as no errors are encountered during the operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "drPlaintext",
                        "name": "_drPlaintext",
                        "shape": "PlaintextType",
                        "locationName": "Plaintext",
                        "documentation": "-- | Decrypted plaintext data. This value may not be returned if the customer\n-- master key is not available or if you didn't have permission to use it.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 10,
                "name": "DecryptResponse",
                "resultWrapper": null,
                "locationPad": 10,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "drKeyId",
                        "name": "_drKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier created by the system for the key. This value is always\n-- returned as long as no errors are encountered during the operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "drPlaintext",
                        "name": "_drPlaintext",
                        "shape": "PlaintextType",
                        "locationName": "Plaintext",
                        "documentation": "-- | Decrypted plaintext data. This value may not be returned if the customer\n-- master key is not available or if you didn't have permission to use it.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "drKeyId",
                        "name": "_drKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier created by the system for the key. This value is always\n-- returned as long as no errors are encountered during the operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "drPlaintext",
                        "name": "_drPlaintext",
                        "shape": "PlaintextType",
                        "locationName": "Plaintext",
                        "documentation": "-- | Decrypted plaintext data. This value may not be returned if the customer\n-- master key is not available or if you didn't have permission to use it.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_Decrypt.html",
            "namespace": "Network.AWS.KMS.Decrypt",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "Decrypt",
            "method": "post",
            "documentation": "-- | Decrypts ciphertext. Ciphertext is plaintext that has been previously\n-- encrypted by using the 'Encrypt' function.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 19,
                "ctor": "decrypt",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dCiphertextBlob",
                        "name": "_dCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | Ciphertext including metadata.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dEncryptionContext",
                        "name": "_dEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContext",
                        "documentation": "-- | The encryption context. If this was specified in the 'Encrypt' function, it\n-- must be specified here or the decryption operation will fail. For more\n-- information, see \u003chttp://docs.aws.amazon.com/kms/latest/developerguide/encrypt-context.html Encryption Context\u003e.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dGrantTokens",
                        "name": "_dGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | A list of grant tokens that represent grants which can be used to provide\n-- long term permissions to perform decryption.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dCiphertextBlob",
                        "name": "_dCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | Ciphertext including metadata.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 18,
                "queryPad": 0,
                "name": "Decrypt",
                "query": [],
                "locationPad": 18,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dEncryptionContext",
                        "name": "_dEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContext",
                        "documentation": "-- | The encryption context. If this was specified in the 'Encrypt' function, it\n-- must be specified here or the decryption operation will fail. For more\n-- information, see \u003chttp://docs.aws.amazon.com/kms/latest/developerguide/encrypt-context.html Encryption Context\u003e.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dGrantTokens",
                        "name": "_dGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | A list of grant tokens that represent grants which can be used to provide\n-- long term permissions to perform decryption.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dCiphertextBlob",
                        "name": "_dCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | Ciphertext including metadata.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dEncryptionContext",
                        "name": "_dEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContext",
                        "documentation": "-- | The encryption context. If this was specified in the 'Encrypt' function, it\n-- must be specified here or the decryption operation will fail. For more\n-- information, see \u003chttp://docs.aws.amazon.com/kms/latest/developerguide/encrypt-context.html Encryption Context\u003e.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dGrantTokens",
                        "name": "_dGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | A list of grant tokens that represent grants which can be used to provide\n-- long term permissions to perform decryption.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteAliasResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteAliasResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_DeleteAlias.html",
            "namespace": "Network.AWS.KMS.DeleteAlias",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "DeleteAlias",
            "method": "post",
            "documentation": "-- | Deletes the specified alias.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "deleteAlias",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": true,
                    "lens": "daAliasName",
                    "name": "_daAliasName",
                    "shape": "AliasNameType",
                    "locationName": "AliasName",
                    "documentation": "-- | The alias to be deleted.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "daAliasName",
                        "name": "_daAliasName",
                        "shape": "AliasNameType",
                        "locationName": "AliasName",
                        "documentation": "-- | The alias to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "daAliasName",
                        "name": "_daAliasName",
                        "shape": "AliasNameType",
                        "locationName": "AliasName",
                        "documentation": "-- | The alias to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteAlias",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "daAliasName",
                        "name": "_daAliasName",
                        "shape": "AliasNameType",
                        "locationName": "AliasName",
                        "documentation": "-- | The alias to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "describeKeyResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": false,
                    "lens": "dkrKeyMetadata",
                    "name": "_dkrKeyMetadata",
                    "shape": "KeyMetadata",
                    "locationName": "KeyMetadata",
                    "documentation": "-- | Metadata associated with the key.",
                    "typeExposed": "Maybe KeyMetadata",
                    "type": "Maybe KeyMetadata"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "dkrKeyMetadata",
                        "name": "_dkrKeyMetadata",
                        "shape": "KeyMetadata",
                        "locationName": "KeyMetadata",
                        "documentation": "-- | Metadata associated with the key.",
                        "typeExposed": "Maybe KeyMetadata",
                        "type": "Maybe KeyMetadata"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeKeyResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "dkrKeyMetadata",
                        "name": "_dkrKeyMetadata",
                        "shape": "KeyMetadata",
                        "locationName": "KeyMetadata",
                        "documentation": "-- | Metadata associated with the key.",
                        "typeExposed": "Maybe KeyMetadata",
                        "type": "Maybe KeyMetadata"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "dkrKeyMetadata",
                        "name": "_dkrKeyMetadata",
                        "shape": "KeyMetadata",
                        "locationName": "KeyMetadata",
                        "documentation": "-- | Metadata associated with the key.",
                        "typeExposed": "Maybe KeyMetadata",
                        "type": "Maybe KeyMetadata"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html",
            "namespace": "Network.AWS.KMS.DescribeKey",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "DescribeKey",
            "method": "post",
            "documentation": "-- | Provides detailed information about the specified customer master key.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "describeKey",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": true,
                    "lens": "dk1KeyId",
                    "name": "_dk1KeyId",
                    "shape": "KeyIdType",
                    "locationName": "KeyId",
                    "documentation": "-- | Unique identifier of the customer master key to be described. This can be an\n-- ARN, an alias, or a globally unique identifier.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dk1KeyId",
                        "name": "_dk1KeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key to be described. This can be an\n-- ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dk1KeyId",
                        "name": "_dk1KeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key to be described. This can be an\n-- ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DescribeKey",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dk1KeyId",
                        "name": "_dk1KeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key to be described. This can be an\n-- ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "disableKeyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DisableKeyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKey.html",
            "namespace": "Network.AWS.KMS.DisableKey",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "DisableKey",
            "method": "post",
            "documentation": "-- | Marks a key as disabled, thereby preventing its use.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "disableKey",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": true,
                    "lens": "dkKeyId",
                    "name": "_dkKeyId",
                    "shape": "KeyIdType",
                    "locationName": "KeyId",
                    "documentation": "-- | Unique identifier of the customer master key to be disabled. This can be an\n-- ARN, an alias, or a globally unique identifier.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dkKeyId",
                        "name": "_dkKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key to be disabled. This can be an\n-- ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dkKeyId",
                        "name": "_dkKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key to be disabled. This can be an\n-- ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DisableKey",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dkKeyId",
                        "name": "_dkKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key to be disabled. This can be an\n-- ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "disableKeyRotationResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DisableKeyRotationResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKeyRotation.html",
            "namespace": "Network.AWS.KMS.DisableKeyRotation",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "DisableKeyRotation",
            "method": "post",
            "documentation": "-- | Disables rotation of the specified key.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "disableKeyRotation",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": true,
                    "lens": "dkrKeyId",
                    "name": "_dkrKeyId",
                    "shape": "KeyIdType",
                    "locationName": "KeyId",
                    "documentation": "-- | Unique identifier of the customer master key for which rotation is to be\n-- disabled. This can be an ARN, an alias, or a globally unique identifier.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dkrKeyId",
                        "name": "_dkrKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key for which rotation is to be\n-- disabled. This can be an ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dkrKeyId",
                        "name": "_dkrKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key for which rotation is to be\n-- disabled. This can be an ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DisableKeyRotation",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dkrKeyId",
                        "name": "_dkrKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key for which rotation is to be\n-- disabled. This can be an ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "enableKeyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "EnableKeyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_EnableKey.html",
            "namespace": "Network.AWS.KMS.EnableKey",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "EnableKey",
            "method": "post",
            "documentation": "-- | Marks a key as enabled, thereby permitting its use. You can have up to 25\n-- enabled keys at one time.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "enableKey",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": true,
                    "lens": "ekKeyId",
                    "name": "_ekKeyId",
                    "shape": "KeyIdType",
                    "locationName": "KeyId",
                    "documentation": "-- | Unique identifier of the customer master key to be enabled. This can be an\n-- ARN, an alias, or a globally unique identifier.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ekKeyId",
                        "name": "_ekKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key to be enabled. This can be an\n-- ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ekKeyId",
                        "name": "_ekKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key to be enabled. This can be an\n-- ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "EnableKey",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ekKeyId",
                        "name": "_ekKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key to be enabled. This can be an\n-- ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "enableKeyRotationResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "EnableKeyRotationResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_EnableKeyRotation.html",
            "namespace": "Network.AWS.KMS.EnableKeyRotation",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "EnableKeyRotation",
            "method": "post",
            "documentation": "-- | Enables rotation of the specified customer master key.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "enableKeyRotation",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": true,
                    "lens": "ekrKeyId",
                    "name": "_ekrKeyId",
                    "shape": "KeyIdType",
                    "locationName": "KeyId",
                    "documentation": "-- | Unique identifier of the customer master key for which rotation is to be\n-- enabled. This can be an ARN, an alias, or a globally unique identifier.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ekrKeyId",
                        "name": "_ekrKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key for which rotation is to be\n-- enabled. This can be an ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ekrKeyId",
                        "name": "_ekrKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key for which rotation is to be\n-- enabled. This can be an ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "EnableKeyRotation",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ekrKeyId",
                        "name": "_ekrKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master key for which rotation is to be\n-- enabled. This can be an ARN, an alias, or a globally unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 17,
                "ctor": "encryptResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "erCiphertextBlob",
                        "name": "_erCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | The encrypted plaintext.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "erKeyId",
                        "name": "_erKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | The ID of the key used during encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "name": "EncryptResponse",
                "resultWrapper": null,
                "locationPad": 15,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "erCiphertextBlob",
                        "name": "_erCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | The encrypted plaintext.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "erKeyId",
                        "name": "_erKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | The ID of the key used during encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "erCiphertextBlob",
                        "name": "_erCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | The encrypted plaintext.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "erKeyId",
                        "name": "_erKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | The ID of the key used during encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html",
            "namespace": "Network.AWS.KMS.Encrypt",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "Encrypt",
            "method": "post",
            "documentation": "-- | Encrypts plaintext into ciphertext by using a customer master key.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 19,
                "ctor": "encrypt",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "eKeyId",
                        "name": "_eKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master. This can be an ARN, an alias, or\n-- the Key ID.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ePlaintext",
                        "name": "_ePlaintext",
                        "shape": "PlaintextType",
                        "locationName": "Plaintext",
                        "documentation": "-- | Data to be encrypted.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "eEncryptionContext",
                        "name": "_eEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContext",
                        "documentation": "-- | Name:value pair that specifies the encryption context to be used for\n-- authenticated encryption. For more information, see \u003chttp://docs.aws.amazon.com/kms/latest/developerguide/crypto_authen.html Authenticated Encryption\u003e.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "eGrantTokens",
                        "name": "_eGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | A list of grant tokens that represent grants which can be used to provide\n-- long term permissions to perform encryption.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "eKeyId",
                        "name": "_eKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master. This can be an ARN, an alias, or\n-- the Key ID.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ePlaintext",
                        "name": "_ePlaintext",
                        "shape": "PlaintextType",
                        "locationName": "Plaintext",
                        "documentation": "-- | Data to be encrypted.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 18,
                "queryPad": 0,
                "name": "Encrypt",
                "query": [],
                "locationPad": 18,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "eEncryptionContext",
                        "name": "_eEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContext",
                        "documentation": "-- | Name:value pair that specifies the encryption context to be used for\n-- authenticated encryption. For more information, see \u003chttp://docs.aws.amazon.com/kms/latest/developerguide/crypto_authen.html Authenticated Encryption\u003e.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "eGrantTokens",
                        "name": "_eGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | A list of grant tokens that represent grants which can be used to provide\n-- long term permissions to perform encryption.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "eEncryptionContext",
                        "name": "_eEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContext",
                        "documentation": "-- | Name:value pair that specifies the encryption context to be used for\n-- authenticated encryption. For more information, see \u003chttp://docs.aws.amazon.com/kms/latest/developerguide/crypto_authen.html Authenticated Encryption\u003e.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "eGrantTokens",
                        "name": "_eGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | A list of grant tokens that represent grants which can be used to provide\n-- long term permissions to perform encryption.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "eKeyId",
                        "name": "_eKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the customer master. This can be an ARN, an alias, or\n-- the Key ID.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ePlaintext",
                        "name": "_ePlaintext",
                        "shape": "PlaintextType",
                        "locationName": "Plaintext",
                        "documentation": "-- | Data to be encrypted.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 19,
                "ctor": "generateDataKeyResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkrCiphertextBlob",
                        "name": "_gdkrCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | Ciphertext that contains the wrapped key. You must store the blob and\n-- encryption context so that the ciphertext can be decrypted. You must provide\n-- both the ciphertext blob and the encryption context.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkrPlaintext",
                        "name": "_gdkrPlaintext",
                        "shape": "PlaintextType",
                        "locationName": "Plaintext",
                        "documentation": "-- | Plaintext that contains the unwrapped key. Use this for encryption and\n-- decryption and then remove it from memory as soon as possible.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkrKeyId",
                        "name": "_gdkrKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | System generated unique identifier for the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "name": "GenerateDataKeyResponse",
                "resultWrapper": null,
                "locationPad": 15,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkrCiphertextBlob",
                        "name": "_gdkrCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | Ciphertext that contains the wrapped key. You must store the blob and\n-- encryption context so that the ciphertext can be decrypted. You must provide\n-- both the ciphertext blob and the encryption context.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkrPlaintext",
                        "name": "_gdkrPlaintext",
                        "shape": "PlaintextType",
                        "locationName": "Plaintext",
                        "documentation": "-- | Plaintext that contains the unwrapped key. Use this for encryption and\n-- decryption and then remove it from memory as soon as possible.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkrKeyId",
                        "name": "_gdkrKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | System generated unique identifier for the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkrCiphertextBlob",
                        "name": "_gdkrCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | Ciphertext that contains the wrapped key. You must store the blob and\n-- encryption context so that the ciphertext can be decrypted. You must provide\n-- both the ciphertext blob and the encryption context.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkrKeyId",
                        "name": "_gdkrKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | System generated unique identifier for the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkrPlaintext",
                        "name": "_gdkrPlaintext",
                        "shape": "PlaintextType",
                        "locationName": "Plaintext",
                        "documentation": "-- | Plaintext that contains the unwrapped key. Use this for encryption and\n-- decryption and then remove it from memory as soon as possible.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKey.html",
            "namespace": "Network.AWS.KMS.GenerateDataKey",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "GenerateDataKey",
            "method": "post",
            "documentation": "-- | Generates a secure data key. Data keys are used to encrypt and decrypt data.\n-- They are wrapped by customer master keys.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 21,
                "ctor": "generateDataKey",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkKeyId",
                        "name": "_gdkKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkEncryptionContext",
                        "name": "_gdkEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContext",
                        "documentation": "-- | Name/value pair that contains additional data to be authenticated during the\n-- encryption and decryption processes that use the key. This value is logged by\n-- AWS CloudTrail to provide context around the data encrypted by the key.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkNumberOfBytes",
                        "name": "_gdkNumberOfBytes",
                        "shape": "NumberOfBytesType",
                        "locationName": "NumberOfBytes",
                        "documentation": "-- | Integer that contains the number of bytes to generate. Common values are 128,\n-- 256, 512, 1024 and so on. 1024 is the current limit.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkKeySpec",
                        "name": "_gdkKeySpec",
                        "shape": "DataKeySpec",
                        "locationName": "KeySpec",
                        "documentation": "-- | Value that identifies the encryption algorithm and key size to generate a\n-- data key for. Currently this can be AES_128 or AES_256.",
                        "typeExposed": "Maybe DataKeySpec",
                        "type": "Maybe DataKeySpec"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkGrantTokens",
                        "name": "_gdkGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | A list of grant tokens that represent grants which can be used to provide\n-- long term permissions to generate a key.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkKeyId",
                        "name": "_gdkKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 18,
                "queryPad": 0,
                "name": "GenerateDataKey",
                "query": [],
                "locationPad": 18,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkEncryptionContext",
                        "name": "_gdkEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContext",
                        "documentation": "-- | Name/value pair that contains additional data to be authenticated during the\n-- encryption and decryption processes that use the key. This value is logged by\n-- AWS CloudTrail to provide context around the data encrypted by the key.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkNumberOfBytes",
                        "name": "_gdkNumberOfBytes",
                        "shape": "NumberOfBytesType",
                        "locationName": "NumberOfBytes",
                        "documentation": "-- | Integer that contains the number of bytes to generate. Common values are 128,\n-- 256, 512, 1024 and so on. 1024 is the current limit.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkKeySpec",
                        "name": "_gdkKeySpec",
                        "shape": "DataKeySpec",
                        "locationName": "KeySpec",
                        "documentation": "-- | Value that identifies the encryption algorithm and key size to generate a\n-- data key for. Currently this can be AES_128 or AES_256.",
                        "typeExposed": "Maybe DataKeySpec",
                        "type": "Maybe DataKeySpec"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkGrantTokens",
                        "name": "_gdkGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | A list of grant tokens that represent grants which can be used to provide\n-- long term permissions to generate a key.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkEncryptionContext",
                        "name": "_gdkEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContext",
                        "documentation": "-- | Name/value pair that contains additional data to be authenticated during the\n-- encryption and decryption processes that use the key. This value is logged by\n-- AWS CloudTrail to provide context around the data encrypted by the key.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkGrantTokens",
                        "name": "_gdkGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | A list of grant tokens that represent grants which can be used to provide\n-- long term permissions to generate a key.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkKeyId",
                        "name": "_gdkKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkKeySpec",
                        "name": "_gdkKeySpec",
                        "shape": "DataKeySpec",
                        "locationName": "KeySpec",
                        "documentation": "-- | Value that identifies the encryption algorithm and key size to generate a\n-- data key for. Currently this can be AES_128 or AES_256.",
                        "typeExposed": "Maybe DataKeySpec",
                        "type": "Maybe DataKeySpec"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkNumberOfBytes",
                        "name": "_gdkNumberOfBytes",
                        "shape": "NumberOfBytesType",
                        "locationName": "NumberOfBytes",
                        "documentation": "-- | Integer that contains the number of bytes to generate. Common values are 128,\n-- 256, 512, 1024 and so on. 1024 is the current limit.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 21,
                "ctor": "generateDataKeyWithoutPlaintextResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkwprCiphertextBlob",
                        "name": "_gdkwprCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | Ciphertext that contains the wrapped key. You must store the blob and\n-- encryption context so that the key can be used in a future operation.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkwprKeyId",
                        "name": "_gdkwprKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | System generated unique identifier for the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "name": "GenerateDataKeyWithoutPlaintextResponse",
                "resultWrapper": null,
                "locationPad": 15,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkwprCiphertextBlob",
                        "name": "_gdkwprCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | Ciphertext that contains the wrapped key. You must store the blob and\n-- encryption context so that the key can be used in a future operation.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkwprKeyId",
                        "name": "_gdkwprKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | System generated unique identifier for the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkwprCiphertextBlob",
                        "name": "_gdkwprCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | Ciphertext that contains the wrapped key. You must store the blob and\n-- encryption context so that the key can be used in a future operation.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkwprKeyId",
                        "name": "_gdkwprKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | System generated unique identifier for the key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKeyWithoutPlaintext.html",
            "namespace": "Network.AWS.KMS.GenerateDataKeyWithoutPlaintext",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "GenerateDataKeyWithoutPlaintext",
            "method": "post",
            "documentation": "-- | Returns a key wrapped by a customer master key without the plaintext copy of\n-- that key. To retrieve the plaintext, see 'GenerateDataKey'.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 23,
                "ctor": "generateDataKeyWithoutPlaintext",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkwpKeyId",
                        "name": "_gdkwpKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkwpEncryptionContext",
                        "name": "_gdkwpEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContext",
                        "documentation": "-- | Name:value pair that contains additional data to be authenticated during the\n-- encryption and decryption processes.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkwpKeySpec",
                        "name": "_gdkwpKeySpec",
                        "shape": "DataKeySpec",
                        "locationName": "KeySpec",
                        "documentation": "-- | Value that identifies the encryption algorithm and key size. Currently this\n-- can be AES_128 or AES_256.",
                        "typeExposed": "Maybe DataKeySpec",
                        "type": "Maybe DataKeySpec"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkwpNumberOfBytes",
                        "name": "_gdkwpNumberOfBytes",
                        "shape": "NumberOfBytesType",
                        "locationName": "NumberOfBytes",
                        "documentation": "-- | Integer that contains the number of bytes to generate. Common values are 128,\n-- 256, 512, 1024 and so on.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkwpGrantTokens",
                        "name": "_gdkwpGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | A list of grant tokens that represent grants which can be used to provide\n-- long term permissions to generate a key.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkwpKeyId",
                        "name": "_gdkwpKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 18,
                "queryPad": 0,
                "name": "GenerateDataKeyWithoutPlaintext",
                "query": [],
                "locationPad": 18,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkwpEncryptionContext",
                        "name": "_gdkwpEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContext",
                        "documentation": "-- | Name:value pair that contains additional data to be authenticated during the\n-- encryption and decryption processes.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkwpKeySpec",
                        "name": "_gdkwpKeySpec",
                        "shape": "DataKeySpec",
                        "locationName": "KeySpec",
                        "documentation": "-- | Value that identifies the encryption algorithm and key size. Currently this\n-- can be AES_128 or AES_256.",
                        "typeExposed": "Maybe DataKeySpec",
                        "type": "Maybe DataKeySpec"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkwpNumberOfBytes",
                        "name": "_gdkwpNumberOfBytes",
                        "shape": "NumberOfBytesType",
                        "locationName": "NumberOfBytes",
                        "documentation": "-- | Integer that contains the number of bytes to generate. Common values are 128,\n-- 256, 512, 1024 and so on.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkwpGrantTokens",
                        "name": "_gdkwpGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | A list of grant tokens that represent grants which can be used to provide\n-- long term permissions to generate a key.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkwpEncryptionContext",
                        "name": "_gdkwpEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "EncryptionContext",
                        "documentation": "-- | Name:value pair that contains additional data to be authenticated during the\n-- encryption and decryption processes.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkwpGrantTokens",
                        "name": "_gdkwpGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | A list of grant tokens that represent grants which can be used to provide\n-- long term permissions to generate a key.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gdkwpKeyId",
                        "name": "_gdkwpKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkwpKeySpec",
                        "name": "_gdkwpKeySpec",
                        "shape": "DataKeySpec",
                        "locationName": "KeySpec",
                        "documentation": "-- | Value that identifies the encryption algorithm and key size. Currently this\n-- can be AES_128 or AES_256.",
                        "typeExposed": "Maybe DataKeySpec",
                        "type": "Maybe DataKeySpec"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gdkwpNumberOfBytes",
                        "name": "_gdkwpNumberOfBytes",
                        "shape": "NumberOfBytesType",
                        "locationName": "NumberOfBytes",
                        "documentation": "-- | Integer that contains the number of bytes to generate. Common values are 128,\n-- 256, 512, 1024 and so on.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "generateRandomResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": false,
                    "lens": "grrPlaintext",
                    "name": "_grrPlaintext",
                    "shape": "PlaintextType",
                    "locationName": "Plaintext",
                    "documentation": "-- | Plaintext that contains the unpredictable byte string.",
                    "typeExposed": "Maybe Base64",
                    "type": "Maybe Base64"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "grrPlaintext",
                        "name": "_grrPlaintext",
                        "shape": "PlaintextType",
                        "locationName": "Plaintext",
                        "documentation": "-- | Plaintext that contains the unpredictable byte string.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GenerateRandomResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "grrPlaintext",
                        "name": "_grrPlaintext",
                        "shape": "PlaintextType",
                        "locationName": "Plaintext",
                        "documentation": "-- | Plaintext that contains the unpredictable byte string.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "grrPlaintext",
                        "name": "_grrPlaintext",
                        "shape": "PlaintextType",
                        "locationName": "Plaintext",
                        "documentation": "-- | Plaintext that contains the unpredictable byte string.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateRandom.html",
            "namespace": "Network.AWS.KMS.GenerateRandom",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "GenerateRandom",
            "method": "post",
            "documentation": "-- | Generates an unpredictable byte string.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "generateRandom",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": "mapping _Nat",
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": false,
                    "lens": "grNumberOfBytes",
                    "name": "_grNumberOfBytes",
                    "shape": "NumberOfBytesType",
                    "locationName": "NumberOfBytes",
                    "documentation": "-- | Integer that contains the number of bytes to generate. Common values are 128,\n-- 256, 512, 1024 and so on. The current limit is 1024 bytes.",
                    "typeExposed": "Maybe Natural",
                    "type": "Maybe Nat"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "grNumberOfBytes",
                        "name": "_grNumberOfBytes",
                        "shape": "NumberOfBytesType",
                        "locationName": "NumberOfBytes",
                        "documentation": "-- | Integer that contains the number of bytes to generate. Common values are 128,\n-- 256, 512, 1024 and so on. The current limit is 1024 bytes.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GenerateRandom",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "grNumberOfBytes",
                        "name": "_grNumberOfBytes",
                        "shape": "NumberOfBytesType",
                        "locationName": "NumberOfBytes",
                        "documentation": "-- | Integer that contains the number of bytes to generate. Common values are 128,\n-- 256, 512, 1024 and so on. The current limit is 1024 bytes.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "grNumberOfBytes",
                        "name": "_grNumberOfBytes",
                        "shape": "NumberOfBytesType",
                        "locationName": "NumberOfBytes",
                        "documentation": "-- | Integer that contains the number of bytes to generate. Common values are 128,\n-- 256, 512, 1024 and so on. The current limit is 1024 bytes.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "getKeyPolicyResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": false,
                    "lens": "gkprPolicy",
                    "name": "_gkprPolicy",
                    "shape": "PolicyType",
                    "locationName": "Policy",
                    "documentation": "-- | A policy document in JSON format.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gkprPolicy",
                        "name": "_gkprPolicy",
                        "shape": "PolicyType",
                        "locationName": "Policy",
                        "documentation": "-- | A policy document in JSON format.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetKeyPolicyResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gkprPolicy",
                        "name": "_gkprPolicy",
                        "shape": "PolicyType",
                        "locationName": "Policy",
                        "documentation": "-- | A policy document in JSON format.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gkprPolicy",
                        "name": "_gkprPolicy",
                        "shape": "PolicyType",
                        "locationName": "Policy",
                        "documentation": "-- | A policy document in JSON format.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_GetKeyPolicy.html",
            "namespace": "Network.AWS.KMS.GetKeyPolicy",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "GetKeyPolicy",
            "method": "post",
            "documentation": "-- | Retrieves a policy attached to the specified key.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "getKeyPolicy",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gkpKeyId",
                        "name": "_gkpKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gkpPolicyName",
                        "name": "_gkpPolicyName",
                        "shape": "PolicyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | String that contains the name of the policy. Currently, this must be\n-- \"default\". Policy names can be discovered by calling 'ListKeyPolicies'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gkpKeyId",
                        "name": "_gkpKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gkpPolicyName",
                        "name": "_gkpPolicyName",
                        "shape": "PolicyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | String that contains the name of the policy. Currently, this must be\n-- \"default\". Policy names can be discovered by calling 'ListKeyPolicies'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 11,
                "queryPad": 0,
                "name": "GetKeyPolicy",
                "query": [],
                "locationPad": 11,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gkpKeyId",
                        "name": "_gkpKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gkpPolicyName",
                        "name": "_gkpPolicyName",
                        "shape": "PolicyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | String that contains the name of the policy. Currently, this must be\n-- \"default\". Policy names can be discovered by calling 'ListKeyPolicies'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "getKeyRotationStatusResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": false,
                    "lens": "gkrsrKeyRotationEnabled",
                    "name": "_gkrsrKeyRotationEnabled",
                    "shape": "BooleanType",
                    "locationName": "KeyRotationEnabled",
                    "documentation": "-- | A Boolean value that specifies whether key rotation is enabled.",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gkrsrKeyRotationEnabled",
                        "name": "_gkrsrKeyRotationEnabled",
                        "shape": "BooleanType",
                        "locationName": "KeyRotationEnabled",
                        "documentation": "-- | A Boolean value that specifies whether key rotation is enabled.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetKeyRotationStatusResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gkrsrKeyRotationEnabled",
                        "name": "_gkrsrKeyRotationEnabled",
                        "shape": "BooleanType",
                        "locationName": "KeyRotationEnabled",
                        "documentation": "-- | A Boolean value that specifies whether key rotation is enabled.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gkrsrKeyRotationEnabled",
                        "name": "_gkrsrKeyRotationEnabled",
                        "shape": "BooleanType",
                        "locationName": "KeyRotationEnabled",
                        "documentation": "-- | A Boolean value that specifies whether key rotation is enabled.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_GetKeyRotationStatus.html",
            "namespace": "Network.AWS.KMS.GetKeyRotationStatus",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "GetKeyRotationStatus",
            "method": "post",
            "documentation": "-- | Retrieves a Boolean value that indicates whether key rotation is enabled for\n-- the specified key.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "getKeyRotationStatus",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": true,
                    "lens": "gkrsKeyId",
                    "name": "_gkrsKeyId",
                    "shape": "KeyIdType",
                    "locationName": "KeyId",
                    "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gkrsKeyId",
                        "name": "_gkrsKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gkrsKeyId",
                        "name": "_gkrsKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetKeyRotationStatus",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gkrsKeyId",
                        "name": "_gkrsKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "listAliasesResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "larAliases",
                        "name": "_larAliases",
                        "shape": "AliasList",
                        "locationName": "Aliases",
                        "documentation": "-- | A list of key aliases in the user's account.",
                        "typeExposed": "[AliasListEntry]",
                        "type": "List \"Aliases\" AliasListEntry"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "larNextMarker",
                        "name": "_larNextMarker",
                        "shape": "MarkerType",
                        "locationName": "NextMarker",
                        "documentation": "-- | If 'Truncated' is true, this value is present and contains the value to use for\n-- the 'Marker' request parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "larTruncated",
                        "name": "_larTruncated",
                        "shape": "BooleanType",
                        "locationName": "Truncated",
                        "documentation": "-- | A flag that indicates whether there are more items in the list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more aliases in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 11,
                "name": "ListAliasesResponse",
                "resultWrapper": null,
                "locationPad": 11,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "larAliases",
                        "name": "_larAliases",
                        "shape": "AliasList",
                        "locationName": "Aliases",
                        "documentation": "-- | A list of key aliases in the user's account.",
                        "typeExposed": "[AliasListEntry]",
                        "type": "List \"Aliases\" AliasListEntry"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "larNextMarker",
                        "name": "_larNextMarker",
                        "shape": "MarkerType",
                        "locationName": "NextMarker",
                        "documentation": "-- | If 'Truncated' is true, this value is present and contains the value to use for\n-- the 'Marker' request parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "larTruncated",
                        "name": "_larTruncated",
                        "shape": "BooleanType",
                        "locationName": "Truncated",
                        "documentation": "-- | A flag that indicates whether there are more items in the list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more aliases in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "larAliases",
                        "name": "_larAliases",
                        "shape": "AliasList",
                        "locationName": "Aliases",
                        "documentation": "-- | A list of key aliases in the user's account.",
                        "typeExposed": "[AliasListEntry]",
                        "type": "List \"Aliases\" AliasListEntry"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "larNextMarker",
                        "name": "_larNextMarker",
                        "shape": "MarkerType",
                        "locationName": "NextMarker",
                        "documentation": "-- | If 'Truncated' is true, this value is present and contains the value to use for\n-- the 'Marker' request parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "larTruncated",
                        "name": "_larTruncated",
                        "shape": "BooleanType",
                        "locationName": "Truncated",
                        "documentation": "-- | A flag that indicates whether there are more items in the list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more aliases in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_ListAliases.html",
            "namespace": "Network.AWS.KMS.ListAliases",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "ListAliases",
            "method": "post",
            "documentation": "-- | Lists all of the key aliases in the account.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 9,
                "ctor": "listAliases",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "laLimit",
                        "name": "_laLimit",
                        "shape": "LimitType",
                        "locationName": "Limit",
                        "documentation": "-- | Specify this parameter when paginating results to indicate the maximum number\n-- of aliases you want in each response. If there are additional aliases beyond\n-- the maximum you specify, the 'Truncated' response element will be set to 'true.'",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "laMarker",
                        "name": "_laMarker",
                        "shape": "MarkerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'NextMarker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 7,
                "queryPad": 0,
                "name": "ListAliases",
                "query": [],
                "locationPad": 7,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "laLimit",
                        "name": "_laLimit",
                        "shape": "LimitType",
                        "locationName": "Limit",
                        "documentation": "-- | Specify this parameter when paginating results to indicate the maximum number\n-- of aliases you want in each response. If there are additional aliases beyond\n-- the maximum you specify, the 'Truncated' response element will be set to 'true.'",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "laMarker",
                        "name": "_laMarker",
                        "shape": "MarkerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'NextMarker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "laLimit",
                        "name": "_laLimit",
                        "shape": "LimitType",
                        "locationName": "Limit",
                        "documentation": "-- | Specify this parameter when paginating results to indicate the maximum number\n-- of aliases you want in each response. If there are additional aliases beyond\n-- the maximum you specify, the 'Truncated' response element will be set to 'true.'",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "laMarker",
                        "name": "_laMarker",
                        "shape": "MarkerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'NextMarker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "listGrantsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lgrGrants",
                        "name": "_lgrGrants",
                        "shape": "GrantList",
                        "locationName": "Grants",
                        "documentation": "-- | A list of grants.",
                        "typeExposed": "[GrantListEntry]",
                        "type": "List \"Grants\" GrantListEntry"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lgrNextMarker",
                        "name": "_lgrNextMarker",
                        "shape": "MarkerType",
                        "locationName": "NextMarker",
                        "documentation": "-- | If 'Truncated' is true, this value is present and contains the value to use for\n-- the 'Marker' request parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lgrTruncated",
                        "name": "_lgrTruncated",
                        "shape": "BooleanType",
                        "locationName": "Truncated",
                        "documentation": "-- | A flag that indicates whether there are more items in the list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more grants in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 11,
                "name": "ListGrantsResponse",
                "resultWrapper": null,
                "locationPad": 11,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lgrGrants",
                        "name": "_lgrGrants",
                        "shape": "GrantList",
                        "locationName": "Grants",
                        "documentation": "-- | A list of grants.",
                        "typeExposed": "[GrantListEntry]",
                        "type": "List \"Grants\" GrantListEntry"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lgrNextMarker",
                        "name": "_lgrNextMarker",
                        "shape": "MarkerType",
                        "locationName": "NextMarker",
                        "documentation": "-- | If 'Truncated' is true, this value is present and contains the value to use for\n-- the 'Marker' request parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lgrTruncated",
                        "name": "_lgrTruncated",
                        "shape": "BooleanType",
                        "locationName": "Truncated",
                        "documentation": "-- | A flag that indicates whether there are more items in the list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more grants in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lgrGrants",
                        "name": "_lgrGrants",
                        "shape": "GrantList",
                        "locationName": "Grants",
                        "documentation": "-- | A list of grants.",
                        "typeExposed": "[GrantListEntry]",
                        "type": "List \"Grants\" GrantListEntry"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lgrNextMarker",
                        "name": "_lgrNextMarker",
                        "shape": "MarkerType",
                        "locationName": "NextMarker",
                        "documentation": "-- | If 'Truncated' is true, this value is present and contains the value to use for\n-- the 'Marker' request parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lgrTruncated",
                        "name": "_lgrTruncated",
                        "shape": "BooleanType",
                        "locationName": "Truncated",
                        "documentation": "-- | A flag that indicates whether there are more items in the list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more grants in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_ListGrants.html",
            "namespace": "Network.AWS.KMS.ListGrants",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "ListGrants",
            "method": "post",
            "documentation": "-- | List the grants for a specified key.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 9,
                "ctor": "listGrants",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lgKeyId",
                        "name": "_lgKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lgLimit",
                        "name": "_lgLimit",
                        "shape": "LimitType",
                        "locationName": "Limit",
                        "documentation": "-- | Specify this parameter only when paginating results to indicate the maximum\n-- number of grants you want listed in the response. If there are additional\n-- grants beyond the maximum you specify, the 'Truncated' response element will be\n-- set to 'true.'",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lgMarker",
                        "name": "_lgMarker",
                        "shape": "MarkerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'NextMarker' in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lgKeyId",
                        "name": "_lgKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 7,
                "queryPad": 0,
                "name": "ListGrants",
                "query": [],
                "locationPad": 7,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lgLimit",
                        "name": "_lgLimit",
                        "shape": "LimitType",
                        "locationName": "Limit",
                        "documentation": "-- | Specify this parameter only when paginating results to indicate the maximum\n-- number of grants you want listed in the response. If there are additional\n-- grants beyond the maximum you specify, the 'Truncated' response element will be\n-- set to 'true.'",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lgMarker",
                        "name": "_lgMarker",
                        "shape": "MarkerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'NextMarker' in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lgKeyId",
                        "name": "_lgKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lgLimit",
                        "name": "_lgLimit",
                        "shape": "LimitType",
                        "locationName": "Limit",
                        "documentation": "-- | Specify this parameter only when paginating results to indicate the maximum\n-- number of grants you want listed in the response. If there are additional\n-- grants beyond the maximum you specify, the 'Truncated' response element will be\n-- set to 'true.'",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lgMarker",
                        "name": "_lgMarker",
                        "shape": "MarkerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'NextMarker' in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 16,
                "ctor": "listKeyPoliciesResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lkprPolicyNames",
                        "name": "_lkprPolicyNames",
                        "shape": "PolicyNameList",
                        "locationName": "PolicyNames",
                        "documentation": "-- | A list of policy names. Currently, there is only one policy and it is named\n-- \"Default\".",
                        "typeExposed": "[Text]",
                        "type": "List \"PolicyNames\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkprNextMarker",
                        "name": "_lkprNextMarker",
                        "shape": "MarkerType",
                        "locationName": "NextMarker",
                        "documentation": "-- | If 'Truncated' is true, this value is present and contains the value to use for\n-- the 'Marker' request parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkprTruncated",
                        "name": "_lkprTruncated",
                        "shape": "BooleanType",
                        "locationName": "Truncated",
                        "documentation": "-- | A flag that indicates whether there are more items in the list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policies in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 12,
                "name": "ListKeyPoliciesResponse",
                "resultWrapper": null,
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lkprPolicyNames",
                        "name": "_lkprPolicyNames",
                        "shape": "PolicyNameList",
                        "locationName": "PolicyNames",
                        "documentation": "-- | A list of policy names. Currently, there is only one policy and it is named\n-- \"Default\".",
                        "typeExposed": "[Text]",
                        "type": "List \"PolicyNames\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkprNextMarker",
                        "name": "_lkprNextMarker",
                        "shape": "MarkerType",
                        "locationName": "NextMarker",
                        "documentation": "-- | If 'Truncated' is true, this value is present and contains the value to use for\n-- the 'Marker' request parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkprTruncated",
                        "name": "_lkprTruncated",
                        "shape": "BooleanType",
                        "locationName": "Truncated",
                        "documentation": "-- | A flag that indicates whether there are more items in the list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policies in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkprNextMarker",
                        "name": "_lkprNextMarker",
                        "shape": "MarkerType",
                        "locationName": "NextMarker",
                        "documentation": "-- | If 'Truncated' is true, this value is present and contains the value to use for\n-- the 'Marker' request parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lkprPolicyNames",
                        "name": "_lkprPolicyNames",
                        "shape": "PolicyNameList",
                        "locationName": "PolicyNames",
                        "documentation": "-- | A list of policy names. Currently, there is only one policy and it is named\n-- \"Default\".",
                        "typeExposed": "[Text]",
                        "type": "List \"PolicyNames\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkprTruncated",
                        "name": "_lkprTruncated",
                        "shape": "BooleanType",
                        "locationName": "Truncated",
                        "documentation": "-- | A flag that indicates whether there are more items in the list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policies in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_ListKeyPolicies.html",
            "namespace": "Network.AWS.KMS.ListKeyPolicies",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "ListKeyPolicies",
            "method": "post",
            "documentation": "-- | Retrieves a list of policies attached to a key.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 10,
                "ctor": "listKeyPolicies",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lkpKeyId",
                        "name": "_lkpKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkpLimit",
                        "name": "_lkpLimit",
                        "shape": "LimitType",
                        "locationName": "Limit",
                        "documentation": "-- | Specify this parameter only when paginating results to indicate the maximum\n-- number of policies you want listed in the response. If there are additional\n-- policies beyond the maximum you specify, the 'Truncated' response element will\n-- be set to 'true.'",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkpMarker",
                        "name": "_lkpMarker",
                        "shape": "MarkerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'NextMarker' in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lkpKeyId",
                        "name": "_lkpKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 7,
                "queryPad": 0,
                "name": "ListKeyPolicies",
                "query": [],
                "locationPad": 7,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkpLimit",
                        "name": "_lkpLimit",
                        "shape": "LimitType",
                        "locationName": "Limit",
                        "documentation": "-- | Specify this parameter only when paginating results to indicate the maximum\n-- number of policies you want listed in the response. If there are additional\n-- policies beyond the maximum you specify, the 'Truncated' response element will\n-- be set to 'true.'",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkpMarker",
                        "name": "_lkpMarker",
                        "shape": "MarkerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'NextMarker' in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lkpKeyId",
                        "name": "_lkpKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkpLimit",
                        "name": "_lkpLimit",
                        "shape": "LimitType",
                        "locationName": "Limit",
                        "documentation": "-- | Specify this parameter only when paginating results to indicate the maximum\n-- number of policies you want listed in the response. If there are additional\n-- policies beyond the maximum you specify, the 'Truncated' response element will\n-- be set to 'true.'",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkpMarker",
                        "name": "_lkpMarker",
                        "shape": "MarkerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'NextMarker' in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "listKeysResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lkrKeys",
                        "name": "_lkrKeys",
                        "shape": "KeyList",
                        "locationName": "Keys",
                        "documentation": "-- | A list of keys.",
                        "typeExposed": "[KeyListEntry]",
                        "type": "List \"Keys\" KeyListEntry"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkrNextMarker",
                        "name": "_lkrNextMarker",
                        "shape": "MarkerType",
                        "locationName": "NextMarker",
                        "documentation": "-- | If 'Truncated' is true, this value is present and contains the value to use for\n-- the 'Marker' request parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkrTruncated",
                        "name": "_lkrTruncated",
                        "shape": "BooleanType",
                        "locationName": "Truncated",
                        "documentation": "-- | A flag that indicates whether there are more items in the list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more keys in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 11,
                "name": "ListKeysResponse",
                "resultWrapper": null,
                "locationPad": 11,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lkrKeys",
                        "name": "_lkrKeys",
                        "shape": "KeyList",
                        "locationName": "Keys",
                        "documentation": "-- | A list of keys.",
                        "typeExposed": "[KeyListEntry]",
                        "type": "List \"Keys\" KeyListEntry"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkrNextMarker",
                        "name": "_lkrNextMarker",
                        "shape": "MarkerType",
                        "locationName": "NextMarker",
                        "documentation": "-- | If 'Truncated' is true, this value is present and contains the value to use for\n-- the 'Marker' request parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkrTruncated",
                        "name": "_lkrTruncated",
                        "shape": "BooleanType",
                        "locationName": "Truncated",
                        "documentation": "-- | A flag that indicates whether there are more items in the list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more keys in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lkrKeys",
                        "name": "_lkrKeys",
                        "shape": "KeyList",
                        "locationName": "Keys",
                        "documentation": "-- | A list of keys.",
                        "typeExposed": "[KeyListEntry]",
                        "type": "List \"Keys\" KeyListEntry"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkrNextMarker",
                        "name": "_lkrNextMarker",
                        "shape": "MarkerType",
                        "locationName": "NextMarker",
                        "documentation": "-- | If 'Truncated' is true, this value is present and contains the value to use for\n-- the 'Marker' request parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkrTruncated",
                        "name": "_lkrTruncated",
                        "shape": "BooleanType",
                        "locationName": "Truncated",
                        "documentation": "-- | A flag that indicates whether there are more items in the list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more keys in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_ListKeys.html",
            "namespace": "Network.AWS.KMS.ListKeys",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "ListKeys",
            "method": "post",
            "documentation": "-- | Lists the customer master keys.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 9,
                "ctor": "listKeys",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkLimit",
                        "name": "_lkLimit",
                        "shape": "LimitType",
                        "locationName": "Limit",
                        "documentation": "-- | Specify this parameter only when paginating results to indicate the maximum\n-- number of keys you want listed in the response. If there are additional keys\n-- beyond the maximum you specify, the 'Truncated' response element will be set to 'true.'",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkMarker",
                        "name": "_lkMarker",
                        "shape": "MarkerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'NextMarker' in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 7,
                "queryPad": 0,
                "name": "ListKeys",
                "query": [],
                "locationPad": 7,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkLimit",
                        "name": "_lkLimit",
                        "shape": "LimitType",
                        "locationName": "Limit",
                        "documentation": "-- | Specify this parameter only when paginating results to indicate the maximum\n-- number of keys you want listed in the response. If there are additional keys\n-- beyond the maximum you specify, the 'Truncated' response element will be set to 'true.'",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkMarker",
                        "name": "_lkMarker",
                        "shape": "MarkerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'NextMarker' in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkLimit",
                        "name": "_lkLimit",
                        "shape": "LimitType",
                        "locationName": "Limit",
                        "documentation": "-- | Specify this parameter only when paginating results to indicate the maximum\n-- number of keys you want listed in the response. If there are additional keys\n-- beyond the maximum you specify, the 'Truncated' response element will be set to 'true.'",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lkMarker",
                        "name": "_lkMarker",
                        "shape": "MarkerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'NextMarker' in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putKeyPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutKeyPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_PutKeyPolicy.html",
            "namespace": "Network.AWS.KMS.PutKeyPolicy",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "PutKeyPolicy",
            "method": "post",
            "documentation": "-- | Attaches a policy to the specified key.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "putKeyPolicy",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pkpKeyId",
                        "name": "_pkpKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pkpPolicyName",
                        "name": "_pkpPolicyName",
                        "shape": "PolicyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | Name of the policy to be attached. Currently, the only supported name is\n-- \"default\".",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pkpPolicy",
                        "name": "_pkpPolicy",
                        "shape": "PolicyType",
                        "locationName": "Policy",
                        "documentation": "-- | The policy, in JSON format, to be attached to the key.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pkpKeyId",
                        "name": "_pkpKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pkpPolicyName",
                        "name": "_pkpPolicyName",
                        "shape": "PolicyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | Name of the policy to be attached. Currently, the only supported name is\n-- \"default\".",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pkpPolicy",
                        "name": "_pkpPolicy",
                        "shape": "PolicyType",
                        "locationName": "Policy",
                        "documentation": "-- | The policy, in JSON format, to be attached to the key.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 11,
                "queryPad": 0,
                "name": "PutKeyPolicy",
                "query": [],
                "locationPad": 11,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pkpKeyId",
                        "name": "_pkpKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key. This can be an ARN, an alias, or a globally\n-- unique identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pkpPolicy",
                        "name": "_pkpPolicy",
                        "shape": "PolicyType",
                        "locationName": "Policy",
                        "documentation": "-- | The policy, in JSON format, to be attached to the key.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pkpPolicyName",
                        "name": "_pkpPolicyName",
                        "shape": "PolicyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | Name of the policy to be attached. Currently, the only supported name is\n-- \"default\".",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 18,
                "ctor": "reEncryptResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "rerCiphertextBlob",
                        "name": "_rerCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | The re-encrypted data.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "rerSourceKeyId",
                        "name": "_rerSourceKeyId",
                        "shape": "KeyIdType",
                        "locationName": "SourceKeyId",
                        "documentation": "-- | Unique identifier of the key used to originally encrypt the data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "rerKeyId",
                        "name": "_rerKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key used to re-encrypt the data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "name": "ReEncryptResponse",
                "resultWrapper": null,
                "locationPad": 15,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "rerCiphertextBlob",
                        "name": "_rerCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | The re-encrypted data.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "rerSourceKeyId",
                        "name": "_rerSourceKeyId",
                        "shape": "KeyIdType",
                        "locationName": "SourceKeyId",
                        "documentation": "-- | Unique identifier of the key used to originally encrypt the data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "rerKeyId",
                        "name": "_rerKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key used to re-encrypt the data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "rerCiphertextBlob",
                        "name": "_rerCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | The re-encrypted data.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "rerKeyId",
                        "name": "_rerKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key used to re-encrypt the data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "rerSourceKeyId",
                        "name": "_rerSourceKeyId",
                        "shape": "KeyIdType",
                        "locationName": "SourceKeyId",
                        "documentation": "-- | Unique identifier of the key used to originally encrypt the data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_ReEncrypt.html",
            "namespace": "Network.AWS.KMS.ReEncrypt",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "ReEncrypt",
            "method": "post",
            "documentation": "-- | Encrypts data on the server side with a new customer master key without\n-- exposing the plaintext of the data on the client side. The data is first\n-- decrypted and then encrypted. This operation can also be used to change the\n-- encryption context of a ciphertext.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 31,
                "ctor": "reEncrypt",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reCiphertextBlob",
                        "name": "_reCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | Ciphertext of the data to re-encrypt.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reSourceEncryptionContext",
                        "name": "_reSourceEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "SourceEncryptionContext",
                        "documentation": "-- | Encryption context used to encrypt and decrypt the data specified in the 'CiphertextBlob' parameter.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reDestinationKeyId",
                        "name": "_reDestinationKeyId",
                        "shape": "KeyIdType",
                        "locationName": "DestinationKeyId",
                        "documentation": "-- | Key identifier of the key used to re-encrypt the data.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reDestinationEncryptionContext",
                        "name": "_reDestinationEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "DestinationEncryptionContext",
                        "documentation": "-- | Encryption context to be used when the data is re-encrypted.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reGrantTokens",
                        "name": "_reGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | Grant tokens that identify the grants that have permissions for the\n-- encryption and decryption process.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reCiphertextBlob",
                        "name": "_reCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | Ciphertext of the data to re-encrypt.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reDestinationKeyId",
                        "name": "_reDestinationKeyId",
                        "shape": "KeyIdType",
                        "locationName": "DestinationKeyId",
                        "documentation": "-- | Key identifier of the key used to re-encrypt the data.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 29,
                "queryPad": 0,
                "name": "ReEncrypt",
                "query": [],
                "locationPad": 29,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reSourceEncryptionContext",
                        "name": "_reSourceEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "SourceEncryptionContext",
                        "documentation": "-- | Encryption context used to encrypt and decrypt the data specified in the 'CiphertextBlob' parameter.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reDestinationEncryptionContext",
                        "name": "_reDestinationEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "DestinationEncryptionContext",
                        "documentation": "-- | Encryption context to be used when the data is re-encrypted.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reGrantTokens",
                        "name": "_reGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | Grant tokens that identify the grants that have permissions for the\n-- encryption and decryption process.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reCiphertextBlob",
                        "name": "_reCiphertextBlob",
                        "shape": "CiphertextType",
                        "locationName": "CiphertextBlob",
                        "documentation": "-- | Ciphertext of the data to re-encrypt.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reDestinationEncryptionContext",
                        "name": "_reDestinationEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "DestinationEncryptionContext",
                        "documentation": "-- | Encryption context to be used when the data is re-encrypted.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reDestinationKeyId",
                        "name": "_reDestinationKeyId",
                        "shape": "KeyIdType",
                        "locationName": "DestinationKeyId",
                        "documentation": "-- | Key identifier of the key used to re-encrypt the data.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reGrantTokens",
                        "name": "_reGrantTokens",
                        "shape": "GrantTokenList",
                        "locationName": "GrantTokens",
                        "documentation": "-- | Grant tokens that identify the grants that have permissions for the\n-- encryption and decryption process.",
                        "typeExposed": "[Text]",
                        "type": "List \"GrantTokens\" Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "reSourceEncryptionContext",
                        "name": "_reSourceEncryptionContext",
                        "shape": "EncryptionContextType",
                        "locationName": "SourceEncryptionContext",
                        "documentation": "-- | Encryption context used to encrypt and decrypt the data specified in the 'CiphertextBlob' parameter.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "retireGrantResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "RetireGrantResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_RetireGrant.html",
            "namespace": "Network.AWS.KMS.RetireGrant",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "RetireGrant",
            "method": "post",
            "documentation": "-- | Retires a grant. You can retire a grant when you're done using it to clean\n-- up. You should revoke a grant when you intend to actively deny operations\n-- that depend on it.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "retireGrant",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": true,
                    "lens": "rgGrantToken",
                    "name": "_rgGrantToken",
                    "shape": "GrantTokenType",
                    "locationName": "GrantToken",
                    "documentation": "-- | Token that identifies the grant to be retired.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rgGrantToken",
                        "name": "_rgGrantToken",
                        "shape": "GrantTokenType",
                        "locationName": "GrantToken",
                        "documentation": "-- | Token that identifies the grant to be retired.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rgGrantToken",
                        "name": "_rgGrantToken",
                        "shape": "GrantTokenType",
                        "locationName": "GrantToken",
                        "documentation": "-- | Token that identifies the grant to be retired.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "RetireGrant",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rgGrantToken",
                        "name": "_rgGrantToken",
                        "shape": "GrantTokenType",
                        "locationName": "GrantToken",
                        "documentation": "-- | Token that identifies the grant to be retired.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "revokeGrantResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "RevokeGrantResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_RevokeGrant.html",
            "namespace": "Network.AWS.KMS.RevokeGrant",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "RevokeGrant",
            "method": "post",
            "documentation": "-- | Revokes a grant. You can revoke a grant to actively deny operations that\n-- depend on it.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 10,
                "ctor": "revokeGrant",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rgKeyId",
                        "name": "_rgKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key associated with the grant.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rgGrantId",
                        "name": "_rgGrantId",
                        "shape": "GrantIdType",
                        "locationName": "GrantId",
                        "documentation": "-- | Identifier of the grant to be revoked.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rgKeyId",
                        "name": "_rgKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key associated with the grant.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rgGrantId",
                        "name": "_rgGrantId",
                        "shape": "GrantIdType",
                        "locationName": "GrantId",
                        "documentation": "-- | Identifier of the grant to be revoked.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 8,
                "queryPad": 0,
                "name": "RevokeGrant",
                "query": [],
                "locationPad": 8,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rgGrantId",
                        "name": "_rgGrantId",
                        "shape": "GrantIdType",
                        "locationName": "GrantId",
                        "documentation": "-- | Identifier of the grant to be revoked.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rgKeyId",
                        "name": "_rgKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": "-- | Unique identifier of the key associated with the grant.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "KMS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateKeyDescriptionResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateKeyDescriptionResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kms/latest/APIReference/API_UpdateKeyDescription.html",
            "namespace": "Network.AWS.KMS.UpdateKeyDescription",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.KMS.Types"
            ],
            "pager": null,
            "name": "UpdateKeyDescription",
            "method": "post",
            "documentation": null,
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 15,
                "ctor": "updateKeyDescription",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ukdKeyId",
                        "name": "_ukdKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ukdDescription",
                        "name": "_ukdDescription",
                        "shape": "DescriptionType",
                        "locationName": "Description",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ukdKeyId",
                        "name": "_ukdKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ukdDescription",
                        "name": "_ukdDescription",
                        "shape": "DescriptionType",
                        "locationName": "Description",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 12,
                "queryPad": 0,
                "name": "UpdateKeyDescription",
                "query": [],
                "locationPad": 12,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ukdDescription",
                        "name": "_ukdDescription",
                        "shape": "DescriptionType",
                        "locationName": "Description",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ukdKeyId",
                        "name": "_ukdKeyId",
                        "shape": "KeyIdType",
                        "locationName": "KeyId",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        }
    ]
}