{
    "waiters": {
        "waiters": {},
        "namespace": "Network.AWS.IAM.Waiters",
        "imports": [
            "Network.AWS.IAM.Types"
        ]
    },
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "IAM",
        "error": "RESTError",
        "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/Welcome.html",
        "namespace": "Network.AWS.IAM",
        "protocol": "query",
        "imports": [
            "Network.AWS.IAM.AddClientIDToOpenIDConnectProvider",
            "Network.AWS.IAM.AddRoleToInstanceProfile",
            "Network.AWS.IAM.AddUserToGroup",
            "Network.AWS.IAM.AttachGroupPolicy",
            "Network.AWS.IAM.AttachRolePolicy",
            "Network.AWS.IAM.AttachUserPolicy",
            "Network.AWS.IAM.ChangePassword",
            "Network.AWS.IAM.CreateAccessKey",
            "Network.AWS.IAM.CreateAccountAlias",
            "Network.AWS.IAM.CreateGroup",
            "Network.AWS.IAM.CreateInstanceProfile",
            "Network.AWS.IAM.CreateLoginProfile",
            "Network.AWS.IAM.CreateOpenIDConnectProvider",
            "Network.AWS.IAM.CreatePolicy",
            "Network.AWS.IAM.CreatePolicyVersion",
            "Network.AWS.IAM.CreateRole",
            "Network.AWS.IAM.CreateSAMLProvider",
            "Network.AWS.IAM.CreateUser",
            "Network.AWS.IAM.CreateVirtualMFADevice",
            "Network.AWS.IAM.DeactivateMFADevice",
            "Network.AWS.IAM.DeleteAccessKey",
            "Network.AWS.IAM.DeleteAccountAlias",
            "Network.AWS.IAM.DeleteAccountPasswordPolicy",
            "Network.AWS.IAM.DeleteGroup",
            "Network.AWS.IAM.DeleteGroupPolicy",
            "Network.AWS.IAM.DeleteInstanceProfile",
            "Network.AWS.IAM.DeleteLoginProfile",
            "Network.AWS.IAM.DeleteOpenIDConnectProvider",
            "Network.AWS.IAM.DeletePolicy",
            "Network.AWS.IAM.DeletePolicyVersion",
            "Network.AWS.IAM.DeleteRole",
            "Network.AWS.IAM.DeleteRolePolicy",
            "Network.AWS.IAM.DeleteSAMLProvider",
            "Network.AWS.IAM.DeleteServerCertificate",
            "Network.AWS.IAM.DeleteSigningCertificate",
            "Network.AWS.IAM.DeleteUser",
            "Network.AWS.IAM.DeleteUserPolicy",
            "Network.AWS.IAM.DeleteVirtualMFADevice",
            "Network.AWS.IAM.DetachGroupPolicy",
            "Network.AWS.IAM.DetachRolePolicy",
            "Network.AWS.IAM.DetachUserPolicy",
            "Network.AWS.IAM.EnableMFADevice",
            "Network.AWS.IAM.GenerateCredentialReport",
            "Network.AWS.IAM.GetAccountAuthorizationDetails",
            "Network.AWS.IAM.GetAccountPasswordPolicy",
            "Network.AWS.IAM.GetAccountSummary",
            "Network.AWS.IAM.GetCredentialReport",
            "Network.AWS.IAM.GetGroup",
            "Network.AWS.IAM.GetGroupPolicy",
            "Network.AWS.IAM.GetInstanceProfile",
            "Network.AWS.IAM.GetLoginProfile",
            "Network.AWS.IAM.GetOpenIDConnectProvider",
            "Network.AWS.IAM.GetPolicy",
            "Network.AWS.IAM.GetPolicyVersion",
            "Network.AWS.IAM.GetRole",
            "Network.AWS.IAM.GetRolePolicy",
            "Network.AWS.IAM.GetSAMLProvider",
            "Network.AWS.IAM.GetServerCertificate",
            "Network.AWS.IAM.GetUser",
            "Network.AWS.IAM.GetUserPolicy",
            "Network.AWS.IAM.ListAccessKeys",
            "Network.AWS.IAM.ListAccountAliases",
            "Network.AWS.IAM.ListAttachedGroupPolicies",
            "Network.AWS.IAM.ListAttachedRolePolicies",
            "Network.AWS.IAM.ListAttachedUserPolicies",
            "Network.AWS.IAM.ListEntitiesForPolicy",
            "Network.AWS.IAM.ListGroupPolicies",
            "Network.AWS.IAM.ListGroups",
            "Network.AWS.IAM.ListGroupsForUser",
            "Network.AWS.IAM.ListInstanceProfiles",
            "Network.AWS.IAM.ListInstanceProfilesForRole",
            "Network.AWS.IAM.ListMFADevices",
            "Network.AWS.IAM.ListOpenIDConnectProviders",
            "Network.AWS.IAM.ListPolicies",
            "Network.AWS.IAM.ListPolicyVersions",
            "Network.AWS.IAM.ListRolePolicies",
            "Network.AWS.IAM.ListRoles",
            "Network.AWS.IAM.ListSAMLProviders",
            "Network.AWS.IAM.ListServerCertificates",
            "Network.AWS.IAM.ListSigningCertificates",
            "Network.AWS.IAM.ListUserPolicies",
            "Network.AWS.IAM.ListUsers",
            "Network.AWS.IAM.ListVirtualMFADevices",
            "Network.AWS.IAM.PutGroupPolicy",
            "Network.AWS.IAM.PutRolePolicy",
            "Network.AWS.IAM.PutUserPolicy",
            "Network.AWS.IAM.RemoveClientIDFromOpenIDConnectProvider",
            "Network.AWS.IAM.RemoveRoleFromInstanceProfile",
            "Network.AWS.IAM.RemoveUserFromGroup",
            "Network.AWS.IAM.ResyncMFADevice",
            "Network.AWS.IAM.SetDefaultPolicyVersion",
            "Network.AWS.IAM.Types",
            "Network.AWS.IAM.UpdateAccessKey",
            "Network.AWS.IAM.UpdateAccountPasswordPolicy",
            "Network.AWS.IAM.UpdateAssumeRolePolicy",
            "Network.AWS.IAM.UpdateGroup",
            "Network.AWS.IAM.UpdateLoginProfile",
            "Network.AWS.IAM.UpdateOpenIDConnectProviderThumbprint",
            "Network.AWS.IAM.UpdateSAMLProvider",
            "Network.AWS.IAM.UpdateServerCertificate",
            "Network.AWS.IAM.UpdateSigningCertificate",
            "Network.AWS.IAM.UpdateUser",
            "Network.AWS.IAM.UploadServerCertificate",
            "Network.AWS.IAM.UploadSigningCertificate"
        ],
        "name": "Amazon Identity and Access Management",
        "version": "2010-05-08",
        "documentation": "-- | AWS Identity and Access Management (IAM) enables you to securely control\n-- access to AWS services and resources for your users. Using IAM, you can\n-- create and manage AWS users and groups and use permissions to allow and deny\n-- their access to AWS resources.",
        "xmlNamespace": "https://iam.amazonaws.com/doc/2010-05-08/",
        "jsonVersion": null,
        "retryDelay": {
            "base": 5.0e-2,
            "attempts": 5,
            "growth": 2
        },
        "endpointPrefix": "iam",
        "retryPolicies": {
            "throttling": {
                "error": "Throttling",
                "code": 400
            },
            "service_unavailable": {
                "error": null,
                "code": 503
            },
            "general_server_error": {
                "error": null,
                "code": 500
            },
            "limit_exceeded": {
                "error": null,
                "code": 509
            }
        },
        "targetPrefix": null
    },
    "cabal": {
        "other": [],
        "library": "amazonka-iam",
        "abbrev": "IAM",
        "exposed": [
            "Network.AWS.IAM",
            "Network.AWS.IAM.AddClientIDToOpenIDConnectProvider",
            "Network.AWS.IAM.AddRoleToInstanceProfile",
            "Network.AWS.IAM.AddUserToGroup",
            "Network.AWS.IAM.AttachGroupPolicy",
            "Network.AWS.IAM.AttachRolePolicy",
            "Network.AWS.IAM.AttachUserPolicy",
            "Network.AWS.IAM.ChangePassword",
            "Network.AWS.IAM.CreateAccessKey",
            "Network.AWS.IAM.CreateAccountAlias",
            "Network.AWS.IAM.CreateGroup",
            "Network.AWS.IAM.CreateInstanceProfile",
            "Network.AWS.IAM.CreateLoginProfile",
            "Network.AWS.IAM.CreateOpenIDConnectProvider",
            "Network.AWS.IAM.CreatePolicy",
            "Network.AWS.IAM.CreatePolicyVersion",
            "Network.AWS.IAM.CreateRole",
            "Network.AWS.IAM.CreateSAMLProvider",
            "Network.AWS.IAM.CreateUser",
            "Network.AWS.IAM.CreateVirtualMFADevice",
            "Network.AWS.IAM.DeactivateMFADevice",
            "Network.AWS.IAM.DeleteAccessKey",
            "Network.AWS.IAM.DeleteAccountAlias",
            "Network.AWS.IAM.DeleteAccountPasswordPolicy",
            "Network.AWS.IAM.DeleteGroup",
            "Network.AWS.IAM.DeleteGroupPolicy",
            "Network.AWS.IAM.DeleteInstanceProfile",
            "Network.AWS.IAM.DeleteLoginProfile",
            "Network.AWS.IAM.DeleteOpenIDConnectProvider",
            "Network.AWS.IAM.DeletePolicy",
            "Network.AWS.IAM.DeletePolicyVersion",
            "Network.AWS.IAM.DeleteRole",
            "Network.AWS.IAM.DeleteRolePolicy",
            "Network.AWS.IAM.DeleteSAMLProvider",
            "Network.AWS.IAM.DeleteServerCertificate",
            "Network.AWS.IAM.DeleteSigningCertificate",
            "Network.AWS.IAM.DeleteUser",
            "Network.AWS.IAM.DeleteUserPolicy",
            "Network.AWS.IAM.DeleteVirtualMFADevice",
            "Network.AWS.IAM.DetachGroupPolicy",
            "Network.AWS.IAM.DetachRolePolicy",
            "Network.AWS.IAM.DetachUserPolicy",
            "Network.AWS.IAM.EnableMFADevice",
            "Network.AWS.IAM.GenerateCredentialReport",
            "Network.AWS.IAM.GetAccountAuthorizationDetails",
            "Network.AWS.IAM.GetAccountPasswordPolicy",
            "Network.AWS.IAM.GetAccountSummary",
            "Network.AWS.IAM.GetCredentialReport",
            "Network.AWS.IAM.GetGroup",
            "Network.AWS.IAM.GetGroupPolicy",
            "Network.AWS.IAM.GetInstanceProfile",
            "Network.AWS.IAM.GetLoginProfile",
            "Network.AWS.IAM.GetOpenIDConnectProvider",
            "Network.AWS.IAM.GetPolicy",
            "Network.AWS.IAM.GetPolicyVersion",
            "Network.AWS.IAM.GetRole",
            "Network.AWS.IAM.GetRolePolicy",
            "Network.AWS.IAM.GetSAMLProvider",
            "Network.AWS.IAM.GetServerCertificate",
            "Network.AWS.IAM.GetUser",
            "Network.AWS.IAM.GetUserPolicy",
            "Network.AWS.IAM.ListAccessKeys",
            "Network.AWS.IAM.ListAccountAliases",
            "Network.AWS.IAM.ListAttachedGroupPolicies",
            "Network.AWS.IAM.ListAttachedRolePolicies",
            "Network.AWS.IAM.ListAttachedUserPolicies",
            "Network.AWS.IAM.ListEntitiesForPolicy",
            "Network.AWS.IAM.ListGroupPolicies",
            "Network.AWS.IAM.ListGroups",
            "Network.AWS.IAM.ListGroupsForUser",
            "Network.AWS.IAM.ListInstanceProfiles",
            "Network.AWS.IAM.ListInstanceProfilesForRole",
            "Network.AWS.IAM.ListMFADevices",
            "Network.AWS.IAM.ListOpenIDConnectProviders",
            "Network.AWS.IAM.ListPolicies",
            "Network.AWS.IAM.ListPolicyVersions",
            "Network.AWS.IAM.ListRolePolicies",
            "Network.AWS.IAM.ListRoles",
            "Network.AWS.IAM.ListSAMLProviders",
            "Network.AWS.IAM.ListServerCertificates",
            "Network.AWS.IAM.ListSigningCertificates",
            "Network.AWS.IAM.ListUserPolicies",
            "Network.AWS.IAM.ListUsers",
            "Network.AWS.IAM.ListVirtualMFADevices",
            "Network.AWS.IAM.PutGroupPolicy",
            "Network.AWS.IAM.PutRolePolicy",
            "Network.AWS.IAM.PutUserPolicy",
            "Network.AWS.IAM.RemoveClientIDFromOpenIDConnectProvider",
            "Network.AWS.IAM.RemoveRoleFromInstanceProfile",
            "Network.AWS.IAM.RemoveUserFromGroup",
            "Network.AWS.IAM.ResyncMFADevice",
            "Network.AWS.IAM.SetDefaultPolicyVersion",
            "Network.AWS.IAM.Types",
            "Network.AWS.IAM.UpdateAccessKey",
            "Network.AWS.IAM.UpdateAccountPasswordPolicy",
            "Network.AWS.IAM.UpdateAssumeRolePolicy",
            "Network.AWS.IAM.UpdateGroup",
            "Network.AWS.IAM.UpdateLoginProfile",
            "Network.AWS.IAM.UpdateOpenIDConnectProviderThumbprint",
            "Network.AWS.IAM.UpdateSAMLProvider",
            "Network.AWS.IAM.UpdateServerCertificate",
            "Network.AWS.IAM.UpdateSigningCertificate",
            "Network.AWS.IAM.UpdateUser",
            "Network.AWS.IAM.UploadServerCertificate",
            "Network.AWS.IAM.UploadSigningCertificate"
        ],
        "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/Welcome.html",
        "protocol": "query",
        "name": "Amazon Identity and Access Management",
        "version": "0.3.0",
        "description": "AWS Identity and Access Management (IAM) enables you to securely control\naccess to AWS services and resources for your users. Using IAM, you can\ncreate and manage AWS users and groups and use permissions to allow and deny\ntheir access to AWS resources."
    },
    "types": {
        "namespace": "Network.AWS.IAM.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "policyRole",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "prRoleName",
                    "name": "_prRoleName",
                    "shape": "roleNameType",
                    "locationName": "RoleName",
                    "documentation": "-- | The name (friendly name, not ARN) identifying the role.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PolicyRole",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "prRoleName",
                        "name": "_prRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name (friendly name, not ARN) identifying the role.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "prRoleName",
                        "name": "_prRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name (friendly name, not ARN) identifying the role.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Assigned": "Assigned",
                    "Unassigned": "Unassigned",
                    "Any": "Any"
                },
                "valuePad": 11,
                "name": "AssignmentStatusType",
                "type": "nullary",
                "branchPad": 10
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 29,
                "ctor": "passwordPolicy",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PasswordPolicy",
                "locationPad": 27,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppMinimumPasswordLength",
                        "name": "_ppMinimumPasswordLength",
                        "shape": "minimumPasswordLengthType",
                        "locationName": "MinimumPasswordLength",
                        "documentation": "-- | Minimum length to require for IAM user passwords.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppRequireSymbols",
                        "name": "_ppRequireSymbols",
                        "shape": "booleanType",
                        "locationName": "RequireSymbols",
                        "documentation": "-- | Specifies whether to require symbols for IAM user passwords.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppRequireNumbers",
                        "name": "_ppRequireNumbers",
                        "shape": "booleanType",
                        "locationName": "RequireNumbers",
                        "documentation": "-- | Specifies whether to require numbers for IAM user passwords.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppRequireUppercaseCharacters",
                        "name": "_ppRequireUppercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireUppercaseCharacters",
                        "documentation": "-- | Specifies whether to require uppercase characters for IAM user passwords.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppRequireLowercaseCharacters",
                        "name": "_ppRequireLowercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireLowercaseCharacters",
                        "documentation": "-- | Specifies whether to require lowercase characters for IAM user passwords.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppAllowUsersToChangePassword",
                        "name": "_ppAllowUsersToChangePassword",
                        "shape": "booleanType",
                        "locationName": "AllowUsersToChangePassword",
                        "documentation": "-- | Specifies whether IAM users are allowed to change their own password.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppExpirePasswords",
                        "name": "_ppExpirePasswords",
                        "shape": "booleanType",
                        "locationName": "ExpirePasswords",
                        "documentation": "-- | Specifies whether IAM users are required to change their password after a\n-- specified number of days.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppMaxPasswordAge",
                        "name": "_ppMaxPasswordAge",
                        "shape": "maxPasswordAgeType",
                        "locationName": "MaxPasswordAge",
                        "documentation": "-- | The number of days that an IAM user password is valid.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppPasswordReusePrevention",
                        "name": "_ppPasswordReusePrevention",
                        "shape": "passwordReusePreventionType",
                        "locationName": "PasswordReusePrevention",
                        "documentation": "-- | Specifies the number of previous passwords that IAM users are prevented from\n-- reusing.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppHardExpiry",
                        "name": "_ppHardExpiry",
                        "shape": "booleanObjectType",
                        "locationName": "HardExpiry",
                        "documentation": "-- | Specifies whether IAM users are prevented from setting a new password after\n-- their password has expired.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppAllowUsersToChangePassword",
                        "name": "_ppAllowUsersToChangePassword",
                        "shape": "booleanType",
                        "locationName": "AllowUsersToChangePassword",
                        "documentation": "-- | Specifies whether IAM users are allowed to change their own password.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppExpirePasswords",
                        "name": "_ppExpirePasswords",
                        "shape": "booleanType",
                        "locationName": "ExpirePasswords",
                        "documentation": "-- | Specifies whether IAM users are required to change their password after a\n-- specified number of days.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppHardExpiry",
                        "name": "_ppHardExpiry",
                        "shape": "booleanObjectType",
                        "locationName": "HardExpiry",
                        "documentation": "-- | Specifies whether IAM users are prevented from setting a new password after\n-- their password has expired.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppMaxPasswordAge",
                        "name": "_ppMaxPasswordAge",
                        "shape": "maxPasswordAgeType",
                        "locationName": "MaxPasswordAge",
                        "documentation": "-- | The number of days that an IAM user password is valid.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppMinimumPasswordLength",
                        "name": "_ppMinimumPasswordLength",
                        "shape": "minimumPasswordLengthType",
                        "locationName": "MinimumPasswordLength",
                        "documentation": "-- | Minimum length to require for IAM user passwords.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppPasswordReusePrevention",
                        "name": "_ppPasswordReusePrevention",
                        "shape": "passwordReusePreventionType",
                        "locationName": "PasswordReusePrevention",
                        "documentation": "-- | Specifies the number of previous passwords that IAM users are prevented from\n-- reusing.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppRequireLowercaseCharacters",
                        "name": "_ppRequireLowercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireLowercaseCharacters",
                        "documentation": "-- | Specifies whether to require lowercase characters for IAM user passwords.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppRequireNumbers",
                        "name": "_ppRequireNumbers",
                        "shape": "booleanType",
                        "locationName": "RequireNumbers",
                        "documentation": "-- | Specifies whether to require numbers for IAM user passwords.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppRequireSymbols",
                        "name": "_ppRequireSymbols",
                        "shape": "booleanType",
                        "locationName": "RequireSymbols",
                        "documentation": "-- | Specifies whether to require symbols for IAM user passwords.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ppRequireUppercaseCharacters",
                        "name": "_ppRequireUppercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireUppercaseCharacters",
                        "documentation": "-- | Specifies whether to require uppercase characters for IAM user passwords.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 12,
                "ctor": "group",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gPath",
                        "name": "_gPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the group. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gGroupName",
                        "name": "_gGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The friendly name that identifies the group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gGroupId",
                        "name": "_gGroupId",
                        "shape": "idType",
                        "locationName": "GroupId",
                        "documentation": "-- | The stable and unique string identifying the group. For more information\n-- about IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gArn",
                        "name": "_gArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) specifying the group. For more information\n-- about ARNs and how to use them in policies, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /UsingIAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gCreateDate",
                        "name": "_gCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the group was created.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    }
                ],
                "contentPad": 0,
                "name": "Group",
                "locationPad": 11,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gArn",
                        "name": "_gArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) specifying the group. For more information\n-- about ARNs and how to use them in policies, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /UsingIAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gCreateDate",
                        "name": "_gCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the group was created.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gGroupId",
                        "name": "_gGroupId",
                        "shape": "idType",
                        "locationName": "GroupId",
                        "documentation": "-- | The stable and unique string identifying the group. For more information\n-- about IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gGroupName",
                        "name": "_gGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The friendly name that identifies the group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gPath",
                        "name": "_gPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the group. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 13,
                "ctor": "attachedPolicy",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "AttachedPolicy",
                "locationPad": 11,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "apPolicyName",
                        "name": "_apPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The friendly name of the attached policy.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "apPolicyArn",
                        "name": "_apPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "apPolicyArn",
                        "name": "_apPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "apPolicyName",
                        "name": "_apPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The friendly name of the attached policy.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 17,
                "ctor": "mfadevice",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mfadUserName",
                        "name": "_mfadUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The user with whom the MFA device is associated.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mfadSerialNumber",
                        "name": "_mfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | The serial number that uniquely identifies the MFA device. For virtual MFA\n-- devices, the serial number is the device ARN.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mfadEnableDate",
                        "name": "_mfadEnableDate",
                        "shape": "dateType",
                        "locationName": "EnableDate",
                        "documentation": "-- | The date when the MFA device was enabled for the user.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    }
                ],
                "contentPad": 0,
                "name": "MFADevice",
                "locationPad": 13,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mfadEnableDate",
                        "name": "_mfadEnableDate",
                        "shape": "dateType",
                        "locationName": "EnableDate",
                        "documentation": "-- | The date when the MFA device was enabled for the user.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mfadSerialNumber",
                        "name": "_mfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | The serial number that uniquely identifies the MFA device. For virtual MFA\n-- devices, the serial number is the device ARN.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mfadUserName",
                        "name": "_mfadUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The user with whom the MFA device is associated.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 19,
                "ctor": "policyVersion",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PolicyVersion",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pvDocument",
                        "name": "_pvDocument",
                        "shape": "policyDocumentType",
                        "locationName": "Document",
                        "documentation": "-- | The policy document.\n--\n-- The policy document is returned in the response to the 'GetPolicyVersion'\n-- operation. It is not included in the response to the 'ListPolicyVersions'\n-- operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pvVersionId",
                        "name": "_pvVersionId",
                        "shape": "policyVersionIdType",
                        "locationName": "VersionId",
                        "documentation": "-- | The identifier for the policy version.\n--\n-- Policy version identifiers always begin with 'v' (always lowercase). When a\n-- policy is created, the first policy version is 'v1'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pvIsDefaultVersion",
                        "name": "_pvIsDefaultVersion",
                        "shape": "booleanType",
                        "locationName": "IsDefaultVersion",
                        "documentation": "-- | Specifies whether the policy version is set as the policy's default version.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pvCreateDate",
                        "name": "_pvCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the policy version was\n-- created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pvCreateDate",
                        "name": "_pvCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the policy version was\n-- created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pvDocument",
                        "name": "_pvDocument",
                        "shape": "policyDocumentType",
                        "locationName": "Document",
                        "documentation": "-- | The policy document.\n--\n-- The policy document is returned in the response to the 'GetPolicyVersion'\n-- operation. It is not included in the response to the 'ListPolicyVersions'\n-- operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pvIsDefaultVersion",
                        "name": "_pvIsDefaultVersion",
                        "shape": "booleanType",
                        "locationName": "IsDefaultVersion",
                        "documentation": "-- | Specifies whether the policy version is set as the policy's default version.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pvVersionId",
                        "name": "_pvVersionId",
                        "shape": "policyVersionIdType",
                        "locationName": "VersionId",
                        "documentation": "-- | The identifier for the policy version.\n--\n-- Policy version identifiers always begin with 'v' (always lowercase). When a\n-- policy is created, the first policy version is 'v1'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 22,
                "ctor": "instanceProfile",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ipPath",
                        "name": "_ipPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the instance profile. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAMIdentifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ipInstanceProfileName",
                        "name": "_ipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "-- | The name identifying the instance profile.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ipInstanceProfileId",
                        "name": "_ipInstanceProfileId",
                        "shape": "idType",
                        "locationName": "InstanceProfileId",
                        "documentation": "-- | The stable and unique string identifying the instance profile. For more\n-- information about IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ipArn",
                        "name": "_ipArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) specifying the instance profile. For more\n-- information about ARNs and how to use them in policies, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ipCreateDate",
                        "name": "_ipCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date when the instance profile was created.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    }
                ],
                "contentPad": 0,
                "name": "InstanceProfile",
                "locationPad": 20,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ipRoles",
                        "name": "_ipRoles",
                        "shape": "roleListType",
                        "locationName": "Roles",
                        "documentation": "-- | The role associated with the instance profile.",
                        "typeExposed": "[Role]",
                        "type": "List \"member\" Role"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ipArn",
                        "name": "_ipArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) specifying the instance profile. For more\n-- information about ARNs and how to use them in policies, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ipCreateDate",
                        "name": "_ipCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date when the instance profile was created.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ipInstanceProfileId",
                        "name": "_ipInstanceProfileId",
                        "shape": "idType",
                        "locationName": "InstanceProfileId",
                        "documentation": "-- | The stable and unique string identifying the instance profile. For more\n-- information about IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ipInstanceProfileName",
                        "name": "_ipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "-- | The name identifying the instance profile.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ipPath",
                        "name": "_ipPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the instance profile. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAMIdentifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ipRoles",
                        "name": "_ipRoles",
                        "shape": "roleListType",
                        "locationName": "Roles",
                        "documentation": "-- | The role associated with the instance profile.",
                        "typeExposed": "[Role]",
                        "type": "List \"member\" Role"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 27,
                "ctor": "roleDetail",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "RoleDetail",
                "locationPad": 25,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rdPath",
                        "name": "_rdPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the role. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rdRoleName",
                        "name": "_rdRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The friendly name that identifies the role.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rdRoleId",
                        "name": "_rdRoleId",
                        "shape": "idType",
                        "locationName": "RoleId",
                        "documentation": "-- | The stable and unique string identifying the role. For more information about\n-- IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rdArn",
                        "name": "_rdArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rdCreateDate",
                        "name": "_rdCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the role was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rdAssumeRolePolicyDocument",
                        "name": "_rdAssumeRolePolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "AssumeRolePolicyDocument",
                        "documentation": "-- | The trust policy that grants permission to assume the role.\n--\n-- The returned policy is URL-encoded according to \u003chttp://www.faqs.org/rfcs/rfc3986.html RFC 3986\u003e.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rdInstanceProfileList",
                        "name": "_rdInstanceProfileList",
                        "shape": "instanceProfileListType",
                        "locationName": "InstanceProfileList",
                        "documentation": null,
                        "typeExposed": "[InstanceProfile]",
                        "type": "List \"member\" InstanceProfile"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rdRolePolicyList",
                        "name": "_rdRolePolicyList",
                        "shape": "policyDetailListType",
                        "locationName": "RolePolicyList",
                        "documentation": "-- | A list of the role's access (permissions) policies.",
                        "typeExposed": "[PolicyDetail]",
                        "type": "List \"member\" PolicyDetail"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rdArn",
                        "name": "_rdArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rdAssumeRolePolicyDocument",
                        "name": "_rdAssumeRolePolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "AssumeRolePolicyDocument",
                        "documentation": "-- | The trust policy that grants permission to assume the role.\n--\n-- The returned policy is URL-encoded according to \u003chttp://www.faqs.org/rfcs/rfc3986.html RFC 3986\u003e.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rdCreateDate",
                        "name": "_rdCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the role was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rdInstanceProfileList",
                        "name": "_rdInstanceProfileList",
                        "shape": "instanceProfileListType",
                        "locationName": "InstanceProfileList",
                        "documentation": null,
                        "typeExposed": "[InstanceProfile]",
                        "type": "List \"member\" InstanceProfile"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rdPath",
                        "name": "_rdPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the role. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rdRoleId",
                        "name": "_rdRoleId",
                        "shape": "idType",
                        "locationName": "RoleId",
                        "documentation": "-- | The stable and unique string identifying the role. For more information about\n-- IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rdRoleName",
                        "name": "_rdRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The friendly name that identifies the role.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rdRolePolicyList",
                        "name": "_rdRolePolicyList",
                        "shape": "policyDetailListType",
                        "locationName": "RolePolicyList",
                        "documentation": "-- | A list of the role's access (permissions) policies.",
                        "typeExposed": "[PolicyDetail]",
                        "type": "List \"member\" PolicyDetail"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "TextCsv": "text/csv"
                },
                "valuePad": 9,
                "name": "ReportFormatType",
                "type": "nullary",
                "branchPad": 7
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 25,
                "ctor": "serverCertificateMetadata",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "scmPath",
                        "name": "_scmPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the server certificate. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "scmServerCertificateName",
                        "name": "_scmServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "-- | The name that identifies the server certificate.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "scmServerCertificateId",
                        "name": "_scmServerCertificateId",
                        "shape": "idType",
                        "locationName": "ServerCertificateId",
                        "documentation": "-- | The stable and unique string identifying the server certificate. For more\n-- information about IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "scmArn",
                        "name": "_scmArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) specifying the server certificate. For more\n-- information about ARNs and how to use them in policies, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "ServerCertificateMetadata",
                "locationPad": 22,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "scmUploadDate",
                        "name": "_scmUploadDate",
                        "shape": "dateType",
                        "locationName": "UploadDate",
                        "documentation": "-- | The date when the server certificate was uploaded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "scmExpiration",
                        "name": "_scmExpiration",
                        "shape": "dateType",
                        "locationName": "Expiration",
                        "documentation": "-- | The date on which the certificate is set to expire.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "scmArn",
                        "name": "_scmArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) specifying the server certificate. For more\n-- information about ARNs and how to use them in policies, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "scmExpiration",
                        "name": "_scmExpiration",
                        "shape": "dateType",
                        "locationName": "Expiration",
                        "documentation": "-- | The date on which the certificate is set to expire.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "scmPath",
                        "name": "_scmPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the server certificate. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "scmServerCertificateId",
                        "name": "_scmServerCertificateId",
                        "shape": "idType",
                        "locationName": "ServerCertificateId",
                        "documentation": "-- | The stable and unique string identifying the server certificate. For more\n-- information about IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "scmServerCertificateName",
                        "name": "_scmServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "-- | The name that identifies the server certificate.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "scmUploadDate",
                        "name": "_scmUploadDate",
                        "shape": "dateType",
                        "locationName": "UploadDate",
                        "documentation": "-- | The date when the server certificate was uploaded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "openIDConnectProviderListEntry",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "oidcpleArn",
                    "name": "_oidcpleArn",
                    "shape": "arnType",
                    "locationName": "Arn",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "OpenIDConnectProviderListEntry",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "oidcpleArn",
                        "name": "_oidcpleArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "oidcpleArn",
                        "name": "_oidcpleArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "loginProfile",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lpUserName",
                        "name": "_lpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user, which can be used for signing in to the AWS Management\n-- Console.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lpCreateDate",
                        "name": "_lpCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date when the password for the user was created.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    }
                ],
                "contentPad": 0,
                "name": "LoginProfile",
                "locationPad": 22,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpPasswordResetRequired",
                        "name": "_lpPasswordResetRequired",
                        "shape": "booleanType",
                        "locationName": "PasswordResetRequired",
                        "documentation": "-- | Specifies whether the user is required to set a new password on next sign-in.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lpCreateDate",
                        "name": "_lpCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date when the password for the user was created.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpPasswordResetRequired",
                        "name": "_lpPasswordResetRequired",
                        "shape": "booleanType",
                        "locationName": "PasswordResetRequired",
                        "documentation": "-- | Specifies whether the user is required to set a new password on next sign-in.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lpUserName",
                        "name": "_lpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user, which can be used for signing in to the AWS Management\n-- Console.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "ETRole": "Role",
                    "ETUser": "User",
                    "ETGroup": "Group"
                },
                "valuePad": 6,
                "name": "EntityType",
                "type": "nullary",
                "branchPad": 7
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "AttachedPoliciesPerUserQuota": "AttachedPoliciesPerUserQuota",
                    "UsersQuota": "UsersQuota",
                    "Groups": "Groups",
                    "GroupsQuota": "GroupsQuota",
                    "Users": "Users",
                    "MFADevicesInUse": "MFADevicesInUse",
                    "PolicyVersionsInUse": "PolicyVersionsInUse",
                    "SigningCertificatesPerUserQuota": "SigningCertificatesPerUserQuota",
                    "PoliciesQuota": "PoliciesQuota",
                    "AccessKeysPerUserQuota": "AccessKeysPerUserQuota",
                    "PolicySizeQuota": "PolicySizeQuota",
                    "ServerCertificates": "ServerCertificates",
                    "AttachedPoliciesPerRoleQuota": "AttachedPoliciesPerRoleQuota",
                    "GroupsPerUserQuota": "GroupsPerUserQuota",
                    "GroupPolicySizeQuota": "GroupPolicySizeQuota",
                    "AccountSigningCertificatesPresent": "AccountSigningCertificatesPresent",
                    "UserPolicySizeQuota": "UserPolicySizeQuota",
                    "AttachedPoliciesPerGroupQuota": "AttachedPoliciesPerGroupQuota",
                    "AccountAccessKeysPresent": "AccountAccessKeysPresent",
                    "ServerCertificatesQuota": "ServerCertificatesQuota",
                    "VersionsPerPolicyQuota": "VersionsPerPolicyQuota",
                    "PolicyVersionsInUseQuota": "PolicyVersionsInUseQuota",
                    "Policies": "Policies",
                    "AccountMFAEnabled": "AccountMFAEnabled",
                    "MFADevices": "MFADevices"
                },
                "valuePad": 34,
                "name": "SummaryKeyType",
                "type": "nullary",
                "branchPad": 33
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "groupDetail",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "GroupDetail",
                "locationPad": 16,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gdPath",
                        "name": "_gdPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the group. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gdGroupName",
                        "name": "_gdGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The friendly name that identifies the group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gdGroupId",
                        "name": "_gdGroupId",
                        "shape": "idType",
                        "locationName": "GroupId",
                        "documentation": "-- | The stable and unique string identifying the group. For more information\n-- about IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gdArn",
                        "name": "_gdArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gdCreateDate",
                        "name": "_gdCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the group was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gdGroupPolicyList",
                        "name": "_gdGroupPolicyList",
                        "shape": "policyDetailListType",
                        "locationName": "GroupPolicyList",
                        "documentation": "-- | A list of the group's policies.",
                        "typeExposed": "[PolicyDetail]",
                        "type": "List \"member\" PolicyDetail"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gdArn",
                        "name": "_gdArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gdCreateDate",
                        "name": "_gdCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the group was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gdGroupId",
                        "name": "_gdGroupId",
                        "shape": "idType",
                        "locationName": "GroupId",
                        "documentation": "-- | The stable and unique string identifying the group. For more information\n-- about IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gdGroupName",
                        "name": "_gdGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The friendly name that identifies the group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gdGroupPolicyList",
                        "name": "_gdGroupPolicyList",
                        "shape": "policyDetailListType",
                        "locationName": "GroupPolicyList",
                        "documentation": "-- | A list of the group's policies.",
                        "typeExposed": "[PolicyDetail]",
                        "type": "List \"member\" PolicyDetail"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gdPath",
                        "name": "_gdPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the group. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Inprogress": "INPROGRESS",
                    "Started": "STARTED",
                    "Complete": "COMPLETE"
                },
                "valuePad": 11,
                "name": "ReportStateType",
                "type": "nullary",
                "branchPad": 10
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "user",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uPath",
                        "name": "_uPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the user. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uUserName",
                        "name": "_uUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The friendly name identifying the user.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uUserId",
                        "name": "_uUserId",
                        "shape": "idType",
                        "locationName": "UserId",
                        "documentation": "-- | The stable and unique string identifying the user. For more information about\n-- IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uArn",
                        "name": "_uArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) that identifies the user. For more information\n-- about ARNs and how to use ARNs in policies, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /UsingIAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uCreateDate",
                        "name": "_uCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the user was created.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    }
                ],
                "contentPad": 0,
                "name": "User",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uPasswordLastUsed",
                        "name": "_uPasswordLastUsed",
                        "shape": "dateType",
                        "locationName": "PasswordLastUsed",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the user's password was\n-- last used to sign in to an AWS website. For a list of AWS websites that\n-- capture a user's last sign-in time, see the \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html Credential Reports\u003e topic in the /Using IAM/ guide. If a password is used more than once in a five-minute span, only the\n-- first use is returned in this field. When the user does not have a password,\n-- this field is null (not present). When a user's password exists but has never\n-- been used, or when there is no sign-in data associated with the user, this\n-- field is null (not present).\n--\n-- This value is returned only in the 'GetUser' and 'ListUsers' actions.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uArn",
                        "name": "_uArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) that identifies the user. For more information\n-- about ARNs and how to use ARNs in policies, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /UsingIAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uCreateDate",
                        "name": "_uCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the user was created.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uPasswordLastUsed",
                        "name": "_uPasswordLastUsed",
                        "shape": "dateType",
                        "locationName": "PasswordLastUsed",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the user's password was\n-- last used to sign in to an AWS website. For a list of AWS websites that\n-- capture a user's last sign-in time, see the \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html Credential Reports\u003e topic in the /Using IAM/ guide. If a password is used more than once in a five-minute span, only the\n-- first use is returned in this field. When the user does not have a password,\n-- this field is null (not present). When a user's password exists but has never\n-- been used, or when there is no sign-in data associated with the user, this\n-- field is null (not present).\n--\n-- This value is returned only in the 'GetUser' and 'ListUsers' actions.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uPath",
                        "name": "_uPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the user. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uUserId",
                        "name": "_uUserId",
                        "shape": "idType",
                        "locationName": "UserId",
                        "documentation": "-- | The stable and unique string identifying the user. For more information about\n-- IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uUserName",
                        "name": "_uUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The friendly name identifying the user.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 17,
                "ctor": "policyDetail",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PolicyDetail",
                "locationPad": 15,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pdPolicyName",
                        "name": "_pdPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pdPolicyDocument",
                        "name": "_pdPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.\n--\n-- The returned policy is URL-encoded according to \u003chttp://www.faqs.org/rfcs/rfc3986.html RFC 3986\u003e.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pdPolicyDocument",
                        "name": "_pdPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.\n--\n-- The returned policy is URL-encoded according to \u003chttp://www.faqs.org/rfcs/rfc3986.html RFC 3986\u003e.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pdPolicyName",
                        "name": "_pdPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Inactive": "Inactive",
                    "Active": "Active"
                },
                "valuePad": 9,
                "name": "StatusType",
                "type": "nullary",
                "branchPad": 8
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "samlproviderListEntry",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "SAMLProviderListEntry",
                "locationPad": 11,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "samlpleArn",
                        "name": "_samlpleArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "samlpleValidUntil",
                        "name": "_samlpleValidUntil",
                        "shape": "dateType",
                        "locationName": "ValidUntil",
                        "documentation": "-- | The expiration date and time for the SAML provider.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "samlpleCreateDate",
                        "name": "_samlpleCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time when the SAML provider was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "samlpleArn",
                        "name": "_samlpleArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "samlpleCreateDate",
                        "name": "_samlpleCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time when the SAML provider was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "samlpleValidUntil",
                        "name": "_samlpleValidUntil",
                        "shape": "dateType",
                        "locationName": "ValidUntil",
                        "documentation": "-- | The expiration date and time for the SAML provider.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 26,
                "ctor": "role",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rPath",
                        "name": "_rPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the role. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rRoleName",
                        "name": "_rRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The friendly name that identifies the role.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rRoleId",
                        "name": "_rRoleId",
                        "shape": "idType",
                        "locationName": "RoleId",
                        "documentation": "-- | The stable and unique string identifying the role. For more information\n-- about IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rArn",
                        "name": "_rArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) specifying the role. For more information\n-- about ARNs and how to use them in policies, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /UsingIAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rCreateDate",
                        "name": "_rCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the role was created.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    }
                ],
                "contentPad": 0,
                "name": "Role",
                "locationPad": 25,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rAssumeRolePolicyDocument",
                        "name": "_rAssumeRolePolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "AssumeRolePolicyDocument",
                        "documentation": "-- | The policy that grants an entity permission to assume the role.\n--\n-- The returned policy is URL-encoded according to \u003chttp://www.faqs.org/rfcs/rfc3986.html RFC 3986\u003e.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rArn",
                        "name": "_rArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) specifying the role. For more information\n-- about ARNs and how to use them in policies, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /UsingIAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rAssumeRolePolicyDocument",
                        "name": "_rAssumeRolePolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "AssumeRolePolicyDocument",
                        "documentation": "-- | The policy that grants an entity permission to assume the role.\n--\n-- The returned policy is URL-encoded according to \u003chttp://www.faqs.org/rfcs/rfc3986.html RFC 3986\u003e.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rCreateDate",
                        "name": "_rCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the role was created.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rPath",
                        "name": "_rPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the role. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rRoleId",
                        "name": "_rRoleId",
                        "shape": "idType",
                        "locationName": "RoleId",
                        "documentation": "-- | The stable and unique string identifying the role. For more information\n-- about IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rRoleName",
                        "name": "_rRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The friendly name that identifies the role.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "policyGroup",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "pgGroupName",
                    "name": "_pgGroupName",
                    "shape": "groupNameType",
                    "locationName": "GroupName",
                    "documentation": "-- | The name (friendly name, not ARN) identifying the group.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PolicyGroup",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pgGroupName",
                        "name": "_pgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name (friendly name, not ARN) identifying the group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pgGroupName",
                        "name": "_pgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name (friendly name, not ARN) identifying the group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Local": "Local",
                    "Aws": "AWS",
                    "All": "All"
                },
                "valuePad": 6,
                "name": "PolicyScopeType",
                "type": "nullary",
                "branchPad": 5
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 17,
                "ctor": "userDetail",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "UserDetail",
                "locationPad": 15,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "udPath",
                        "name": "_udPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the user. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "udUserName",
                        "name": "_udUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The friendly name identifying the user.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "udUserId",
                        "name": "_udUserId",
                        "shape": "idType",
                        "locationName": "UserId",
                        "documentation": "-- | The stable and unique string identifying the user. For more information about\n-- IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "udArn",
                        "name": "_udArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "udCreateDate",
                        "name": "_udCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the user was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "udUserPolicyList",
                        "name": "_udUserPolicyList",
                        "shape": "policyDetailListType",
                        "locationName": "UserPolicyList",
                        "documentation": "-- | A list of the user's policies.",
                        "typeExposed": "[PolicyDetail]",
                        "type": "List \"member\" PolicyDetail"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "udGroupList",
                        "name": "_udGroupList",
                        "shape": "groupNameListType",
                        "locationName": "GroupList",
                        "documentation": "-- | A list of IAM groups that the user is in.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "udArn",
                        "name": "_udArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "udCreateDate",
                        "name": "_udCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the user was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "udGroupList",
                        "name": "_udGroupList",
                        "shape": "groupNameListType",
                        "locationName": "GroupList",
                        "documentation": "-- | A list of IAM groups that the user is in.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "udPath",
                        "name": "_udPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the user. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "udUserId",
                        "name": "_udUserId",
                        "shape": "idType",
                        "locationName": "UserId",
                        "documentation": "-- | The stable and unique string identifying the user. For more information about\n-- IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "udUserName",
                        "name": "_udUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The friendly name identifying the user.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "udUserPolicyList",
                        "name": "_udUserPolicyList",
                        "shape": "policyDetailListType",
                        "locationName": "UserPolicyList",
                        "documentation": "-- | A list of the user's policies.",
                        "typeExposed": "[PolicyDetail]",
                        "type": "List \"member\" PolicyDetail"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "policy",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Policy",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pPolicyName",
                        "name": "_pPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The friendly name (not ARN) identifying the policy.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pPolicyId",
                        "name": "_pPolicyId",
                        "shape": "idType",
                        "locationName": "PolicyId",
                        "documentation": "-- | The stable and unique string identifying the policy.\n--\n-- For more information about IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pArn",
                        "name": "_pArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pPath",
                        "name": "_pPath",
                        "shape": "policyPathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the policy.\n--\n-- For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pDefaultVersionId",
                        "name": "_pDefaultVersionId",
                        "shape": "policyVersionIdType",
                        "locationName": "DefaultVersionId",
                        "documentation": "-- | The identifier for the version of the policy that is set as the default\n-- version.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pAttachmentCount",
                        "name": "_pAttachmentCount",
                        "shape": "attachmentCountType",
                        "locationName": "AttachmentCount",
                        "documentation": "-- | The number of entities (users, groups, and roles) that the policy is attached\n-- to.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pIsAttachable",
                        "name": "_pIsAttachable",
                        "shape": "booleanType",
                        "locationName": "IsAttachable",
                        "documentation": "-- | Specifies whether the policy can be attached to an IAM user, group, or role.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pDescription",
                        "name": "_pDescription",
                        "shape": "policyDescriptionType",
                        "locationName": "Description",
                        "documentation": "-- | A friendly description of the policy.\n--\n-- This element is included in the response to the 'GetPolicy' operation. It is\n-- not included in the response to the 'ListPolicies' operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pCreateDate",
                        "name": "_pCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the policy was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pUpdateDate",
                        "name": "_pUpdateDate",
                        "shape": "dateType",
                        "locationName": "UpdateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the policy was last\n-- updated.\n--\n-- When a policy has only one version, this field contains the date and time\n-- when the policy was created. When a policy has more than one version, this\n-- field contains the date and time when the most recent policy version was\n-- created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pArn",
                        "name": "_pArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pAttachmentCount",
                        "name": "_pAttachmentCount",
                        "shape": "attachmentCountType",
                        "locationName": "AttachmentCount",
                        "documentation": "-- | The number of entities (users, groups, and roles) that the policy is attached\n-- to.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pCreateDate",
                        "name": "_pCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the policy was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pDefaultVersionId",
                        "name": "_pDefaultVersionId",
                        "shape": "policyVersionIdType",
                        "locationName": "DefaultVersionId",
                        "documentation": "-- | The identifier for the version of the policy that is set as the default\n-- version.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pDescription",
                        "name": "_pDescription",
                        "shape": "policyDescriptionType",
                        "locationName": "Description",
                        "documentation": "-- | A friendly description of the policy.\n--\n-- This element is included in the response to the 'GetPolicy' operation. It is\n-- not included in the response to the 'ListPolicies' operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pIsAttachable",
                        "name": "_pIsAttachable",
                        "shape": "booleanType",
                        "locationName": "IsAttachable",
                        "documentation": "-- | Specifies whether the policy can be attached to an IAM user, group, or role.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pPath",
                        "name": "_pPath",
                        "shape": "policyPathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the policy.\n--\n-- For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pPolicyId",
                        "name": "_pPolicyId",
                        "shape": "idType",
                        "locationName": "PolicyId",
                        "documentation": "-- | The stable and unique string identifying the policy.\n--\n-- For more information about IDs, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pPolicyName",
                        "name": "_pPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The friendly name (not ARN) identifying the policy.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pUpdateDate",
                        "name": "_pUpdateDate",
                        "shape": "dateType",
                        "locationName": "UpdateDate",
                        "documentation": "-- | The date and time, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601 date-time format\u003e, when the policy was last\n-- updated.\n--\n-- When a policy has only one version, this field contains the date and time\n-- when the policy was created. When a policy has more than one version, this\n-- field contains the date and time when the most recent policy version was\n-- created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 28,
                "ctor": "serverCertificate",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "scServerCertificateMetadata",
                        "name": "_scServerCertificateMetadata",
                        "shape": "ServerCertificateMetadata",
                        "locationName": "ServerCertificateMetadata",
                        "documentation": "-- | The meta information of the server certificate, such as its name, path, ID,\n-- and ARN.",
                        "typeExposed": "ServerCertificateMetadata",
                        "type": "ServerCertificateMetadata"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "scCertificateBody",
                        "name": "_scCertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "-- | The contents of the public key certificate.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "ServerCertificate",
                "locationPad": 26,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "scCertificateChain",
                        "name": "_scCertificateChain",
                        "shape": "certificateChainType",
                        "locationName": "CertificateChain",
                        "documentation": "-- | The contents of the public key certificate chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "scCertificateBody",
                        "name": "_scCertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "-- | The contents of the public key certificate.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "scCertificateChain",
                        "name": "_scCertificateChain",
                        "shape": "certificateChainType",
                        "locationName": "CertificateChain",
                        "documentation": "-- | The contents of the public key certificate chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "scServerCertificateMetadata",
                        "name": "_scServerCertificateMetadata",
                        "shape": "ServerCertificateMetadata",
                        "locationName": "ServerCertificateMetadata",
                        "documentation": "-- | The meta information of the server certificate, such as its name, path, ID,\n-- and ARN.",
                        "typeExposed": "ServerCertificateMetadata",
                        "type": "ServerCertificateMetadata"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "accessKey",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "akUserName",
                        "name": "_akUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the IAM user that the access key is associated with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "akAccessKeyId",
                        "name": "_akAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "-- | The ID for this access key.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "akStatus",
                        "name": "_akStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "-- | The status of the access key. 'Active' means the key is valid for API calls,\n-- while 'Inactive' means it is not.",
                        "typeExposed": "StatusType",
                        "type": "StatusType"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "akSecretAccessKey",
                        "name": "_akSecretAccessKey",
                        "shape": "accessKeySecretType",
                        "locationName": "SecretAccessKey",
                        "documentation": "-- | The secret key used to sign requests.",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    }
                ],
                "contentPad": 0,
                "name": "AccessKey",
                "locationPad": 16,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "akCreateDate",
                        "name": "_akCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date when the access key was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "akAccessKeyId",
                        "name": "_akAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "-- | The ID for this access key.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "akCreateDate",
                        "name": "_akCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date when the access key was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "akSecretAccessKey",
                        "name": "_akSecretAccessKey",
                        "shape": "accessKeySecretType",
                        "locationName": "SecretAccessKey",
                        "documentation": "-- | The secret key used to sign requests.",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "akStatus",
                        "name": "_akStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "-- | The status of the access key. 'Active' means the key is valid for API calls,\n-- while 'Inactive' means it is not.",
                        "typeExposed": "StatusType",
                        "type": "StatusType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "akUserName",
                        "name": "_akUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the IAM user that the access key is associated with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 22,
                "ctor": "virtualMFADevice",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "vmfadSerialNumber",
                        "name": "_vmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | The serial number associated with 'VirtualMFADevice'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "VirtualMFADevice",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "vmfadBase32StringSeed",
                        "name": "_vmfadBase32StringSeed",
                        "shape": "BootstrapDatum",
                        "locationName": "Base32StringSeed",
                        "documentation": "-- | The Base32 seed defined as specified in \u003chttp://www.ietf.org/rfc/rfc3548.txt RFC3548\u003e. The 'Base32StringSeed' is\n-- Base64-encoded.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "vmfadQRCodePNG",
                        "name": "_vmfadQRCodePNG",
                        "shape": "BootstrapDatum",
                        "locationName": "QRCodePNG",
                        "documentation": "-- | A QR code PNG image that encodes 'otpauth://totp/$virtualMFADeviceName@$AccountName?secret=$Base32String' where '$virtualMFADeviceName' is one of the create call arguments, 'AccountName'\n-- is the user name if set (otherwise, the account ID otherwise), and 'Base32String' is the seed in Base32 format. The 'Base32String' value is Base64-encoded.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "vmfadUser",
                        "name": "_vmfadUser",
                        "shape": "User",
                        "locationName": "User",
                        "documentation": null,
                        "typeExposed": "Maybe User",
                        "type": "Maybe User"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "vmfadEnableDate",
                        "name": "_vmfadEnableDate",
                        "shape": "dateType",
                        "locationName": "EnableDate",
                        "documentation": "-- | The date and time on which the virtual MFA device was enabled.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "vmfadBase32StringSeed",
                        "name": "_vmfadBase32StringSeed",
                        "shape": "BootstrapDatum",
                        "locationName": "Base32StringSeed",
                        "documentation": "-- | The Base32 seed defined as specified in \u003chttp://www.ietf.org/rfc/rfc3548.txt RFC3548\u003e. The 'Base32StringSeed' is\n-- Base64-encoded.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "vmfadEnableDate",
                        "name": "_vmfadEnableDate",
                        "shape": "dateType",
                        "locationName": "EnableDate",
                        "documentation": "-- | The date and time on which the virtual MFA device was enabled.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "vmfadQRCodePNG",
                        "name": "_vmfadQRCodePNG",
                        "shape": "BootstrapDatum",
                        "locationName": "QRCodePNG",
                        "documentation": "-- | A QR code PNG image that encodes 'otpauth://totp/$virtualMFADeviceName@$AccountName?secret=$Base32String' where '$virtualMFADeviceName' is one of the create call arguments, 'AccountName'\n-- is the user name if set (otherwise, the account ID otherwise), and 'Base32String' is the seed in Base32 format. The 'Base32String' value is Base64-encoded.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "vmfadSerialNumber",
                        "name": "_vmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | The serial number associated with 'VirtualMFADevice'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "vmfadUser",
                        "name": "_vmfadUser",
                        "shape": "User",
                        "locationName": "User",
                        "documentation": null,
                        "typeExposed": "Maybe User",
                        "type": "Maybe User"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 19,
                "ctor": "signingCertificate",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sc1UserName",
                        "name": "_sc1UserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user the signing certificate is associated with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sc1CertificateId",
                        "name": "_sc1CertificateId",
                        "shape": "certificateIdType",
                        "locationName": "CertificateId",
                        "documentation": "-- | The ID for the signing certificate.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sc1CertificateBody",
                        "name": "_sc1CertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "-- | The contents of the signing certificate.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sc1Status",
                        "name": "_sc1Status",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "-- | The status of the signing certificate. 'Active' means the key is valid for API\n-- calls, while 'Inactive' means it is not.",
                        "typeExposed": "StatusType",
                        "type": "StatusType"
                    }
                ],
                "contentPad": 0,
                "name": "SigningCertificate",
                "locationPad": 16,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sc1UploadDate",
                        "name": "_sc1UploadDate",
                        "shape": "dateType",
                        "locationName": "UploadDate",
                        "documentation": "-- | The date when the signing certificate was uploaded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sc1CertificateBody",
                        "name": "_sc1CertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "-- | The contents of the signing certificate.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sc1CertificateId",
                        "name": "_sc1CertificateId",
                        "shape": "certificateIdType",
                        "locationName": "CertificateId",
                        "documentation": "-- | The ID for the signing certificate.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sc1Status",
                        "name": "_sc1Status",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "-- | The status of the signing certificate. 'Active' means the key is valid for API\n-- calls, while 'Inactive' means it is not.",
                        "typeExposed": "StatusType",
                        "type": "StatusType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sc1UploadDate",
                        "name": "_sc1UploadDate",
                        "shape": "dateType",
                        "locationName": "UploadDate",
                        "documentation": "-- | The date when the signing certificate was uploaded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sc1UserName",
                        "name": "_sc1UserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user the signing certificate is associated with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "accessKeyMetadata",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "AccessKeyMetadata",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "akmUserName",
                        "name": "_akmUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the IAM user that the key is associated with.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "akmAccessKeyId",
                        "name": "_akmAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "-- | The ID for this access key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "akmStatus",
                        "name": "_akmStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "-- | The status of the access key. 'Active' means the key is valid for API calls; 'Inactive' means it is not.",
                        "typeExposed": "Maybe StatusType",
                        "type": "Maybe StatusType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "akmCreateDate",
                        "name": "_akmCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date when the access key was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "akmAccessKeyId",
                        "name": "_akmAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "-- | The ID for this access key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "akmCreateDate",
                        "name": "_akmCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date when the access key was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "akmStatus",
                        "name": "_akmStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "-- | The status of the access key. 'Active' means the key is valid for API calls; 'Inactive' means it is not.",
                        "typeExposed": "Maybe StatusType",
                        "type": "Maybe StatusType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "akmUserName",
                        "name": "_akmUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the IAM user that the key is associated with.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "policyUser",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "puUserName",
                    "name": "_puUserName",
                    "shape": "userNameType",
                    "locationName": "UserName",
                    "documentation": "-- | The name (friendly name, not ARN) identifying the user.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PolicyUser",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "puUserName",
                        "name": "_puUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name (friendly name, not ARN) identifying the user.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "puUserName",
                        "name": "_puUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name (friendly name, not ARN) identifying the user.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        ],
        "imports": [],
        "shared": [
            "Group",
            "AttachedPolicy",
            "PolicyVersion",
            "InstanceProfile",
            "ServerCertificateMetadata",
            "LoginProfile",
            "EntityType",
            "User",
            "statusType",
            "Role",
            "Policy",
            "VirtualMFADevice",
            "SigningCertificate"
        ]
    },
    "operations": [
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "addClientIDToOpenIDConnectProviderResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AddClientIDToOpenIDConnectProviderResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_AddClientIDToOpenIDConnectProvider.html",
            "namespace": "Network.AWS.IAM.AddClientIDToOpenIDConnectProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "AddClientIDToOpenIDConnectProvider",
            "method": "post",
            "documentation": "-- | Adds a new client ID (also known as audience) to the list of client IDs\n-- already registered for the specified IAM OpenID Connect provider.\n--\n-- This action is idempotent; it does not fail or return an error if you add an\n-- existing client ID to the provider.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 35,
                "ctor": "addClientIDToOpenIDConnectProvider",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "acidtoidcpOpenIDConnectProviderArn",
                        "name": "_acidtoidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to\n-- add the client ID to. You can get a list of OIDC provider ARNs by using the 'ListOpenIDConnectProviders' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "acidtoidcpClientID",
                        "name": "_acidtoidcpClientID",
                        "shape": "clientIDType",
                        "locationName": "ClientID",
                        "documentation": "-- | The client ID (also known as audience) to add to the IAM OpenID Connect\n-- provider.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "AddClientIDToOpenIDConnectProvider",
                "query": [
                    {
                        "field": "_acidtoidcpOpenIDConnectProviderArn",
                        "locationName": "OpenIDConnectProviderArn",
                        "type": "field"
                    },
                    {
                        "field": "_acidtoidcpClientID",
                        "locationName": "ClientID",
                        "type": "field"
                    }
                ],
                "locationPad": 25,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "acidtoidcpClientID",
                        "name": "_acidtoidcpClientID",
                        "shape": "clientIDType",
                        "locationName": "ClientID",
                        "documentation": "-- | The client ID (also known as audience) to add to the IAM OpenID Connect\n-- provider.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "acidtoidcpOpenIDConnectProviderArn",
                        "name": "_acidtoidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to\n-- add the client ID to. You can get a list of OIDC provider ARNs by using the 'ListOpenIDConnectProviders' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "addRoleToInstanceProfileResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AddRoleToInstanceProfileResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_AddRoleToInstanceProfile.html",
            "namespace": "Network.AWS.IAM.AddRoleToInstanceProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "AddRoleToInstanceProfile",
            "method": "post",
            "documentation": "-- | Adds the specified role to the specified instance profile. For more\n-- information about roles, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html Working with Roles\u003e. For more information about\n-- instance profiles, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html About Instance Profiles\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "addRoleToInstanceProfile",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "artipInstanceProfileName",
                        "name": "_artipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "-- | The name of the instance profile to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "artipRoleName",
                        "name": "_artipRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to add.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "AddRoleToInstanceProfile",
                "query": [
                    {
                        "field": "_artipInstanceProfileName",
                        "locationName": "InstanceProfileName",
                        "type": "field"
                    },
                    {
                        "field": "_artipRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    }
                ],
                "locationPad": 20,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "artipInstanceProfileName",
                        "name": "_artipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "-- | The name of the instance profile to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "artipRoleName",
                        "name": "_artipRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to add.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "addUserToGroupResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AddUserToGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_AddUserToGroup.html",
            "namespace": "Network.AWS.IAM.AddUserToGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "AddUserToGroup",
            "method": "post",
            "documentation": "-- | Adds the specified user to the specified group.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "addUserToGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "autgGroupName",
                        "name": "_autgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "autgUserName",
                        "name": "_autgUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to add.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "AddUserToGroup",
                "query": [
                    {
                        "field": "_autgGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_autgUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "autgGroupName",
                        "name": "_autgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "autgUserName",
                        "name": "_autgUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to add.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "attachGroupPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AttachGroupPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachGroupPolicy.html",
            "namespace": "Network.AWS.IAM.AttachGroupPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "AttachGroupPolicy",
            "method": "post",
            "documentation": "-- | Attaches the specified managed policy to the specified group.\n--\n-- You use this API to attach a managed policy to a group. To embed an inline\n-- policy in a group, use 'PutGroupPolicy'.\n--\n-- For more information about policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and InlinePolicies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "attachGroupPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "agpGroupName",
                        "name": "_agpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name (friendly name, not ARN) of the group to attach the policy to.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "agpPolicyArn",
                        "name": "_agpPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "AttachGroupPolicy",
                "query": [
                    {
                        "field": "_agpGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_agpPolicyArn",
                        "locationName": "PolicyArn",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "agpGroupName",
                        "name": "_agpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name (friendly name, not ARN) of the group to attach the policy to.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "agpPolicyArn",
                        "name": "_agpPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "attachRolePolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AttachRolePolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachRolePolicy.html",
            "namespace": "Network.AWS.IAM.AttachRolePolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "AttachRolePolicy",
            "method": "post",
            "documentation": "-- | Attaches the specified managed policy to the specified role.\n--\n-- When you attach a managed policy to a role, the managed policy is used as\n-- the role's access (permissions) policy. You cannot use a managed policy as\n-- the role's trust policy. The role's trust policy is created at the same time\n-- as the role, using 'CreateRole'. You can update a role's trust policy using 'UpdateAssumeRolePolicy'.\n--\n-- Use this API to attach a managed policy to a role. To embed an inline policy\n-- in a role, use 'PutRolePolicy'. For more information about policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and Inline Policies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "attachRolePolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arpRoleName",
                        "name": "_arpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name (friendly name, not ARN) of the role to attach the policy to.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arpPolicyArn",
                        "name": "_arpPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "AttachRolePolicy",
                "query": [
                    {
                        "field": "_arpRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_arpPolicyArn",
                        "locationName": "PolicyArn",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arpPolicyArn",
                        "name": "_arpPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arpRoleName",
                        "name": "_arpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name (friendly name, not ARN) of the role to attach the policy to.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "attachUserPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AttachUserPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachUserPolicy.html",
            "namespace": "Network.AWS.IAM.AttachUserPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "AttachUserPolicy",
            "method": "post",
            "documentation": "-- | Attaches the specified managed policy to the specified user.\n--\n-- You use this API to attach a managed policy to a user. To embed an inline\n-- policy in a user, use 'PutUserPolicy'.\n--\n-- For more information about policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and InlinePolicies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "attachUserPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "aupUserName",
                        "name": "_aupUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name (friendly name, not ARN) of the user to attach the policy to.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "aupPolicyArn",
                        "name": "_aupPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "AttachUserPolicy",
                "query": [
                    {
                        "field": "_aupUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_aupPolicyArn",
                        "locationName": "PolicyArn",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "aupPolicyArn",
                        "name": "_aupPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "aupUserName",
                        "name": "_aupUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name (friendly name, not ARN) of the user to attach the policy to.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "changePasswordResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ChangePasswordResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ChangePassword.html",
            "namespace": "Network.AWS.IAM.ChangePassword",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "ChangePassword",
            "method": "post",
            "documentation": "-- | Changes the password of the IAM user who is calling this action. The root\n-- account password is not affected by this action.\n--\n-- To change the password for a different user, see 'UpdateLoginProfile'. For\n-- more information about modifying passwords, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html Managing Passwords\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "changePassword",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cpOldPassword",
                        "name": "_cpOldPassword",
                        "shape": "passwordType",
                        "locationName": "OldPassword",
                        "documentation": "-- | The IAM user's current password.",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cpNewPassword",
                        "name": "_cpNewPassword",
                        "shape": "passwordType",
                        "locationName": "NewPassword",
                        "documentation": "-- | The new password. The new password must conform to the AWS account's password\n-- policy, if one exists.",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "ChangePassword",
                "query": [
                    {
                        "field": "_cpOldPassword",
                        "locationName": "OldPassword",
                        "type": "field"
                    },
                    {
                        "field": "_cpNewPassword",
                        "locationName": "NewPassword",
                        "type": "field"
                    }
                ],
                "locationPad": 12,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cpNewPassword",
                        "name": "_cpNewPassword",
                        "shape": "passwordType",
                        "locationName": "NewPassword",
                        "documentation": "-- | The new password. The new password must conform to the AWS account's password\n-- policy, if one exists.",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cpOldPassword",
                        "name": "_cpOldPassword",
                        "shape": "passwordType",
                        "locationName": "OldPassword",
                        "documentation": "-- | The IAM user's current password.",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createAccessKeyResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "cakrAccessKey",
                    "name": "_cakrAccessKey",
                    "shape": "AccessKey",
                    "locationName": "AccessKey",
                    "documentation": "-- | Information about the access key.",
                    "typeExposed": "AccessKey",
                    "type": "AccessKey"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cakrAccessKey",
                        "name": "_cakrAccessKey",
                        "shape": "AccessKey",
                        "locationName": "AccessKey",
                        "documentation": "-- | Information about the access key.",
                        "typeExposed": "AccessKey",
                        "type": "AccessKey"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateAccessKeyResponse",
                "resultWrapper": "CreateAccessKeyResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cakrAccessKey",
                        "name": "_cakrAccessKey",
                        "shape": "AccessKey",
                        "locationName": "AccessKey",
                        "documentation": "-- | Information about the access key.",
                        "typeExposed": "AccessKey",
                        "type": "AccessKey"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateAccessKey.html",
            "namespace": "Network.AWS.IAM.CreateAccessKey",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateAccessKey",
            "method": "post",
            "documentation": "-- | Creates a new AWS secret access key and corresponding AWS access key ID for\n-- the specified user. The default status for new keys is 'Active'.\n--\n-- If you do not specify a user name, IAM determines the user name implicitly\n-- based on the AWS access key ID signing the request. Because this action works\n-- for access keys under the AWS account, you can use this action to manage root\n-- credentials even if the AWS account has no associated users.\n--\n-- For information about limits on the number of keys you can create, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html Limitations on IAM Entities\u003e in the /Using IAM/ guide.\n--\n-- To ensure the security of your AWS account, the secret access key is\n-- accessible only during key and user creation. You must save the key (for\n-- example, in a text file) if you want to be able to access it again. If a\n-- secret key is lost, you can delete the access keys for the associated user\n-- and then create new keys.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "createAccessKey",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "cakUserName",
                    "name": "_cakUserName",
                    "shape": "existingUserNameType",
                    "locationName": "UserName",
                    "documentation": "-- | The user name that the new key will belong to.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "CreateAccessKey",
                "query": [
                    {
                        "field": "_cakUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cakUserName",
                        "name": "_cakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The user name that the new key will belong to.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cakUserName",
                        "name": "_cakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The user name that the new key will belong to.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "createAccountAliasResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CreateAccountAliasResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateAccountAlias.html",
            "namespace": "Network.AWS.IAM.CreateAccountAlias",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateAccountAlias",
            "method": "post",
            "documentation": "-- | Creates an alias for your AWS account. For information about using an AWS\n-- account alias, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html Using an Alias for Your AWS Account ID\u003e in the /Using IAM/\n-- guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "createAccountAlias",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "caaAccountAlias",
                    "name": "_caaAccountAlias",
                    "shape": "accountAliasType",
                    "locationName": "AccountAlias",
                    "documentation": "-- | The account alias to create.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "caaAccountAlias",
                        "name": "_caaAccountAlias",
                        "shape": "accountAliasType",
                        "locationName": "AccountAlias",
                        "documentation": "-- | The account alias to create.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "CreateAccountAlias",
                "query": [
                    {
                        "field": "_caaAccountAlias",
                        "locationName": "AccountAlias",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "caaAccountAlias",
                        "name": "_caaAccountAlias",
                        "shape": "accountAliasType",
                        "locationName": "AccountAlias",
                        "documentation": "-- | The account alias to create.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createGroupResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "cgrGroup",
                    "name": "_cgrGroup",
                    "shape": "Group",
                    "locationName": "Group",
                    "documentation": "-- | Information about the group.",
                    "typeExposed": "Group",
                    "type": "Group"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cgrGroup",
                        "name": "_cgrGroup",
                        "shape": "Group",
                        "locationName": "Group",
                        "documentation": "-- | Information about the group.",
                        "typeExposed": "Group",
                        "type": "Group"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateGroupResponse",
                "resultWrapper": "CreateGroupResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cgrGroup",
                        "name": "_cgrGroup",
                        "shape": "Group",
                        "locationName": "Group",
                        "documentation": "-- | Information about the group.",
                        "typeExposed": "Group",
                        "type": "Group"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateGroup.html",
            "namespace": "Network.AWS.IAM.CreateGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateGroup",
            "method": "post",
            "documentation": "-- | Creates a new group.\n--\n-- For information about the number of groups you can create, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html Limitationson IAM Entities\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "createGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cgGroupName",
                        "name": "_cgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group to create. Do not include the path in this value.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "CreateGroup",
                "query": [
                    {
                        "field": "_cgPath",
                        "locationName": "Path",
                        "type": "field"
                    },
                    {
                        "field": "_cgGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cgPath",
                        "name": "_cgPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the group. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cgGroupName",
                        "name": "_cgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group to create. Do not include the path in this value.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cgPath",
                        "name": "_cgPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the group. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createInstanceProfileResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "ciprInstanceProfile",
                    "name": "_ciprInstanceProfile",
                    "shape": "InstanceProfile",
                    "locationName": "InstanceProfile",
                    "documentation": "-- | Information about the instance profile.",
                    "typeExposed": "InstanceProfile",
                    "type": "InstanceProfile"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ciprInstanceProfile",
                        "name": "_ciprInstanceProfile",
                        "shape": "InstanceProfile",
                        "locationName": "InstanceProfile",
                        "documentation": "-- | Information about the instance profile.",
                        "typeExposed": "InstanceProfile",
                        "type": "InstanceProfile"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateInstanceProfileResponse",
                "resultWrapper": "CreateInstanceProfileResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ciprInstanceProfile",
                        "name": "_ciprInstanceProfile",
                        "shape": "InstanceProfile",
                        "locationName": "InstanceProfile",
                        "documentation": "-- | Information about the instance profile.",
                        "typeExposed": "InstanceProfile",
                        "type": "InstanceProfile"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateInstanceProfile.html",
            "namespace": "Network.AWS.IAM.CreateInstanceProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateInstanceProfile",
            "method": "post",
            "documentation": "-- | Creates a new instance profile. For information about instance profiles, go\n-- to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html About Instance Profiles\u003e.\n--\n-- For information about the number of instance profiles you can create, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html Limitations on IAM Entities\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "createInstanceProfile",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cipInstanceProfileName",
                        "name": "_cipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "-- | The name of the instance profile to create.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "CreateInstanceProfile",
                "query": [
                    {
                        "field": "_cipInstanceProfileName",
                        "locationName": "InstanceProfileName",
                        "type": "field"
                    },
                    {
                        "field": "_cipPath",
                        "locationName": "Path",
                        "type": "field"
                    }
                ],
                "locationPad": 20,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cipPath",
                        "name": "_cipPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the instance profile. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAMIdentifiers\u003e in the /Using IAM/ guide.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cipInstanceProfileName",
                        "name": "_cipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "-- | The name of the instance profile to create.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cipPath",
                        "name": "_cipPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the instance profile. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAMIdentifiers\u003e in the /Using IAM/ guide.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createLoginProfileResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "clprLoginProfile",
                    "name": "_clprLoginProfile",
                    "shape": "LoginProfile",
                    "locationName": "LoginProfile",
                    "documentation": "-- | The user name and password create date.",
                    "typeExposed": "LoginProfile",
                    "type": "LoginProfile"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "clprLoginProfile",
                        "name": "_clprLoginProfile",
                        "shape": "LoginProfile",
                        "locationName": "LoginProfile",
                        "documentation": "-- | The user name and password create date.",
                        "typeExposed": "LoginProfile",
                        "type": "LoginProfile"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateLoginProfileResponse",
                "resultWrapper": "CreateLoginProfileResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "clprLoginProfile",
                        "name": "_clprLoginProfile",
                        "shape": "LoginProfile",
                        "locationName": "LoginProfile",
                        "documentation": "-- | The user name and password create date.",
                        "typeExposed": "LoginProfile",
                        "type": "LoginProfile"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateLoginProfile.html",
            "namespace": "Network.AWS.IAM.CreateLoginProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateLoginProfile",
            "method": "post",
            "documentation": "-- | Creates a password for the specified user, giving the user the ability to\n-- access AWS services through the AWS Management Console. For more information\n-- about managing passwords, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html Managing Passwords\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "createLoginProfile",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "clpUserName",
                        "name": "_clpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to create a password for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "clpPassword",
                        "name": "_clpPassword",
                        "shape": "passwordType",
                        "locationName": "Password",
                        "documentation": "-- | The new password for the user.",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 22,
                "name": "CreateLoginProfile",
                "query": [
                    {
                        "field": "_clpUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_clpPassword",
                        "locationName": "Password",
                        "type": "field"
                    },
                    {
                        "field": "_clpPasswordResetRequired",
                        "locationName": "PasswordResetRequired",
                        "type": "field"
                    }
                ],
                "locationPad": 22,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "clpPasswordResetRequired",
                        "name": "_clpPasswordResetRequired",
                        "shape": "booleanType",
                        "locationName": "PasswordResetRequired",
                        "documentation": "-- | Specifies whether the user is required to set a new password on next\n-- sign-in.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "clpPassword",
                        "name": "_clpPassword",
                        "shape": "passwordType",
                        "locationName": "Password",
                        "documentation": "-- | The new password for the user.",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "clpPasswordResetRequired",
                        "name": "_clpPasswordResetRequired",
                        "shape": "booleanType",
                        "locationName": "PasswordResetRequired",
                        "documentation": "-- | Specifies whether the user is required to set a new password on next\n-- sign-in.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "clpUserName",
                        "name": "_clpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to create a password for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createOpenIDConnectProviderResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "coidcprOpenIDConnectProviderArn",
                    "name": "_coidcprOpenIDConnectProviderArn",
                    "shape": "arnType",
                    "locationName": "OpenIDConnectProviderArn",
                    "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect provider that was\n-- created. For more information, see 'OpenIDConnectProviderListEntry'.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateOpenIDConnectProviderResponse",
                "resultWrapper": "CreateOpenIDConnectProviderResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "coidcprOpenIDConnectProviderArn",
                        "name": "_coidcprOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect provider that was\n-- created. For more information, see 'OpenIDConnectProviderListEntry'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "coidcprOpenIDConnectProviderArn",
                        "name": "_coidcprOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect provider that was\n-- created. For more information, see 'OpenIDConnectProviderListEntry'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateOpenIDConnectProvider.html",
            "namespace": "Network.AWS.IAM.CreateOpenIDConnectProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateOpenIDConnectProvider",
            "method": "post",
            "documentation": "-- | Creates an IAM entity to describe an identity provider (IdP) that supports \u003chttp://openid.net/connect/ OpenID Connect (OIDC)\u003e.\n--\n-- The OIDC provider that you create with this operation can be used as a\n-- principal in a role's trust policy to establish a trust relationship between\n-- AWS and the OIDC provider.\n--\n-- When you create the IAM OIDC provider, you specify the URL of the OIDC\n-- identity provider (IdP) to trust, a list of client IDs (also known as\n-- audiences) that identify the application or applications that are allowed to\n-- authenticate using the OIDC provider, and a list of thumbprints of the server\n-- certificate(s) that the IdP uses. You get all of this information from the\n-- OIDC IdP that you want to use for access to AWS.\n--\n-- Because trust for the OIDC provider is ultimately derived from the IAM\n-- provider that this action creates, it is a best practice to limit access to\n-- the 'CreateOpenIDConnectProvider' action to highly-privileged users.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 21,
                "ctor": "createOpenIDConnectProvider",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "coidcpUrl",
                        "name": "_coidcpUrl",
                        "shape": "OpenIDConnectProviderUrlType",
                        "locationName": "Url",
                        "documentation": "-- | The URL of the identity provider. The URL must begin with \"https://\" and\n-- should correspond to the 'iss' claim in the provider's OpenID Connect ID\n-- tokens. Per the OIDC standard, path components are allowed but query\n-- parameters are not. Typically the URL consists of only a host name, like\n-- \"https://server.example.org\" or \"https://example.com\".\n--\n-- You cannot register the same provider multiple times in a single AWS\n-- account. If you try to submit a URL that has already been used for an OpenID\n-- Connect provider in the AWS account, you will get an error.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "CreateOpenIDConnectProvider",
                "query": [
                    {
                        "field": "_coidcpUrl",
                        "locationName": "Url",
                        "type": "field"
                    },
                    {
                        "field": "_coidcpClientIDList",
                        "locationName": "ClientIDList",
                        "type": "field"
                    },
                    {
                        "field": "_coidcpThumbprintList",
                        "locationName": "ThumbprintList",
                        "type": "field"
                    }
                ],
                "locationPad": 15,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "coidcpClientIDList",
                        "name": "_coidcpClientIDList",
                        "shape": "clientIDListType",
                        "locationName": "ClientIDList",
                        "documentation": "-- | A list of client IDs (also known as audiences). When a mobile or web app\n-- registers with an OpenID Connect provider, they establish a value that\n-- identifies the application. (This is the value that's sent as the 'client_id'\n-- parameter on OAuth requests.)\n--\n-- You can register multiple client IDs with the same provider. For example,\n-- you might have multiple applications that use the same OIDC provider. You\n-- cannot register more than 100 client IDs with a single IAM OIDC provider.\n--\n-- There is no defined format for a client ID. The 'CreateOpenIDConnectProviderRequest' action accepts client IDs up to 255 characters long.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "coidcpThumbprintList",
                        "name": "_coidcpThumbprintList",
                        "shape": "thumbprintListType",
                        "locationName": "ThumbprintList",
                        "documentation": "-- | A list of server certificate thumbprints for the OpenID Connect (OIDC)\n-- identity provider's server certificate(s). Typically this list includes only\n-- one entry. However, IAM lets you have up to five thumbprints for an OIDC\n-- provider. This lets you maintain multiple thumbprints if the identity\n-- provider is rotating certificates.\n--\n-- The server certificate thumbprint is the hex-encoded SHA-1 hash value of the\n-- X.509 certificate used by the domain where the OpenID Connect provider makes\n-- its keys available. It is always a 40-character string.\n--\n-- You must provide at least one thumbprint when creating an IAM OIDC provider.\n-- For example, if the OIDC provider is 'server.example.com' and the provider\n-- stores its keys at \"https://keys.server.example.com/openid-connect\", the\n-- thumbprint string would be the hex-encoded SHA-1 hash value of the\n-- certificate used by https://keys.server.example.com.\n--\n-- For more information about obtaining the OIDC provider's thumbprint, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/identity-providers-oidc-obtain-thumbprint.html Obtaining the Thumbprint for an OpenID Connect Provider\u003e in the /Using IAM/ guide.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "coidcpClientIDList",
                        "name": "_coidcpClientIDList",
                        "shape": "clientIDListType",
                        "locationName": "ClientIDList",
                        "documentation": "-- | A list of client IDs (also known as audiences). When a mobile or web app\n-- registers with an OpenID Connect provider, they establish a value that\n-- identifies the application. (This is the value that's sent as the 'client_id'\n-- parameter on OAuth requests.)\n--\n-- You can register multiple client IDs with the same provider. For example,\n-- you might have multiple applications that use the same OIDC provider. You\n-- cannot register more than 100 client IDs with a single IAM OIDC provider.\n--\n-- There is no defined format for a client ID. The 'CreateOpenIDConnectProviderRequest' action accepts client IDs up to 255 characters long.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "coidcpThumbprintList",
                        "name": "_coidcpThumbprintList",
                        "shape": "thumbprintListType",
                        "locationName": "ThumbprintList",
                        "documentation": "-- | A list of server certificate thumbprints for the OpenID Connect (OIDC)\n-- identity provider's server certificate(s). Typically this list includes only\n-- one entry. However, IAM lets you have up to five thumbprints for an OIDC\n-- provider. This lets you maintain multiple thumbprints if the identity\n-- provider is rotating certificates.\n--\n-- The server certificate thumbprint is the hex-encoded SHA-1 hash value of the\n-- X.509 certificate used by the domain where the OpenID Connect provider makes\n-- its keys available. It is always a 40-character string.\n--\n-- You must provide at least one thumbprint when creating an IAM OIDC provider.\n-- For example, if the OIDC provider is 'server.example.com' and the provider\n-- stores its keys at \"https://keys.server.example.com/openid-connect\", the\n-- thumbprint string would be the hex-encoded SHA-1 hash value of the\n-- certificate used by https://keys.server.example.com.\n--\n-- For more information about obtaining the OIDC provider's thumbprint, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/identity-providers-oidc-obtain-thumbprint.html Obtaining the Thumbprint for an OpenID Connect Provider\u003e in the /Using IAM/ guide.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "coidcpUrl",
                        "name": "_coidcpUrl",
                        "shape": "OpenIDConnectProviderUrlType",
                        "locationName": "Url",
                        "documentation": "-- | The URL of the identity provider. The URL must begin with \"https://\" and\n-- should correspond to the 'iss' claim in the provider's OpenID Connect ID\n-- tokens. Per the OIDC standard, path components are allowed but query\n-- parameters are not. Typically the URL consists of only a host name, like\n-- \"https://server.example.org\" or \"https://example.com\".\n--\n-- You cannot register the same provider multiple times in a single AWS\n-- account. If you try to submit a URL that has already been used for an OpenID\n-- Connect provider in the AWS account, you will get an error.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createPolicyResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "cprPolicy",
                    "name": "_cprPolicy",
                    "shape": "Policy",
                    "locationName": "Policy",
                    "documentation": "-- | Information about the policy.",
                    "typeExposed": "Maybe Policy",
                    "type": "Maybe Policy"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreatePolicyResponse",
                "resultWrapper": "CreatePolicyResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cprPolicy",
                        "name": "_cprPolicy",
                        "shape": "Policy",
                        "locationName": "Policy",
                        "documentation": "-- | Information about the policy.",
                        "typeExposed": "Maybe Policy",
                        "type": "Maybe Policy"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cprPolicy",
                        "name": "_cprPolicy",
                        "shape": "Policy",
                        "locationName": "Policy",
                        "documentation": "-- | Information about the policy.",
                        "typeExposed": "Maybe Policy",
                        "type": "Maybe Policy"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html",
            "namespace": "Network.AWS.IAM.CreatePolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreatePolicy",
            "method": "post",
            "documentation": "-- | Creates a new managed policy for your AWS account.\n--\n-- This operation creates a policy version with a version identifier of 'v1' and\n-- sets v1 as the policy's default version. For more information about policy\n-- versions, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html Versioning for Managed Policies\u003e in the /Using IAM/ guide.\n--\n-- For more information about managed policies in general, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html ManagedPolicies and Inline Policies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "createPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cpPolicyName",
                        "name": "_cpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cpPolicyDocument",
                        "name": "_cpPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.\n--\n-- The policy must be URL-encoded according to \u003chttp://www.faqs.org/rfcs/rfc3986.html RFC 3986\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "CreatePolicy",
                "query": [
                    {
                        "field": "_cpPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    },
                    {
                        "field": "_cpPath",
                        "locationName": "Path",
                        "type": "field"
                    },
                    {
                        "field": "_cpPolicyDocument",
                        "locationName": "PolicyDocument",
                        "type": "field"
                    },
                    {
                        "field": "_cpDescription",
                        "locationName": "Description",
                        "type": "field"
                    }
                ],
                "locationPad": 15,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpPath",
                        "name": "_cpPath",
                        "shape": "policyPathType",
                        "locationName": "Path",
                        "documentation": "-- | The path for the policy.\n--\n-- For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/\n-- guide.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpDescription",
                        "name": "_cpDescription",
                        "shape": "policyDescriptionType",
                        "locationName": "Description",
                        "documentation": "-- | A friendly description of the policy.\n--\n-- Typically used to store information about the permissions defined in the\n-- policy. For example, \"Grants access to production DynamoDB tables.\"\n--\n-- The policy description is immutable. After a value is assigned, it cannot be\n-- changed.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpDescription",
                        "name": "_cpDescription",
                        "shape": "policyDescriptionType",
                        "locationName": "Description",
                        "documentation": "-- | A friendly description of the policy.\n--\n-- Typically used to store information about the permissions defined in the\n-- policy. For example, \"Grants access to production DynamoDB tables.\"\n--\n-- The policy description is immutable. After a value is assigned, it cannot be\n-- changed.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpPath",
                        "name": "_cpPath",
                        "shape": "policyPathType",
                        "locationName": "Path",
                        "documentation": "-- | The path for the policy.\n--\n-- For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/\n-- guide.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cpPolicyDocument",
                        "name": "_cpPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.\n--\n-- The policy must be URL-encoded according to \u003chttp://www.faqs.org/rfcs/rfc3986.html RFC 3986\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cpPolicyName",
                        "name": "_cpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createPolicyVersionResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "cpvrPolicyVersion",
                    "name": "_cpvrPolicyVersion",
                    "shape": "PolicyVersion",
                    "locationName": "PolicyVersion",
                    "documentation": "-- | Information about the policy version.",
                    "typeExposed": "Maybe PolicyVersion",
                    "type": "Maybe PolicyVersion"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreatePolicyVersionResponse",
                "resultWrapper": "CreatePolicyVersionResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpvrPolicyVersion",
                        "name": "_cpvrPolicyVersion",
                        "shape": "PolicyVersion",
                        "locationName": "PolicyVersion",
                        "documentation": "-- | Information about the policy version.",
                        "typeExposed": "Maybe PolicyVersion",
                        "type": "Maybe PolicyVersion"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpvrPolicyVersion",
                        "name": "_cpvrPolicyVersion",
                        "shape": "PolicyVersion",
                        "locationName": "PolicyVersion",
                        "documentation": "-- | Information about the policy version.",
                        "typeExposed": "Maybe PolicyVersion",
                        "type": "Maybe PolicyVersion"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicyVersion.html",
            "namespace": "Network.AWS.IAM.CreatePolicyVersion",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreatePolicyVersion",
            "method": "post",
            "documentation": "-- | Creates a new version of the specified managed policy. To update a managed\n-- policy, you create a new policy version. A managed policy can have up to five\n-- versions. If the policy has five versions, you must delete an existing\n-- version using 'DeletePolicyVersion' before you create a new version.\n--\n-- Optionally, you can set the new version as the policy's default version. The\n-- default version is the operative version; that is, the version that is in\n-- effect for the IAM users, groups, and roles that the policy is attached to.\n--\n-- For more information about managed policy versions, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html Versioning forManaged Policies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "createPolicyVersion",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cpvPolicyArn",
                        "name": "_cpvPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cpvPolicyDocument",
                        "name": "_cpvPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.\n--\n-- The policy must be URL-encoded according to \u003chttp://www.faqs.org/rfcs/rfc3986.html RFC 3986\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "CreatePolicyVersion",
                "query": [
                    {
                        "field": "_cpvPolicyArn",
                        "locationName": "PolicyArn",
                        "type": "field"
                    },
                    {
                        "field": "_cpvPolicyDocument",
                        "locationName": "PolicyDocument",
                        "type": "field"
                    },
                    {
                        "field": "_cpvSetAsDefault",
                        "locationName": "SetAsDefault",
                        "type": "field"
                    }
                ],
                "locationPad": 15,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpvSetAsDefault",
                        "name": "_cpvSetAsDefault",
                        "shape": "booleanType",
                        "locationName": "SetAsDefault",
                        "documentation": "-- | Specifies whether to set this version as the policy's default version.\n--\n-- When this parameter is 'true', the new policy version becomes the operative\n-- version; that is, the version that is in effect for the IAM users, groups,\n-- and roles that the policy is attached to.\n--\n-- For more information about managed policy versions, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html Versioning forManaged Policies\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cpvPolicyArn",
                        "name": "_cpvPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cpvPolicyDocument",
                        "name": "_cpvPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.\n--\n-- The policy must be URL-encoded according to \u003chttp://www.faqs.org/rfcs/rfc3986.html RFC 3986\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpvSetAsDefault",
                        "name": "_cpvSetAsDefault",
                        "shape": "booleanType",
                        "locationName": "SetAsDefault",
                        "documentation": "-- | Specifies whether to set this version as the policy's default version.\n--\n-- When this parameter is 'true', the new policy version becomes the operative\n-- version; that is, the version that is in effect for the IAM users, groups,\n-- and roles that the policy is attached to.\n--\n-- For more information about managed policy versions, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html Versioning forManaged Policies\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createRoleResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "crrRole",
                    "name": "_crrRole",
                    "shape": "Role",
                    "locationName": "Role",
                    "documentation": "-- | Information about the role.",
                    "typeExposed": "Role",
                    "type": "Role"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "crrRole",
                        "name": "_crrRole",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "-- | Information about the role.",
                        "typeExposed": "Role",
                        "type": "Role"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateRoleResponse",
                "resultWrapper": "CreateRoleResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "crrRole",
                        "name": "_crrRole",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "-- | Information about the role.",
                        "typeExposed": "Role",
                        "type": "Role"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html",
            "namespace": "Network.AWS.IAM.CreateRole",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateRole",
            "method": "post",
            "documentation": "-- | Creates a new role for your AWS account. For more information about roles,\n-- go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html Working with Roles\u003e. For information about limitations on role names and\n-- the number of roles you can create, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html Limitations on IAM Entities\u003e in the /Using IAM/ guide.\n--\n-- The example policy grants permission to an EC2 instance to assume the role.\n-- The policy is URL-encoded according to RFC 3986. For more information about\n-- RFC 3986, go to \u003chttp://www.faqs.org/rfcs/rfc3986.html http://www.faqs.org/rfcs/rfc3986.html\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "createRole",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "crRoleName",
                        "name": "_crRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to create.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "crAssumeRolePolicyDocument",
                        "name": "_crAssumeRolePolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "AssumeRolePolicyDocument",
                        "documentation": "-- | The policy that grants an entity permission to assume the role.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "CreateRole",
                "query": [
                    {
                        "field": "_crPath",
                        "locationName": "Path",
                        "type": "field"
                    },
                    {
                        "field": "_crRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_crAssumeRolePolicyDocument",
                        "locationName": "AssumeRolePolicyDocument",
                        "type": "field"
                    }
                ],
                "locationPad": 25,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "crPath",
                        "name": "_crPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the role. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "crAssumeRolePolicyDocument",
                        "name": "_crAssumeRolePolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "AssumeRolePolicyDocument",
                        "documentation": "-- | The policy that grants an entity permission to assume the role.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "crPath",
                        "name": "_crPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path to the role. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e\n-- in the /Using IAM/ guide.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "crRoleName",
                        "name": "_crRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to create.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createSAMLProviderResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "csamlprSAMLProviderArn",
                    "name": "_csamlprSAMLProviderArn",
                    "shape": "arnType",
                    "locationName": "SAMLProviderArn",
                    "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateSAMLProviderResponse",
                "resultWrapper": "CreateSAMLProviderResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csamlprSAMLProviderArn",
                        "name": "_csamlprSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csamlprSAMLProviderArn",
                        "name": "_csamlprSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateSAMLProvider.html",
            "namespace": "Network.AWS.IAM.CreateSAMLProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateSAMLProvider",
            "method": "post",
            "documentation": "-- | Creates an IAM entity to describe an identity provider (IdP) that supports\n-- SAML 2.0.\n--\n-- The SAML provider that you create with this operation can be used as a\n-- principal in a role's trust policy to establish a trust relationship between\n-- AWS and a SAML identity provider. You can create an IAM role that supports\n-- Web-based single sign-on (SSO) to the AWS Management Console or one that\n-- supports API access to AWS.\n--\n-- When you create the SAML provider, you upload an a SAML metadata document\n-- that you get from your IdP and that includes the issuer's name, expiration\n-- information, and keys that can be used to validate the SAML authentication\n-- response (assertions) that are received from the IdP. You must generate the\n-- metadata document using the identity management software that is used as your\n-- organization's IdP.\n--\n-- This operation requires \u003chttp://docs.aws.amazon.com/general/latest/gr/signature-version-4.html Signature Version 4\u003e.   For more information, see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/STSMgmtConsole-SAML.html Giving Console Access Using SAML\u003e and \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html Creating Temporary Security Credentials for SAML Federation\u003e in the /UsingTemporary Credentials/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "createSAMLProvider",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "csamlpSAMLMetadataDocument",
                        "name": "_csamlpSAMLMetadataDocument",
                        "shape": "SAMLMetadataDocumentType",
                        "locationName": "SAMLMetadataDocument",
                        "documentation": "-- | An XML document generated by an identity provider (IdP) that supports SAML\n-- 2.0. The document includes the issuer's name, expiration information, and\n-- keys that can be used to validate the SAML authentication response\n-- (assertions) that are received from the IdP. You must generate the metadata\n-- document using the identity management software that is used as your\n-- organization's IdP.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html Creating Temporary Security Credentials for SAMLFederation\u003e in the /Using Temporary Security Credentials/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "csamlpName",
                        "name": "_csamlpName",
                        "shape": "SAMLProviderNameType",
                        "locationName": "Name",
                        "documentation": "-- | The name of the provider to create.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 21,
                "name": "CreateSAMLProvider",
                "query": [
                    {
                        "field": "_csamlpSAMLMetadataDocument",
                        "locationName": "SAMLMetadataDocument",
                        "type": "field"
                    },
                    {
                        "field": "_csamlpName",
                        "locationName": "Name",
                        "type": "field"
                    }
                ],
                "locationPad": 21,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "csamlpName",
                        "name": "_csamlpName",
                        "shape": "SAMLProviderNameType",
                        "locationName": "Name",
                        "documentation": "-- | The name of the provider to create.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "csamlpSAMLMetadataDocument",
                        "name": "_csamlpSAMLMetadataDocument",
                        "shape": "SAMLMetadataDocumentType",
                        "locationName": "SAMLMetadataDocument",
                        "documentation": "-- | An XML document generated by an identity provider (IdP) that supports SAML\n-- 2.0. The document includes the issuer's name, expiration information, and\n-- keys that can be used to validate the SAML authentication response\n-- (assertions) that are received from the IdP. You must generate the metadata\n-- document using the identity management software that is used as your\n-- organization's IdP.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html Creating Temporary Security Credentials for SAMLFederation\u003e in the /Using Temporary Security Credentials/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createUserResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "curUser",
                    "name": "_curUser",
                    "shape": "User",
                    "locationName": "User",
                    "documentation": "-- | Information about the user.",
                    "typeExposed": "Maybe User",
                    "type": "Maybe User"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateUserResponse",
                "resultWrapper": "CreateUserResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "curUser",
                        "name": "_curUser",
                        "shape": "User",
                        "locationName": "User",
                        "documentation": "-- | Information about the user.",
                        "typeExposed": "Maybe User",
                        "type": "Maybe User"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "curUser",
                        "name": "_curUser",
                        "shape": "User",
                        "locationName": "User",
                        "documentation": "-- | Information about the user.",
                        "typeExposed": "Maybe User",
                        "type": "Maybe User"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateUser.html",
            "namespace": "Network.AWS.IAM.CreateUser",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateUser",
            "method": "post",
            "documentation": "-- | Creates a new user for your AWS account.\n--\n-- For information about limitations on the number of users you can create,\n-- see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html Limitations on IAM Entities\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 11,
                "ctor": "createUser",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cuUserName",
                        "name": "_cuUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to create.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "CreateUser",
                "query": [
                    {
                        "field": "_cuPath",
                        "locationName": "Path",
                        "type": "field"
                    },
                    {
                        "field": "_cuUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cuPath",
                        "name": "_cuPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path for the user name. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAMIdentifiers\u003e in the /Using IAM/ guide.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cuPath",
                        "name": "_cuPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path for the user name. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAMIdentifiers\u003e in the /Using IAM/ guide.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cuUserName",
                        "name": "_cuUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to create.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createVirtualMFADeviceResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "cvmfadrVirtualMFADevice",
                    "name": "_cvmfadrVirtualMFADevice",
                    "shape": "VirtualMFADevice",
                    "locationName": "VirtualMFADevice",
                    "documentation": "-- | A newly created virtual MFA device.",
                    "typeExposed": "VirtualMFADevice",
                    "type": "VirtualMFADevice"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cvmfadrVirtualMFADevice",
                        "name": "_cvmfadrVirtualMFADevice",
                        "shape": "VirtualMFADevice",
                        "locationName": "VirtualMFADevice",
                        "documentation": "-- | A newly created virtual MFA device.",
                        "typeExposed": "VirtualMFADevice",
                        "type": "VirtualMFADevice"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateVirtualMFADeviceResponse",
                "resultWrapper": "CreateVirtualMFADeviceResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cvmfadrVirtualMFADevice",
                        "name": "_cvmfadrVirtualMFADevice",
                        "shape": "VirtualMFADevice",
                        "locationName": "VirtualMFADevice",
                        "documentation": "-- | A newly created virtual MFA device.",
                        "typeExposed": "VirtualMFADevice",
                        "type": "VirtualMFADevice"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateVirtualMFADevice.html",
            "namespace": "Network.AWS.IAM.CreateVirtualMFADevice",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateVirtualMFADevice",
            "method": "post",
            "documentation": "-- | Creates a new virtual MFA device for the AWS account. After creating the\n-- virtual MFA, use 'EnableMFADevice' to attach the MFA device to an IAM user. For\n-- more information about creating and working with virtual MFA devices, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html Using a Virtual MFA Device\u003e in the /Using IAM/ guide.\n--\n-- For information about limits on the number of MFA devices you can create,\n-- see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html Limitations on Entities\u003e in the /Using IAM/ guide.\n--\n-- The seed information contained in the QR code and the Base32 string should\n-- be treated like any other secret access information, such as your AWS access\n-- keys or your passwords. After you provision your virtual device, you should\n-- ensure that the information is destroyed following secure procedures.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "createVirtualMFADevice",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cvmfadVirtualMFADeviceName",
                        "name": "_cvmfadVirtualMFADeviceName",
                        "shape": "virtualMFADeviceName",
                        "locationName": "VirtualMFADeviceName",
                        "documentation": "-- | The name of the virtual MFA device. Use with path to uniquely identify a\n-- virtual MFA device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 21,
                "name": "CreateVirtualMFADevice",
                "query": [
                    {
                        "field": "_cvmfadPath",
                        "locationName": "Path",
                        "type": "field"
                    },
                    {
                        "field": "_cvmfadVirtualMFADeviceName",
                        "locationName": "VirtualMFADeviceName",
                        "type": "field"
                    }
                ],
                "locationPad": 21,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cvmfadPath",
                        "name": "_cvmfadPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path for the virtual MFA device. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cvmfadPath",
                        "name": "_cvmfadPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path for the virtual MFA device. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cvmfadVirtualMFADeviceName",
                        "name": "_cvmfadVirtualMFADeviceName",
                        "shape": "virtualMFADeviceName",
                        "locationName": "VirtualMFADeviceName",
                        "documentation": "-- | The name of the virtual MFA device. Use with path to uniquely identify a\n-- virtual MFA device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deactivateMFADeviceResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeactivateMFADeviceResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeactivateMFADevice.html",
            "namespace": "Network.AWS.IAM.DeactivateMFADevice",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeactivateMFADevice",
            "method": "post",
            "documentation": "-- | Deactivates the specified MFA device and removes it from association with the\n-- user name for which it was originally enabled.\n--\n-- For more information about creating and working with virtual MFA devices, go\n-- to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html Using a Virtual MFA Device\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "deactivateMFADevice",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dmfadUserName",
                        "name": "_dmfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose MFA device you want to deactivate.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dmfadSerialNumber",
                        "name": "_dmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | The serial number that uniquely identifies the MFA device. For virtual MFA\n-- devices, the serial number is the device ARN.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DeactivateMFADevice",
                "query": [
                    {
                        "field": "_dmfadUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_dmfadSerialNumber",
                        "locationName": "SerialNumber",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dmfadSerialNumber",
                        "name": "_dmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | The serial number that uniquely identifies the MFA device. For virtual MFA\n-- devices, the serial number is the device ARN.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dmfadUserName",
                        "name": "_dmfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose MFA device you want to deactivate.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteAccessKeyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteAccessKeyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteAccessKey.html",
            "namespace": "Network.AWS.IAM.DeleteAccessKey",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteAccessKey",
            "method": "post",
            "documentation": "-- | Deletes the access key associated with the specified user.\n--\n-- If you do not specify a user name, IAM determines the user name implicitly\n-- based on the AWS access key ID signing the request. Because this action works\n-- for access keys under the AWS account, you can use this action to manage root\n-- credentials even if the AWS account has no associated users.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "deleteAccessKey",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dakAccessKeyId",
                        "name": "_dakAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "-- | The access key ID for the access key ID and secret access key you want to\n-- delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "DeleteAccessKey",
                "query": [
                    {
                        "field": "_dakUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_dakAccessKeyId",
                        "locationName": "AccessKeyId",
                        "type": "field"
                    }
                ],
                "locationPad": 12,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dakUserName",
                        "name": "_dakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose key you want to delete.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dakAccessKeyId",
                        "name": "_dakAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "-- | The access key ID for the access key ID and secret access key you want to\n-- delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dakUserName",
                        "name": "_dakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose key you want to delete.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteAccountAliasResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteAccountAliasResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteAccountAlias.html",
            "namespace": "Network.AWS.IAM.DeleteAccountAlias",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteAccountAlias",
            "method": "post",
            "documentation": "-- | Deletes the specified AWS account alias. For information about using an AWS\n-- account alias, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html Using an Alias for Your AWS Account ID\u003e in the /Using IAM/\n-- guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteAccountAlias",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "daaAccountAlias",
                    "name": "_daaAccountAlias",
                    "shape": "accountAliasType",
                    "locationName": "AccountAlias",
                    "documentation": "-- | The name of the account alias to delete.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "daaAccountAlias",
                        "name": "_daaAccountAlias",
                        "shape": "accountAliasType",
                        "locationName": "AccountAlias",
                        "documentation": "-- | The name of the account alias to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DeleteAccountAlias",
                "query": [
                    {
                        "field": "_daaAccountAlias",
                        "locationName": "AccountAlias",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "daaAccountAlias",
                        "name": "_daaAccountAlias",
                        "shape": "accountAliasType",
                        "locationName": "AccountAlias",
                        "documentation": "-- | The name of the account alias to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteAccountPasswordPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteAccountPasswordPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteAccountPasswordPolicy.html",
            "namespace": "Network.AWS.IAM.DeleteAccountPasswordPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteAccountPasswordPolicy",
            "method": "post",
            "documentation": "-- | Deletes the password policy for the AWS account.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteAccountPasswordPolicy",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "DeleteAccountPasswordPolicy",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteGroupResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroup.html",
            "namespace": "Network.AWS.IAM.DeleteGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteGroup",
            "method": "post",
            "documentation": "-- | Deletes the specified group. The group must not contain any users or have\n-- any attached policies.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteGroup",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dgGroupName",
                    "name": "_dgGroupName",
                    "shape": "groupNameType",
                    "locationName": "GroupName",
                    "documentation": "-- | The name of the group to delete.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dgGroupName",
                        "name": "_dgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DeleteGroup",
                "query": [
                    {
                        "field": "_dgGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dgGroupName",
                        "name": "_dgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteGroupPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteGroupPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroupPolicy.html",
            "namespace": "Network.AWS.IAM.DeleteGroupPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteGroupPolicy",
            "method": "post",
            "documentation": "-- | Deletes the specified inline policy that is embedded in the specified group.\n--\n-- A group can also have managed policies attached to it. To detach a managed\n-- policy from a group, use 'DetachGroupPolicy'. For more information about\n-- policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and Inline Policies\u003e in the /Using IAM/\n-- guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "deleteGroupPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dgp1GroupName",
                        "name": "_dgp1GroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name (friendly name, not ARN) identifying the group that the policy is\n-- embedded in.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dgp1PolicyName",
                        "name": "_dgp1PolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name identifying the policy document to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DeleteGroupPolicy",
                "query": [
                    {
                        "field": "_dgp1GroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_dgp1PolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dgp1GroupName",
                        "name": "_dgp1GroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name (friendly name, not ARN) identifying the group that the policy is\n-- embedded in.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dgp1PolicyName",
                        "name": "_dgp1PolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name identifying the policy document to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteInstanceProfileResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteInstanceProfileResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteInstanceProfile.html",
            "namespace": "Network.AWS.IAM.DeleteInstanceProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteInstanceProfile",
            "method": "post",
            "documentation": "-- | Deletes the specified instance profile. The instance profile must not have\n-- an associated role.\n--\n-- Make sure you do not have any Amazon EC2 instances running with the\n-- instance profile you are about to delete. Deleting a role or instance profile\n-- that is associated with a running instance will break any applications\n-- running on the instance.   For more information about instance profiles, go\n-- to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html About Instance Profiles\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteInstanceProfile",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dipInstanceProfileName",
                    "name": "_dipInstanceProfileName",
                    "shape": "instanceProfileNameType",
                    "locationName": "InstanceProfileName",
                    "documentation": "-- | The name of the instance profile to delete.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dipInstanceProfileName",
                        "name": "_dipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "-- | The name of the instance profile to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "DeleteInstanceProfile",
                "query": [
                    {
                        "field": "_dipInstanceProfileName",
                        "locationName": "InstanceProfileName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dipInstanceProfileName",
                        "name": "_dipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "-- | The name of the instance profile to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteLoginProfileResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteLoginProfileResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteLoginProfile.html",
            "namespace": "Network.AWS.IAM.DeleteLoginProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteLoginProfile",
            "method": "post",
            "documentation": "-- | Deletes the password for the specified user, which terminates the user's\n-- ability to access AWS services through the AWS Management Console.\n--\n-- Deleting a user's password does not prevent a user from accessing IAM\n-- through the command line interface or the API. To prevent all user access you\n-- must also either make the access key inactive or delete it. For more\n-- information about making keys inactive or deleting them, see 'UpdateAccessKey'\n-- and 'DeleteAccessKey'.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteLoginProfile",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dlpUserName",
                    "name": "_dlpUserName",
                    "shape": "userNameType",
                    "locationName": "UserName",
                    "documentation": "-- | The name of the user whose password you want to delete.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dlpUserName",
                        "name": "_dlpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose password you want to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "DeleteLoginProfile",
                "query": [
                    {
                        "field": "_dlpUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dlpUserName",
                        "name": "_dlpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose password you want to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteOpenIDConnectProviderResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteOpenIDConnectProviderResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteOpenIDConnectProvider.html",
            "namespace": "Network.AWS.IAM.DeleteOpenIDConnectProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteOpenIDConnectProvider",
            "method": "post",
            "documentation": "-- | Deletes an IAM OpenID Connect identity provider.\n--\n-- Deleting an OIDC provider does not update any roles that reference the\n-- provider as a principal in their trust policies. Any attempt to assume a role\n-- that references a provider that has been deleted will fail.\n--\n-- This action is idempotent; it does not fail or return an error if you call\n-- the action for a provider that was already deleted.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteOpenIDConnectProvider",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "doidcpOpenIDConnectProviderArn",
                    "name": "_doidcpOpenIDConnectProviderArn",
                    "shape": "arnType",
                    "locationName": "OpenIDConnectProviderArn",
                    "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect provider to delete.\n-- You can get a list of OpenID Connect provider ARNs by using the 'ListOpenIDConnectProviders' action.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "doidcpOpenIDConnectProviderArn",
                        "name": "_doidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect provider to delete.\n-- You can get a list of OpenID Connect provider ARNs by using the 'ListOpenIDConnectProviders' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "DeleteOpenIDConnectProvider",
                "query": [
                    {
                        "field": "_doidcpOpenIDConnectProviderArn",
                        "locationName": "OpenIDConnectProviderArn",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "doidcpOpenIDConnectProviderArn",
                        "name": "_doidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect provider to delete.\n-- You can get a list of OpenID Connect provider ARNs by using the 'ListOpenIDConnectProviders' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deletePolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeletePolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicy.html",
            "namespace": "Network.AWS.IAM.DeletePolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeletePolicy",
            "method": "post",
            "documentation": "-- | Deletes the specified managed policy.\n--\n-- Before you can delete a managed policy, you must detach the policy from all\n-- users, groups, and roles that it is attached to, and you must delete all of\n-- the policy's versions. The following steps describe the process for deleting\n-- a managed policy:  Detach the policy from all users, groups, and roles that\n-- the policy is attached to, using the 'DetachUserPolicy', 'DetachGroupPolicy', or 'DetachRolePolicy' APIs. To list all the users, groups, and roles that a policy is attached to,\n-- use 'ListEntitiesForPolicy'.  Delete all versions of the policy using 'DeletePolicyVersion'. To list the policy's versions, use 'ListPolicyVersions'. You cannot use 'DeletePolicyVersion' to delete the version that is marked as the default version. You delete the\n-- policy's default version in the next step of the process.  Delete the policy\n-- (this automatically deletes the policy's default version) using this API.\n--\n-- For information about managed policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and InlinePolicies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deletePolicy",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dpPolicyArn",
                    "name": "_dpPolicyArn",
                    "shape": "arnType",
                    "locationName": "PolicyArn",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dpPolicyArn",
                        "name": "_dpPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DeletePolicy",
                "query": [
                    {
                        "field": "_dpPolicyArn",
                        "locationName": "PolicyArn",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dpPolicyArn",
                        "name": "_dpPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deletePolicyVersionResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeletePolicyVersionResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicyVersion.html",
            "namespace": "Network.AWS.IAM.DeletePolicyVersion",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeletePolicyVersion",
            "method": "post",
            "documentation": "-- | Deletes the specified version of the specified managed policy.\n--\n-- You cannot delete the default version of a policy using this API. To delete\n-- the default version of a policy, use 'DeletePolicy'. To find out which version\n-- of a policy is marked as the default version, use 'ListPolicyVersions'.\n--\n-- For information about versions for managed policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html Versioning forManaged Policies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "deletePolicyVersion",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dpvPolicyArn",
                        "name": "_dpvPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dpvVersionId",
                        "name": "_dpvVersionId",
                        "shape": "policyVersionIdType",
                        "locationName": "VersionId",
                        "documentation": "-- | The policy version to delete.\n--\n-- For more information about managed policy versions, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html Versioning forManaged Policies\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DeletePolicyVersion",
                "query": [
                    {
                        "field": "_dpvPolicyArn",
                        "locationName": "PolicyArn",
                        "type": "field"
                    },
                    {
                        "field": "_dpvVersionId",
                        "locationName": "VersionId",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dpvPolicyArn",
                        "name": "_dpvPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dpvVersionId",
                        "name": "_dpvVersionId",
                        "shape": "policyVersionIdType",
                        "locationName": "VersionId",
                        "documentation": "-- | The policy version to delete.\n--\n-- For more information about managed policy versions, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html Versioning forManaged Policies\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteRoleResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteRoleResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRole.html",
            "namespace": "Network.AWS.IAM.DeleteRole",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteRole",
            "method": "post",
            "documentation": "-- | Deletes the specified role. The role must not have any policies attached.\n-- For more information about roles, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html Working with Roles\u003e.\n--\n-- Make sure you do not have any Amazon EC2 instances running with the role\n-- you are about to delete. Deleting a role or instance profile that is\n-- associated with a running instance will break any applications running on the\n-- instance.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteRole",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "drRoleName",
                    "name": "_drRoleName",
                    "shape": "roleNameType",
                    "locationName": "RoleName",
                    "documentation": "-- | The name of the role to delete.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drRoleName",
                        "name": "_drRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "DeleteRole",
                "query": [
                    {
                        "field": "_drRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drRoleName",
                        "name": "_drRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteRolePolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteRolePolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRolePolicy.html",
            "namespace": "Network.AWS.IAM.DeleteRolePolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteRolePolicy",
            "method": "post",
            "documentation": "-- | Deletes the specified inline policy that is embedded in the specified role.\n--\n-- A role can also have managed policies attached to it. To detach a managed\n-- policy from a role, use 'DetachRolePolicy'. For more information about\n-- policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and Inline Policies\u003e in the /Using IAM/\n-- guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "deleteRolePolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drp1RoleName",
                        "name": "_drp1RoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name (friendly name, not ARN) identifying the role that the policy is\n-- embedded in.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drp1PolicyName",
                        "name": "_drp1PolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name identifying the policy document to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DeleteRolePolicy",
                "query": [
                    {
                        "field": "_drp1RoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_drp1PolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drp1PolicyName",
                        "name": "_drp1PolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name identifying the policy document to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drp1RoleName",
                        "name": "_drp1RoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name (friendly name, not ARN) identifying the role that the policy is\n-- embedded in.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteSAMLProviderResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteSAMLProviderResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteSAMLProvider.html",
            "namespace": "Network.AWS.IAM.DeleteSAMLProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteSAMLProvider",
            "method": "post",
            "documentation": "-- | Deletes a SAML provider.\n--\n-- Deleting the provider does not update any roles that reference the SAML\n-- provider as a principal in their trust policies. Any attempt to assume a role\n-- that references a SAML provider that has been deleted will fail.\n--\n-- This operation requires \u003chttp://docs.aws.amazon.com/general/latest/gr/signature-version-4.html Signature Version 4\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteSAMLProvider",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dsamlpSAMLProviderArn",
                    "name": "_dsamlpSAMLProviderArn",
                    "shape": "arnType",
                    "locationName": "SAMLProviderArn",
                    "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider to delete.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dsamlpSAMLProviderArn",
                        "name": "_dsamlpSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "DeleteSAMLProvider",
                "query": [
                    {
                        "field": "_dsamlpSAMLProviderArn",
                        "locationName": "SAMLProviderArn",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dsamlpSAMLProviderArn",
                        "name": "_dsamlpSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteServerCertificateResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteServerCertificateResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteServerCertificate.html",
            "namespace": "Network.AWS.IAM.DeleteServerCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteServerCertificate",
            "method": "post",
            "documentation": "-- | Deletes the specified server certificate.\n--\n-- If you are using a server certificate with Elastic Load Balancing, deleting\n-- the certificate could have implications for your application. If Elastic Load\n-- Balancing doesn't detect the deletion of bound certificates, it may continue\n-- to use the certificates. This could cause Elastic Load Balancing to stop\n-- accepting traffic. We recommend that you remove the reference to the\n-- certificate from Elastic Load Balancing before using this command to delete\n-- the certificate. For more information, go to \u003chttp://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/API_DeleteLoadBalancerListeners.html DeleteLoadBalancerListeners\u003e in\n-- the /Elastic Load Balancing API Reference/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteServerCertificate",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dscServerCertificateName",
                    "name": "_dscServerCertificateName",
                    "shape": "serverCertificateNameType",
                    "locationName": "ServerCertificateName",
                    "documentation": "-- | The name of the server certificate you want to delete.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dscServerCertificateName",
                        "name": "_dscServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "-- | The name of the server certificate you want to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 22,
                "name": "DeleteServerCertificate",
                "query": [
                    {
                        "field": "_dscServerCertificateName",
                        "locationName": "ServerCertificateName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dscServerCertificateName",
                        "name": "_dscServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "-- | The name of the server certificate you want to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteSigningCertificateResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteSigningCertificateResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteSigningCertificate.html",
            "namespace": "Network.AWS.IAM.DeleteSigningCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteSigningCertificate",
            "method": "post",
            "documentation": "-- | Deletes the specified signing certificate associated with the specified user.\n--\n-- If you do not specify a user name, IAM determines the user name implicitly\n-- based on the AWS access key ID signing the request. Because this action works\n-- for access keys under the AWS account, you can use this action to manage root\n-- credentials even if the AWS account has no associated users.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "deleteSigningCertificate",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dscCertificateId",
                        "name": "_dscCertificateId",
                        "shape": "certificateIdType",
                        "locationName": "CertificateId",
                        "documentation": "-- | The ID of the signing certificate to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 14,
                "name": "DeleteSigningCertificate",
                "query": [
                    {
                        "field": "_dscUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_dscCertificateId",
                        "locationName": "CertificateId",
                        "type": "field"
                    }
                ],
                "locationPad": 14,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dscUserName",
                        "name": "_dscUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user the signing certificate belongs to.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dscCertificateId",
                        "name": "_dscCertificateId",
                        "shape": "certificateIdType",
                        "locationName": "CertificateId",
                        "documentation": "-- | The ID of the signing certificate to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dscUserName",
                        "name": "_dscUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user the signing certificate belongs to.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteUserResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteUserResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUser.html",
            "namespace": "Network.AWS.IAM.DeleteUser",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteUser",
            "method": "post",
            "documentation": "-- | Deletes the specified user. The user must not belong to any groups, have any\n-- keys or signing certificates, or have any attached policies.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteUser",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "duUserName",
                    "name": "_duUserName",
                    "shape": "existingUserNameType",
                    "locationName": "UserName",
                    "documentation": "-- | The name of the user to delete.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "duUserName",
                        "name": "_duUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "DeleteUser",
                "query": [
                    {
                        "field": "_duUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "duUserName",
                        "name": "_duUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteUserPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteUserPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUserPolicy.html",
            "namespace": "Network.AWS.IAM.DeleteUserPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteUserPolicy",
            "method": "post",
            "documentation": "-- | Deletes the specified inline policy that is embedded in the specified user.\n--\n-- A user can also have managed policies attached to it. To detach a managed\n-- policy from a user, use 'DetachUserPolicy'. For more information about\n-- policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and Inline Policies\u003e in the /Using IAM/\n-- guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "deleteUserPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dupUserName",
                        "name": "_dupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name (friendly name, not ARN) identifying the user that the policy is\n-- embedded in.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dupPolicyName",
                        "name": "_dupPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name identifying the policy document to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DeleteUserPolicy",
                "query": [
                    {
                        "field": "_dupUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_dupPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dupPolicyName",
                        "name": "_dupPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name identifying the policy document to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dupUserName",
                        "name": "_dupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name (friendly name, not ARN) identifying the user that the policy is\n-- embedded in.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteVirtualMFADeviceResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteVirtualMFADeviceResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteVirtualMFADevice.html",
            "namespace": "Network.AWS.IAM.DeleteVirtualMFADevice",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteVirtualMFADevice",
            "method": "post",
            "documentation": "-- | Deletes a virtual MFA device.\n--\n-- You must deactivate a user's virtual MFA device before you can delete it.\n-- For information about deactivating MFA devices, see 'DeactivateMFADevice'.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteVirtualMFADevice",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dvmfadSerialNumber",
                    "name": "_dvmfadSerialNumber",
                    "shape": "serialNumberType",
                    "locationName": "SerialNumber",
                    "documentation": "-- | The serial number that uniquely identifies the MFA device. For virtual MFA\n-- devices, the serial number is the same as the ARN.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dvmfadSerialNumber",
                        "name": "_dvmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | The serial number that uniquely identifies the MFA device. For virtual MFA\n-- devices, the serial number is the same as the ARN.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DeleteVirtualMFADevice",
                "query": [
                    {
                        "field": "_dvmfadSerialNumber",
                        "locationName": "SerialNumber",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dvmfadSerialNumber",
                        "name": "_dvmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | The serial number that uniquely identifies the MFA device. For virtual MFA\n-- devices, the serial number is the same as the ARN.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "detachGroupPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DetachGroupPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachGroupPolicy.html",
            "namespace": "Network.AWS.IAM.DetachGroupPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DetachGroupPolicy",
            "method": "post",
            "documentation": "-- | Removes the specified managed policy from the specified group.\n--\n-- A group can also have inline policies embedded with it. To delete an inline\n-- policy, use the 'DeleteGroupPolicy' API. For information about policies, refer\n-- to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and Inline Policies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "detachGroupPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dgpGroupName",
                        "name": "_dgpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name (friendly name, not ARN) of the group to detach the policy from.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dgpPolicyArn",
                        "name": "_dgpPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DetachGroupPolicy",
                "query": [
                    {
                        "field": "_dgpGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_dgpPolicyArn",
                        "locationName": "PolicyArn",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dgpGroupName",
                        "name": "_dgpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name (friendly name, not ARN) of the group to detach the policy from.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dgpPolicyArn",
                        "name": "_dgpPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "detachRolePolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DetachRolePolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachRolePolicy.html",
            "namespace": "Network.AWS.IAM.DetachRolePolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DetachRolePolicy",
            "method": "post",
            "documentation": "-- | Removes the specified managed policy from the specified role.\n--\n-- A role can also have inline policies embedded with it. To delete an inline\n-- policy, use the 'DeleteRolePolicy' API. For information about policies, refer\n-- to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and Inline Policies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "detachRolePolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drpRoleName",
                        "name": "_drpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name (friendly name, not ARN) of the role to detach the policy from.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drpPolicyArn",
                        "name": "_drpPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DetachRolePolicy",
                "query": [
                    {
                        "field": "_drpRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_drpPolicyArn",
                        "locationName": "PolicyArn",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drpPolicyArn",
                        "name": "_drpPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drpRoleName",
                        "name": "_drpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name (friendly name, not ARN) of the role to detach the policy from.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "detachUserPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DetachUserPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachUserPolicy.html",
            "namespace": "Network.AWS.IAM.DetachUserPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DetachUserPolicy",
            "method": "post",
            "documentation": "-- | Removes the specified managed policy from the specified user.\n--\n-- A user can also have inline policies embedded with it. To delete an inline\n-- policy, use the 'DeleteUserPolicy' API. For information about policies, refer\n-- to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and Inline Policies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "detachUserPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dup1UserName",
                        "name": "_dup1UserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name (friendly name, not ARN) of the user to detach the policy from.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dup1PolicyArn",
                        "name": "_dup1PolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DetachUserPolicy",
                "query": [
                    {
                        "field": "_dup1UserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_dup1PolicyArn",
                        "locationName": "PolicyArn",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dup1PolicyArn",
                        "name": "_dup1PolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dup1UserName",
                        "name": "_dup1UserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name (friendly name, not ARN) of the user to detach the policy from.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "enableMFADeviceResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "EnableMFADeviceResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_EnableMFADevice.html",
            "namespace": "Network.AWS.IAM.EnableMFADevice",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "EnableMFADevice",
            "method": "post",
            "documentation": "-- | Enables the specified MFA device and associates it with the specified user\n-- name. When enabled, the MFA device is required for every subsequent login by\n-- the user name associated with the device.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "enableMFADevice",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "emfadUserName",
                        "name": "_emfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user for whom you want to enable the MFA device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "emfadSerialNumber",
                        "name": "_emfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | The serial number that uniquely identifies the MFA device. For virtual MFA\n-- devices, the serial number is the device ARN.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "emfadAuthenticationCode1",
                        "name": "_emfadAuthenticationCode1",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode1",
                        "documentation": "-- | An authentication code emitted by the device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "emfadAuthenticationCode2",
                        "name": "_emfadAuthenticationCode2",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode2",
                        "documentation": "-- | A subsequent authentication code emitted by the device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "EnableMFADevice",
                "query": [
                    {
                        "field": "_emfadUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_emfadSerialNumber",
                        "locationName": "SerialNumber",
                        "type": "field"
                    },
                    {
                        "field": "_emfadAuthenticationCode1",
                        "locationName": "AuthenticationCode1",
                        "type": "field"
                    },
                    {
                        "field": "_emfadAuthenticationCode2",
                        "locationName": "AuthenticationCode2",
                        "type": "field"
                    }
                ],
                "locationPad": 20,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "emfadAuthenticationCode1",
                        "name": "_emfadAuthenticationCode1",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode1",
                        "documentation": "-- | An authentication code emitted by the device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "emfadAuthenticationCode2",
                        "name": "_emfadAuthenticationCode2",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode2",
                        "documentation": "-- | A subsequent authentication code emitted by the device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "emfadSerialNumber",
                        "name": "_emfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | The serial number that uniquely identifies the MFA device. For virtual MFA\n-- devices, the serial number is the device ARN.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "emfadUserName",
                        "name": "_emfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user for whom you want to enable the MFA device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 16,
                "ctor": "generateCredentialReportResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GenerateCredentialReportResponse",
                "resultWrapper": "GenerateCredentialReportResult",
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gcrrState",
                        "name": "_gcrrState",
                        "shape": "ReportStateType",
                        "locationName": "State",
                        "documentation": "-- | Information about the state of the credential report.",
                        "typeExposed": "Maybe ReportStateType",
                        "type": "Maybe ReportStateType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gcrrDescription",
                        "name": "_gcrrDescription",
                        "shape": "ReportStateDescriptionType",
                        "locationName": "Description",
                        "documentation": "-- | Information about the credential report.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gcrrDescription",
                        "name": "_gcrrDescription",
                        "shape": "ReportStateDescriptionType",
                        "locationName": "Description",
                        "documentation": "-- | Information about the credential report.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gcrrState",
                        "name": "_gcrrState",
                        "shape": "ReportStateType",
                        "locationName": "State",
                        "documentation": "-- | Information about the state of the credential report.",
                        "typeExposed": "Maybe ReportStateType",
                        "type": "Maybe ReportStateType"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GenerateCredentialReport.html",
            "namespace": "Network.AWS.IAM.GenerateCredentialReport",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GenerateCredentialReport",
            "method": "post",
            "documentation": "-- | Generates a credential report for the AWS account. For more information\n-- about the credential report, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html Getting Credential Reports\u003e in the /Using IAM/\n-- guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "generateCredentialReport",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GenerateCredentialReport",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 21,
                "ctor": "getAccountAuthorizationDetailsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetAccountAuthorizationDetailsResponse",
                "resultWrapper": "GetAccountAuthorizationDetailsResult",
                "locationPad": 16,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gaadrUserDetailList",
                        "name": "_gaadrUserDetailList",
                        "shape": "userDetailListType",
                        "locationName": "UserDetailList",
                        "documentation": "-- | A list containing information about IAM users.",
                        "typeExposed": "[UserDetail]",
                        "type": "List \"member\" UserDetail"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gaadrGroupDetailList",
                        "name": "_gaadrGroupDetailList",
                        "shape": "groupDetailListType",
                        "locationName": "GroupDetailList",
                        "documentation": "-- | A list containing information about IAM groups.",
                        "typeExposed": "[GroupDetail]",
                        "type": "List \"member\" GroupDetail"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gaadrRoleDetailList",
                        "name": "_gaadrRoleDetailList",
                        "shape": "roleDetailListType",
                        "locationName": "RoleDetailList",
                        "documentation": "-- | A list containing information about IAM roles.",
                        "typeExposed": "[RoleDetail]",
                        "type": "List \"member\" RoleDetail"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gaadrIsTruncated",
                        "name": "_gaadrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more items to return. If your results\n-- were truncated, you can make a subsequent pagination request using the 'Marker'\n-- request parameter to retrieve more items.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gaadrMarker",
                        "name": "_gaadrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to use\n-- for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gaadrGroupDetailList",
                        "name": "_gaadrGroupDetailList",
                        "shape": "groupDetailListType",
                        "locationName": "GroupDetailList",
                        "documentation": "-- | A list containing information about IAM groups.",
                        "typeExposed": "[GroupDetail]",
                        "type": "List \"member\" GroupDetail"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gaadrIsTruncated",
                        "name": "_gaadrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more items to return. If your results\n-- were truncated, you can make a subsequent pagination request using the 'Marker'\n-- request parameter to retrieve more items.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gaadrMarker",
                        "name": "_gaadrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to use\n-- for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gaadrRoleDetailList",
                        "name": "_gaadrRoleDetailList",
                        "shape": "roleDetailListType",
                        "locationName": "RoleDetailList",
                        "documentation": "-- | A list containing information about IAM roles.",
                        "typeExposed": "[RoleDetail]",
                        "type": "List \"member\" RoleDetail"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gaadrUserDetailList",
                        "name": "_gaadrUserDetailList",
                        "shape": "userDetailListType",
                        "locationName": "UserDetailList",
                        "documentation": "-- | A list containing information about IAM users.",
                        "typeExposed": "[UserDetail]",
                        "type": "List \"member\" UserDetail"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccountAuthorizationDetails.html",
            "namespace": "Network.AWS.IAM.GetAccountAuthorizationDetails",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetAccountAuthorizationDetails",
            "method": "post",
            "documentation": "-- | Retrieves information about all IAM users, groups, and roles in your account,\n-- including their relationships to one another and their policies. Use this API\n-- to obtain a snapshot of the configuration of IAM permissions (users, groups,\n-- roles, and their policies) in your account.\n--\n-- You can optionally filter the results using the 'Filter' parameter. You can\n-- paginate the results using the 'MaxItems' and 'Marker' parameters.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "getAccountAuthorizationDetails",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "GetAccountAuthorizationDetails",
                "query": [
                    {
                        "field": "_gaadFilter",
                        "locationName": "Filter",
                        "type": "field"
                    },
                    {
                        "field": "_gaadMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    },
                    {
                        "field": "_gaadMarker",
                        "locationName": "Marker",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gaadFilter",
                        "name": "_gaadFilter",
                        "shape": "entityListType",
                        "locationName": "Filter",
                        "documentation": "-- | A list of entity types (user, group, or role) for filtering the results.",
                        "typeExposed": "[EntityType]",
                        "type": "List \"member\" EntityType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gaadMaxItems",
                        "name": "_gaadMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of items\n-- you want in the response. If there are additional items beyond the maximum\n-- you specify, the 'IsTruncated' response element is 'true'. This parameter is\n-- optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gaadMarker",
                        "name": "_gaadMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request after\n-- you've received a response where the results are truncated. Set it to the\n-- value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gaadFilter",
                        "name": "_gaadFilter",
                        "shape": "entityListType",
                        "locationName": "Filter",
                        "documentation": "-- | A list of entity types (user, group, or role) for filtering the results.",
                        "typeExposed": "[EntityType]",
                        "type": "List \"member\" EntityType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gaadMarker",
                        "name": "_gaadMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request after\n-- you've received a response where the results are truncated. Set it to the\n-- value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gaadMaxItems",
                        "name": "_gaadMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of items\n-- you want in the response. If there are additional items beyond the maximum\n-- you specify, the 'IsTruncated' response element is 'true'. This parameter is\n-- optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getAccountPasswordPolicyResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "gapprPasswordPolicy",
                    "name": "_gapprPasswordPolicy",
                    "shape": "PasswordPolicy",
                    "locationName": "PasswordPolicy",
                    "documentation": null,
                    "typeExposed": "PasswordPolicy",
                    "type": "PasswordPolicy"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gapprPasswordPolicy",
                        "name": "_gapprPasswordPolicy",
                        "shape": "PasswordPolicy",
                        "locationName": "PasswordPolicy",
                        "documentation": null,
                        "typeExposed": "PasswordPolicy",
                        "type": "PasswordPolicy"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetAccountPasswordPolicyResponse",
                "resultWrapper": "GetAccountPasswordPolicyResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gapprPasswordPolicy",
                        "name": "_gapprPasswordPolicy",
                        "shape": "PasswordPolicy",
                        "locationName": "PasswordPolicy",
                        "documentation": null,
                        "typeExposed": "PasswordPolicy",
                        "type": "PasswordPolicy"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccountPasswordPolicy.html",
            "namespace": "Network.AWS.IAM.GetAccountPasswordPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetAccountPasswordPolicy",
            "method": "post",
            "documentation": "-- | Retrieves the password policy for the AWS account. For more information\n-- about using a password policy, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html Managing an IAM Password Policy\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getAccountPasswordPolicy",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetAccountPasswordPolicy",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getAccountSummaryResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_EMap",
                    "lensMapping": "_EMap",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "gasrSummaryMap",
                    "name": "_gasrSummaryMap",
                    "shape": "summaryMapType",
                    "locationName": "SummaryMap",
                    "documentation": "-- | A set of key value pairs containing information about IAM entity usage and\n-- IAM quotas.\n--\n-- 'SummaryMap' contains the following keys:   AccessKeysPerUserQuota\n--\n-- The maximum number of active access keys allowed for each IAM user.\n--\n-- AccountAccessKeysPresent\n--\n-- This value is 1 if the AWS account (root) has an access key, otherwise it is\n-- 0.\n--\n-- AccountMFAEnabled\n--\n-- This value is 1 if the AWS account (root) has an MFA device assigned,\n-- otherwise it is 0.\n--\n-- AccountSigningCertificatesPresent\n--\n-- This value is 1 if the AWS account (root) has a signing certificate,\n-- otherwise it is 0.\n--\n-- AssumeRolePolicySizeQuota\n--\n-- The maximum allowed size for assume role policy documents (trust policies),\n-- in non-whitespace characters.\n--\n-- AttachedPoliciesPerGroupQuota\n--\n-- The maximum number of managed policies that can be attached to an IAM group.\n--\n-- AttachedPoliciesPerRoleQuota\n--\n-- The maximum number of managed policies that can be attached to an IAM role.\n--\n-- AttachedPoliciesPerUserQuota\n--\n-- The maximum number of managed policies that can be attached to an IAM user.\n--\n-- GroupPolicySizeQuota\n--\n-- The maximum allowed size for the aggregate of all inline policies embedded\n-- in an IAM group, in non-whitespace characters.\n--\n-- Groups\n--\n-- The number of IAM groups in the AWS account.\n--\n-- GroupsPerUserQuota\n--\n-- The maximum number of IAM groups each IAM user can belong to.\n--\n-- GroupsQuota\n--\n-- The maximum number of IAM groups allowed in the AWS account.\n--\n-- InstanceProfiles\n--\n-- The number of instance profiles in the AWS account.\n--\n-- InstanceProfilesQuota\n--\n-- The maximum number of instance profiles allowed in the AWS account.\n--\n-- MFADevices\n--\n-- The number of MFA devices in the AWS account, including those assigned and\n-- unassigned.\n--\n-- MFADevicesInUse\n--\n-- The number of MFA devices that have been assigned to an IAM user or to the\n-- AWS account (root).\n--\n-- Policies\n--\n-- The number of customer managed policies in the AWS account.\n--\n-- PoliciesQuota\n--\n-- The maximum number of customer managed policies allowed in the AWS account.\n--\n-- PolicySizeQuota\n--\n-- The maximum allowed size of a customer managed policy, in non-whitespace\n-- characters.\n--\n-- PolicyVersionsInUse\n--\n-- The number of managed policies that are attached to IAM users, groups, or\n-- roles in the AWS account.\n--\n-- PolicyVersionsInUseQuota\n--\n-- The maximum number of managed policies that can be attached to IAM users,\n-- groups, or roles in the AWS account.\n--\n-- Providers\n--\n-- The number of identity providers in the AWS account.\n--\n-- RolePolicySizeQuota\n--\n-- The maximum allowed size for the aggregate of all inline policies (access\n-- policies, not the trust policy) embedded in an IAM role, in non-whitespace\n-- characters.\n--\n-- Roles\n--\n-- The number of IAM roles in the AWS account.\n--\n-- RolesQuota\n--\n-- The maximum number of IAM roles allowed in the AWS account.\n--\n-- ServerCertificates\n--\n-- The number of server certificates in the AWS account.\n--\n-- ServerCertificatesQuota\n--\n-- The maximum number of server certificates allowed in the AWS account.\n--\n-- SigningCertificatesPerUserQuota\n--\n-- The maximum number of X.509 signing certificates allowed for each IAM user.\n--\n-- UserPolicySizeQuota\n--\n-- The maximum allowed size for the aggregate of all inline policies embedded\n-- in an IAM user, in non-whitespace characters.\n--\n-- Users\n--\n-- The number of IAM users in the AWS account.\n--\n-- UsersQuota\n--\n-- The maximum number of IAM users allowed in the AWS account.\n--\n-- VersionsPerPolicyQuota\n--\n-- The maximum number of policy versions allowed for each managed policy.\n--\n--",
                    "typeExposed": "HashMap SummaryKeyType Int",
                    "type": "EMap \"entry\" \"key\" \"value\" SummaryKeyType Int"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetAccountSummaryResponse",
                "resultWrapper": "GetAccountSummaryResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gasrSummaryMap",
                        "name": "_gasrSummaryMap",
                        "shape": "summaryMapType",
                        "locationName": "SummaryMap",
                        "documentation": "-- | A set of key value pairs containing information about IAM entity usage and\n-- IAM quotas.\n--\n-- 'SummaryMap' contains the following keys:   AccessKeysPerUserQuota\n--\n-- The maximum number of active access keys allowed for each IAM user.\n--\n-- AccountAccessKeysPresent\n--\n-- This value is 1 if the AWS account (root) has an access key, otherwise it is\n-- 0.\n--\n-- AccountMFAEnabled\n--\n-- This value is 1 if the AWS account (root) has an MFA device assigned,\n-- otherwise it is 0.\n--\n-- AccountSigningCertificatesPresent\n--\n-- This value is 1 if the AWS account (root) has a signing certificate,\n-- otherwise it is 0.\n--\n-- AssumeRolePolicySizeQuota\n--\n-- The maximum allowed size for assume role policy documents (trust policies),\n-- in non-whitespace characters.\n--\n-- AttachedPoliciesPerGroupQuota\n--\n-- The maximum number of managed policies that can be attached to an IAM group.\n--\n-- AttachedPoliciesPerRoleQuota\n--\n-- The maximum number of managed policies that can be attached to an IAM role.\n--\n-- AttachedPoliciesPerUserQuota\n--\n-- The maximum number of managed policies that can be attached to an IAM user.\n--\n-- GroupPolicySizeQuota\n--\n-- The maximum allowed size for the aggregate of all inline policies embedded\n-- in an IAM group, in non-whitespace characters.\n--\n-- Groups\n--\n-- The number of IAM groups in the AWS account.\n--\n-- GroupsPerUserQuota\n--\n-- The maximum number of IAM groups each IAM user can belong to.\n--\n-- GroupsQuota\n--\n-- The maximum number of IAM groups allowed in the AWS account.\n--\n-- InstanceProfiles\n--\n-- The number of instance profiles in the AWS account.\n--\n-- InstanceProfilesQuota\n--\n-- The maximum number of instance profiles allowed in the AWS account.\n--\n-- MFADevices\n--\n-- The number of MFA devices in the AWS account, including those assigned and\n-- unassigned.\n--\n-- MFADevicesInUse\n--\n-- The number of MFA devices that have been assigned to an IAM user or to the\n-- AWS account (root).\n--\n-- Policies\n--\n-- The number of customer managed policies in the AWS account.\n--\n-- PoliciesQuota\n--\n-- The maximum number of customer managed policies allowed in the AWS account.\n--\n-- PolicySizeQuota\n--\n-- The maximum allowed size of a customer managed policy, in non-whitespace\n-- characters.\n--\n-- PolicyVersionsInUse\n--\n-- The number of managed policies that are attached to IAM users, groups, or\n-- roles in the AWS account.\n--\n-- PolicyVersionsInUseQuota\n--\n-- The maximum number of managed policies that can be attached to IAM users,\n-- groups, or roles in the AWS account.\n--\n-- Providers\n--\n-- The number of identity providers in the AWS account.\n--\n-- RolePolicySizeQuota\n--\n-- The maximum allowed size for the aggregate of all inline policies (access\n-- policies, not the trust policy) embedded in an IAM role, in non-whitespace\n-- characters.\n--\n-- Roles\n--\n-- The number of IAM roles in the AWS account.\n--\n-- RolesQuota\n--\n-- The maximum number of IAM roles allowed in the AWS account.\n--\n-- ServerCertificates\n--\n-- The number of server certificates in the AWS account.\n--\n-- ServerCertificatesQuota\n--\n-- The maximum number of server certificates allowed in the AWS account.\n--\n-- SigningCertificatesPerUserQuota\n--\n-- The maximum number of X.509 signing certificates allowed for each IAM user.\n--\n-- UserPolicySizeQuota\n--\n-- The maximum allowed size for the aggregate of all inline policies embedded\n-- in an IAM user, in non-whitespace characters.\n--\n-- Users\n--\n-- The number of IAM users in the AWS account.\n--\n-- UsersQuota\n--\n-- The maximum number of IAM users allowed in the AWS account.\n--\n-- VersionsPerPolicyQuota\n--\n-- The maximum number of policy versions allowed for each managed policy.\n--\n--",
                        "typeExposed": "HashMap SummaryKeyType Int",
                        "type": "EMap \"entry\" \"key\" \"value\" SummaryKeyType Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gasrSummaryMap",
                        "name": "_gasrSummaryMap",
                        "shape": "summaryMapType",
                        "locationName": "SummaryMap",
                        "documentation": "-- | A set of key value pairs containing information about IAM entity usage and\n-- IAM quotas.\n--\n-- 'SummaryMap' contains the following keys:   AccessKeysPerUserQuota\n--\n-- The maximum number of active access keys allowed for each IAM user.\n--\n-- AccountAccessKeysPresent\n--\n-- This value is 1 if the AWS account (root) has an access key, otherwise it is\n-- 0.\n--\n-- AccountMFAEnabled\n--\n-- This value is 1 if the AWS account (root) has an MFA device assigned,\n-- otherwise it is 0.\n--\n-- AccountSigningCertificatesPresent\n--\n-- This value is 1 if the AWS account (root) has a signing certificate,\n-- otherwise it is 0.\n--\n-- AssumeRolePolicySizeQuota\n--\n-- The maximum allowed size for assume role policy documents (trust policies),\n-- in non-whitespace characters.\n--\n-- AttachedPoliciesPerGroupQuota\n--\n-- The maximum number of managed policies that can be attached to an IAM group.\n--\n-- AttachedPoliciesPerRoleQuota\n--\n-- The maximum number of managed policies that can be attached to an IAM role.\n--\n-- AttachedPoliciesPerUserQuota\n--\n-- The maximum number of managed policies that can be attached to an IAM user.\n--\n-- GroupPolicySizeQuota\n--\n-- The maximum allowed size for the aggregate of all inline policies embedded\n-- in an IAM group, in non-whitespace characters.\n--\n-- Groups\n--\n-- The number of IAM groups in the AWS account.\n--\n-- GroupsPerUserQuota\n--\n-- The maximum number of IAM groups each IAM user can belong to.\n--\n-- GroupsQuota\n--\n-- The maximum number of IAM groups allowed in the AWS account.\n--\n-- InstanceProfiles\n--\n-- The number of instance profiles in the AWS account.\n--\n-- InstanceProfilesQuota\n--\n-- The maximum number of instance profiles allowed in the AWS account.\n--\n-- MFADevices\n--\n-- The number of MFA devices in the AWS account, including those assigned and\n-- unassigned.\n--\n-- MFADevicesInUse\n--\n-- The number of MFA devices that have been assigned to an IAM user or to the\n-- AWS account (root).\n--\n-- Policies\n--\n-- The number of customer managed policies in the AWS account.\n--\n-- PoliciesQuota\n--\n-- The maximum number of customer managed policies allowed in the AWS account.\n--\n-- PolicySizeQuota\n--\n-- The maximum allowed size of a customer managed policy, in non-whitespace\n-- characters.\n--\n-- PolicyVersionsInUse\n--\n-- The number of managed policies that are attached to IAM users, groups, or\n-- roles in the AWS account.\n--\n-- PolicyVersionsInUseQuota\n--\n-- The maximum number of managed policies that can be attached to IAM users,\n-- groups, or roles in the AWS account.\n--\n-- Providers\n--\n-- The number of identity providers in the AWS account.\n--\n-- RolePolicySizeQuota\n--\n-- The maximum allowed size for the aggregate of all inline policies (access\n-- policies, not the trust policy) embedded in an IAM role, in non-whitespace\n-- characters.\n--\n-- Roles\n--\n-- The number of IAM roles in the AWS account.\n--\n-- RolesQuota\n--\n-- The maximum number of IAM roles allowed in the AWS account.\n--\n-- ServerCertificates\n--\n-- The number of server certificates in the AWS account.\n--\n-- ServerCertificatesQuota\n--\n-- The maximum number of server certificates allowed in the AWS account.\n--\n-- SigningCertificatesPerUserQuota\n--\n-- The maximum number of X.509 signing certificates allowed for each IAM user.\n--\n-- UserPolicySizeQuota\n--\n-- The maximum allowed size for the aggregate of all inline policies embedded\n-- in an IAM user, in non-whitespace characters.\n--\n-- Users\n--\n-- The number of IAM users in the AWS account.\n--\n-- UsersQuota\n--\n-- The maximum number of IAM users allowed in the AWS account.\n--\n-- VersionsPerPolicyQuota\n--\n-- The maximum number of policy versions allowed for each managed policy.\n--\n--",
                        "typeExposed": "HashMap SummaryKeyType Int",
                        "type": "EMap \"entry\" \"key\" \"value\" SummaryKeyType Int"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccountSummary.html",
            "namespace": "Network.AWS.IAM.GetAccountSummary",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetAccountSummary",
            "method": "post",
            "documentation": "-- | Retrieves information about IAM entity usage and IAM quotas in the AWS\n-- account.\n--\n-- For information about limitations on IAM entities, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html Limitations on IAMEntities\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getAccountSummary",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetAccountSummary",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 18,
                "ctor": "getCredentialReportResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetCredentialReportResponse",
                "resultWrapper": "GetCredentialReportResult",
                "locationPad": 14,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gcrrContent",
                        "name": "_gcrrContent",
                        "shape": "ReportContentType",
                        "locationName": "Content",
                        "documentation": "-- | Contains the credential report. The report is Base64-encoded.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gcrrReportFormat",
                        "name": "_gcrrReportFormat",
                        "shape": "ReportFormatType",
                        "locationName": "ReportFormat",
                        "documentation": "-- | The format (MIME type) of the credential report.",
                        "typeExposed": "Maybe ReportFormatType",
                        "type": "Maybe ReportFormatType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gcrrGeneratedTime",
                        "name": "_gcrrGeneratedTime",
                        "shape": "dateType",
                        "locationName": "GeneratedTime",
                        "documentation": "-- | The date and time when the credential report was created, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601date-time format\u003e.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gcrrContent",
                        "name": "_gcrrContent",
                        "shape": "ReportContentType",
                        "locationName": "Content",
                        "documentation": "-- | Contains the credential report. The report is Base64-encoded.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gcrrGeneratedTime",
                        "name": "_gcrrGeneratedTime",
                        "shape": "dateType",
                        "locationName": "GeneratedTime",
                        "documentation": "-- | The date and time when the credential report was created, in \u003chttp://www.iso.org/iso/iso8601 ISO 8601date-time format\u003e.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gcrrReportFormat",
                        "name": "_gcrrReportFormat",
                        "shape": "ReportFormatType",
                        "locationName": "ReportFormat",
                        "documentation": "-- | The format (MIME type) of the credential report.",
                        "typeExposed": "Maybe ReportFormatType",
                        "type": "Maybe ReportFormatType"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetCredentialReport.html",
            "namespace": "Network.AWS.IAM.GetCredentialReport",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetCredentialReport",
            "method": "post",
            "documentation": "-- | Retrieves a credential report for the AWS account. For more information\n-- about the credential report, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html Getting Credential Reports\u003e in the /Using IAM/\n-- guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getCredentialReport",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetCredentialReport",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 15,
                "ctor": "getGroupResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggrGroup",
                        "name": "_ggrGroup",
                        "shape": "Group",
                        "locationName": "Group",
                        "documentation": "-- | Information about the group.",
                        "typeExposed": "Group",
                        "type": "Group"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetGroupResponse",
                "resultWrapper": "GetGroupResult",
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggrUsers",
                        "name": "_ggrUsers",
                        "shape": "userListType",
                        "locationName": "Users",
                        "documentation": "-- | A list of users in the group.",
                        "typeExposed": "[User]",
                        "type": "List \"member\" User"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ggrIsTruncated",
                        "name": "_ggrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more user names to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more user names in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ggrMarker",
                        "name": "_ggrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If IsTruncated is 'true', then this element is present and contains the value\n-- to use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggrGroup",
                        "name": "_ggrGroup",
                        "shape": "Group",
                        "locationName": "Group",
                        "documentation": "-- | Information about the group.",
                        "typeExposed": "Group",
                        "type": "Group"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ggrIsTruncated",
                        "name": "_ggrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more user names to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more user names in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ggrMarker",
                        "name": "_ggrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If IsTruncated is 'true', then this element is present and contains the value\n-- to use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggrUsers",
                        "name": "_ggrUsers",
                        "shape": "userListType",
                        "locationName": "Users",
                        "documentation": "-- | A list of users in the group.",
                        "typeExposed": "[User]",
                        "type": "List \"member\" User"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetGroup.html",
            "namespace": "Network.AWS.IAM.GetGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "ggrIsTruncated",
                "token": {
                    "input": "ggMarker",
                    "outputRequired": false,
                    "output": "ggrMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "GetGroup",
            "method": "post",
            "documentation": "-- | Returns a list of users that are in the specified group. You can paginate\n-- the results using the 'MaxItems' and 'Marker' parameters.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "getGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggGroupName",
                        "name": "_ggGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "GetGroup",
                "query": [
                    {
                        "field": "_ggGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_ggMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_ggMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ggMarker",
                        "name": "_ggMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ggMaxItems",
                        "name": "_ggMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- groups you want in the response. If there are additional groups beyond the\n-- maximum you specify, the 'IsTruncated' response element is 'true'. This parameter\n-- is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggGroupName",
                        "name": "_ggGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ggMarker",
                        "name": "_ggMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ggMaxItems",
                        "name": "_ggMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- groups you want in the response. If there are additional groups beyond the\n-- maximum you specify, the 'IsTruncated' response element is 'true'. This parameter\n-- is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "getGroupPolicyResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggprGroupName",
                        "name": "_ggprGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The group the policy is associated with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggprPolicyName",
                        "name": "_ggprPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggprPolicyDocument",
                        "name": "_ggprPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetGroupPolicyResponse",
                "resultWrapper": "GetGroupPolicyResult",
                "locationPad": 15,
                "type": "record",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggprGroupName",
                        "name": "_ggprGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The group the policy is associated with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggprPolicyDocument",
                        "name": "_ggprPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggprPolicyName",
                        "name": "_ggprPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetGroupPolicy.html",
            "namespace": "Network.AWS.IAM.GetGroupPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetGroupPolicy",
            "method": "post",
            "documentation": "-- | Retrieves the specified inline policy document that is embedded in the\n-- specified group.\n--\n-- A group can also have managed policies attached to it. To retrieve a managed\n-- policy document that is attached to a group, use 'GetPolicy' to determine the\n-- policy's default version, then use 'GetPolicyVersion' to retrieve the policy\n-- document.\n--\n-- For more information about policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and InlinePolicies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "getGroupPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggpGroupName",
                        "name": "_ggpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group the policy is associated with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggpPolicyName",
                        "name": "_ggpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy document to get.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "GetGroupPolicy",
                "query": [
                    {
                        "field": "_ggpGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_ggpPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggpGroupName",
                        "name": "_ggpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group the policy is associated with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ggpPolicyName",
                        "name": "_ggpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy document to get.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getInstanceProfileResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "giprInstanceProfile",
                    "name": "_giprInstanceProfile",
                    "shape": "InstanceProfile",
                    "locationName": "InstanceProfile",
                    "documentation": "-- | Information about the instance profile.",
                    "typeExposed": "InstanceProfile",
                    "type": "InstanceProfile"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "giprInstanceProfile",
                        "name": "_giprInstanceProfile",
                        "shape": "InstanceProfile",
                        "locationName": "InstanceProfile",
                        "documentation": "-- | Information about the instance profile.",
                        "typeExposed": "InstanceProfile",
                        "type": "InstanceProfile"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetInstanceProfileResponse",
                "resultWrapper": "GetInstanceProfileResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "giprInstanceProfile",
                        "name": "_giprInstanceProfile",
                        "shape": "InstanceProfile",
                        "locationName": "InstanceProfile",
                        "documentation": "-- | Information about the instance profile.",
                        "typeExposed": "InstanceProfile",
                        "type": "InstanceProfile"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetInstanceProfile.html",
            "namespace": "Network.AWS.IAM.GetInstanceProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetInstanceProfile",
            "method": "post",
            "documentation": "-- | Retrieves information about the specified instance profile, including the\n-- instance profile's path, GUID, ARN, and role. For more information about\n-- instance profiles, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html About Instance Profiles\u003e. For more information about\n-- ARNs, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs ARNs\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getInstanceProfile",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "gipInstanceProfileName",
                    "name": "_gipInstanceProfileName",
                    "shape": "instanceProfileNameType",
                    "locationName": "InstanceProfileName",
                    "documentation": "-- | The name of the instance profile to get information about.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gipInstanceProfileName",
                        "name": "_gipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "-- | The name of the instance profile to get information about.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "GetInstanceProfile",
                "query": [
                    {
                        "field": "_gipInstanceProfileName",
                        "locationName": "InstanceProfileName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gipInstanceProfileName",
                        "name": "_gipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "-- | The name of the instance profile to get information about.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getLoginProfileResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "glprLoginProfile",
                    "name": "_glprLoginProfile",
                    "shape": "LoginProfile",
                    "locationName": "LoginProfile",
                    "documentation": "-- | The user name and password create date for the user.",
                    "typeExposed": "LoginProfile",
                    "type": "LoginProfile"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "glprLoginProfile",
                        "name": "_glprLoginProfile",
                        "shape": "LoginProfile",
                        "locationName": "LoginProfile",
                        "documentation": "-- | The user name and password create date for the user.",
                        "typeExposed": "LoginProfile",
                        "type": "LoginProfile"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetLoginProfileResponse",
                "resultWrapper": "GetLoginProfileResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "glprLoginProfile",
                        "name": "_glprLoginProfile",
                        "shape": "LoginProfile",
                        "locationName": "LoginProfile",
                        "documentation": "-- | The user name and password create date for the user.",
                        "typeExposed": "LoginProfile",
                        "type": "LoginProfile"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetLoginProfile.html",
            "namespace": "Network.AWS.IAM.GetLoginProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetLoginProfile",
            "method": "post",
            "documentation": "-- | Retrieves the user name and password-creation date for the specified user.\n-- If the user has not been assigned a password, the action returns a 404 ('NoSuchEntity') error.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getLoginProfile",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "glpUserName",
                    "name": "_glpUserName",
                    "shape": "userNameType",
                    "locationName": "UserName",
                    "documentation": "-- | The name of the user whose login profile you want to retrieve.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "glpUserName",
                        "name": "_glpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose login profile you want to retrieve.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "GetLoginProfile",
                "query": [
                    {
                        "field": "_glpUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "glpUserName",
                        "name": "_glpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose login profile you want to retrieve.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 22,
                "ctor": "getOpenIDConnectProviderResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetOpenIDConnectProviderResponse",
                "resultWrapper": "GetOpenIDConnectProviderResult",
                "locationPad": 15,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "goidcprUrl",
                        "name": "_goidcprUrl",
                        "shape": "OpenIDConnectProviderUrlType",
                        "locationName": "Url",
                        "documentation": "-- | The URL that the IAM OpenID Connect provider is associated with. For more\n-- information, see 'CreateOpenIDConnectProvider'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "goidcprClientIDList",
                        "name": "_goidcprClientIDList",
                        "shape": "clientIDListType",
                        "locationName": "ClientIDList",
                        "documentation": "-- | A list of client IDs (also known as audiences) that are associated with the\n-- specified IAM OpenID Connect provider. For more information, see 'CreateOpenIDConnectProvider'.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "goidcprThumbprintList",
                        "name": "_goidcprThumbprintList",
                        "shape": "thumbprintListType",
                        "locationName": "ThumbprintList",
                        "documentation": "-- | A list of certificate thumbprints that are associated with the specified IAM\n-- OpenID Connect provider. For more information, see 'CreateOpenIDConnectProvider'\n-- .",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "goidcprCreateDate",
                        "name": "_goidcprCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time when the IAM OpenID Connect provider entity was created in\n-- the AWS account.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "goidcprClientIDList",
                        "name": "_goidcprClientIDList",
                        "shape": "clientIDListType",
                        "locationName": "ClientIDList",
                        "documentation": "-- | A list of client IDs (also known as audiences) that are associated with the\n-- specified IAM OpenID Connect provider. For more information, see 'CreateOpenIDConnectProvider'.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "goidcprCreateDate",
                        "name": "_goidcprCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time when the IAM OpenID Connect provider entity was created in\n-- the AWS account.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "goidcprThumbprintList",
                        "name": "_goidcprThumbprintList",
                        "shape": "thumbprintListType",
                        "locationName": "ThumbprintList",
                        "documentation": "-- | A list of certificate thumbprints that are associated with the specified IAM\n-- OpenID Connect provider. For more information, see 'CreateOpenIDConnectProvider'\n-- .",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "goidcprUrl",
                        "name": "_goidcprUrl",
                        "shape": "OpenIDConnectProviderUrlType",
                        "locationName": "Url",
                        "documentation": "-- | The URL that the IAM OpenID Connect provider is associated with. For more\n-- information, see 'CreateOpenIDConnectProvider'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetOpenIDConnectProvider.html",
            "namespace": "Network.AWS.IAM.GetOpenIDConnectProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetOpenIDConnectProvider",
            "method": "post",
            "documentation": "-- | Returns information about the specified OpenID Connect provider.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getOpenIDConnectProvider",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "goidcpOpenIDConnectProviderArn",
                    "name": "_goidcpOpenIDConnectProviderArn",
                    "shape": "arnType",
                    "locationName": "OpenIDConnectProviderArn",
                    "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to\n-- get information for. You can get a list of OIDC provider ARNs by using the 'ListOpenIDConnectProviders' action.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "goidcpOpenIDConnectProviderArn",
                        "name": "_goidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to\n-- get information for. You can get a list of OIDC provider ARNs by using the 'ListOpenIDConnectProviders' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "GetOpenIDConnectProvider",
                "query": [
                    {
                        "field": "_goidcpOpenIDConnectProviderArn",
                        "locationName": "OpenIDConnectProviderArn",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "goidcpOpenIDConnectProviderArn",
                        "name": "_goidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to\n-- get information for. You can get a list of OIDC provider ARNs by using the 'ListOpenIDConnectProviders' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getPolicyResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "gprPolicy",
                    "name": "_gprPolicy",
                    "shape": "Policy",
                    "locationName": "Policy",
                    "documentation": "-- | Information about the policy.",
                    "typeExposed": "Maybe Policy",
                    "type": "Maybe Policy"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetPolicyResponse",
                "resultWrapper": "GetPolicyResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gprPolicy",
                        "name": "_gprPolicy",
                        "shape": "Policy",
                        "locationName": "Policy",
                        "documentation": "-- | Information about the policy.",
                        "typeExposed": "Maybe Policy",
                        "type": "Maybe Policy"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gprPolicy",
                        "name": "_gprPolicy",
                        "shape": "Policy",
                        "locationName": "Policy",
                        "documentation": "-- | Information about the policy.",
                        "typeExposed": "Maybe Policy",
                        "type": "Maybe Policy"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetPolicy.html",
            "namespace": "Network.AWS.IAM.GetPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetPolicy",
            "method": "post",
            "documentation": "-- | Retrieves information about the specified managed policy, including the\n-- policy's default version and the total number of users, groups, and roles\n-- that the policy is attached to. For a list of the specific users, groups, and\n-- roles that the policy is attached to, use the 'ListEntitiesForPolicy' API. This\n-- API returns metadata about the policy. To retrieve the policy document for a\n-- specific version of the policy, use 'GetPolicyVersion'.\n--\n-- This API retrieves information about managed policies. To retrieve\n-- information about an inline policy that is embedded with a user, group, or\n-- role, use the 'GetUserPolicy', 'GetGroupPolicy', or 'GetRolePolicy' API.\n--\n-- For more information about policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and InlinePolicies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getPolicy",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "gpPolicyArn",
                    "name": "_gpPolicyArn",
                    "shape": "arnType",
                    "locationName": "PolicyArn",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gpPolicyArn",
                        "name": "_gpPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "GetPolicy",
                "query": [
                    {
                        "field": "_gpPolicyArn",
                        "locationName": "PolicyArn",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gpPolicyArn",
                        "name": "_gpPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getPolicyVersionResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "gpvrPolicyVersion",
                    "name": "_gpvrPolicyVersion",
                    "shape": "PolicyVersion",
                    "locationName": "PolicyVersion",
                    "documentation": "-- | Information about the policy version.\n--\n-- For more information about managed policy versions, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html Versioning forManaged Policies\u003e in the /Using IAM/ guide.",
                    "typeExposed": "Maybe PolicyVersion",
                    "type": "Maybe PolicyVersion"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetPolicyVersionResponse",
                "resultWrapper": "GetPolicyVersionResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gpvrPolicyVersion",
                        "name": "_gpvrPolicyVersion",
                        "shape": "PolicyVersion",
                        "locationName": "PolicyVersion",
                        "documentation": "-- | Information about the policy version.\n--\n-- For more information about managed policy versions, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html Versioning forManaged Policies\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Maybe PolicyVersion",
                        "type": "Maybe PolicyVersion"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gpvrPolicyVersion",
                        "name": "_gpvrPolicyVersion",
                        "shape": "PolicyVersion",
                        "locationName": "PolicyVersion",
                        "documentation": "-- | Information about the policy version.\n--\n-- For more information about managed policy versions, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html Versioning forManaged Policies\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Maybe PolicyVersion",
                        "type": "Maybe PolicyVersion"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetPolicyVersion.html",
            "namespace": "Network.AWS.IAM.GetPolicyVersion",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetPolicyVersion",
            "method": "post",
            "documentation": "-- | Retrieves information about the specified version of the specified managed\n-- policy, including the policy document.\n--\n-- To list the available versions for a policy, use 'ListPolicyVersions'.\n--\n-- This API retrieves information about managed policies. To retrieve\n-- information about an inline policy that is embedded in a user, group, or\n-- role, use the 'GetUserPolicy', 'GetGroupPolicy', or 'GetRolePolicy' API.\n--\n-- For more information about the types of policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policiesand Inline Policies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "getPolicyVersion",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gpvPolicyArn",
                        "name": "_gpvPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gpvVersionId",
                        "name": "_gpvVersionId",
                        "shape": "policyVersionIdType",
                        "locationName": "VersionId",
                        "documentation": "-- | Identifies the policy version to retrieve.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "GetPolicyVersion",
                "query": [
                    {
                        "field": "_gpvPolicyArn",
                        "locationName": "PolicyArn",
                        "type": "field"
                    },
                    {
                        "field": "_gpvVersionId",
                        "locationName": "VersionId",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gpvPolicyArn",
                        "name": "_gpvPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gpvVersionId",
                        "name": "_gpvVersionId",
                        "shape": "policyVersionIdType",
                        "locationName": "VersionId",
                        "documentation": "-- | Identifies the policy version to retrieve.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getRoleResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "grrRole",
                    "name": "_grrRole",
                    "shape": "Role",
                    "locationName": "Role",
                    "documentation": "-- | Information about the role.",
                    "typeExposed": "Role",
                    "type": "Role"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "grrRole",
                        "name": "_grrRole",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "-- | Information about the role.",
                        "typeExposed": "Role",
                        "type": "Role"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetRoleResponse",
                "resultWrapper": "GetRoleResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "grrRole",
                        "name": "_grrRole",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "-- | Information about the role.",
                        "typeExposed": "Role",
                        "type": "Role"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetRole.html",
            "namespace": "Network.AWS.IAM.GetRole",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetRole",
            "method": "post",
            "documentation": "-- | Retrieves information about the specified role, including the role's path,\n-- GUID, ARN, and the policy granting permission to assume the role. For more\n-- information about ARNs, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs ARNs\u003e. For more information about roles, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html Working with Roles\u003e.\n--\n-- The returned policy is URL-encoded according to RFC 3986. For more\n-- information about RFC 3986, go to \u003chttp://www.faqs.org/rfcs/rfc3986.html http://www.faqs.org/rfcs/rfc3986.html\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getRole",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "grRoleName",
                    "name": "_grRoleName",
                    "shape": "roleNameType",
                    "locationName": "RoleName",
                    "documentation": "-- | The name of the role to get information about.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "grRoleName",
                        "name": "_grRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to get information about.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "GetRole",
                "query": [
                    {
                        "field": "_grRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "grRoleName",
                        "name": "_grRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to get information about.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "getRolePolicyResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "grprRoleName",
                        "name": "_grprRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The role the policy is associated with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "grprPolicyName",
                        "name": "_grprPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "grprPolicyDocument",
                        "name": "_grprPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetRolePolicyResponse",
                "resultWrapper": "GetRolePolicyResult",
                "locationPad": 15,
                "type": "record",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "grprPolicyDocument",
                        "name": "_grprPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "grprPolicyName",
                        "name": "_grprPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "grprRoleName",
                        "name": "_grprRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The role the policy is associated with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetRolePolicy.html",
            "namespace": "Network.AWS.IAM.GetRolePolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetRolePolicy",
            "method": "post",
            "documentation": "-- | Retrieves the specified inline policy document that is embedded with the\n-- specified role.\n--\n-- A role can also have managed policies attached to it. To retrieve a managed\n-- policy document that is attached to a role, use 'GetPolicy' to determine the\n-- policy's default version, then use 'GetPolicyVersion' to retrieve the policy\n-- document.\n--\n-- For more information about policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and InlinePolicies\u003e in the /Using IAM/ guide.\n--\n-- For more information about roles, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html Using Roles to Delegate Permissionsand Federate Identities\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "getRolePolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "grpRoleName",
                        "name": "_grpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role associated with the policy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "grpPolicyName",
                        "name": "_grpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy document to get.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "GetRolePolicy",
                "query": [
                    {
                        "field": "_grpRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_grpPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "grpPolicyName",
                        "name": "_grpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy document to get.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "grpRoleName",
                        "name": "_grpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role associated with the policy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 28,
                "ctor": "getSAMLProviderResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetSAMLProviderResponse",
                "resultWrapper": "GetSAMLProviderResult",
                "locationPad": 21,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gsamlprSAMLMetadataDocument",
                        "name": "_gsamlprSAMLMetadataDocument",
                        "shape": "SAMLMetadataDocumentType",
                        "locationName": "SAMLMetadataDocument",
                        "documentation": "-- | The XML metadata document that includes information about an identity\n-- provider.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gsamlprCreateDate",
                        "name": "_gsamlprCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time when the SAML provider was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gsamlprValidUntil",
                        "name": "_gsamlprValidUntil",
                        "shape": "dateType",
                        "locationName": "ValidUntil",
                        "documentation": "-- | The expiration date and time for the SAML provider.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gsamlprCreateDate",
                        "name": "_gsamlprCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "-- | The date and time when the SAML provider was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gsamlprSAMLMetadataDocument",
                        "name": "_gsamlprSAMLMetadataDocument",
                        "shape": "SAMLMetadataDocumentType",
                        "locationName": "SAMLMetadataDocument",
                        "documentation": "-- | The XML metadata document that includes information about an identity\n-- provider.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gsamlprValidUntil",
                        "name": "_gsamlprValidUntil",
                        "shape": "dateType",
                        "locationName": "ValidUntil",
                        "documentation": "-- | The expiration date and time for the SAML provider.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetSAMLProvider.html",
            "namespace": "Network.AWS.IAM.GetSAMLProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetSAMLProvider",
            "method": "post",
            "documentation": "-- | Returns the SAML provider metadocument that was uploaded when the provider\n-- was created or updated.\n--\n-- This operation requires \u003chttp://docs.aws.amazon.com/general/latest/gr/signature-version-4.html Signature Version 4\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getSAMLProvider",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "gsamlpSAMLProviderArn",
                    "name": "_gsamlpSAMLProviderArn",
                    "shape": "arnType",
                    "locationName": "SAMLProviderArn",
                    "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider to get information about.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gsamlpSAMLProviderArn",
                        "name": "_gsamlpSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider to get information about.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "GetSAMLProvider",
                "query": [
                    {
                        "field": "_gsamlpSAMLProviderArn",
                        "locationName": "SAMLProviderArn",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gsamlpSAMLProviderArn",
                        "name": "_gsamlpSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider to get information about.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getServerCertificateResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "gscrServerCertificate",
                    "name": "_gscrServerCertificate",
                    "shape": "ServerCertificate",
                    "locationName": "ServerCertificate",
                    "documentation": "-- | Information about the server certificate.",
                    "typeExposed": "ServerCertificate",
                    "type": "ServerCertificate"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gscrServerCertificate",
                        "name": "_gscrServerCertificate",
                        "shape": "ServerCertificate",
                        "locationName": "ServerCertificate",
                        "documentation": "-- | Information about the server certificate.",
                        "typeExposed": "ServerCertificate",
                        "type": "ServerCertificate"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetServerCertificateResponse",
                "resultWrapper": "GetServerCertificateResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gscrServerCertificate",
                        "name": "_gscrServerCertificate",
                        "shape": "ServerCertificate",
                        "locationName": "ServerCertificate",
                        "documentation": "-- | Information about the server certificate.",
                        "typeExposed": "ServerCertificate",
                        "type": "ServerCertificate"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetServerCertificate.html",
            "namespace": "Network.AWS.IAM.GetServerCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetServerCertificate",
            "method": "post",
            "documentation": "-- | Retrieves information about the specified server certificate.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getServerCertificate",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "gscServerCertificateName",
                    "name": "_gscServerCertificateName",
                    "shape": "serverCertificateNameType",
                    "locationName": "ServerCertificateName",
                    "documentation": "-- | The name of the server certificate you want to retrieve information about.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gscServerCertificateName",
                        "name": "_gscServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "-- | The name of the server certificate you want to retrieve information about.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 22,
                "name": "GetServerCertificate",
                "query": [
                    {
                        "field": "_gscServerCertificateName",
                        "locationName": "ServerCertificateName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gscServerCertificateName",
                        "name": "_gscServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "-- | The name of the server certificate you want to retrieve information about.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getUserResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "gurUser",
                    "name": "_gurUser",
                    "shape": "User",
                    "locationName": "User",
                    "documentation": "-- | Information about the user.",
                    "typeExposed": "User",
                    "type": "User"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gurUser",
                        "name": "_gurUser",
                        "shape": "User",
                        "locationName": "User",
                        "documentation": "-- | Information about the user.",
                        "typeExposed": "User",
                        "type": "User"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetUserResponse",
                "resultWrapper": "GetUserResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gurUser",
                        "name": "_gurUser",
                        "shape": "User",
                        "locationName": "User",
                        "documentation": "-- | Information about the user.",
                        "typeExposed": "User",
                        "type": "User"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetUser.html",
            "namespace": "Network.AWS.IAM.GetUser",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetUser",
            "method": "post",
            "documentation": "-- | Retrieves information about the specified user, including the user's creation\n-- date, path, unique ID, and ARN.\n--\n-- If you do not specify a user name, IAM determines the user name implicitly\n-- based on the AWS access key ID used to sign the request.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getUser",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "guUserName",
                    "name": "_guUserName",
                    "shape": "existingUserNameType",
                    "locationName": "UserName",
                    "documentation": "-- | The name of the user to get information about.\n--\n-- This parameter is optional. If it is not included, it defaults to the user\n-- making the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "GetUser",
                "query": [
                    {
                        "field": "_guUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "guUserName",
                        "name": "_guUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to get information about.\n--\n-- This parameter is optional. If it is not included, it defaults to the user\n-- making the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "guUserName",
                        "name": "_guUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to get information about.\n--\n-- This parameter is optional. If it is not included, it defaults to the user\n-- making the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "getUserPolicyResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "guprUserName",
                        "name": "_guprUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The user the policy is associated with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "guprPolicyName",
                        "name": "_guprPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "guprPolicyDocument",
                        "name": "_guprPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetUserPolicyResponse",
                "resultWrapper": "GetUserPolicyResult",
                "locationPad": 15,
                "type": "record",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "guprPolicyDocument",
                        "name": "_guprPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "guprPolicyName",
                        "name": "_guprPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "guprUserName",
                        "name": "_guprUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The user the policy is associated with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetUserPolicy.html",
            "namespace": "Network.AWS.IAM.GetUserPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetUserPolicy",
            "method": "post",
            "documentation": "-- | Retrieves the specified inline policy document that is embedded in the\n-- specified user.\n--\n-- A user can also have managed policies attached to it. To retrieve a managed\n-- policy document that is attached to a user, use 'GetPolicy' to determine the\n-- policy's default version, then use 'GetPolicyVersion' to retrieve the policy\n-- document.\n--\n-- For more information about policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and InlinePolicies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "getUserPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gupUserName",
                        "name": "_gupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user who the policy is associated with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gupPolicyName",
                        "name": "_gupPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy document to get.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "GetUserPolicy",
                "query": [
                    {
                        "field": "_gupUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_gupPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gupPolicyName",
                        "name": "_gupPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy document to get.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gupUserName",
                        "name": "_gupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user who the policy is associated with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 22,
                "ctor": "listAccessKeysResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListAccessKeysResponse",
                "resultWrapper": "ListAccessKeysResult",
                "locationPad": 18,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lakrAccessKeyMetadata",
                        "name": "_lakrAccessKeyMetadata",
                        "shape": "accessKeyMetadataListType",
                        "locationName": "AccessKeyMetadata",
                        "documentation": "-- | A list of access key metadata.",
                        "typeExposed": "[AccessKeyMetadata]",
                        "type": "List \"member\" AccessKeyMetadata"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lakrIsTruncated",
                        "name": "_lakrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more keys to list. If your results\n-- were truncated, you can make a subsequent pagination request using the 'Marker'\n-- request parameter to retrieve more keys in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lakrMarker",
                        "name": "_lakrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lakrAccessKeyMetadata",
                        "name": "_lakrAccessKeyMetadata",
                        "shape": "accessKeyMetadataListType",
                        "locationName": "AccessKeyMetadata",
                        "documentation": "-- | A list of access key metadata.",
                        "typeExposed": "[AccessKeyMetadata]",
                        "type": "List \"member\" AccessKeyMetadata"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lakrIsTruncated",
                        "name": "_lakrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more keys to list. If your results\n-- were truncated, you can make a subsequent pagination request using the 'Marker'\n-- request parameter to retrieve more keys in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lakrMarker",
                        "name": "_lakrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAccessKeys.html",
            "namespace": "Network.AWS.IAM.ListAccessKeys",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lakrIsTruncated",
                "token": {
                    "input": "lakMarker",
                    "outputRequired": false,
                    "output": "lakrMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListAccessKeys",
            "method": "post",
            "documentation": "-- | Returns information about the access key IDs associated with the specified\n-- user. If there are none, the action returns an empty list.\n--\n-- Although each user is limited to a small number of keys, you can still\n-- paginate the results using the 'MaxItems' and 'Marker' parameters.\n--\n-- If the 'UserName' field is not specified, the UserName is determined\n-- implicitly based on the AWS access key ID used to sign the request. Because\n-- this action works for access keys under the AWS account, you can use this\n-- action to manage root credentials even if the AWS account has no associated\n-- users.\n--\n-- To ensure the security of your AWS account, the secret access key is\n-- accessible only during key and user creation.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "listAccessKeys",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListAccessKeys",
                "query": [
                    {
                        "field": "_lakUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_lakMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lakMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lakUserName",
                        "name": "_lakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lakMarker",
                        "name": "_lakMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lakMaxItems",
                        "name": "_lakMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of keys you want in the response. If there are additional keys beyond\n-- the maximum you specify, the 'IsTruncated' response element is 'true'. This\n-- parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lakMarker",
                        "name": "_lakMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lakMaxItems",
                        "name": "_lakMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of keys you want in the response. If there are additional keys beyond\n-- the maximum you specify, the 'IsTruncated' response element is 'true'. This\n-- parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lakUserName",
                        "name": "_lakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "listAccountAliasesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListAccountAliasesResponse",
                "resultWrapper": "ListAccountAliasesResult",
                "locationPad": 15,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "laarAccountAliases",
                        "name": "_laarAccountAliases",
                        "shape": "accountAliasListType",
                        "locationName": "AccountAliases",
                        "documentation": "-- | A list of aliases associated with the account.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "laarIsTruncated",
                        "name": "_laarIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more account aliases to list. If\n-- your results were truncated, you can make a subsequent pagination request\n-- using the 'Marker' request parameter to retrieve more account aliases in the\n-- list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "laarMarker",
                        "name": "_laarMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "laarAccountAliases",
                        "name": "_laarAccountAliases",
                        "shape": "accountAliasListType",
                        "locationName": "AccountAliases",
                        "documentation": "-- | A list of aliases associated with the account.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "laarIsTruncated",
                        "name": "_laarIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more account aliases to list. If\n-- your results were truncated, you can make a subsequent pagination request\n-- using the 'Marker' request parameter to retrieve more account aliases in the\n-- list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "laarMarker",
                        "name": "_laarMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAccountAliases.html",
            "namespace": "Network.AWS.IAM.ListAccountAliases",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "laarIsTruncated",
                "token": {
                    "input": "laaMarker",
                    "outputRequired": false,
                    "output": "laarMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListAccountAliases",
            "method": "post",
            "documentation": "-- | Lists the account aliases associated with the account. For information about\n-- using an AWS account alias, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html Using an Alias for Your AWS Account ID\u003e in the /Using IAM/ guide.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "listAccountAliases",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListAccountAliases",
                "query": [
                    {
                        "field": "_laaMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_laaMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "laaMarker",
                        "name": "_laaMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "laaMaxItems",
                        "name": "_laaMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- account aliases you want in the response. If there are additional account\n-- aliases beyond the maximum you specify, the 'IsTruncated' response element is 'true'. This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "laaMarker",
                        "name": "_laaMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "laaMaxItems",
                        "name": "_laaMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- account aliases you want in the response. If there are additional account\n-- aliases beyond the maximum you specify, the 'IsTruncated' response element is 'true'. This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 22,
                "ctor": "listAttachedGroupPoliciesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListAttachedGroupPoliciesResponse",
                "resultWrapper": "ListAttachedGroupPoliciesResult",
                "locationPad": 17,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lagprAttachedPolicies",
                        "name": "_lagprAttachedPolicies",
                        "shape": "attachedPoliciesListType",
                        "locationName": "AttachedPolicies",
                        "documentation": "-- | A list of the attached policies.",
                        "typeExposed": "[AttachedPolicy]",
                        "type": "List \"member\" AttachedPolicy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lagprIsTruncated",
                        "name": "_lagprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policies to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policies in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lagprMarker",
                        "name": "_lagprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to use\n-- for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lagprAttachedPolicies",
                        "name": "_lagprAttachedPolicies",
                        "shape": "attachedPoliciesListType",
                        "locationName": "AttachedPolicies",
                        "documentation": "-- | A list of the attached policies.",
                        "typeExposed": "[AttachedPolicy]",
                        "type": "List \"member\" AttachedPolicy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lagprIsTruncated",
                        "name": "_lagprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policies to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policies in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lagprMarker",
                        "name": "_lagprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to use\n-- for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAttachedGroupPolicies.html",
            "namespace": "Network.AWS.IAM.ListAttachedGroupPolicies",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "ListAttachedGroupPolicies",
            "method": "post",
            "documentation": "-- | Lists all managed policies that are attached to the specified group.\n--\n-- A group can also have inline policies embedded with it. To list the inline\n-- policies for a group, use the 'ListGroupPolicies' API. For information about\n-- policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and Inline Policies\u003e in the /Using IAM/\n-- guide.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters. You\n-- can use the 'PathPrefix' parameter to limit the list of policies to only those\n-- matching the specified path prefix. If there are no policies attached to the\n-- specified group (or none that match the specified path prefix), the action\n-- returns an empty list.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "listAttachedGroupPolicies",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lagpGroupName",
                        "name": "_lagpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name (friendly name, not ARN) of the group to list attached policies for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ListAttachedGroupPolicies",
                "query": [
                    {
                        "field": "_lagpGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_lagpPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_lagpMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lagpMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lagpPathPrefix",
                        "name": "_lagpPathPrefix",
                        "shape": "policyPathType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. This parameter is optional. If it\n-- is not included, it defaults to a slash (/), listing all policies.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lagpMarker",
                        "name": "_lagpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request after\n-- you've received a response where the results are truncated. Set it to the\n-- value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lagpMaxItems",
                        "name": "_lagpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- policies you want in the response. If there are additional policies beyond\n-- the maximum you specify, the 'IsTruncated' response element is 'true'. This\n-- parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lagpGroupName",
                        "name": "_lagpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name (friendly name, not ARN) of the group to list attached policies for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lagpMarker",
                        "name": "_lagpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request after\n-- you've received a response where the results are truncated. Set it to the\n-- value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lagpMaxItems",
                        "name": "_lagpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- policies you want in the response. If there are additional policies beyond\n-- the maximum you specify, the 'IsTruncated' response element is 'true'. This\n-- parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lagpPathPrefix",
                        "name": "_lagpPathPrefix",
                        "shape": "policyPathType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. This parameter is optional. If it\n-- is not included, it defaults to a slash (/), listing all policies.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 22,
                "ctor": "listAttachedRolePoliciesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListAttachedRolePoliciesResponse",
                "resultWrapper": "ListAttachedRolePoliciesResult",
                "locationPad": 17,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "larprAttachedPolicies",
                        "name": "_larprAttachedPolicies",
                        "shape": "attachedPoliciesListType",
                        "locationName": "AttachedPolicies",
                        "documentation": "-- | A list of the attached policies.",
                        "typeExposed": "[AttachedPolicy]",
                        "type": "List \"member\" AttachedPolicy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "larprIsTruncated",
                        "name": "_larprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policies to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policies in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "larprMarker",
                        "name": "_larprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to use\n-- for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "larprAttachedPolicies",
                        "name": "_larprAttachedPolicies",
                        "shape": "attachedPoliciesListType",
                        "locationName": "AttachedPolicies",
                        "documentation": "-- | A list of the attached policies.",
                        "typeExposed": "[AttachedPolicy]",
                        "type": "List \"member\" AttachedPolicy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "larprIsTruncated",
                        "name": "_larprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policies to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policies in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "larprMarker",
                        "name": "_larprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to use\n-- for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAttachedRolePolicies.html",
            "namespace": "Network.AWS.IAM.ListAttachedRolePolicies",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "ListAttachedRolePolicies",
            "method": "post",
            "documentation": "-- | Lists all managed policies that are attached to the specified role.\n--\n-- A role can also have inline policies embedded with it. To list the inline\n-- policies for a role, use the 'ListRolePolicies' API. For information about\n-- policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and Inline Policies\u003e in the /Using IAM/\n-- guide.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters. You\n-- can use the 'PathPrefix' parameter to limit the list of policies to only those\n-- matching the specified path prefix. If there are no policies attached to the\n-- specified role (or none that match the specified path prefix), the action\n-- returns an empty list.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "listAttachedRolePolicies",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "larpRoleName",
                        "name": "_larpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name (friendly name, not ARN) of the role to list attached policies for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ListAttachedRolePolicies",
                "query": [
                    {
                        "field": "_larpRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_larpPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_larpMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_larpMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "larpPathPrefix",
                        "name": "_larpPathPrefix",
                        "shape": "policyPathType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. This parameter is optional. If it\n-- is not included, it defaults to a slash (/), listing all policies.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "larpMarker",
                        "name": "_larpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request after\n-- you've received a response where the results are truncated. Set it to the\n-- value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "larpMaxItems",
                        "name": "_larpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- policies you want in the response. If there are additional policies beyond\n-- the maximum you specify, the 'IsTruncated' response element is 'true'. This\n-- parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "larpMarker",
                        "name": "_larpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request after\n-- you've received a response where the results are truncated. Set it to the\n-- value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "larpMaxItems",
                        "name": "_larpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- policies you want in the response. If there are additional policies beyond\n-- the maximum you specify, the 'IsTruncated' response element is 'true'. This\n-- parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "larpPathPrefix",
                        "name": "_larpPathPrefix",
                        "shape": "policyPathType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. This parameter is optional. If it\n-- is not included, it defaults to a slash (/), listing all policies.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "larpRoleName",
                        "name": "_larpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name (friendly name, not ARN) of the role to list attached policies for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 22,
                "ctor": "listAttachedUserPoliciesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListAttachedUserPoliciesResponse",
                "resultWrapper": "ListAttachedUserPoliciesResult",
                "locationPad": 17,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lauprAttachedPolicies",
                        "name": "_lauprAttachedPolicies",
                        "shape": "attachedPoliciesListType",
                        "locationName": "AttachedPolicies",
                        "documentation": "-- | A list of the attached policies.",
                        "typeExposed": "[AttachedPolicy]",
                        "type": "List \"member\" AttachedPolicy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lauprIsTruncated",
                        "name": "_lauprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policies to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policies in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lauprMarker",
                        "name": "_lauprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to use\n-- for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lauprAttachedPolicies",
                        "name": "_lauprAttachedPolicies",
                        "shape": "attachedPoliciesListType",
                        "locationName": "AttachedPolicies",
                        "documentation": "-- | A list of the attached policies.",
                        "typeExposed": "[AttachedPolicy]",
                        "type": "List \"member\" AttachedPolicy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lauprIsTruncated",
                        "name": "_lauprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policies to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policies in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lauprMarker",
                        "name": "_lauprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to use\n-- for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAttachedUserPolicies.html",
            "namespace": "Network.AWS.IAM.ListAttachedUserPolicies",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "ListAttachedUserPolicies",
            "method": "post",
            "documentation": "-- | Lists all managed policies that are attached to the specified user.\n--\n-- A user can also have inline policies embedded with it. To list the inline\n-- policies for a user, use the 'ListUserPolicies' API. For information about\n-- policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and Inline Policies\u003e in the /Using IAM/\n-- guide.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters. You\n-- can use the 'PathPrefix' parameter to limit the list of policies to only those\n-- matching the specified path prefix. If there are no policies attached to the\n-- specified group (or none that match the specified path prefix), the action\n-- returns an empty list.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "listAttachedUserPolicies",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "laupUserName",
                        "name": "_laupUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name (friendly name, not ARN) of the user to list attached policies for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ListAttachedUserPolicies",
                "query": [
                    {
                        "field": "_laupUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_laupPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_laupMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_laupMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "laupPathPrefix",
                        "name": "_laupPathPrefix",
                        "shape": "policyPathType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. This parameter is optional. If it\n-- is not included, it defaults to a slash (/), listing all policies.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "laupMarker",
                        "name": "_laupMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request after\n-- you've received a response where the results are truncated. Set it to the\n-- value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "laupMaxItems",
                        "name": "_laupMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- policies you want in the response. If there are additional policies beyond\n-- the maximum you specify, the 'IsTruncated' response element is 'true'. This\n-- parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "laupMarker",
                        "name": "_laupMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request after\n-- you've received a response where the results are truncated. Set it to the\n-- value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "laupMaxItems",
                        "name": "_laupMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- policies you want in the response. If there are additional policies beyond\n-- the maximum you specify, the 'IsTruncated' response element is 'true'. This\n-- parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "laupPathPrefix",
                        "name": "_laupPathPrefix",
                        "shape": "policyPathType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. This parameter is optional. If it\n-- is not included, it defaults to a slash (/), listing all policies.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "laupUserName",
                        "name": "_laupUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name (friendly name, not ARN) of the user to list attached policies for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 18,
                "ctor": "listEntitiesForPolicyResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListEntitiesForPolicyResponse",
                "resultWrapper": "ListEntitiesForPolicyResult",
                "locationPad": 13,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lefprPolicyGroups",
                        "name": "_lefprPolicyGroups",
                        "shape": "PolicyGroupListType",
                        "locationName": "PolicyGroups",
                        "documentation": "-- | A list of groups that the policy is attached to.",
                        "typeExposed": "[PolicyGroup]",
                        "type": "List \"member\" PolicyGroup"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lefprPolicyUsers",
                        "name": "_lefprPolicyUsers",
                        "shape": "PolicyUserListType",
                        "locationName": "PolicyUsers",
                        "documentation": "-- | A list of users that the policy is attached to.",
                        "typeExposed": "[PolicyUser]",
                        "type": "List \"member\" PolicyUser"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lefprPolicyRoles",
                        "name": "_lefprPolicyRoles",
                        "shape": "PolicyRoleListType",
                        "locationName": "PolicyRoles",
                        "documentation": "-- | A list of roles that the policy is attached to.",
                        "typeExposed": "[PolicyRole]",
                        "type": "List \"member\" PolicyRole"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lefprIsTruncated",
                        "name": "_lefprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more entities to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more entities in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lefprMarker",
                        "name": "_lefprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to use\n-- for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lefprIsTruncated",
                        "name": "_lefprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more entities to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more entities in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lefprMarker",
                        "name": "_lefprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to use\n-- for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lefprPolicyGroups",
                        "name": "_lefprPolicyGroups",
                        "shape": "PolicyGroupListType",
                        "locationName": "PolicyGroups",
                        "documentation": "-- | A list of groups that the policy is attached to.",
                        "typeExposed": "[PolicyGroup]",
                        "type": "List \"member\" PolicyGroup"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lefprPolicyRoles",
                        "name": "_lefprPolicyRoles",
                        "shape": "PolicyRoleListType",
                        "locationName": "PolicyRoles",
                        "documentation": "-- | A list of roles that the policy is attached to.",
                        "typeExposed": "[PolicyRole]",
                        "type": "List \"member\" PolicyRole"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lefprPolicyUsers",
                        "name": "_lefprPolicyUsers",
                        "shape": "PolicyUserListType",
                        "locationName": "PolicyUsers",
                        "documentation": "-- | A list of users that the policy is attached to.",
                        "typeExposed": "[PolicyUser]",
                        "type": "List \"member\" PolicyUser"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListEntitiesForPolicy.html",
            "namespace": "Network.AWS.IAM.ListEntitiesForPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "ListEntitiesForPolicy",
            "method": "post",
            "documentation": "-- | Lists all users, groups, and roles that the specified managed policy is\n-- attached to.\n--\n-- You can use the optional 'EntityFilter' parameter to limit the results to a\n-- particular type of entity (users, groups, or roles). For example, to list\n-- only the roles that are attached to the specified policy, set 'EntityFilter' to 'Role'.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "listEntitiesForPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lefpPolicyArn",
                        "name": "_lefpPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "ListEntitiesForPolicy",
                "query": [
                    {
                        "field": "_lefpPolicyArn",
                        "locationName": "PolicyArn",
                        "type": "field"
                    },
                    {
                        "field": "_lefpEntityFilter",
                        "locationName": "EntityFilter",
                        "type": "field"
                    },
                    {
                        "field": "_lefpPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_lefpMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lefpMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lefpEntityFilter",
                        "name": "_lefpEntityFilter",
                        "shape": "EntityType",
                        "locationName": "EntityFilter",
                        "documentation": "-- | The entity type to use for filtering the results.\n--\n-- For example, when 'EntityFilter' is 'Role', only the roles that are attached to\n-- the specified policy are returned. This parameter is optional. If it is not\n-- included, all attached entities (users, groups, and roles) are returned.",
                        "typeExposed": "Maybe EntityType",
                        "type": "Maybe EntityType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lefpPathPrefix",
                        "name": "_lefpPathPrefix",
                        "shape": "pathType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. This parameter is optional. If it\n-- is not included, it defaults to a slash (/), listing all entities.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lefpMarker",
                        "name": "_lefpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request after\n-- you've received a response where the results are truncated. Set it to the\n-- value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lefpMaxItems",
                        "name": "_lefpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- entities you want in the response. If there are additional entities beyond\n-- the maximum you specify, the 'IsTruncated' response element is 'true'. This\n-- parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lefpEntityFilter",
                        "name": "_lefpEntityFilter",
                        "shape": "EntityType",
                        "locationName": "EntityFilter",
                        "documentation": "-- | The entity type to use for filtering the results.\n--\n-- For example, when 'EntityFilter' is 'Role', only the roles that are attached to\n-- the specified policy are returned. This parameter is optional. If it is not\n-- included, all attached entities (users, groups, and roles) are returned.",
                        "typeExposed": "Maybe EntityType",
                        "type": "Maybe EntityType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lefpMarker",
                        "name": "_lefpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request after\n-- you've received a response where the results are truncated. Set it to the\n-- value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lefpMaxItems",
                        "name": "_lefpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- entities you want in the response. If there are additional entities beyond\n-- the maximum you specify, the 'IsTruncated' response element is 'true'. This\n-- parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lefpPathPrefix",
                        "name": "_lefpPathPrefix",
                        "shape": "pathType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. This parameter is optional. If it\n-- is not included, it defaults to a slash (/), listing all entities.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lefpPolicyArn",
                        "name": "_lefpPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 16,
                "ctor": "listGroupPoliciesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListGroupPoliciesResponse",
                "resultWrapper": "ListGroupPoliciesResult",
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lgprPolicyNames",
                        "name": "_lgprPolicyNames",
                        "shape": "policyNameListType",
                        "locationName": "PolicyNames",
                        "documentation": "-- | A list of policy names.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgprIsTruncated",
                        "name": "_lgprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policy names to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policy names in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgprMarker",
                        "name": "_lgprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgprIsTruncated",
                        "name": "_lgprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policy names to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policy names in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgprMarker",
                        "name": "_lgprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lgprPolicyNames",
                        "name": "_lgprPolicyNames",
                        "shape": "policyNameListType",
                        "locationName": "PolicyNames",
                        "documentation": "-- | A list of policy names.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListGroupPolicies.html",
            "namespace": "Network.AWS.IAM.ListGroupPolicies",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lgprIsTruncated",
                "token": {
                    "input": "lgpMarker",
                    "outputRequired": false,
                    "output": "lgprMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListGroupPolicies",
            "method": "post",
            "documentation": "-- | Lists the names of the inline policies that are embedded in the specified\n-- group.\n--\n-- A group can also have managed policies attached to it. To list the managed\n-- policies that are attached to a group, use 'ListAttachedGroupPolicies'. For\n-- more information about policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and Inline Policies\u003e\n-- in the /Using IAM/ guide.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters. If\n-- there are no inline policies embedded with the specified group, the action\n-- returns an empty list.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "listGroupPolicies",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lgpGroupName",
                        "name": "_lgpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group to list policies for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "ListGroupPolicies",
                "query": [
                    {
                        "field": "_lgpGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_lgpMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lgpMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgpMarker",
                        "name": "_lgpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgpMaxItems",
                        "name": "_lgpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- policy names you want in the response. If there are additional policy names\n-- beyond the maximum you specify, the 'IsTruncated' response element is 'true'.\n-- This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lgpGroupName",
                        "name": "_lgpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group to list policies for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgpMarker",
                        "name": "_lgpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgpMaxItems",
                        "name": "_lgpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- policy names you want in the response. If there are additional policy names\n-- beyond the maximum you specify, the 'IsTruncated' response element is 'true'.\n-- This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 15,
                "ctor": "listGroupsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListGroupsResponse",
                "resultWrapper": "ListGroupsResult",
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lgrGroups",
                        "name": "_lgrGroups",
                        "shape": "groupListType",
                        "locationName": "Groups",
                        "documentation": "-- | A list of groups.",
                        "typeExposed": "[Group]",
                        "type": "List \"member\" Group"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgrIsTruncated",
                        "name": "_lgrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more groups to list. If your results\n-- were truncated, you can make a subsequent pagination request using the 'Marker'\n-- request parameter to retrieve more groups in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgrMarker",
                        "name": "_lgrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lgrGroups",
                        "name": "_lgrGroups",
                        "shape": "groupListType",
                        "locationName": "Groups",
                        "documentation": "-- | A list of groups.",
                        "typeExposed": "[Group]",
                        "type": "List \"member\" Group"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgrIsTruncated",
                        "name": "_lgrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more groups to list. If your results\n-- were truncated, you can make a subsequent pagination request using the 'Marker'\n-- request parameter to retrieve more groups in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgrMarker",
                        "name": "_lgrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListGroups.html",
            "namespace": "Network.AWS.IAM.ListGroups",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lgrIsTruncated",
                "token": {
                    "input": "lgMarker",
                    "outputRequired": false,
                    "output": "lgrMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListGroups",
            "method": "post",
            "documentation": "-- | Lists the groups that have the specified path prefix.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "listGroups",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ListGroups",
                "query": [
                    {
                        "field": "_lgPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_lgMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lgMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgPathPrefix",
                        "name": "_lgPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. For example, the prefix '/division_abc/subdivision_xyz/' gets all groups whose path starts with '/division_abc/subdivision_xyz/'.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/), listing all groups.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgMarker",
                        "name": "_lgMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgMaxItems",
                        "name": "_lgMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- groups you want in the response. If there are additional groups beyond the\n-- maximum you specify, the 'IsTruncated' response element is 'true'. This parameter\n-- is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgMarker",
                        "name": "_lgMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgMaxItems",
                        "name": "_lgMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- groups you want in the response. If there are additional groups beyond the\n-- maximum you specify, the 'IsTruncated' response element is 'true'. This parameter\n-- is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgPathPrefix",
                        "name": "_lgPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. For example, the prefix '/division_abc/subdivision_xyz/' gets all groups whose path starts with '/division_abc/subdivision_xyz/'.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/), listing all groups.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 17,
                "ctor": "listGroupsForUserResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListGroupsForUserResponse",
                "resultWrapper": "ListGroupsForUserResult",
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lgfurGroups",
                        "name": "_lgfurGroups",
                        "shape": "groupListType",
                        "locationName": "Groups",
                        "documentation": "-- | A list of groups.",
                        "typeExposed": "[Group]",
                        "type": "List \"member\" Group"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgfurIsTruncated",
                        "name": "_lgfurIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more groups to list. If your results\n-- were truncated, you can make a subsequent pagination request using the 'Marker'\n-- request parameter to retrieve more groups in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgfurMarker",
                        "name": "_lgfurMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lgfurGroups",
                        "name": "_lgfurGroups",
                        "shape": "groupListType",
                        "locationName": "Groups",
                        "documentation": "-- | A list of groups.",
                        "typeExposed": "[Group]",
                        "type": "List \"member\" Group"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgfurIsTruncated",
                        "name": "_lgfurIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more groups to list. If your results\n-- were truncated, you can make a subsequent pagination request using the 'Marker'\n-- request parameter to retrieve more groups in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgfurMarker",
                        "name": "_lgfurMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListGroupsForUser.html",
            "namespace": "Network.AWS.IAM.ListGroupsForUser",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lgfurIsTruncated",
                "token": {
                    "input": "lgfuMarker",
                    "outputRequired": false,
                    "output": "lgfurMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListGroupsForUser",
            "method": "post",
            "documentation": "-- | Lists the groups the specified user belongs to.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "listGroupsForUser",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lgfuUserName",
                        "name": "_lgfuUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to list groups for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListGroupsForUser",
                "query": [
                    {
                        "field": "_lgfuUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_lgfuMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lgfuMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgfuMarker",
                        "name": "_lgfuMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgfuMaxItems",
                        "name": "_lgfuMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- groups you want in the response. If there are additional groups beyond the\n-- maximum you specify, the 'IsTruncated' response element is 'true'. This parameter\n-- is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgfuMarker",
                        "name": "_lgfuMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lgfuMaxItems",
                        "name": "_lgfuMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- groups you want in the response. If there are additional groups beyond the\n-- maximum you specify, the 'IsTruncated' response element is 'true'. This parameter\n-- is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lgfuUserName",
                        "name": "_lgfuUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to list groups for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 21,
                "ctor": "listInstanceProfilesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListInstanceProfilesResponse",
                "resultWrapper": "ListInstanceProfilesResult",
                "locationPad": 17,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "liprInstanceProfiles",
                        "name": "_liprInstanceProfiles",
                        "shape": "instanceProfileListType",
                        "locationName": "InstanceProfiles",
                        "documentation": "-- | A list of instance profiles.",
                        "typeExposed": "[InstanceProfile]",
                        "type": "List \"member\" InstanceProfile"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "liprIsTruncated",
                        "name": "_liprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more instance profiles to list. If\n-- your results were truncated, you can make a subsequent pagination request\n-- using the 'Marker' request parameter to retrieve more instance profiles in the\n-- list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "liprMarker",
                        "name": "_liprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "liprInstanceProfiles",
                        "name": "_liprInstanceProfiles",
                        "shape": "instanceProfileListType",
                        "locationName": "InstanceProfiles",
                        "documentation": "-- | A list of instance profiles.",
                        "typeExposed": "[InstanceProfile]",
                        "type": "List \"member\" InstanceProfile"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "liprIsTruncated",
                        "name": "_liprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more instance profiles to list. If\n-- your results were truncated, you can make a subsequent pagination request\n-- using the 'Marker' request parameter to retrieve more instance profiles in the\n-- list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "liprMarker",
                        "name": "_liprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListInstanceProfiles.html",
            "namespace": "Network.AWS.IAM.ListInstanceProfiles",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "liprIsTruncated",
                "token": {
                    "input": "lipMarker",
                    "outputRequired": false,
                    "output": "liprMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListInstanceProfiles",
            "method": "post",
            "documentation": "-- | Lists the instance profiles that have the specified path prefix. If there\n-- are none, the action returns an empty list. For more information about\n-- instance profiles, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html About Instance Profiles\u003e.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "listInstanceProfiles",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ListInstanceProfiles",
                "query": [
                    {
                        "field": "_lipPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_lipMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lipMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lipPathPrefix",
                        "name": "_lipPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. For example, the prefix '/application_abc/component_xyz/' gets all instance profiles whose path starts with '/application_abc/component_xyz/'.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/), listing all instance profiles.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lipMarker",
                        "name": "_lipMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lipMaxItems",
                        "name": "_lipMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of instance profiles you want in the response. If there are additional\n-- instance profiles beyond the maximum you specify, the 'IsTruncated' response\n-- element is 'true'. This parameter is optional. If you do not include it, it\n-- defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lipMarker",
                        "name": "_lipMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lipMaxItems",
                        "name": "_lipMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of instance profiles you want in the response. If there are additional\n-- instance profiles beyond the maximum you specify, the 'IsTruncated' response\n-- element is 'true'. This parameter is optional. If you do not include it, it\n-- defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lipPathPrefix",
                        "name": "_lipPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. For example, the prefix '/application_abc/component_xyz/' gets all instance profiles whose path starts with '/application_abc/component_xyz/'.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/), listing all instance profiles.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 23,
                "ctor": "listInstanceProfilesForRoleResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListInstanceProfilesForRoleResponse",
                "resultWrapper": "ListInstanceProfilesForRoleResult",
                "locationPad": 17,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lipfrrInstanceProfiles",
                        "name": "_lipfrrInstanceProfiles",
                        "shape": "instanceProfileListType",
                        "locationName": "InstanceProfiles",
                        "documentation": "-- | A list of instance profiles.",
                        "typeExposed": "[InstanceProfile]",
                        "type": "List \"member\" InstanceProfile"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lipfrrIsTruncated",
                        "name": "_lipfrrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more instance profiles to list. If\n-- your results were truncated, you can make a subsequent pagination request\n-- using the 'Marker' request parameter to retrieve more instance profiles in the\n-- list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lipfrrMarker",
                        "name": "_lipfrrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lipfrrInstanceProfiles",
                        "name": "_lipfrrInstanceProfiles",
                        "shape": "instanceProfileListType",
                        "locationName": "InstanceProfiles",
                        "documentation": "-- | A list of instance profiles.",
                        "typeExposed": "[InstanceProfile]",
                        "type": "List \"member\" InstanceProfile"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lipfrrIsTruncated",
                        "name": "_lipfrrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more instance profiles to list. If\n-- your results were truncated, you can make a subsequent pagination request\n-- using the 'Marker' request parameter to retrieve more instance profiles in the\n-- list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lipfrrMarker",
                        "name": "_lipfrrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListInstanceProfilesForRole.html",
            "namespace": "Network.AWS.IAM.ListInstanceProfilesForRole",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lipfrrIsTruncated",
                "token": {
                    "input": "lipfrMarker",
                    "outputRequired": false,
                    "output": "lipfrrMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListInstanceProfilesForRole",
            "method": "post",
            "documentation": "-- | Lists the instance profiles that have the specified associated role. If\n-- there are none, the action returns an empty list. For more information about\n-- instance profiles, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html About Instance Profiles\u003e.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "listInstanceProfilesForRole",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lipfrRoleName",
                        "name": "_lipfrRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to list instance profiles for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListInstanceProfilesForRole",
                "query": [
                    {
                        "field": "_lipfrRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_lipfrMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lipfrMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lipfrMarker",
                        "name": "_lipfrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lipfrMaxItems",
                        "name": "_lipfrMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of instance profiles you want in the response. If there are additional\n-- instance profiles beyond the maximum you specify, the 'IsTruncated' response\n-- element is 'true'. This parameter is optional. If you do not include it, it\n-- defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lipfrMarker",
                        "name": "_lipfrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lipfrMaxItems",
                        "name": "_lipfrMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of instance profiles you want in the response. If there are additional\n-- instance profiles beyond the maximum you specify, the 'IsTruncated' response\n-- element is 'true'. This parameter is optional. If you do not include it, it\n-- defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lipfrRoleName",
                        "name": "_lipfrRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to list instance profiles for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 18,
                "ctor": "listMFADevicesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListMFADevicesResponse",
                "resultWrapper": "ListMFADevicesResult",
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lmfadrMFADevices",
                        "name": "_lmfadrMFADevices",
                        "shape": "mfaDeviceListType",
                        "locationName": "MFADevices",
                        "documentation": "-- | A list of MFA devices.",
                        "typeExposed": "[MFADevice]",
                        "type": "List \"member\" MFADevice"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lmfadrIsTruncated",
                        "name": "_lmfadrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more MFA devices to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more MFA devices in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lmfadrMarker",
                        "name": "_lmfadrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lmfadrIsTruncated",
                        "name": "_lmfadrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more MFA devices to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more MFA devices in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lmfadrMFADevices",
                        "name": "_lmfadrMFADevices",
                        "shape": "mfaDeviceListType",
                        "locationName": "MFADevices",
                        "documentation": "-- | A list of MFA devices.",
                        "typeExposed": "[MFADevice]",
                        "type": "List \"member\" MFADevice"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lmfadrMarker",
                        "name": "_lmfadrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListMFADevices.html",
            "namespace": "Network.AWS.IAM.ListMFADevices",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lmfadrIsTruncated",
                "token": {
                    "input": "lmfadMarker",
                    "outputRequired": false,
                    "output": "lmfadrMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListMFADevices",
            "method": "post",
            "documentation": "-- | Lists the MFA devices. If the request includes the user name, then this\n-- action lists all the MFA devices associated with the specified user name. If\n-- you do not specify a user name, IAM determines the user name implicitly based\n-- on the AWS access key ID signing the request.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "listMFADevices",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListMFADevices",
                "query": [
                    {
                        "field": "_lmfadUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_lmfadMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lmfadMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lmfadUserName",
                        "name": "_lmfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose MFA devices you want to list.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lmfadMarker",
                        "name": "_lmfadMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lmfadMaxItems",
                        "name": "_lmfadMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of MFA\n-- devices you want in the response. If there are additional MFA devices beyond\n-- the maximum you specify, the 'IsTruncated' response element is 'true'. This\n-- parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lmfadMarker",
                        "name": "_lmfadMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lmfadMaxItems",
                        "name": "_lmfadMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of MFA\n-- devices you want in the response. If there are additional MFA devices beyond\n-- the maximum you specify, the 'IsTruncated' response element is 'true'. This\n-- parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lmfadUserName",
                        "name": "_lmfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose MFA devices you want to list.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "OpenIDConnectProviderListEntry",
                "style": "xml",
                "fieldPad": 0,
                "ctor": "listOpenIDConnectProvidersResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "loidcprOpenIDConnectProviderList",
                    "name": "_loidcprOpenIDConnectProviderList",
                    "shape": "OpenIDConnectProviderListType",
                    "locationName": "OpenIDConnectProviderList",
                    "documentation": "-- | The list of IAM OpenID Connect providers in the AWS account.",
                    "typeExposed": "[OpenIDConnectProviderListEntry]",
                    "type": "List \"member\" OpenIDConnectProviderListEntry"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListOpenIDConnectProvidersResponse",
                "resultWrapper": "ListOpenIDConnectProvidersResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "loidcprOpenIDConnectProviderList",
                        "name": "_loidcprOpenIDConnectProviderList",
                        "shape": "OpenIDConnectProviderListType",
                        "locationName": "OpenIDConnectProviderList",
                        "documentation": "-- | The list of IAM OpenID Connect providers in the AWS account.",
                        "typeExposed": "[OpenIDConnectProviderListEntry]",
                        "type": "List \"member\" OpenIDConnectProviderListEntry"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "loidcprOpenIDConnectProviderList",
                        "name": "_loidcprOpenIDConnectProviderList",
                        "shape": "OpenIDConnectProviderListType",
                        "locationName": "OpenIDConnectProviderList",
                        "documentation": "-- | The list of IAM OpenID Connect providers in the AWS account.",
                        "typeExposed": "[OpenIDConnectProviderListEntry]",
                        "type": "List \"member\" OpenIDConnectProviderListEntry"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListOpenIDConnectProviders.html",
            "namespace": "Network.AWS.IAM.ListOpenIDConnectProviders",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "ListOpenIDConnectProviders",
            "method": "post",
            "documentation": "-- | Lists information about the OpenID Connect providers in the AWS account.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "listOpenIDConnectProviders",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "ListOpenIDConnectProviders",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 15,
                "ctor": "listPoliciesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListPoliciesResponse",
                "resultWrapper": "ListPoliciesResult",
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lprPolicies",
                        "name": "_lprPolicies",
                        "shape": "policyListType",
                        "locationName": "Policies",
                        "documentation": "-- | A list of policies.",
                        "typeExposed": "[Policy]",
                        "type": "List \"member\" Policy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lprIsTruncated",
                        "name": "_lprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policies to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policies in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lprMarker",
                        "name": "_lprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to use\n-- for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lprIsTruncated",
                        "name": "_lprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policies to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policies in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lprMarker",
                        "name": "_lprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to use\n-- for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lprPolicies",
                        "name": "_lprPolicies",
                        "shape": "policyListType",
                        "locationName": "Policies",
                        "documentation": "-- | A list of policies.",
                        "typeExposed": "[Policy]",
                        "type": "List \"member\" Policy"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListPolicies.html",
            "namespace": "Network.AWS.IAM.ListPolicies",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "ListPolicies",
            "method": "post",
            "documentation": "-- | Lists all the managed policies that are available to your account, including\n-- your own customer managed policies and all AWS managed policies.\n--\n-- You can filter the list of policies that is returned using the optional 'OnlyAttached', 'Scope', and 'PathPrefix' parameters. For example, to list only the customer\n-- managed policies in your AWS account, set 'Scope' to 'Local'. To list only AWS\n-- managed policies, set 'Scope' to 'AWS'.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters.\n--\n-- For more information about managed policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies andInline Policies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "listPolicies",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "ListPolicies",
                "query": [
                    {
                        "field": "_lpScope",
                        "locationName": "Scope",
                        "type": "field"
                    },
                    {
                        "field": "_lpOnlyAttached",
                        "locationName": "OnlyAttached",
                        "type": "field"
                    },
                    {
                        "field": "_lpPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_lpMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lpMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpScope",
                        "name": "_lpScope",
                        "shape": "policyScopeType",
                        "locationName": "Scope",
                        "documentation": "-- | The scope to use for filtering the results.\n--\n-- To list only AWS managed policies, set 'Scope' to 'AWS'. To list only the\n-- customer managed policies in your AWS account, set 'Scope' to 'Local'.\n--\n-- This parameter is optional. If it is not included, or if it is set to 'All',\n-- all policies are returned.",
                        "typeExposed": "Maybe PolicyScopeType",
                        "type": "Maybe PolicyScopeType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpOnlyAttached",
                        "name": "_lpOnlyAttached",
                        "shape": "booleanType",
                        "locationName": "OnlyAttached",
                        "documentation": "-- | A flag to filter the results to only the attached policies.\n--\n-- When 'OnlyAttached' is 'true', the returned list contains only the policies that\n-- are attached to a user, group, or role. When 'OnlyAttached' is 'false', or when\n-- the parameter is not included, all policies are returned.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpPathPrefix",
                        "name": "_lpPathPrefix",
                        "shape": "policyPathType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. This parameter is optional. If it\n-- is not included, it defaults to a slash (/), listing all policies.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpMarker",
                        "name": "_lpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpMaxItems",
                        "name": "_lpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of policies you want in the response. If there are additional policies\n-- beyond the maximum you specify, the 'IsTruncated' response element is 'true'.\n-- This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpMarker",
                        "name": "_lpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpMaxItems",
                        "name": "_lpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of policies you want in the response. If there are additional policies\n-- beyond the maximum you specify, the 'IsTruncated' response element is 'true'.\n-- This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpOnlyAttached",
                        "name": "_lpOnlyAttached",
                        "shape": "booleanType",
                        "locationName": "OnlyAttached",
                        "documentation": "-- | A flag to filter the results to only the attached policies.\n--\n-- When 'OnlyAttached' is 'true', the returned list contains only the policies that\n-- are attached to a user, group, or role. When 'OnlyAttached' is 'false', or when\n-- the parameter is not included, all policies are returned.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpPathPrefix",
                        "name": "_lpPathPrefix",
                        "shape": "policyPathType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. This parameter is optional. If it\n-- is not included, it defaults to a slash (/), listing all policies.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpScope",
                        "name": "_lpScope",
                        "shape": "policyScopeType",
                        "locationName": "Scope",
                        "documentation": "-- | The scope to use for filtering the results.\n--\n-- To list only AWS managed policies, set 'Scope' to 'AWS'. To list only the\n-- customer managed policies in your AWS account, set 'Scope' to 'Local'.\n--\n-- This parameter is optional. If it is not included, or if it is set to 'All',\n-- all policies are returned.",
                        "typeExposed": "Maybe PolicyScopeType",
                        "type": "Maybe PolicyScopeType"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 16,
                "ctor": "listPolicyVersionsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListPolicyVersionsResponse",
                "resultWrapper": "ListPolicyVersionsResult",
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lpvrVersions",
                        "name": "_lpvrVersions",
                        "shape": "policyDocumentVersionListType",
                        "locationName": "Versions",
                        "documentation": "-- | A list of policy versions.\n--\n-- For more information about managed policy versions, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html Versioning forManaged Policies\u003e in the /Using IAM/ guide.",
                        "typeExposed": "[PolicyVersion]",
                        "type": "List \"member\" PolicyVersion"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpvrIsTruncated",
                        "name": "_lpvrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policy versions to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policy versions in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpvrMarker",
                        "name": "_lpvrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to use\n-- for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpvrIsTruncated",
                        "name": "_lpvrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policy versions to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policy versions in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpvrMarker",
                        "name": "_lpvrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to use\n-- for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lpvrVersions",
                        "name": "_lpvrVersions",
                        "shape": "policyDocumentVersionListType",
                        "locationName": "Versions",
                        "documentation": "-- | A list of policy versions.\n--\n-- For more information about managed policy versions, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html Versioning forManaged Policies\u003e in the /Using IAM/ guide.",
                        "typeExposed": "[PolicyVersion]",
                        "type": "List \"member\" PolicyVersion"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListPolicyVersions.html",
            "namespace": "Network.AWS.IAM.ListPolicyVersions",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "ListPolicyVersions",
            "method": "post",
            "documentation": "-- | Lists information about the versions of the specified managed policy,\n-- including the version that is set as the policy's default version.\n--\n-- For more information about managed policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies andInline Policies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "listPolicyVersions",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lpvPolicyArn",
                        "name": "_lpvPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "ListPolicyVersions",
                "query": [
                    {
                        "field": "_lpvPolicyArn",
                        "locationName": "PolicyArn",
                        "type": "field"
                    },
                    {
                        "field": "_lpvMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lpvMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpvMarker",
                        "name": "_lpvMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpvMaxItems",
                        "name": "_lpvMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of policy versions you want in the response. If there are additional\n-- policy versions beyond the maximum you specify, the 'IsTruncated' response\n-- element is 'true'. This parameter is optional. If you do not include it, it\n-- defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpvMarker",
                        "name": "_lpvMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lpvMaxItems",
                        "name": "_lpvMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of policy versions you want in the response. If there are additional\n-- policy versions beyond the maximum you specify, the 'IsTruncated' response\n-- element is 'true'. This parameter is optional. If you do not include it, it\n-- defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lpvPolicyArn",
                        "name": "_lpvPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 16,
                "ctor": "listRolePoliciesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListRolePoliciesResponse",
                "resultWrapper": "ListRolePoliciesResult",
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lrprPolicyNames",
                        "name": "_lrprPolicyNames",
                        "shape": "policyNameListType",
                        "locationName": "PolicyNames",
                        "documentation": "-- | A list of policy names.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrprIsTruncated",
                        "name": "_lrprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policy names to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policy names in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrprMarker",
                        "name": "_lrprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrprIsTruncated",
                        "name": "_lrprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policy names to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policy names in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrprMarker",
                        "name": "_lrprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lrprPolicyNames",
                        "name": "_lrprPolicyNames",
                        "shape": "policyNameListType",
                        "locationName": "PolicyNames",
                        "documentation": "-- | A list of policy names.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListRolePolicies.html",
            "namespace": "Network.AWS.IAM.ListRolePolicies",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lrprIsTruncated",
                "token": {
                    "input": "lrpMarker",
                    "outputRequired": false,
                    "output": "lrprMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListRolePolicies",
            "method": "post",
            "documentation": "-- | Lists the names of the inline policies that are embedded in the specified\n-- role.\n--\n-- A role can also have managed policies attached to it. To list the managed\n-- policies that are attached to a role, use 'ListAttachedRolePolicies'. For more\n-- information about policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and Inline Policies\u003e in\n-- the /Using IAM/ guide.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters. If\n-- there are no inline policies embedded with the specified role, the action\n-- returns an empty list.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "listRolePolicies",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lrpRoleName",
                        "name": "_lrpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to list policies for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListRolePolicies",
                "query": [
                    {
                        "field": "_lrpRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_lrpMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lrpMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrpMarker",
                        "name": "_lrpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrpMaxItems",
                        "name": "_lrpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of role policies you want in the response. If there are additional\n-- role policies beyond the maximum you specify, the 'IsTruncated' response\n-- element is 'true'. This parameter is optional. If you do not include it, it\n-- defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrpMarker",
                        "name": "_lrpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrpMaxItems",
                        "name": "_lrpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of role policies you want in the response. If there are additional\n-- role policies beyond the maximum you specify, the 'IsTruncated' response\n-- element is 'true'. This parameter is optional. If you do not include it, it\n-- defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lrpRoleName",
                        "name": "_lrpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to list policies for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 15,
                "ctor": "listRolesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListRolesResponse",
                "resultWrapper": "ListRolesResult",
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lrrRoles",
                        "name": "_lrrRoles",
                        "shape": "roleListType",
                        "locationName": "Roles",
                        "documentation": "-- | A list of roles.",
                        "typeExposed": "[Role]",
                        "type": "List \"member\" Role"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrrIsTruncated",
                        "name": "_lrrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more roles to list. If your results\n-- were truncated, you can make a subsequent pagination request using the 'Marker'\n-- request parameter to retrieve more roles in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrrMarker",
                        "name": "_lrrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrrIsTruncated",
                        "name": "_lrrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more roles to list. If your results\n-- were truncated, you can make a subsequent pagination request using the 'Marker'\n-- request parameter to retrieve more roles in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrrMarker",
                        "name": "_lrrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lrrRoles",
                        "name": "_lrrRoles",
                        "shape": "roleListType",
                        "locationName": "Roles",
                        "documentation": "-- | A list of roles.",
                        "typeExposed": "[Role]",
                        "type": "List \"member\" Role"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListRoles.html",
            "namespace": "Network.AWS.IAM.ListRoles",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lrrIsTruncated",
                "token": {
                    "input": "lrMarker",
                    "outputRequired": false,
                    "output": "lrrMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListRoles",
            "method": "post",
            "documentation": "-- | Lists the roles that have the specified path prefix. If there are none, the\n-- action returns an empty list. For more information about roles, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html Workingwith Roles\u003e.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters.\n--\n-- The returned policy is URL-encoded according to RFC 3986. For more\n-- information about RFC 3986, go to \u003chttp://www.faqs.org/rfcs/rfc3986.html http://www.faqs.org/rfcs/rfc3986.html\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "listRoles",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ListRoles",
                "query": [
                    {
                        "field": "_lrPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_lrMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lrMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrPathPrefix",
                        "name": "_lrPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. For example, the prefix '/application_abc/component_xyz/' gets all roles whose path starts with '/application_abc/component_xyz/'.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/), listing all roles.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrMarker",
                        "name": "_lrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrMaxItems",
                        "name": "_lrMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of roles you want in the response. If there are additional roles\n-- beyond the maximum you specify, the 'IsTruncated' response element is 'true'.\n-- This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrMarker",
                        "name": "_lrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrMaxItems",
                        "name": "_lrMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of roles you want in the response. If there are additional roles\n-- beyond the maximum you specify, the 'IsTruncated' response element is 'true'.\n-- This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lrPathPrefix",
                        "name": "_lrPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. For example, the prefix '/application_abc/component_xyz/' gets all roles whose path starts with '/application_abc/component_xyz/'.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/), listing all roles.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "SAMLProviderListEntry",
                "style": "xml",
                "fieldPad": 0,
                "ctor": "listSAMLProvidersResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "lsamlprSAMLProviderList",
                    "name": "_lsamlprSAMLProviderList",
                    "shape": "SAMLProviderListType",
                    "locationName": "SAMLProviderList",
                    "documentation": "-- | The list of SAML providers for this account.",
                    "typeExposed": "[SAMLProviderListEntry]",
                    "type": "List \"member\" SAMLProviderListEntry"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListSAMLProvidersResponse",
                "resultWrapper": "ListSAMLProvidersResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lsamlprSAMLProviderList",
                        "name": "_lsamlprSAMLProviderList",
                        "shape": "SAMLProviderListType",
                        "locationName": "SAMLProviderList",
                        "documentation": "-- | The list of SAML providers for this account.",
                        "typeExposed": "[SAMLProviderListEntry]",
                        "type": "List \"member\" SAMLProviderListEntry"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lsamlprSAMLProviderList",
                        "name": "_lsamlprSAMLProviderList",
                        "shape": "SAMLProviderListType",
                        "locationName": "SAMLProviderList",
                        "documentation": "-- | The list of SAML providers for this account.",
                        "typeExposed": "[SAMLProviderListEntry]",
                        "type": "List \"member\" SAMLProviderListEntry"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListSAMLProviders.html",
            "namespace": "Network.AWS.IAM.ListSAMLProviders",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "ListSAMLProviders",
            "method": "post",
            "documentation": "-- | Lists the SAML providers in the account.\n--\n-- This operation requires \u003chttp://docs.aws.amazon.com/general/latest/gr/signature-version-4.html Signature Version 4\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "listSAMLProviders",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "ListSAMLProviders",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 34,
                "ctor": "listServerCertificatesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListServerCertificatesResponse",
                "resultWrapper": "ListServerCertificatesResult",
                "locationPad": 30,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lscrServerCertificateMetadataList",
                        "name": "_lscrServerCertificateMetadataList",
                        "shape": "serverCertificateMetadataListType",
                        "locationName": "ServerCertificateMetadataList",
                        "documentation": "-- | A list of server certificates.",
                        "typeExposed": "[ServerCertificateMetadata]",
                        "type": "List \"member\" ServerCertificateMetadata"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lscrIsTruncated",
                        "name": "_lscrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more server certificates to list. If\n-- your results were truncated, you can make a subsequent pagination request\n-- using the 'Marker' request parameter to retrieve more server certificates in\n-- the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lscrMarker",
                        "name": "_lscrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lscrIsTruncated",
                        "name": "_lscrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more server certificates to list. If\n-- your results were truncated, you can make a subsequent pagination request\n-- using the 'Marker' request parameter to retrieve more server certificates in\n-- the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lscrMarker",
                        "name": "_lscrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lscrServerCertificateMetadataList",
                        "name": "_lscrServerCertificateMetadataList",
                        "shape": "serverCertificateMetadataListType",
                        "locationName": "ServerCertificateMetadataList",
                        "documentation": "-- | A list of server certificates.",
                        "typeExposed": "[ServerCertificateMetadata]",
                        "type": "List \"member\" ServerCertificateMetadata"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListServerCertificates.html",
            "namespace": "Network.AWS.IAM.ListServerCertificates",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lscrIsTruncated",
                "token": {
                    "input": "lscMarker",
                    "outputRequired": false,
                    "output": "lscrMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListServerCertificates",
            "method": "post",
            "documentation": "-- | Lists the server certificates that have the specified path prefix. If none\n-- exist, the action returns an empty list.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "listServerCertificates",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ListServerCertificates",
                "query": [
                    {
                        "field": "_lscPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_lscMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lscMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lscPathPrefix",
                        "name": "_lscPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. For example: '/company/servercerts'\n-- would get all server certificates for which the path starts with '/company/servercerts'.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/), listing all server certificates.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lscMarker",
                        "name": "_lscMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lscMaxItems",
                        "name": "_lscMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- server certificates you want in the response. If there are additional server\n-- certificates beyond the maximum you specify, the 'IsTruncated' response element\n-- will be set to 'true'. This parameter is optional. If you do not include it, it\n-- defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lscMarker",
                        "name": "_lscMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lscMaxItems",
                        "name": "_lscMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- server certificates you want in the response. If there are additional server\n-- certificates beyond the maximum you specify, the 'IsTruncated' response element\n-- will be set to 'true'. This parameter is optional. If you do not include it, it\n-- defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lscPathPrefix",
                        "name": "_lscPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. For example: '/company/servercerts'\n-- would get all server certificates for which the path starts with '/company/servercerts'.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/), listing all server certificates.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 18,
                "ctor": "listSigningCertificatesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListSigningCertificatesResponse",
                "resultWrapper": "ListSigningCertificatesResult",
                "locationPad": 13,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lscr1Certificates",
                        "name": "_lscr1Certificates",
                        "shape": "certificateListType",
                        "locationName": "Certificates",
                        "documentation": "-- | A list of the user's signing certificate information.",
                        "typeExposed": "[SigningCertificate]",
                        "type": "List \"member\" SigningCertificate"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lscr1IsTruncated",
                        "name": "_lscr1IsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more certificate IDs to list. If\n-- your results were truncated, you can make a subsequent pagination request\n-- using the 'Marker' request parameter to retrieve more certificates in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lscr1Marker",
                        "name": "_lscr1Marker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lscr1Certificates",
                        "name": "_lscr1Certificates",
                        "shape": "certificateListType",
                        "locationName": "Certificates",
                        "documentation": "-- | A list of the user's signing certificate information.",
                        "typeExposed": "[SigningCertificate]",
                        "type": "List \"member\" SigningCertificate"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lscr1IsTruncated",
                        "name": "_lscr1IsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more certificate IDs to list. If\n-- your results were truncated, you can make a subsequent pagination request\n-- using the 'Marker' request parameter to retrieve more certificates in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lscr1Marker",
                        "name": "_lscr1Marker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListSigningCertificates.html",
            "namespace": "Network.AWS.IAM.ListSigningCertificates",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lscr1IsTruncated",
                "token": {
                    "input": "lsc1Marker",
                    "outputRequired": false,
                    "output": "lscr1Marker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListSigningCertificates",
            "method": "post",
            "documentation": "-- | Returns information about the signing certificates associated with the\n-- specified user. If there are none, the action returns an empty list.\n--\n-- Although each user is limited to a small number of signing certificates,\n-- you can still paginate the results using the 'MaxItems' and 'Marker' parameters.\n--\n-- If the 'UserName' field is not specified, the user name is determined\n-- implicitly based on the AWS access key ID used to sign the request. Because\n-- this action works for access keys under the AWS account, you can use this\n-- action to manage root credentials even if the AWS account has no associated\n-- users.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "listSigningCertificates",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListSigningCertificates",
                "query": [
                    {
                        "field": "_lsc1UserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_lsc1Marker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lsc1MaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsc1UserName",
                        "name": "_lsc1UserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsc1Marker",
                        "name": "_lsc1Marker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsc1MaxItems",
                        "name": "_lsc1MaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- certificate IDs you want in the response. If there are additional certificate\n-- IDs beyond the maximum you specify, the 'IsTruncated' response element is 'true'.\n-- This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsc1Marker",
                        "name": "_lsc1Marker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsc1MaxItems",
                        "name": "_lsc1MaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- certificate IDs you want in the response. If there are additional certificate\n-- IDs beyond the maximum you specify, the 'IsTruncated' response element is 'true'.\n-- This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsc1UserName",
                        "name": "_lsc1UserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 16,
                "ctor": "listUserPoliciesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListUserPoliciesResponse",
                "resultWrapper": "ListUserPoliciesResult",
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "luprPolicyNames",
                        "name": "_luprPolicyNames",
                        "shape": "policyNameListType",
                        "locationName": "PolicyNames",
                        "documentation": "-- | A list of policy names.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "luprIsTruncated",
                        "name": "_luprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policy names to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policy names in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "luprMarker",
                        "name": "_luprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "luprIsTruncated",
                        "name": "_luprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more policy names to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more policy names in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "luprMarker",
                        "name": "_luprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "luprPolicyNames",
                        "name": "_luprPolicyNames",
                        "shape": "policyNameListType",
                        "locationName": "PolicyNames",
                        "documentation": "-- | A list of policy names.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListUserPolicies.html",
            "namespace": "Network.AWS.IAM.ListUserPolicies",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "luprIsTruncated",
                "token": {
                    "input": "lupMarker",
                    "outputRequired": false,
                    "output": "luprMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListUserPolicies",
            "method": "post",
            "documentation": "-- | Lists the names of the inline policies embedded in the specified user.\n--\n-- A user can also have managed policies attached to it. To list the managed\n-- policies that are attached to a user, use 'ListAttachedUserPolicies'. For more\n-- information about policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and Inline Policies\u003e in\n-- the /Using IAM/ guide.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters. If\n-- there are no inline policies embedded with the specified user, the action\n-- returns an empty list.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "listUserPolicies",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lupUserName",
                        "name": "_lupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to list policies for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListUserPolicies",
                "query": [
                    {
                        "field": "_lupUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_lupMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lupMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lupMarker",
                        "name": "_lupMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lupMaxItems",
                        "name": "_lupMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- policy names you want in the response. If there are additional policy names\n-- beyond the maximum you specify, the 'IsTruncated' response element is 'true'.\n-- This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lupMarker",
                        "name": "_lupMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this only when paginating results, and only in a subsequent request\n-- after you've received a response where the results are truncated. Set it to\n-- the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lupMaxItems",
                        "name": "_lupMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this only when paginating results to indicate the maximum number of\n-- policy names you want in the response. If there are additional policy names\n-- beyond the maximum you specify, the 'IsTruncated' response element is 'true'.\n-- This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lupUserName",
                        "name": "_lupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to list policies for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 15,
                "ctor": "listUsersResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListUsersResponse",
                "resultWrapper": "ListUsersResult",
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lurUsers",
                        "name": "_lurUsers",
                        "shape": "userListType",
                        "locationName": "Users",
                        "documentation": "-- | A list of users.",
                        "typeExposed": "[User]",
                        "type": "List \"member\" User"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lurIsTruncated",
                        "name": "_lurIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more user names to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more users in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lurMarker",
                        "name": "_lurMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lurIsTruncated",
                        "name": "_lurIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more user names to list. If your\n-- results were truncated, you can make a subsequent pagination request using\n-- the 'Marker' request parameter to retrieve more users in the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lurMarker",
                        "name": "_lurMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lurUsers",
                        "name": "_lurUsers",
                        "shape": "userListType",
                        "locationName": "Users",
                        "documentation": "-- | A list of users.",
                        "typeExposed": "[User]",
                        "type": "List \"member\" User"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListUsers.html",
            "namespace": "Network.AWS.IAM.ListUsers",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lurIsTruncated",
                "token": {
                    "input": "luMarker",
                    "outputRequired": false,
                    "output": "lurMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListUsers",
            "method": "post",
            "documentation": "-- | Lists the IAM users that have the specified path prefix. If no path prefix is\n-- specified, the action returns all users in the AWS account. If there are\n-- none, the action returns an empty list.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "listUsers",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ListUsers",
                "query": [
                    {
                        "field": "_luPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_luMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_luMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "luPathPrefix",
                        "name": "_luPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. For example: '/division_abc/subdivision_xyz/', which would get all user names whose path starts with '/division_abc/subdivision_xyz/'.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/), listing all user names.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "luMarker",
                        "name": "_luMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "luMaxItems",
                        "name": "_luMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of user names you want in the response. If there are additional user\n-- names beyond the maximum you specify, the 'IsTruncated' response element is 'true'\n-- . This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "luMarker",
                        "name": "_luMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "luMaxItems",
                        "name": "_luMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of user names you want in the response. If there are additional user\n-- names beyond the maximum you specify, the 'IsTruncated' response element is 'true'\n-- . This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "luPathPrefix",
                        "name": "_luPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "-- | The path prefix for filtering the results. For example: '/division_abc/subdivision_xyz/', which would get all user names whose path starts with '/division_abc/subdivision_xyz/'.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/), listing all user names.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 25,
                "ctor": "listVirtualMFADevicesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListVirtualMFADevicesResponse",
                "resultWrapper": "ListVirtualMFADevicesResult",
                "locationPad": 18,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lvmfadrVirtualMFADevices",
                        "name": "_lvmfadrVirtualMFADevices",
                        "shape": "virtualMFADeviceListType",
                        "locationName": "VirtualMFADevices",
                        "documentation": "-- | The list of virtual MFA devices in the current account that match the 'AssignmentStatus' value that was passed in the request.",
                        "typeExposed": "[VirtualMFADevice]",
                        "type": "List \"member\" VirtualMFADevice"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lvmfadrIsTruncated",
                        "name": "_lvmfadrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more items to list. If your results\n-- were truncated, you can make a subsequent pagination request using the 'Marker'\n-- request parameter to retrieve more items the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lvmfadrMarker",
                        "name": "_lvmfadrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lvmfadrIsTruncated",
                        "name": "_lvmfadrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "-- | A flag that indicates whether there are more items to list. If your results\n-- were truncated, you can make a subsequent pagination request using the 'Marker'\n-- request parameter to retrieve more items the list.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lvmfadrMarker",
                        "name": "_lvmfadrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | If 'IsTruncated' is 'true', this element is present and contains the value to\n-- use for the 'Marker' parameter in a subsequent pagination request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lvmfadrVirtualMFADevices",
                        "name": "_lvmfadrVirtualMFADevices",
                        "shape": "virtualMFADeviceListType",
                        "locationName": "VirtualMFADevices",
                        "documentation": "-- | The list of virtual MFA devices in the current account that match the 'AssignmentStatus' value that was passed in the request.",
                        "typeExposed": "[VirtualMFADevice]",
                        "type": "List \"member\" VirtualMFADevice"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListVirtualMFADevices.html",
            "namespace": "Network.AWS.IAM.ListVirtualMFADevices",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lvmfadrIsTruncated",
                "token": {
                    "input": "lvmfadMarker",
                    "outputRequired": false,
                    "output": "lvmfadrMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListVirtualMFADevices",
            "method": "post",
            "documentation": "-- | Lists the virtual MFA devices under the AWS account by assignment status. If\n-- you do not specify an assignment status, the action returns a list of all\n-- virtual MFA devices. Assignment status can be 'Assigned', 'Unassigned', or 'Any'.\n--\n-- You can paginate the results using the 'MaxItems' and 'Marker' parameters.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "listVirtualMFADevices",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "ListVirtualMFADevices",
                "query": [
                    {
                        "field": "_lvmfadAssignmentStatus",
                        "locationName": "AssignmentStatus",
                        "type": "field"
                    },
                    {
                        "field": "_lvmfadMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lvmfadMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lvmfadAssignmentStatus",
                        "name": "_lvmfadAssignmentStatus",
                        "shape": "assignmentStatusType",
                        "locationName": "AssignmentStatus",
                        "documentation": "-- | The status (unassigned or assigned) of the devices to list. If you do not\n-- specify an 'AssignmentStatus', the action defaults to 'Any' which lists both\n-- assigned and unassigned virtual MFA devices.",
                        "typeExposed": "Maybe AssignmentStatusType",
                        "type": "Maybe AssignmentStatusType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lvmfadMarker",
                        "name": "_lvmfadMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lvmfadMaxItems",
                        "name": "_lvmfadMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of MFA devices you want in the response. If there are additional MFA\n-- devices beyond the maximum you specify, the 'IsTruncated' response element is 'true'. This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lvmfadAssignmentStatus",
                        "name": "_lvmfadAssignmentStatus",
                        "shape": "assignmentStatusType",
                        "locationName": "AssignmentStatus",
                        "documentation": "-- | The status (unassigned or assigned) of the devices to list. If you do not\n-- specify an 'AssignmentStatus', the action defaults to 'Any' which lists both\n-- assigned and unassigned virtual MFA devices.",
                        "typeExposed": "Maybe AssignmentStatusType",
                        "type": "Maybe AssignmentStatusType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lvmfadMarker",
                        "name": "_lvmfadMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "-- | Use this parameter only when paginating results, and only in a subsequent\n-- request after you've received a response where the results are truncated. Set\n-- it to the value of the 'Marker' element in the response you just received.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lvmfadMaxItems",
                        "name": "_lvmfadMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "-- | Use this parameter only when paginating results to indicate the maximum\n-- number of MFA devices you want in the response. If there are additional MFA\n-- devices beyond the maximum you specify, the 'IsTruncated' response element is 'true'. This parameter is optional. If you do not include it, it defaults to 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putGroupPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutGroupPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_PutGroupPolicy.html",
            "namespace": "Network.AWS.IAM.PutGroupPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "PutGroupPolicy",
            "method": "post",
            "documentation": "-- | Adds (or updates) an inline policy document that is embedded in the specified\n-- group.\n--\n-- A user can also have managed policies attached to it. To attach a managed\n-- policy to a group, use 'AttachGroupPolicy'. To create a new managed policy, use 'CreatePolicy'. For information about policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies andInline Policies\u003e in the /Using IAM/ guide.\n--\n-- For information about limits on the number of inline policies that you can\n-- embed in a group, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html Limitations on IAM Entities\u003e in the /Using IAM/ guide.\n--\n-- Because policy documents can be large, you should use POST rather than GET\n-- when calling 'PutGroupPolicy'. For general information about using the Query\n-- API with IAM, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html Making Query Requests\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "putGroupPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "pgpGroupName",
                        "name": "_pgpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group to associate the policy with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "pgpPolicyName",
                        "name": "_pgpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "pgpPolicyDocument",
                        "name": "_pgpPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "PutGroupPolicy",
                "query": [
                    {
                        "field": "_pgpGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_pgpPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    },
                    {
                        "field": "_pgpPolicyDocument",
                        "locationName": "PolicyDocument",
                        "type": "field"
                    }
                ],
                "locationPad": 15,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "pgpGroupName",
                        "name": "_pgpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group to associate the policy with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "pgpPolicyDocument",
                        "name": "_pgpPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "pgpPolicyName",
                        "name": "_pgpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putRolePolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutRolePolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_PutRolePolicy.html",
            "namespace": "Network.AWS.IAM.PutRolePolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "PutRolePolicy",
            "method": "post",
            "documentation": "-- | Adds (or updates) an inline policy document that is embedded in the specified\n-- role.\n--\n-- When you embed an inline policy in a role, the inline policy is used as the\n-- role's access (permissions) policy. The role's trust policy is created at the\n-- same time as the role, using 'CreateRole'. You can update a role's trust policy\n-- using 'UpdateAssumeRolePolicy'. For more information about roles, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html UsingRoles to Delegate Permissions and Federate Identities\u003e.\n--\n-- A role can also have a managed policy attached to it. To attach a managed\n-- policy to a role, use 'AttachRolePolicy'. To create a new managed policy, use 'CreatePolicy'. For information about policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and InlinePolicies\u003e in the /Using IAM/ guide.\n--\n-- For information about limits on the number of inline policies that you can\n-- embed with a role, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html Limitations on IAM Entities\u003e in the /Using IAM/ guide.\n--\n-- Because policy documents can be large, you should use POST rather than GET\n-- when calling 'PutRolePolicy'. For general information about using the Query API\n-- with IAM, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html Making Query Requests\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "putRolePolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "prpRoleName",
                        "name": "_prpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to associate the policy with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "prpPolicyName",
                        "name": "_prpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "prpPolicyDocument",
                        "name": "_prpPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "PutRolePolicy",
                "query": [
                    {
                        "field": "_prpRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_prpPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    },
                    {
                        "field": "_prpPolicyDocument",
                        "locationName": "PolicyDocument",
                        "type": "field"
                    }
                ],
                "locationPad": 15,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "prpPolicyDocument",
                        "name": "_prpPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "prpPolicyName",
                        "name": "_prpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "prpRoleName",
                        "name": "_prpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to associate the policy with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putUserPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutUserPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_PutUserPolicy.html",
            "namespace": "Network.AWS.IAM.PutUserPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "PutUserPolicy",
            "method": "post",
            "documentation": "-- | Adds (or updates) an inline policy document that is embedded in the specified\n-- user.\n--\n-- A user can also have a managed policy attached to it. To attach a managed\n-- policy to a user, use 'AttachUserPolicy'. To create a new managed policy, use 'CreatePolicy'. For information about policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and InlinePolicies\u003e in the /Using IAM/ guide.\n--\n-- For information about limits on the number of inline policies that you can\n-- embed in a user, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html Limitations on IAM Entities\u003e in the /Using IAM/ guide.\n--\n-- Because policy documents can be large, you should use POST rather than GET\n-- when calling 'PutUserPolicy'. For general information about using the Query API\n-- with IAM, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html Making Query Requests\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "putUserPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "pupUserName",
                        "name": "_pupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to associate the policy with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "pupPolicyName",
                        "name": "_pupPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "pupPolicyDocument",
                        "name": "_pupPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "PutUserPolicy",
                "query": [
                    {
                        "field": "_pupUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_pupPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    },
                    {
                        "field": "_pupPolicyDocument",
                        "locationName": "PolicyDocument",
                        "type": "field"
                    }
                ],
                "locationPad": 15,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "pupPolicyDocument",
                        "name": "_pupPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "pupPolicyName",
                        "name": "_pupPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "-- | The name of the policy document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "pupUserName",
                        "name": "_pupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to associate the policy with.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "removeClientIDFromOpenIDConnectProviderResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "RemoveClientIDFromOpenIDConnectProviderResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveClientIDFromOpenIDConnectProvider.html",
            "namespace": "Network.AWS.IAM.RemoveClientIDFromOpenIDConnectProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "RemoveClientIDFromOpenIDConnectProvider",
            "method": "post",
            "documentation": "-- | Removes the specified client ID (also known as audience) from the list of\n-- client IDs registered for the specified IAM OpenID Connect provider.\n--\n-- This action is idempotent; it does not fail or return an error if you try to\n-- remove a client ID that was removed previously.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 35,
                "ctor": "removeClientIDFromOpenIDConnectProvider",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rcidfoidcpOpenIDConnectProviderArn",
                        "name": "_rcidfoidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to\n-- remove the client ID from. You can get a list of OIDC provider ARNs by using\n-- the 'ListOpenIDConnectProviders' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rcidfoidcpClientID",
                        "name": "_rcidfoidcpClientID",
                        "shape": "clientIDType",
                        "locationName": "ClientID",
                        "documentation": "-- | The client ID (also known as audience) to remove from the IAM OpenID Connect\n-- provider. For more information about client IDs, see 'CreateOpenIDConnectProvider'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "RemoveClientIDFromOpenIDConnectProvider",
                "query": [
                    {
                        "field": "_rcidfoidcpOpenIDConnectProviderArn",
                        "locationName": "OpenIDConnectProviderArn",
                        "type": "field"
                    },
                    {
                        "field": "_rcidfoidcpClientID",
                        "locationName": "ClientID",
                        "type": "field"
                    }
                ],
                "locationPad": 25,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rcidfoidcpClientID",
                        "name": "_rcidfoidcpClientID",
                        "shape": "clientIDType",
                        "locationName": "ClientID",
                        "documentation": "-- | The client ID (also known as audience) to remove from the IAM OpenID Connect\n-- provider. For more information about client IDs, see 'CreateOpenIDConnectProvider'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rcidfoidcpOpenIDConnectProviderArn",
                        "name": "_rcidfoidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to\n-- remove the client ID from. You can get a list of OIDC provider ARNs by using\n-- the 'ListOpenIDConnectProviders' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "removeRoleFromInstanceProfileResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "RemoveRoleFromInstanceProfileResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveRoleFromInstanceProfile.html",
            "namespace": "Network.AWS.IAM.RemoveRoleFromInstanceProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "RemoveRoleFromInstanceProfile",
            "method": "post",
            "documentation": "-- | Removes the specified role from the specified instance profile.\n--\n-- Make sure you do not have any Amazon EC2 instances running with the role\n-- you are about to remove from the instance profile. Removing a role from an\n-- instance profile that is associated with a running instance will break any\n-- applications running on the instance.   For more information about roles, go\n-- to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html Working with Roles\u003e. For more information about instance profiles, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html About Instance Profiles\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "removeRoleFromInstanceProfile",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rrfipInstanceProfileName",
                        "name": "_rrfipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "-- | The name of the instance profile to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rrfipRoleName",
                        "name": "_rrfipRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to remove.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "RemoveRoleFromInstanceProfile",
                "query": [
                    {
                        "field": "_rrfipInstanceProfileName",
                        "locationName": "InstanceProfileName",
                        "type": "field"
                    },
                    {
                        "field": "_rrfipRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    }
                ],
                "locationPad": 20,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rrfipInstanceProfileName",
                        "name": "_rrfipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "-- | The name of the instance profile to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rrfipRoleName",
                        "name": "_rrfipRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to remove.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "removeUserFromGroupResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "RemoveUserFromGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveUserFromGroup.html",
            "namespace": "Network.AWS.IAM.RemoveUserFromGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "RemoveUserFromGroup",
            "method": "post",
            "documentation": "-- | Removes the specified user from the specified group.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "removeUserFromGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rufgGroupName",
                        "name": "_rufgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rufgUserName",
                        "name": "_rufgUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to remove.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "RemoveUserFromGroup",
                "query": [
                    {
                        "field": "_rufgGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_rufgUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rufgGroupName",
                        "name": "_rufgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the group to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rufgUserName",
                        "name": "_rufgUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user to remove.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "resyncMFADeviceResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ResyncMFADeviceResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ResyncMFADevice.html",
            "namespace": "Network.AWS.IAM.ResyncMFADevice",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "ResyncMFADevice",
            "method": "post",
            "documentation": "-- | Synchronizes the specified MFA device with AWS servers.\n--\n-- For more information about creating and working with virtual MFA devices, go\n-- to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html Using a Virtual MFA Device\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "resyncMFADevice",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rmfadUserName",
                        "name": "_rmfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose MFA device you want to resynchronize.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rmfadSerialNumber",
                        "name": "_rmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | Serial number that uniquely identifies the MFA device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rmfadAuthenticationCode1",
                        "name": "_rmfadAuthenticationCode1",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode1",
                        "documentation": "-- | An authentication code emitted by the device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rmfadAuthenticationCode2",
                        "name": "_rmfadAuthenticationCode2",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode2",
                        "documentation": "-- | A subsequent authentication code emitted by the device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "ResyncMFADevice",
                "query": [
                    {
                        "field": "_rmfadUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_rmfadSerialNumber",
                        "locationName": "SerialNumber",
                        "type": "field"
                    },
                    {
                        "field": "_rmfadAuthenticationCode1",
                        "locationName": "AuthenticationCode1",
                        "type": "field"
                    },
                    {
                        "field": "_rmfadAuthenticationCode2",
                        "locationName": "AuthenticationCode2",
                        "type": "field"
                    }
                ],
                "locationPad": 20,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rmfadAuthenticationCode1",
                        "name": "_rmfadAuthenticationCode1",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode1",
                        "documentation": "-- | An authentication code emitted by the device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rmfadAuthenticationCode2",
                        "name": "_rmfadAuthenticationCode2",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode2",
                        "documentation": "-- | A subsequent authentication code emitted by the device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rmfadSerialNumber",
                        "name": "_rmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | Serial number that uniquely identifies the MFA device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rmfadUserName",
                        "name": "_rmfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose MFA device you want to resynchronize.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "setDefaultPolicyVersionResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "SetDefaultPolicyVersionResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_SetDefaultPolicyVersion.html",
            "namespace": "Network.AWS.IAM.SetDefaultPolicyVersion",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "SetDefaultPolicyVersion",
            "method": "post",
            "documentation": "-- | Sets the specified version of the specified policy as the policy's default\n-- (operative) version.\n--\n-- This action affects all users, groups, and roles that the policy is attached\n-- to. To list the users, groups, and roles that the policy is attached to, use\n-- the 'ListEntitiesForPolicy' API.\n--\n-- For information about managed policies, refer to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html Managed Policies and InlinePolicies\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "setDefaultPolicyVersion",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sdpvPolicyArn",
                        "name": "_sdpvPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sdpvVersionId",
                        "name": "_sdpvVersionId",
                        "shape": "policyVersionIdType",
                        "locationName": "VersionId",
                        "documentation": "-- | The version of the policy to set as the default (operative) version.\n--\n-- For more information about managed policy versions, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html Versioning forManaged Policies\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "SetDefaultPolicyVersion",
                "query": [
                    {
                        "field": "_sdpvPolicyArn",
                        "locationName": "PolicyArn",
                        "type": "field"
                    },
                    {
                        "field": "_sdpvVersionId",
                        "locationName": "VersionId",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sdpvPolicyArn",
                        "name": "_sdpvPolicyArn",
                        "shape": "arnType",
                        "locationName": "PolicyArn",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sdpvVersionId",
                        "name": "_sdpvVersionId",
                        "shape": "policyVersionIdType",
                        "locationName": "VersionId",
                        "documentation": "-- | The version of the policy to set as the default (operative) version.\n--\n-- For more information about managed policy versions, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html Versioning forManaged Policies\u003e in the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateAccessKeyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateAccessKeyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAccessKey.html",
            "namespace": "Network.AWS.IAM.UpdateAccessKey",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateAccessKey",
            "method": "post",
            "documentation": "-- | Changes the status of the specified access key from Active to Inactive, or\n-- vice versa. This action can be used to disable a user's key as part of a key\n-- rotation work flow.\n--\n-- If the 'UserName' field is not specified, the UserName is determined\n-- implicitly based on the AWS access key ID used to sign the request. Because\n-- this action works for access keys under the AWS account, you can use this\n-- action to manage root credentials even if the AWS account has no associated\n-- users.\n--\n-- For information about rotating keys, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html Managing Keys and Certificates\u003e in\n-- the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "updateAccessKey",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uakAccessKeyId",
                        "name": "_uakAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "-- | The access key ID of the secret access key you want to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uakStatus",
                        "name": "_uakStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "-- | The status you want to assign to the secret access key. 'Active' means the key\n-- can be used for API calls to AWS, while 'Inactive' means the key cannot be\n-- used.",
                        "typeExposed": "StatusType",
                        "type": "StatusType"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "UpdateAccessKey",
                "query": [
                    {
                        "field": "_uakUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_uakAccessKeyId",
                        "locationName": "AccessKeyId",
                        "type": "field"
                    },
                    {
                        "field": "_uakStatus",
                        "locationName": "Status",
                        "type": "field"
                    }
                ],
                "locationPad": 12,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uakUserName",
                        "name": "_uakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose key you want to update.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uakAccessKeyId",
                        "name": "_uakAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "-- | The access key ID of the secret access key you want to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uakStatus",
                        "name": "_uakStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "-- | The status you want to assign to the secret access key. 'Active' means the key\n-- can be used for API calls to AWS, while 'Inactive' means the key cannot be\n-- used.",
                        "typeExposed": "StatusType",
                        "type": "StatusType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uakUserName",
                        "name": "_uakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose key you want to update.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateAccountPasswordPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateAccountPasswordPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAccountPasswordPolicy.html",
            "namespace": "Network.AWS.IAM.UpdateAccountPasswordPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateAccountPasswordPolicy",
            "method": "post",
            "documentation": "-- | Updates the password policy settings for the AWS account.\n--\n-- This action does not support partial updates. No parameters are required,\n-- but if you do not specify a parameter, that parameter's value reverts to its\n-- default value. See the Request Parameters section for each parameter's\n-- default value.\n--\n-- For more information about using a password policy, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html Managing an IAMPassword Policy\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 31,
                "ctor": "updateAccountPasswordPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 27,
                "name": "UpdateAccountPasswordPolicy",
                "query": [
                    {
                        "field": "_uappMinimumPasswordLength",
                        "locationName": "MinimumPasswordLength",
                        "type": "field"
                    },
                    {
                        "field": "_uappRequireSymbols",
                        "locationName": "RequireSymbols",
                        "type": "field"
                    },
                    {
                        "field": "_uappRequireNumbers",
                        "locationName": "RequireNumbers",
                        "type": "field"
                    },
                    {
                        "field": "_uappRequireUppercaseCharacters",
                        "locationName": "RequireUppercaseCharacters",
                        "type": "field"
                    },
                    {
                        "field": "_uappRequireLowercaseCharacters",
                        "locationName": "RequireLowercaseCharacters",
                        "type": "field"
                    },
                    {
                        "field": "_uappAllowUsersToChangePassword",
                        "locationName": "AllowUsersToChangePassword",
                        "type": "field"
                    },
                    {
                        "field": "_uappMaxPasswordAge",
                        "locationName": "MaxPasswordAge",
                        "type": "field"
                    },
                    {
                        "field": "_uappPasswordReusePrevention",
                        "locationName": "PasswordReusePrevention",
                        "type": "field"
                    },
                    {
                        "field": "_uappHardExpiry",
                        "locationName": "HardExpiry",
                        "type": "field"
                    }
                ],
                "locationPad": 27,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappMinimumPasswordLength",
                        "name": "_uappMinimumPasswordLength",
                        "shape": "minimumPasswordLengthType",
                        "locationName": "MinimumPasswordLength",
                        "documentation": "-- | The minimum number of characters allowed in an IAM user password.\n--\n-- Default value: 6",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappRequireSymbols",
                        "name": "_uappRequireSymbols",
                        "shape": "booleanType",
                        "locationName": "RequireSymbols",
                        "documentation": "-- | Specifies whether IAM user passwords must contain at least one of the\n-- following non-alphanumeric characters:\n--\n-- ! @ # $ % ^ &amp; * ( ) _ + - = [ ] { } | '\n--\n-- Default value: false",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappRequireNumbers",
                        "name": "_uappRequireNumbers",
                        "shape": "booleanType",
                        "locationName": "RequireNumbers",
                        "documentation": "-- | Specifies whether IAM user passwords must contain at least one numeric\n-- character (0 to 9).\n--\n-- Default value: false",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappRequireUppercaseCharacters",
                        "name": "_uappRequireUppercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireUppercaseCharacters",
                        "documentation": "-- | Specifies whether IAM user passwords must contain at least one uppercase\n-- character from the ISO basic Latin alphabet (A to Z).\n--\n-- Default value: false",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappRequireLowercaseCharacters",
                        "name": "_uappRequireLowercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireLowercaseCharacters",
                        "documentation": "-- | Specifies whether IAM user passwords must contain at least one lowercase\n-- character from the ISO basic Latin alphabet (a to z).\n--\n-- Default value: false",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappAllowUsersToChangePassword",
                        "name": "_uappAllowUsersToChangePassword",
                        "shape": "booleanType",
                        "locationName": "AllowUsersToChangePassword",
                        "documentation": "-- | Allows all IAM users in your account to use the AWS Management Console to\n-- change their own passwords. For more information, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/HowToPwdIAMUser.html Letting IAM UsersChange Their Own Passwords\u003e in the /Using IAM/ guide.\n--\n-- Default value: false",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappMaxPasswordAge",
                        "name": "_uappMaxPasswordAge",
                        "shape": "maxPasswordAgeType",
                        "locationName": "MaxPasswordAge",
                        "documentation": "-- | The number of days that an IAM user password is valid. The default value of 0\n-- means IAM user passwords never expire.\n--\n-- Default value: 0",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappPasswordReusePrevention",
                        "name": "_uappPasswordReusePrevention",
                        "shape": "passwordReusePreventionType",
                        "locationName": "PasswordReusePrevention",
                        "documentation": "-- | Specifies the number of previous passwords that IAM users are prevented from\n-- reusing. The default value of 0 means IAM users are not prevented from\n-- reusing previous passwords.\n--\n-- Default value: 0",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappHardExpiry",
                        "name": "_uappHardExpiry",
                        "shape": "booleanObjectType",
                        "locationName": "HardExpiry",
                        "documentation": "-- | Prevents IAM users from setting a new password after their password has\n-- expired.\n--\n-- Default value: false",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappAllowUsersToChangePassword",
                        "name": "_uappAllowUsersToChangePassword",
                        "shape": "booleanType",
                        "locationName": "AllowUsersToChangePassword",
                        "documentation": "-- | Allows all IAM users in your account to use the AWS Management Console to\n-- change their own passwords. For more information, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/HowToPwdIAMUser.html Letting IAM UsersChange Their Own Passwords\u003e in the /Using IAM/ guide.\n--\n-- Default value: false",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappHardExpiry",
                        "name": "_uappHardExpiry",
                        "shape": "booleanObjectType",
                        "locationName": "HardExpiry",
                        "documentation": "-- | Prevents IAM users from setting a new password after their password has\n-- expired.\n--\n-- Default value: false",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappMaxPasswordAge",
                        "name": "_uappMaxPasswordAge",
                        "shape": "maxPasswordAgeType",
                        "locationName": "MaxPasswordAge",
                        "documentation": "-- | The number of days that an IAM user password is valid. The default value of 0\n-- means IAM user passwords never expire.\n--\n-- Default value: 0",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappMinimumPasswordLength",
                        "name": "_uappMinimumPasswordLength",
                        "shape": "minimumPasswordLengthType",
                        "locationName": "MinimumPasswordLength",
                        "documentation": "-- | The minimum number of characters allowed in an IAM user password.\n--\n-- Default value: 6",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappPasswordReusePrevention",
                        "name": "_uappPasswordReusePrevention",
                        "shape": "passwordReusePreventionType",
                        "locationName": "PasswordReusePrevention",
                        "documentation": "-- | Specifies the number of previous passwords that IAM users are prevented from\n-- reusing. The default value of 0 means IAM users are not prevented from\n-- reusing previous passwords.\n--\n-- Default value: 0",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappRequireLowercaseCharacters",
                        "name": "_uappRequireLowercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireLowercaseCharacters",
                        "documentation": "-- | Specifies whether IAM user passwords must contain at least one lowercase\n-- character from the ISO basic Latin alphabet (a to z).\n--\n-- Default value: false",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappRequireNumbers",
                        "name": "_uappRequireNumbers",
                        "shape": "booleanType",
                        "locationName": "RequireNumbers",
                        "documentation": "-- | Specifies whether IAM user passwords must contain at least one numeric\n-- character (0 to 9).\n--\n-- Default value: false",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappRequireSymbols",
                        "name": "_uappRequireSymbols",
                        "shape": "booleanType",
                        "locationName": "RequireSymbols",
                        "documentation": "-- | Specifies whether IAM user passwords must contain at least one of the\n-- following non-alphanumeric characters:\n--\n-- ! @ # $ % ^ &amp; * ( ) _ + - = [ ] { } | '\n--\n-- Default value: false",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uappRequireUppercaseCharacters",
                        "name": "_uappRequireUppercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireUppercaseCharacters",
                        "documentation": "-- | Specifies whether IAM user passwords must contain at least one uppercase\n-- character from the ISO basic Latin alphabet (A to Z).\n--\n-- Default value: false",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateAssumeRolePolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateAssumeRolePolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAssumeRolePolicy.html",
            "namespace": "Network.AWS.IAM.UpdateAssumeRolePolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateAssumeRolePolicy",
            "method": "post",
            "documentation": "-- | Updates the policy that grants an entity permission to assume a role. For\n-- more information about roles, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html Using Roles to Delegate Permissions andFederate Identities\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 19,
                "ctor": "updateAssumeRolePolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uarpRoleName",
                        "name": "_uarpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uarpPolicyDocument",
                        "name": "_uarpPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy that grants an entity permission to assume the role.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "UpdateAssumeRolePolicy",
                "query": [
                    {
                        "field": "_uarpRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_uarpPolicyDocument",
                        "locationName": "PolicyDocument",
                        "type": "field"
                    }
                ],
                "locationPad": 15,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uarpPolicyDocument",
                        "name": "_uarpPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "-- | The policy that grants an entity permission to assume the role.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uarpRoleName",
                        "name": "_uarpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "-- | The name of the role to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateGroupResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateGroup.html",
            "namespace": "Network.AWS.IAM.UpdateGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateGroup",
            "method": "post",
            "documentation": "-- | Updates the name and/or the path of the specified group.\n--\n-- You should understand the implications of changing a group's path or name.\n-- For more information, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_WorkingWithGroupsAndUsers.html Renaming Users and Groups\u003e in the /Using IAM/ guide.\n-- To change a group name the requester must have appropriate permissions on\n-- both the source object and the target object. For example, to change Managers\n-- to MGRs, the entity making the request must have permission on Managers and\n-- MGRs, or must have permission on all (*). For more information about\n-- permissions, see Permissions and Policies.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "updateGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ugGroupName",
                        "name": "_ugGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | Name of the group to update. If you're changing the name of the group, this\n-- is the original name.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "UpdateGroup",
                "query": [
                    {
                        "field": "_ugGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_ugNewPath",
                        "locationName": "NewPath",
                        "type": "field"
                    },
                    {
                        "field": "_ugNewGroupName",
                        "locationName": "NewGroupName",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ugNewPath",
                        "name": "_ugNewPath",
                        "shape": "pathType",
                        "locationName": "NewPath",
                        "documentation": "-- | New path for the group. Only include this if changing the group's path.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ugNewGroupName",
                        "name": "_ugNewGroupName",
                        "shape": "groupNameType",
                        "locationName": "NewGroupName",
                        "documentation": "-- | New name for the group. Only include this if changing the group's name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ugGroupName",
                        "name": "_ugGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "-- | Name of the group to update. If you're changing the name of the group, this\n-- is the original name.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ugNewGroupName",
                        "name": "_ugNewGroupName",
                        "shape": "groupNameType",
                        "locationName": "NewGroupName",
                        "documentation": "-- | New name for the group. Only include this if changing the group's name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ugNewPath",
                        "name": "_ugNewPath",
                        "shape": "pathType",
                        "locationName": "NewPath",
                        "documentation": "-- | New path for the group. Only include this if changing the group's path.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateLoginProfileResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateLoginProfileResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateLoginProfile.html",
            "namespace": "Network.AWS.IAM.UpdateLoginProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateLoginProfile",
            "method": "post",
            "documentation": "-- | Changes the password for the specified user.\n--\n-- Users can change their own passwords by calling 'ChangePassword'. For more\n-- information about modifying passwords, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html Managing Passwords\u003e in the /Using IAM/\n-- guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "updateLoginProfile",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ulpUserName",
                        "name": "_ulpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose password you want to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 22,
                "name": "UpdateLoginProfile",
                "query": [
                    {
                        "field": "_ulpUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_ulpPassword",
                        "locationName": "Password",
                        "type": "field"
                    },
                    {
                        "field": "_ulpPasswordResetRequired",
                        "locationName": "PasswordResetRequired",
                        "type": "field"
                    }
                ],
                "locationPad": 22,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ulpPassword",
                        "name": "_ulpPassword",
                        "shape": "passwordType",
                        "locationName": "Password",
                        "documentation": "-- | The new password for the specified user.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ulpPasswordResetRequired",
                        "name": "_ulpPasswordResetRequired",
                        "shape": "booleanObjectType",
                        "locationName": "PasswordResetRequired",
                        "documentation": "-- | Require the specified user to set a new password on next sign-in.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ulpPassword",
                        "name": "_ulpPassword",
                        "shape": "passwordType",
                        "locationName": "Password",
                        "documentation": "-- | The new password for the specified user.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ulpPasswordResetRequired",
                        "name": "_ulpPasswordResetRequired",
                        "shape": "booleanObjectType",
                        "locationName": "PasswordResetRequired",
                        "documentation": "-- | Require the specified user to set a new password on next sign-in.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ulpUserName",
                        "name": "_ulpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user whose password you want to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateOpenIDConnectProviderThumbprintResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateOpenIDConnectProviderThumbprintResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateOpenIDConnectProviderThumbprint.html",
            "namespace": "Network.AWS.IAM.UpdateOpenIDConnectProviderThumbprint",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateOpenIDConnectProviderThumbprint",
            "method": "post",
            "documentation": "-- | Replaces the existing list of server certificate thumbprints with a new list.\n--\n-- The list that you pass with this action completely replaces the existing\n-- list of thumbprints. (The lists are not merged.)\n--\n-- Typically, you need to update a thumbprint only when the identity provider's\n-- certificate changes, which occurs rarely. However, if the provider's\n-- certificate /does/ change, any attempt to assume an IAM role that specifies the\n-- OIDC provider as a principal will fail until the certificate thumbprint is\n-- updated.\n--\n-- Because trust for the OpenID Connect provider is ultimately derived from the\n-- provider's certificate and is validated by the thumbprint, it is a best\n-- practice to limit access to the 'UpdateOpenIDConnectProviderThumbprint' action\n-- to highly-privileged users.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 32,
                "ctor": "updateOpenIDConnectProviderThumbprint",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uoidcptOpenIDConnectProviderArn",
                        "name": "_uoidcptOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to\n-- update the thumbprint for. You can get a list of OIDC provider ARNs by using\n-- the 'ListOpenIDConnectProviders' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "UpdateOpenIDConnectProviderThumbprint",
                "query": [
                    {
                        "field": "_uoidcptOpenIDConnectProviderArn",
                        "locationName": "OpenIDConnectProviderArn",
                        "type": "field"
                    },
                    {
                        "field": "_uoidcptThumbprintList",
                        "locationName": "ThumbprintList",
                        "type": "field"
                    }
                ],
                "locationPad": 25,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uoidcptThumbprintList",
                        "name": "_uoidcptThumbprintList",
                        "shape": "thumbprintListType",
                        "locationName": "ThumbprintList",
                        "documentation": "-- | A list of certificate thumbprints that are associated with the specified IAM\n-- OpenID Connect provider. For more information, see 'CreateOpenIDConnectProvider'\n-- .",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uoidcptOpenIDConnectProviderArn",
                        "name": "_uoidcptOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to\n-- update the thumbprint for. You can get a list of OIDC provider ARNs by using\n-- the 'ListOpenIDConnectProviders' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uoidcptThumbprintList",
                        "name": "_uoidcptThumbprintList",
                        "shape": "thumbprintListType",
                        "locationName": "ThumbprintList",
                        "documentation": "-- | A list of certificate thumbprints that are associated with the specified IAM\n-- OpenID Connect provider. For more information, see 'CreateOpenIDConnectProvider'\n-- .",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "updateSAMLProviderResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "usamlprSAMLProviderArn",
                    "name": "_usamlprSAMLProviderArn",
                    "shape": "arnType",
                    "locationName": "SAMLProviderArn",
                    "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider that was updated.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "UpdateSAMLProviderResponse",
                "resultWrapper": "UpdateSAMLProviderResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "usamlprSAMLProviderArn",
                        "name": "_usamlprSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider that was updated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "usamlprSAMLProviderArn",
                        "name": "_usamlprSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider that was updated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateSAMLProvider.html",
            "namespace": "Network.AWS.IAM.UpdateSAMLProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateSAMLProvider",
            "method": "post",
            "documentation": "-- | Updates the metadata document for an existing SAML provider.\n--\n-- This operation requires \u003chttp://docs.aws.amazon.com/general/latest/gr/signature-version-4.html Signature Version 4\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "updateSAMLProvider",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "usamlpSAMLMetadataDocument",
                        "name": "_usamlpSAMLMetadataDocument",
                        "shape": "SAMLMetadataDocumentType",
                        "locationName": "SAMLMetadataDocument",
                        "documentation": "-- | An XML document generated by an identity provider (IdP) that supports SAML\n-- 2.0. The document includes the issuer's name, expiration information, and\n-- keys that can be used to validate the SAML authentication response\n-- (assertions) that are received from the IdP. You must generate the metadata\n-- document using the identity management software that is used as your\n-- organization's IdP.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "usamlpSAMLProviderArn",
                        "name": "_usamlpSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 21,
                "name": "UpdateSAMLProvider",
                "query": [
                    {
                        "field": "_usamlpSAMLMetadataDocument",
                        "locationName": "SAMLMetadataDocument",
                        "type": "field"
                    },
                    {
                        "field": "_usamlpSAMLProviderArn",
                        "locationName": "SAMLProviderArn",
                        "type": "field"
                    }
                ],
                "locationPad": 21,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "usamlpSAMLMetadataDocument",
                        "name": "_usamlpSAMLMetadataDocument",
                        "shape": "SAMLMetadataDocumentType",
                        "locationName": "SAMLMetadataDocument",
                        "documentation": "-- | An XML document generated by an identity provider (IdP) that supports SAML\n-- 2.0. The document includes the issuer's name, expiration information, and\n-- keys that can be used to validate the SAML authentication response\n-- (assertions) that are received from the IdP. You must generate the metadata\n-- document using the identity management software that is used as your\n-- organization's IdP.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "usamlpSAMLProviderArn",
                        "name": "_usamlpSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateServerCertificateResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateServerCertificateResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateServerCertificate.html",
            "namespace": "Network.AWS.IAM.UpdateServerCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateServerCertificate",
            "method": "post",
            "documentation": "-- | Updates the name and/or the path of the specified server certificate.\n--\n-- You should understand the implications of changing a server certificate's\n-- path or name. For more information, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingServerCerts.html Managing Server Certificates\u003e in the /Using IAM/ guide.   To change a server certificate name the requester must have\n-- appropriate permissions on both the source object and the target object. For\n-- example, to change the name from ProductionCert to ProdCert, the entity\n-- making the request must have permission on ProductionCert and ProdCert, or\n-- must have permission on all (*). For more information about permissions, see Permissions and Policies\n-- .",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 29,
                "ctor": "updateServerCertificate",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "usc1ServerCertificateName",
                        "name": "_usc1ServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "-- | The name of the server certificate that you want to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "UpdateServerCertificate",
                "query": [
                    {
                        "field": "_usc1ServerCertificateName",
                        "locationName": "ServerCertificateName",
                        "type": "field"
                    },
                    {
                        "field": "_usc1NewPath",
                        "locationName": "NewPath",
                        "type": "field"
                    },
                    {
                        "field": "_usc1NewServerCertificateName",
                        "locationName": "NewServerCertificateName",
                        "type": "field"
                    }
                ],
                "locationPad": 25,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "usc1NewPath",
                        "name": "_usc1NewPath",
                        "shape": "pathType",
                        "locationName": "NewPath",
                        "documentation": "-- | The new path for the server certificate. Include this only if you are\n-- updating the server certificate's path.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "usc1NewServerCertificateName",
                        "name": "_usc1NewServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "NewServerCertificateName",
                        "documentation": "-- | The new name for the server certificate. Include this only if you are\n-- updating the server certificate's name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "usc1NewPath",
                        "name": "_usc1NewPath",
                        "shape": "pathType",
                        "locationName": "NewPath",
                        "documentation": "-- | The new path for the server certificate. Include this only if you are\n-- updating the server certificate's path.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "usc1NewServerCertificateName",
                        "name": "_usc1NewServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "NewServerCertificateName",
                        "documentation": "-- | The new name for the server certificate. Include this only if you are\n-- updating the server certificate's name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "usc1ServerCertificateName",
                        "name": "_usc1ServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "-- | The name of the server certificate that you want to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateSigningCertificateResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateSigningCertificateResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateSigningCertificate.html",
            "namespace": "Network.AWS.IAM.UpdateSigningCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateSigningCertificate",
            "method": "post",
            "documentation": "-- | Changes the status of the specified signing certificate from active to\n-- disabled, or vice versa. This action can be used to disable a user's signing\n-- certificate as part of a certificate rotation work flow.\n--\n-- If the 'UserName' field is not specified, the UserName is determined\n-- implicitly based on the AWS access key ID used to sign the request. Because\n-- this action works for access keys under the AWS account, you can use this\n-- action to manage root credentials even if the AWS account has no associated\n-- users.\n--\n-- For information about rotating certificates, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html Managing Keys andCertificates\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "updateSigningCertificate",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uscCertificateId",
                        "name": "_uscCertificateId",
                        "shape": "certificateIdType",
                        "locationName": "CertificateId",
                        "documentation": "-- | The ID of the signing certificate you want to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uscStatus",
                        "name": "_uscStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "-- | The status you want to assign to the certificate. 'Active' means the\n-- certificate can be used for API calls to AWS, while 'Inactive' means the\n-- certificate cannot be used.",
                        "typeExposed": "StatusType",
                        "type": "StatusType"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 14,
                "name": "UpdateSigningCertificate",
                "query": [
                    {
                        "field": "_uscUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_uscCertificateId",
                        "locationName": "CertificateId",
                        "type": "field"
                    },
                    {
                        "field": "_uscStatus",
                        "locationName": "Status",
                        "type": "field"
                    }
                ],
                "locationPad": 14,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uscUserName",
                        "name": "_uscUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user the signing certificate belongs to.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uscCertificateId",
                        "name": "_uscCertificateId",
                        "shape": "certificateIdType",
                        "locationName": "CertificateId",
                        "documentation": "-- | The ID of the signing certificate you want to update.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uscStatus",
                        "name": "_uscStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "-- | The status you want to assign to the certificate. 'Active' means the\n-- certificate can be used for API calls to AWS, while 'Inactive' means the\n-- certificate cannot be used.",
                        "typeExposed": "StatusType",
                        "type": "StatusType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uscUserName",
                        "name": "_uscUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user the signing certificate belongs to.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateUserResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateUserResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateUser.html",
            "namespace": "Network.AWS.IAM.UpdateUser",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateUser",
            "method": "post",
            "documentation": "-- | Updates the name and/or the path of the specified user.\n--\n-- You should understand the implications of changing a user's path or name.\n-- For more information, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_WorkingWithGroupsAndUsers.html Renaming Users and Groups\u003e in the /Using IAM/ guide.\n-- To change a user name the requester must have appropriate permissions on both\n-- the source object and the target object. For example, to change Bob to\n-- Robert, the entity making the request must have permission on Bob and Robert,\n-- or must have permission on all (*). For more information about permissions,\n-- see Permissions and Policies.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "updateUser",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uuUserName",
                        "name": "_uuUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | Name of the user to update. If you're changing the name of the user, this is\n-- the original user name.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "UpdateUser",
                "query": [
                    {
                        "field": "_uuUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_uuNewPath",
                        "locationName": "NewPath",
                        "type": "field"
                    },
                    {
                        "field": "_uuNewUserName",
                        "locationName": "NewUserName",
                        "type": "field"
                    }
                ],
                "locationPad": 12,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uuNewPath",
                        "name": "_uuNewPath",
                        "shape": "pathType",
                        "locationName": "NewPath",
                        "documentation": "-- | New path for the user. Include this parameter only if you're changing the\n-- user's path.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uuNewUserName",
                        "name": "_uuNewUserName",
                        "shape": "userNameType",
                        "locationName": "NewUserName",
                        "documentation": "-- | New name for the user. Include this parameter only if you're changing the\n-- user's name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uuNewPath",
                        "name": "_uuNewPath",
                        "shape": "pathType",
                        "locationName": "NewPath",
                        "documentation": "-- | New path for the user. Include this parameter only if you're changing the\n-- user's path.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uuNewUserName",
                        "name": "_uuNewUserName",
                        "shape": "userNameType",
                        "locationName": "NewUserName",
                        "documentation": "-- | New name for the user. Include this parameter only if you're changing the\n-- user's name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uuUserName",
                        "name": "_uuUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | Name of the user to update. If you're changing the name of the user, this is\n-- the original user name.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "uploadServerCertificateResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "uscrServerCertificateMetadata",
                    "name": "_uscrServerCertificateMetadata",
                    "shape": "ServerCertificateMetadata",
                    "locationName": "ServerCertificateMetadata",
                    "documentation": "-- | The meta information of the uploaded server certificate without its\n-- certificate body, certificate chain, and private key.",
                    "typeExposed": "Maybe ServerCertificateMetadata",
                    "type": "Maybe ServerCertificateMetadata"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "UploadServerCertificateResponse",
                "resultWrapper": "UploadServerCertificateResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uscrServerCertificateMetadata",
                        "name": "_uscrServerCertificateMetadata",
                        "shape": "ServerCertificateMetadata",
                        "locationName": "ServerCertificateMetadata",
                        "documentation": "-- | The meta information of the uploaded server certificate without its\n-- certificate body, certificate chain, and private key.",
                        "typeExposed": "Maybe ServerCertificateMetadata",
                        "type": "Maybe ServerCertificateMetadata"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uscrServerCertificateMetadata",
                        "name": "_uscrServerCertificateMetadata",
                        "shape": "ServerCertificateMetadata",
                        "locationName": "ServerCertificateMetadata",
                        "documentation": "-- | The meta information of the uploaded server certificate without its\n-- certificate body, certificate chain, and private key.",
                        "typeExposed": "Maybe ServerCertificateMetadata",
                        "type": "Maybe ServerCertificateMetadata"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UploadServerCertificate.html",
            "namespace": "Network.AWS.IAM.UploadServerCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UploadServerCertificate",
            "method": "post",
            "documentation": "-- | Uploads a server certificate entity for the AWS account. The server\n-- certificate entity includes a public key certificate, a private key, and an\n-- optional certificate chain, which should all be PEM-encoded.\n--\n-- For information about the number of server certificates you can upload, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html Limitations on IAM Entities\u003e in the /Using IAM/ guide.\n--\n-- Because the body of the public key certificate, private key, and the\n-- certificate chain can be large, you should use POST rather than GET when\n-- calling 'UploadServerCertificate'. For information about setting up signatures\n-- and authorization through the API, go to \u003chttp://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html Signing AWS API Requests\u003e in the /AWSGeneral Reference/. For general information about using the Query API with\n-- IAM, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html Making Query Requests\u003e in the /Using IAM/ guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "uploadServerCertificate",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uscServerCertificateName",
                        "name": "_uscServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "-- | The name for the server certificate. Do not include the path in this value.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uscCertificateBody",
                        "name": "_uscCertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "-- | The contents of the public key certificate in PEM-encoded format.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uscPrivateKey",
                        "name": "_uscPrivateKey",
                        "shape": "privateKeyType",
                        "locationName": "PrivateKey",
                        "documentation": "-- | The contents of the private key in PEM-encoded format.",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 22,
                "name": "UploadServerCertificate",
                "query": [
                    {
                        "field": "_uscPath",
                        "locationName": "Path",
                        "type": "field"
                    },
                    {
                        "field": "_uscServerCertificateName",
                        "locationName": "ServerCertificateName",
                        "type": "field"
                    },
                    {
                        "field": "_uscCertificateBody",
                        "locationName": "CertificateBody",
                        "type": "field"
                    },
                    {
                        "field": "_uscPrivateKey",
                        "locationName": "PrivateKey",
                        "type": "field"
                    },
                    {
                        "field": "_uscCertificateChain",
                        "locationName": "CertificateChain",
                        "type": "field"
                    }
                ],
                "locationPad": 22,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uscPath",
                        "name": "_uscPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path for the server certificate. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/).\n--\n-- If you are uploading a server certificate specifically for use with Amazon\n-- CloudFront distributions, you must specify a path using the '--path' option.\n-- The path must begin with '/cloudfront' and must include a trailing slash (for\n-- example, '/cloudfront/test/').",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uscCertificateChain",
                        "name": "_uscCertificateChain",
                        "shape": "certificateChainType",
                        "locationName": "CertificateChain",
                        "documentation": "-- | The contents of the certificate chain. This is typically a concatenation of\n-- the PEM-encoded public key certificates of the chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uscCertificateBody",
                        "name": "_uscCertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "-- | The contents of the public key certificate in PEM-encoded format.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uscCertificateChain",
                        "name": "_uscCertificateChain",
                        "shape": "certificateChainType",
                        "locationName": "CertificateChain",
                        "documentation": "-- | The contents of the certificate chain. This is typically a concatenation of\n-- the PEM-encoded public key certificates of the chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "uscPath",
                        "name": "_uscPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "-- | The path for the server certificate. For more information about paths, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html IAM Identifiers\u003e in the /Using IAM/ guide.\n--\n-- This parameter is optional. If it is not included, it defaults to a slash\n-- (/).\n--\n-- If you are uploading a server certificate specifically for use with Amazon\n-- CloudFront distributions, you must specify a path using the '--path' option.\n-- The path must begin with '/cloudfront' and must include a trailing slash (for\n-- example, '/cloudfront/test/').",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uscPrivateKey",
                        "name": "_uscPrivateKey",
                        "shape": "privateKeyType",
                        "locationName": "PrivateKey",
                        "documentation": "-- | The contents of the private key in PEM-encoded format.",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uscServerCertificateName",
                        "name": "_uscServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "-- | The name for the server certificate. Do not include the path in this value.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "uploadSigningCertificateResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "uscrCertificate",
                    "name": "_uscrCertificate",
                    "shape": "SigningCertificate",
                    "locationName": "Certificate",
                    "documentation": "-- | Information about the certificate.",
                    "typeExposed": "SigningCertificate",
                    "type": "SigningCertificate"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uscrCertificate",
                        "name": "_uscrCertificate",
                        "shape": "SigningCertificate",
                        "locationName": "Certificate",
                        "documentation": "-- | Information about the certificate.",
                        "typeExposed": "SigningCertificate",
                        "type": "SigningCertificate"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "UploadSigningCertificateResponse",
                "resultWrapper": "UploadSigningCertificateResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "uscrCertificate",
                        "name": "_uscrCertificate",
                        "shape": "SigningCertificate",
                        "locationName": "Certificate",
                        "documentation": "-- | Information about the certificate.",
                        "typeExposed": "SigningCertificate",
                        "type": "SigningCertificate"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UploadSigningCertificate.html",
            "namespace": "Network.AWS.IAM.UploadSigningCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UploadSigningCertificate",
            "method": "post",
            "documentation": "-- | Uploads an X.509 signing certificate and associates it with the specified\n-- user. Some AWS services use X.509 signing certificates to validate requests\n-- that are signed with a corresponding private key. When you upload the\n-- certificate, its default status is 'Active'.\n--\n-- If the 'UserName' field is not specified, the user name is determined\n-- implicitly based on the AWS access key ID used to sign the request. Because\n-- this action works for access keys under the AWS account, you can use this\n-- action to manage root credentials even if the AWS account has no associated\n-- users.\n--\n-- Because the body of a X.509 certificate can be large, you should use POST\n-- rather than GET when calling 'UploadSigningCertificate'. For information about\n-- setting up signatures and authorization through the API, go to \u003chttp://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html Signing AWSAPI Requests\u003e in the /AWS General Reference/. For general information about\n-- using the Query API with IAM, go to \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html Making Query Requests\u003e in the /Using IAM/guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 20,
                "ctor": "uploadSigningCertificate",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "usc1CertificateBody",
                        "name": "_usc1CertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "-- | The contents of the signing certificate.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "UploadSigningCertificate",
                "query": [
                    {
                        "field": "_usc1UserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_usc1CertificateBody",
                        "locationName": "CertificateBody",
                        "type": "field"
                    }
                ],
                "locationPad": 16,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "usc1UserName",
                        "name": "_usc1UserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user the signing certificate is for.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "usc1CertificateBody",
                        "name": "_usc1CertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "-- | The contents of the signing certificate.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "usc1UserName",
                        "name": "_usc1UserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "-- | The name of the user the signing certificate is for.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        }
    ]
}