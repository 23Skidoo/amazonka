{
    "waiters": {
        "waiters": {
            "ClusterDeleted": {
                "operation": "DescribeClusters",
                "acceptors": [
                    {
                        "matcher": "matchError",
                        "state": "success",
                        "argument": null,
                        "expected": "\"ClusterNotFound\""
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dcrClusters) . cClusterStatus . _Just",
                        "expected": "\"creating\""
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dcrClusters) . cClusterStatus . _Just",
                        "expected": "\"rebooting\""
                    }
                ],
                "maxAttempts": 30,
                "delay": 60
            },
            "SnapshotAvailable": {
                "operation": "DescribeClusterSnapshots",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dcsrSnapshots) . sStatus . _Just",
                        "expected": "\"available\""
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dcsrSnapshots) . sStatus . _Just",
                        "expected": "\"failed\""
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dcsrSnapshots) . sStatus . _Just",
                        "expected": "\"deleted\""
                    }
                ],
                "maxAttempts": 20,
                "delay": 15
            },
            "ClusterAvailable": {
                "operation": "DescribeClusters",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dcrClusters) . cClusterStatus . _Just",
                        "expected": "\"available\""
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dcrClusters) . cClusterStatus . _Just",
                        "expected": "\"deleting\""
                    },
                    {
                        "matcher": "matchError",
                        "state": "retry",
                        "argument": null,
                        "expected": "\"ClusterNotFound\""
                    }
                ],
                "maxAttempts": 30,
                "delay": 60
            }
        },
        "namespace": "Network.AWS.Redshift.Waiters",
        "imports": [
            "Network.AWS.Redshift.DescribeClusterSnapshots",
            "Network.AWS.Redshift.DescribeClusters",
            "Network.AWS.Redshift.Types"
        ]
    },
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "Redshift",
        "error": "RESTError",
        "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/Welcome.html",
        "namespace": "Network.AWS.Redshift",
        "protocol": "query",
        "imports": [
            "Network.AWS.Redshift.AuthorizeClusterSecurityGroupIngress",
            "Network.AWS.Redshift.AuthorizeSnapshotAccess",
            "Network.AWS.Redshift.CopyClusterSnapshot",
            "Network.AWS.Redshift.CreateCluster",
            "Network.AWS.Redshift.CreateClusterParameterGroup",
            "Network.AWS.Redshift.CreateClusterSecurityGroup",
            "Network.AWS.Redshift.CreateClusterSnapshot",
            "Network.AWS.Redshift.CreateClusterSubnetGroup",
            "Network.AWS.Redshift.CreateEventSubscription",
            "Network.AWS.Redshift.CreateHsmClientCertificate",
            "Network.AWS.Redshift.CreateHsmConfiguration",
            "Network.AWS.Redshift.CreateTags",
            "Network.AWS.Redshift.DeleteCluster",
            "Network.AWS.Redshift.DeleteClusterParameterGroup",
            "Network.AWS.Redshift.DeleteClusterSecurityGroup",
            "Network.AWS.Redshift.DeleteClusterSnapshot",
            "Network.AWS.Redshift.DeleteClusterSubnetGroup",
            "Network.AWS.Redshift.DeleteEventSubscription",
            "Network.AWS.Redshift.DeleteHsmClientCertificate",
            "Network.AWS.Redshift.DeleteHsmConfiguration",
            "Network.AWS.Redshift.DeleteTags",
            "Network.AWS.Redshift.DescribeClusterParameterGroups",
            "Network.AWS.Redshift.DescribeClusterParameters",
            "Network.AWS.Redshift.DescribeClusterSecurityGroups",
            "Network.AWS.Redshift.DescribeClusterSnapshots",
            "Network.AWS.Redshift.DescribeClusterSubnetGroups",
            "Network.AWS.Redshift.DescribeClusterVersions",
            "Network.AWS.Redshift.DescribeClusters",
            "Network.AWS.Redshift.DescribeDefaultClusterParameters",
            "Network.AWS.Redshift.DescribeEventCategories",
            "Network.AWS.Redshift.DescribeEventSubscriptions",
            "Network.AWS.Redshift.DescribeEvents",
            "Network.AWS.Redshift.DescribeHsmClientCertificates",
            "Network.AWS.Redshift.DescribeHsmConfigurations",
            "Network.AWS.Redshift.DescribeLoggingStatus",
            "Network.AWS.Redshift.DescribeOrderableClusterOptions",
            "Network.AWS.Redshift.DescribeReservedNodeOfferings",
            "Network.AWS.Redshift.DescribeReservedNodes",
            "Network.AWS.Redshift.DescribeResize",
            "Network.AWS.Redshift.DescribeTags",
            "Network.AWS.Redshift.DisableLogging",
            "Network.AWS.Redshift.DisableSnapshotCopy",
            "Network.AWS.Redshift.EnableLogging",
            "Network.AWS.Redshift.EnableSnapshotCopy",
            "Network.AWS.Redshift.ModifyCluster",
            "Network.AWS.Redshift.ModifyClusterParameterGroup",
            "Network.AWS.Redshift.ModifyClusterSubnetGroup",
            "Network.AWS.Redshift.ModifyEventSubscription",
            "Network.AWS.Redshift.ModifySnapshotCopyRetentionPeriod",
            "Network.AWS.Redshift.PurchaseReservedNodeOffering",
            "Network.AWS.Redshift.RebootCluster",
            "Network.AWS.Redshift.ResetClusterParameterGroup",
            "Network.AWS.Redshift.RestoreFromClusterSnapshot",
            "Network.AWS.Redshift.RevokeClusterSecurityGroupIngress",
            "Network.AWS.Redshift.RevokeSnapshotAccess",
            "Network.AWS.Redshift.RotateEncryptionKey",
            "Network.AWS.Redshift.Types",
            "Network.AWS.Redshift.Waiters"
        ],
        "name": "Amazon Redshift",
        "version": "2012-12-01",
        "documentation": "-- | Amazon Redshift is a fast, fully managed, petabyte-scale data warehouse\n-- service that makes it simple and cost-effective to efficiently analyze all\n-- your data using your existing business intelligence tools. You can start\n-- small for just $0.25 per hour with no commitments or upfront costs and scale\n-- to a petabyte or more for $1,000 per terabyte per year, less than a tenth of\n-- most other data warehousing solutions.",
        "xmlNamespace": "http://redshift.amazonaws.com/doc/2012-12-01/",
        "jsonVersion": null,
        "retryDelay": {
            "base": 5.0e-2,
            "attempts": 5,
            "growth": 2
        },
        "endpointPrefix": "redshift",
        "retryPolicies": {
            "throttling": {
                "error": "Throttling",
                "code": 400
            },
            "service_unavailable": {
                "error": null,
                "code": 503
            },
            "general_server_error": {
                "error": null,
                "code": 500
            },
            "limit_exceeded": {
                "error": null,
                "code": 509
            }
        },
        "targetPrefix": null
    },
    "cabal": {
        "other": [],
        "library": "amazonka-redshift",
        "abbrev": "Redshift",
        "exposed": [
            "Network.AWS.Redshift",
            "Network.AWS.Redshift.AuthorizeClusterSecurityGroupIngress",
            "Network.AWS.Redshift.AuthorizeSnapshotAccess",
            "Network.AWS.Redshift.CopyClusterSnapshot",
            "Network.AWS.Redshift.CreateCluster",
            "Network.AWS.Redshift.CreateClusterParameterGroup",
            "Network.AWS.Redshift.CreateClusterSecurityGroup",
            "Network.AWS.Redshift.CreateClusterSnapshot",
            "Network.AWS.Redshift.CreateClusterSubnetGroup",
            "Network.AWS.Redshift.CreateEventSubscription",
            "Network.AWS.Redshift.CreateHsmClientCertificate",
            "Network.AWS.Redshift.CreateHsmConfiguration",
            "Network.AWS.Redshift.CreateTags",
            "Network.AWS.Redshift.DeleteCluster",
            "Network.AWS.Redshift.DeleteClusterParameterGroup",
            "Network.AWS.Redshift.DeleteClusterSecurityGroup",
            "Network.AWS.Redshift.DeleteClusterSnapshot",
            "Network.AWS.Redshift.DeleteClusterSubnetGroup",
            "Network.AWS.Redshift.DeleteEventSubscription",
            "Network.AWS.Redshift.DeleteHsmClientCertificate",
            "Network.AWS.Redshift.DeleteHsmConfiguration",
            "Network.AWS.Redshift.DeleteTags",
            "Network.AWS.Redshift.DescribeClusterParameterGroups",
            "Network.AWS.Redshift.DescribeClusterParameters",
            "Network.AWS.Redshift.DescribeClusterSecurityGroups",
            "Network.AWS.Redshift.DescribeClusterSnapshots",
            "Network.AWS.Redshift.DescribeClusterSubnetGroups",
            "Network.AWS.Redshift.DescribeClusterVersions",
            "Network.AWS.Redshift.DescribeClusters",
            "Network.AWS.Redshift.DescribeDefaultClusterParameters",
            "Network.AWS.Redshift.DescribeEventCategories",
            "Network.AWS.Redshift.DescribeEventSubscriptions",
            "Network.AWS.Redshift.DescribeEvents",
            "Network.AWS.Redshift.DescribeHsmClientCertificates",
            "Network.AWS.Redshift.DescribeHsmConfigurations",
            "Network.AWS.Redshift.DescribeLoggingStatus",
            "Network.AWS.Redshift.DescribeOrderableClusterOptions",
            "Network.AWS.Redshift.DescribeReservedNodeOfferings",
            "Network.AWS.Redshift.DescribeReservedNodes",
            "Network.AWS.Redshift.DescribeResize",
            "Network.AWS.Redshift.DescribeTags",
            "Network.AWS.Redshift.DisableLogging",
            "Network.AWS.Redshift.DisableSnapshotCopy",
            "Network.AWS.Redshift.EnableLogging",
            "Network.AWS.Redshift.EnableSnapshotCopy",
            "Network.AWS.Redshift.ModifyCluster",
            "Network.AWS.Redshift.ModifyClusterParameterGroup",
            "Network.AWS.Redshift.ModifyClusterSubnetGroup",
            "Network.AWS.Redshift.ModifyEventSubscription",
            "Network.AWS.Redshift.ModifySnapshotCopyRetentionPeriod",
            "Network.AWS.Redshift.PurchaseReservedNodeOffering",
            "Network.AWS.Redshift.RebootCluster",
            "Network.AWS.Redshift.ResetClusterParameterGroup",
            "Network.AWS.Redshift.RestoreFromClusterSnapshot",
            "Network.AWS.Redshift.RevokeClusterSecurityGroupIngress",
            "Network.AWS.Redshift.RevokeSnapshotAccess",
            "Network.AWS.Redshift.RotateEncryptionKey",
            "Network.AWS.Redshift.Types",
            "Network.AWS.Redshift.Waiters"
        ],
        "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/Welcome.html",
        "protocol": "query",
        "name": "Amazon Redshift",
        "version": "0.3.1",
        "description": "Amazon Redshift is a fast, fully managed, petabyte-scale data warehouse\nservice that makes it simple and cost-effective to efficiently analyze all\nyour data using your existing business intelligence tools. You can start\nsmall for just $0.25 per hour with no commitments or upfront costs and scale\nto a petabyte or more for $1,000 per terabyte per year, less than a tenth of\nmost other data warehousing solutions."
    },
    "types": {
        "namespace": "Network.AWS.Redshift.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 40,
                "ctor": "snapshot",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Snapshot",
                "locationPad": 39,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sSnapshotIdentifier",
                        "name": "_sSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotIdentifier",
                        "documentation": "-- | The snapshot identifier that is provided in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sClusterIdentifier",
                        "name": "_sClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster for which the snapshot was taken.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sSnapshotCreateTime",
                        "name": "_sSnapshotCreateTime",
                        "shape": "TStamp",
                        "locationName": "SnapshotCreateTime",
                        "documentation": "-- | The time (UTC) when Amazon Redshift began the snapshot. A snapshot contains\n-- a copy of the cluster data as of this exact time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sStatus",
                        "name": "_sStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | The snapshot status. The value of the status depends on the API operation\n-- used.   'CreateClusterSnapshot' and 'CopyClusterSnapshot' returns status as\n-- \"creating\".   'DescribeClusterSnapshots' returns status as \"creating\",\n-- \"available\", \"final snapshot\", or \"failed\".  'DeleteClusterSnapshot' returns\n-- status as \"deleted\".",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sPort",
                        "name": "_sPort",
                        "shape": "Integer",
                        "locationName": "Port",
                        "documentation": "-- | The port that the cluster is listening on.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sAvailabilityZone",
                        "name": "_sAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The Availability Zone in which the cluster was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sClusterCreateTime",
                        "name": "_sClusterCreateTime",
                        "shape": "TStamp",
                        "locationName": "ClusterCreateTime",
                        "documentation": "-- | The time (UTC) when the cluster was originally created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sMasterUsername",
                        "name": "_sMasterUsername",
                        "shape": "String",
                        "locationName": "MasterUsername",
                        "documentation": "-- | The master user name for the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sClusterVersion",
                        "name": "_sClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The version ID of the Amazon Redshift engine that is running on the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sSnapshotType",
                        "name": "_sSnapshotType",
                        "shape": "String",
                        "locationName": "SnapshotType",
                        "documentation": "-- | The snapshot type. Snapshots created using 'CreateClusterSnapshot' and 'CopyClusterSnapshot' will be of type \"manual\".",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sNodeType",
                        "name": "_sNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The node type of the nodes in the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sNumberOfNodes",
                        "name": "_sNumberOfNodes",
                        "shape": "Integer",
                        "locationName": "NumberOfNodes",
                        "documentation": "-- | The number of nodes in the cluster.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sDBName",
                        "name": "_sDBName",
                        "shape": "String",
                        "locationName": "DBName",
                        "documentation": "-- | The name of the database that was created when the cluster was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sVpcId",
                        "name": "_sVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The VPC identifier of the cluster if the snapshot is from a cluster in a VPC.\n-- Otherwise, this field is not in the output.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sEncrypted",
                        "name": "_sEncrypted",
                        "shape": "Boolean",
                        "locationName": "Encrypted",
                        "documentation": "-- | If 'true', the data in the snapshot is encrypted at rest.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sKmsKeyId",
                        "name": "_sKmsKeyId",
                        "shape": "String",
                        "locationName": "KmsKeyId",
                        "documentation": "-- | The AWS Key Management Service (KMS) key ID of the encryption key that was\n-- used to encrypt data in the cluster from which the snapshot was taken.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sEncryptedWithHSM",
                        "name": "_sEncryptedWithHSM",
                        "shape": "Boolean",
                        "locationName": "EncryptedWithHSM",
                        "documentation": "-- | A boolean that indicates whether the snapshot data is encrypted using the HSM\n-- keys of the source cluster. 'true' indicates that the data is encrypted using\n-- HSM keys.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sAccountsWithRestoreAccess",
                        "name": "_sAccountsWithRestoreAccess",
                        "shape": "AccountsWithRestoreAccessList",
                        "locationName": "AccountsWithRestoreAccess",
                        "documentation": "-- | A list of the AWS customer accounts authorized to restore the snapshot.\n-- Returns 'null' if no accounts are authorized. Visible only to the snapshot\n-- owner.",
                        "typeExposed": "[AccountWithRestoreAccess]",
                        "type": "List \"member\" AccountWithRestoreAccess"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sOwnerAccount",
                        "name": "_sOwnerAccount",
                        "shape": "String",
                        "locationName": "OwnerAccount",
                        "documentation": "-- | For manual snapshots, the AWS customer account used to create or copy the\n-- snapshot. For automatic snapshots, the owner of the cluster. The owner can\n-- perform all snapshot actions, such as sharing a manual snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sTotalBackupSizeInMegaBytes",
                        "name": "_sTotalBackupSizeInMegaBytes",
                        "shape": "Double",
                        "locationName": "TotalBackupSizeInMegaBytes",
                        "documentation": "-- | The size of the complete set of backup data that would be used to restore\n-- the cluster.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sActualIncrementalBackupSizeInMegaBytes",
                        "name": "_sActualIncrementalBackupSizeInMegaBytes",
                        "shape": "Double",
                        "locationName": "ActualIncrementalBackupSizeInMegaBytes",
                        "documentation": "-- | The size of the incremental backup.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sBackupProgressInMegaBytes",
                        "name": "_sBackupProgressInMegaBytes",
                        "shape": "Double",
                        "locationName": "BackupProgressInMegaBytes",
                        "documentation": "-- | The number of megabytes that have been transferred to the snapshot backup.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sCurrentBackupRateInMegaBytesPerSecond",
                        "name": "_sCurrentBackupRateInMegaBytesPerSecond",
                        "shape": "Double",
                        "locationName": "CurrentBackupRateInMegaBytesPerSecond",
                        "documentation": "-- | The number of megabytes per second being transferred to the snapshot backup.\n-- Returns '0' for a completed backup.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sEstimatedSecondsToCompletion",
                        "name": "_sEstimatedSecondsToCompletion",
                        "shape": "Long",
                        "locationName": "EstimatedSecondsToCompletion",
                        "documentation": "-- | The estimate of the time remaining before the snapshot backup will complete.\n-- Returns '0' for a completed backup.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sElapsedTimeInSeconds",
                        "name": "_sElapsedTimeInSeconds",
                        "shape": "Long",
                        "locationName": "ElapsedTimeInSeconds",
                        "documentation": "-- | The amount of time an in-progress snapshot backup has been running, or the\n-- amount of time it took a completed backup to finish.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sSourceRegion",
                        "name": "_sSourceRegion",
                        "shape": "String",
                        "locationName": "SourceRegion",
                        "documentation": "-- | The source region from which the snapshot was copied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sTags",
                        "name": "_sTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the cluster snapshot.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sAccountsWithRestoreAccess",
                        "name": "_sAccountsWithRestoreAccess",
                        "shape": "AccountsWithRestoreAccessList",
                        "locationName": "AccountsWithRestoreAccess",
                        "documentation": "-- | A list of the AWS customer accounts authorized to restore the snapshot.\n-- Returns 'null' if no accounts are authorized. Visible only to the snapshot\n-- owner.",
                        "typeExposed": "[AccountWithRestoreAccess]",
                        "type": "List \"member\" AccountWithRestoreAccess"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sActualIncrementalBackupSizeInMegaBytes",
                        "name": "_sActualIncrementalBackupSizeInMegaBytes",
                        "shape": "Double",
                        "locationName": "ActualIncrementalBackupSizeInMegaBytes",
                        "documentation": "-- | The size of the incremental backup.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sAvailabilityZone",
                        "name": "_sAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The Availability Zone in which the cluster was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sBackupProgressInMegaBytes",
                        "name": "_sBackupProgressInMegaBytes",
                        "shape": "Double",
                        "locationName": "BackupProgressInMegaBytes",
                        "documentation": "-- | The number of megabytes that have been transferred to the snapshot backup.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sClusterCreateTime",
                        "name": "_sClusterCreateTime",
                        "shape": "TStamp",
                        "locationName": "ClusterCreateTime",
                        "documentation": "-- | The time (UTC) when the cluster was originally created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sClusterIdentifier",
                        "name": "_sClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster for which the snapshot was taken.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sClusterVersion",
                        "name": "_sClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The version ID of the Amazon Redshift engine that is running on the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sCurrentBackupRateInMegaBytesPerSecond",
                        "name": "_sCurrentBackupRateInMegaBytesPerSecond",
                        "shape": "Double",
                        "locationName": "CurrentBackupRateInMegaBytesPerSecond",
                        "documentation": "-- | The number of megabytes per second being transferred to the snapshot backup.\n-- Returns '0' for a completed backup.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sDBName",
                        "name": "_sDBName",
                        "shape": "String",
                        "locationName": "DBName",
                        "documentation": "-- | The name of the database that was created when the cluster was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sElapsedTimeInSeconds",
                        "name": "_sElapsedTimeInSeconds",
                        "shape": "Long",
                        "locationName": "ElapsedTimeInSeconds",
                        "documentation": "-- | The amount of time an in-progress snapshot backup has been running, or the\n-- amount of time it took a completed backup to finish.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sEncrypted",
                        "name": "_sEncrypted",
                        "shape": "Boolean",
                        "locationName": "Encrypted",
                        "documentation": "-- | If 'true', the data in the snapshot is encrypted at rest.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sEncryptedWithHSM",
                        "name": "_sEncryptedWithHSM",
                        "shape": "Boolean",
                        "locationName": "EncryptedWithHSM",
                        "documentation": "-- | A boolean that indicates whether the snapshot data is encrypted using the HSM\n-- keys of the source cluster. 'true' indicates that the data is encrypted using\n-- HSM keys.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sEstimatedSecondsToCompletion",
                        "name": "_sEstimatedSecondsToCompletion",
                        "shape": "Long",
                        "locationName": "EstimatedSecondsToCompletion",
                        "documentation": "-- | The estimate of the time remaining before the snapshot backup will complete.\n-- Returns '0' for a completed backup.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sKmsKeyId",
                        "name": "_sKmsKeyId",
                        "shape": "String",
                        "locationName": "KmsKeyId",
                        "documentation": "-- | The AWS Key Management Service (KMS) key ID of the encryption key that was\n-- used to encrypt data in the cluster from which the snapshot was taken.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sMasterUsername",
                        "name": "_sMasterUsername",
                        "shape": "String",
                        "locationName": "MasterUsername",
                        "documentation": "-- | The master user name for the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sNodeType",
                        "name": "_sNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The node type of the nodes in the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sNumberOfNodes",
                        "name": "_sNumberOfNodes",
                        "shape": "Integer",
                        "locationName": "NumberOfNodes",
                        "documentation": "-- | The number of nodes in the cluster.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sOwnerAccount",
                        "name": "_sOwnerAccount",
                        "shape": "String",
                        "locationName": "OwnerAccount",
                        "documentation": "-- | For manual snapshots, the AWS customer account used to create or copy the\n-- snapshot. For automatic snapshots, the owner of the cluster. The owner can\n-- perform all snapshot actions, such as sharing a manual snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sPort",
                        "name": "_sPort",
                        "shape": "Integer",
                        "locationName": "Port",
                        "documentation": "-- | The port that the cluster is listening on.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sSnapshotCreateTime",
                        "name": "_sSnapshotCreateTime",
                        "shape": "TStamp",
                        "locationName": "SnapshotCreateTime",
                        "documentation": "-- | The time (UTC) when Amazon Redshift began the snapshot. A snapshot contains\n-- a copy of the cluster data as of this exact time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sSnapshotIdentifier",
                        "name": "_sSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotIdentifier",
                        "documentation": "-- | The snapshot identifier that is provided in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sSnapshotType",
                        "name": "_sSnapshotType",
                        "shape": "String",
                        "locationName": "SnapshotType",
                        "documentation": "-- | The snapshot type. Snapshots created using 'CreateClusterSnapshot' and 'CopyClusterSnapshot' will be of type \"manual\".",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sSourceRegion",
                        "name": "_sSourceRegion",
                        "shape": "String",
                        "locationName": "SourceRegion",
                        "documentation": "-- | The source region from which the snapshot was copied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sStatus",
                        "name": "_sStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | The snapshot status. The value of the status depends on the API operation\n-- used.   'CreateClusterSnapshot' and 'CopyClusterSnapshot' returns status as\n-- \"creating\".   'DescribeClusterSnapshots' returns status as \"creating\",\n-- \"available\", \"final snapshot\", or \"failed\".  'DeleteClusterSnapshot' returns\n-- status as \"deleted\".",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sTags",
                        "name": "_sTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the cluster snapshot.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sTotalBackupSizeInMegaBytes",
                        "name": "_sTotalBackupSizeInMegaBytes",
                        "shape": "Double",
                        "locationName": "TotalBackupSizeInMegaBytes",
                        "documentation": "-- | The size of the complete set of backup data that would be used to restore\n-- the cluster.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sVpcId",
                        "name": "_sVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The VPC identifier of the cluster if the snapshot is from a cluster in a VPC.\n-- Otherwise, this field is not in the output.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "clusterParameterGroup",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ClusterParameterGroup",
                "locationPad": 21,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgParameterGroupName",
                        "name": "_cpgParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgParameterGroupFamily",
                        "name": "_cpgParameterGroupFamily",
                        "shape": "String",
                        "locationName": "ParameterGroupFamily",
                        "documentation": "-- | The name of the cluster parameter group family that this cluster parameter\n-- group is compatible with.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgDescription",
                        "name": "_cpgDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | The description of the parameter group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cpgTags",
                        "name": "_cpgTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the cluster parameter group.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgDescription",
                        "name": "_cpgDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | The description of the parameter group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgParameterGroupFamily",
                        "name": "_cpgParameterGroupFamily",
                        "shape": "String",
                        "locationName": "ParameterGroupFamily",
                        "documentation": "-- | The name of the cluster parameter group family that this cluster parameter\n-- group is compatible with.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgParameterGroupName",
                        "name": "_cpgParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cpgTags",
                        "name": "_cpgTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the cluster parameter group.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 41,
                "ctor": "restoreStatus",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "RestoreStatus",
                "locationPad": 39,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsStatus",
                        "name": "_rsStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | The status of the restore action. Returns starting, restoring, completed, or\n-- failed.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsCurrentRestoreRateInMegaBytesPerSecond",
                        "name": "_rsCurrentRestoreRateInMegaBytesPerSecond",
                        "shape": "Double",
                        "locationName": "CurrentRestoreRateInMegaBytesPerSecond",
                        "documentation": "-- | The number of megabytes per second being transferred from the backup\n-- storage. Returns the average rate for a completed backup.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsSnapshotSizeInMegaBytes",
                        "name": "_rsSnapshotSizeInMegaBytes",
                        "shape": "Long",
                        "locationName": "SnapshotSizeInMegaBytes",
                        "documentation": "-- | The size of the set of snapshot data used to restore the cluster.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsProgressInMegaBytes",
                        "name": "_rsProgressInMegaBytes",
                        "shape": "Long",
                        "locationName": "ProgressInMegaBytes",
                        "documentation": "-- | The number of megabytes that have been transferred from snapshot storage.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsElapsedTimeInSeconds",
                        "name": "_rsElapsedTimeInSeconds",
                        "shape": "Long",
                        "locationName": "ElapsedTimeInSeconds",
                        "documentation": "-- | The amount of time an in-progress restore has been running, or the amount of\n-- time it took a completed restore to finish.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsEstimatedTimeToCompletionInSeconds",
                        "name": "_rsEstimatedTimeToCompletionInSeconds",
                        "shape": "Long",
                        "locationName": "EstimatedTimeToCompletionInSeconds",
                        "documentation": "-- | The estimate of the time remaining before the restore will complete. Returns\n-- 0 for a completed restore.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsCurrentRestoreRateInMegaBytesPerSecond",
                        "name": "_rsCurrentRestoreRateInMegaBytesPerSecond",
                        "shape": "Double",
                        "locationName": "CurrentRestoreRateInMegaBytesPerSecond",
                        "documentation": "-- | The number of megabytes per second being transferred from the backup\n-- storage. Returns the average rate for a completed backup.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsElapsedTimeInSeconds",
                        "name": "_rsElapsedTimeInSeconds",
                        "shape": "Long",
                        "locationName": "ElapsedTimeInSeconds",
                        "documentation": "-- | The amount of time an in-progress restore has been running, or the amount of\n-- time it took a completed restore to finish.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsEstimatedTimeToCompletionInSeconds",
                        "name": "_rsEstimatedTimeToCompletionInSeconds",
                        "shape": "Long",
                        "locationName": "EstimatedTimeToCompletionInSeconds",
                        "documentation": "-- | The estimate of the time remaining before the restore will complete. Returns\n-- 0 for a completed restore.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsProgressInMegaBytes",
                        "name": "_rsProgressInMegaBytes",
                        "shape": "Long",
                        "locationName": "ProgressInMegaBytes",
                        "documentation": "-- | The number of megabytes that have been transferred from snapshot storage.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsSnapshotSizeInMegaBytes",
                        "name": "_rsSnapshotSizeInMegaBytes",
                        "shape": "Long",
                        "locationName": "SnapshotSizeInMegaBytes",
                        "documentation": "-- | The size of the set of snapshot data used to restore the cluster.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsStatus",
                        "name": "_rsStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | The status of the restore action. Returns starting, restoring, completed, or\n-- failed.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "event",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Event",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eSourceIdentifier",
                        "name": "_eSourceIdentifier",
                        "shape": "String",
                        "locationName": "SourceIdentifier",
                        "documentation": "-- | The identifier for the source of the event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eSourceType",
                        "name": "_eSourceType",
                        "shape": "SourceType",
                        "locationName": "SourceType",
                        "documentation": "-- | The source type for this event.",
                        "typeExposed": "Maybe SourceType",
                        "type": "Maybe SourceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eMessage",
                        "name": "_eMessage",
                        "shape": "String",
                        "locationName": "Message",
                        "documentation": "-- | The text of this event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "eEventCategories",
                        "name": "_eEventCategories",
                        "shape": "EventCategoriesList",
                        "locationName": "EventCategories",
                        "documentation": "-- | A list of the event categories.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eSeverity",
                        "name": "_eSeverity",
                        "shape": "String",
                        "locationName": "Severity",
                        "documentation": "-- | The severity of the event.\n--\n-- Values: ERROR, INFO",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eDate",
                        "name": "_eDate",
                        "shape": "TStamp",
                        "locationName": "Date",
                        "documentation": "-- | The date and time of the event.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eEventId",
                        "name": "_eEventId",
                        "shape": "String",
                        "locationName": "EventId",
                        "documentation": "-- | The identifier of the event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eDate",
                        "name": "_eDate",
                        "shape": "TStamp",
                        "locationName": "Date",
                        "documentation": "-- | The date and time of the event.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "eEventCategories",
                        "name": "_eEventCategories",
                        "shape": "EventCategoriesList",
                        "locationName": "EventCategories",
                        "documentation": "-- | A list of the event categories.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eEventId",
                        "name": "_eEventId",
                        "shape": "String",
                        "locationName": "EventId",
                        "documentation": "-- | The identifier of the event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eMessage",
                        "name": "_eMessage",
                        "shape": "String",
                        "locationName": "Message",
                        "documentation": "-- | The text of this event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eSeverity",
                        "name": "_eSeverity",
                        "shape": "String",
                        "locationName": "Severity",
                        "documentation": "-- | The severity of the event.\n--\n-- Values: ERROR, INFO",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eSourceIdentifier",
                        "name": "_eSourceIdentifier",
                        "shape": "String",
                        "locationName": "SourceIdentifier",
                        "documentation": "-- | The identifier for the source of the event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eSourceType",
                        "name": "_eSourceType",
                        "shape": "SourceType",
                        "locationName": "SourceType",
                        "documentation": "-- | The source type for this event.",
                        "typeExposed": "Maybe SourceType",
                        "type": "Maybe SourceType"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 22,
                "ctor": "clusterSnapshotCopyStatus",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ClusterSnapshotCopyStatus",
                "locationPad": 18,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cscsDestinationRegion",
                        "name": "_cscsDestinationRegion",
                        "shape": "String",
                        "locationName": "DestinationRegion",
                        "documentation": "-- | The destination region that snapshots are automatically copied to when\n-- cross-region snapshot copy is enabled.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cscsRetentionPeriod",
                        "name": "_cscsRetentionPeriod",
                        "shape": "Long",
                        "locationName": "RetentionPeriod",
                        "documentation": "-- | The number of days that automated snapshots are retained in the destination\n-- region after they are copied from a source region.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cscsDestinationRegion",
                        "name": "_cscsDestinationRegion",
                        "shape": "String",
                        "locationName": "DestinationRegion",
                        "documentation": "-- | The destination region that snapshots are automatically copied to when\n-- cross-region snapshot copy is enabled.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cscsRetentionPeriod",
                        "name": "_cscsRetentionPeriod",
                        "shape": "Long",
                        "locationName": "RetentionPeriod",
                        "documentation": "-- | The number of days that automated snapshots are retained in the destination\n-- region after they are copied from a source region.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 9,
                "ctor": "tag",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Tag",
                "locationPad": 6,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "tagKey",
                        "name": "_tagKey",
                        "shape": "String",
                        "locationName": "Key",
                        "documentation": "-- | The key, or name, for the resource tag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "tagValue",
                        "name": "_tagValue",
                        "shape": "String",
                        "locationName": "Value",
                        "documentation": "-- | The value for the resource tag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "tagKey",
                        "name": "_tagKey",
                        "shape": "String",
                        "locationName": "Key",
                        "documentation": "-- | The key, or name, for the resource tag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "tagValue",
                        "name": "_tagValue",
                        "shape": "String",
                        "locationName": "Value",
                        "documentation": "-- | The value for the resource tag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 34,
                "ctor": "hsmClientCertificate",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "HsmClientCertificate",
                "locationPad": 31,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hccHsmClientCertificateIdentifier",
                        "name": "_hccHsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | The identifier of the HSM client certificate.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hccHsmClientCertificatePublicKey",
                        "name": "_hccHsmClientCertificatePublicKey",
                        "shape": "String",
                        "locationName": "HsmClientCertificatePublicKey",
                        "documentation": "-- | The public key that the Amazon Redshift cluster will use to connect to the\n-- HSM. You must register the public key in the HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "hccTags",
                        "name": "_hccTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the HSM client certificate.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hccHsmClientCertificateIdentifier",
                        "name": "_hccHsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | The identifier of the HSM client certificate.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hccHsmClientCertificatePublicKey",
                        "name": "_hccHsmClientCertificatePublicKey",
                        "shape": "String",
                        "locationName": "HsmClientCertificatePublicKey",
                        "documentation": "-- | The public key that the Amazon Redshift cluster will use to connect to the\n-- HSM. You must register the public key in the HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "hccTags",
                        "name": "_hccTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the HSM client certificate.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 34,
                "ctor": "cluster",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Cluster",
                "locationPad": 33,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterIdentifier",
                        "name": "_cClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cNodeType",
                        "name": "_cNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The node type for the nodes in the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterStatus",
                        "name": "_cClusterStatus",
                        "shape": "String",
                        "locationName": "ClusterStatus",
                        "documentation": "-- | The current state of this cluster. Possible values include 'available', 'creating', 'deleting', 'rebooting', 'renaming', and 'resizing'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cModifyStatus",
                        "name": "_cModifyStatus",
                        "shape": "String",
                        "locationName": "ModifyStatus",
                        "documentation": "-- | The status of a modify operation, if any, initiated for the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cMasterUsername",
                        "name": "_cMasterUsername",
                        "shape": "String",
                        "locationName": "MasterUsername",
                        "documentation": "-- | The master user name for the cluster. This name is used to connect to the\n-- database that is specified in DBName.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cDBName",
                        "name": "_cDBName",
                        "shape": "String",
                        "locationName": "DBName",
                        "documentation": "-- | The name of the initial database that was created when the cluster was\n-- created. This same name is returned for the life of the cluster. If an\n-- initial database was not specified, a database named \"dev\" was created by\n-- default.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cEndpoint",
                        "name": "_cEndpoint",
                        "shape": "Endpoint",
                        "locationName": "Endpoint",
                        "documentation": "-- | The connection endpoint.",
                        "typeExposed": "Maybe Endpoint",
                        "type": "Maybe Endpoint"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterCreateTime",
                        "name": "_cClusterCreateTime",
                        "shape": "TStamp",
                        "locationName": "ClusterCreateTime",
                        "documentation": "-- | The date and time that the cluster was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cAutomatedSnapshotRetentionPeriod",
                        "name": "_cAutomatedSnapshotRetentionPeriod",
                        "shape": "Integer",
                        "locationName": "AutomatedSnapshotRetentionPeriod",
                        "documentation": "-- | The number of days that automatic cluster snapshots are retained.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cClusterSecurityGroups",
                        "name": "_cClusterSecurityGroups",
                        "shape": "ClusterSecurityGroupMembershipList",
                        "locationName": "ClusterSecurityGroups",
                        "documentation": "-- | A list of cluster security group that are associated with the cluster. Each\n-- security group is represented by an element that contains 'ClusterSecurityGroup.Name' and 'ClusterSecurityGroup.Status' subelements.\n--\n-- Cluster security groups are used when the cluster is not created in a VPC.\n-- Clusters that are created in a VPC use VPC security groups, which are listed\n-- by the VpcSecurityGroups parameter.",
                        "typeExposed": "[ClusterSecurityGroupMembership]",
                        "type": "List \"member\" ClusterSecurityGroupMembership"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cVpcSecurityGroups",
                        "name": "_cVpcSecurityGroups",
                        "shape": "VpcSecurityGroupMembershipList",
                        "locationName": "VpcSecurityGroups",
                        "documentation": "-- | A list of Virtual Private Cloud (VPC) security groups that are associated\n-- with the cluster. This parameter is returned only if the cluster is in a VPC.",
                        "typeExposed": "[VpcSecurityGroupMembership]",
                        "type": "List \"member\" VpcSecurityGroupMembership"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cClusterParameterGroups",
                        "name": "_cClusterParameterGroups",
                        "shape": "ClusterParameterGroupStatusList",
                        "locationName": "ClusterParameterGroups",
                        "documentation": "-- | The list of cluster parameter groups that are associated with this cluster.",
                        "typeExposed": "[ClusterParameterGroupStatus]",
                        "type": "List \"member\" ClusterParameterGroupStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterSubnetGroupName",
                        "name": "_cClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name of the subnet group that is associated with the cluster. This\n-- parameter is valid only when the cluster is in a VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cVpcId",
                        "name": "_cVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The identifier of the VPC the cluster is in, if the cluster is in a VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cAvailabilityZone",
                        "name": "_cAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The name of the Availability Zone in which the cluster is located.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cPreferredMaintenanceWindow",
                        "name": "_cPreferredMaintenanceWindow",
                        "shape": "String",
                        "locationName": "PreferredMaintenanceWindow",
                        "documentation": "-- | The weekly time range (in UTC) during which system maintenance can occur.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cPendingModifiedValues",
                        "name": "_cPendingModifiedValues",
                        "shape": "PendingModifiedValues",
                        "locationName": "PendingModifiedValues",
                        "documentation": "-- | If present, changes to the cluster are pending. Specific pending changes are\n-- identified by subelements.",
                        "typeExposed": "Maybe PendingModifiedValues",
                        "type": "Maybe PendingModifiedValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterVersion",
                        "name": "_cClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The version ID of the Amazon Redshift engine that is running on the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cAllowVersionUpgrade",
                        "name": "_cAllowVersionUpgrade",
                        "shape": "Boolean",
                        "locationName": "AllowVersionUpgrade",
                        "documentation": "-- | If 'true', major version upgrades will be applied automatically to the cluster\n-- during the maintenance window.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cNumberOfNodes",
                        "name": "_cNumberOfNodes",
                        "shape": "Integer",
                        "locationName": "NumberOfNodes",
                        "documentation": "-- | The number of compute nodes in the cluster.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cPubliclyAccessible",
                        "name": "_cPubliclyAccessible",
                        "shape": "Boolean",
                        "locationName": "PubliclyAccessible",
                        "documentation": "-- | If 'true', the cluster can be accessed from a public network.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cEncrypted",
                        "name": "_cEncrypted",
                        "shape": "Boolean",
                        "locationName": "Encrypted",
                        "documentation": "-- | If 'true', data in the cluster is encrypted at rest.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cRestoreStatus",
                        "name": "_cRestoreStatus",
                        "shape": "RestoreStatus",
                        "locationName": "RestoreStatus",
                        "documentation": "-- | Describes the status of a cluster restore action. Returns null if the\n-- cluster was not created by restoring a snapshot.",
                        "typeExposed": "Maybe RestoreStatus",
                        "type": "Maybe RestoreStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cHsmStatus",
                        "name": "_cHsmStatus",
                        "shape": "HsmStatus",
                        "locationName": "HsmStatus",
                        "documentation": "-- | Reports whether the Amazon Redshift cluster has finished applying any HSM\n-- settings changes specified in a modify cluster command.\n--\n-- Values: active, applying",
                        "typeExposed": "Maybe HsmStatus",
                        "type": "Maybe HsmStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterSnapshotCopyStatus",
                        "name": "_cClusterSnapshotCopyStatus",
                        "shape": "ClusterSnapshotCopyStatus",
                        "locationName": "ClusterSnapshotCopyStatus",
                        "documentation": "-- | Returns the destination region and retention period that are configured for\n-- cross-region snapshot copy.",
                        "typeExposed": "Maybe ClusterSnapshotCopyStatus",
                        "type": "Maybe ClusterSnapshotCopyStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterPublicKey",
                        "name": "_cClusterPublicKey",
                        "shape": "String",
                        "locationName": "ClusterPublicKey",
                        "documentation": "-- | The public key for the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cClusterNodes",
                        "name": "_cClusterNodes",
                        "shape": "ClusterNodesList",
                        "locationName": "ClusterNodes",
                        "documentation": "-- | The nodes in a cluster.",
                        "typeExposed": "[ClusterNode]",
                        "type": "List \"member\" ClusterNode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cElasticIpStatus",
                        "name": "_cElasticIpStatus",
                        "shape": "ElasticIpStatus",
                        "locationName": "ElasticIpStatus",
                        "documentation": "-- | Describes the status of the elastic IP (EIP) address.",
                        "typeExposed": "Maybe ElasticIpStatus",
                        "type": "Maybe ElasticIpStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterRevisionNumber",
                        "name": "_cClusterRevisionNumber",
                        "shape": "String",
                        "locationName": "ClusterRevisionNumber",
                        "documentation": "-- | The specific revision number of the database in the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cTags",
                        "name": "_cTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the cluster.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cKmsKeyId",
                        "name": "_cKmsKeyId",
                        "shape": "String",
                        "locationName": "KmsKeyId",
                        "documentation": "-- | The AWS Key Management Service (KMS) key ID of the encryption key used to\n-- encrypt data in the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cAllowVersionUpgrade",
                        "name": "_cAllowVersionUpgrade",
                        "shape": "Boolean",
                        "locationName": "AllowVersionUpgrade",
                        "documentation": "-- | If 'true', major version upgrades will be applied automatically to the cluster\n-- during the maintenance window.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cAutomatedSnapshotRetentionPeriod",
                        "name": "_cAutomatedSnapshotRetentionPeriod",
                        "shape": "Integer",
                        "locationName": "AutomatedSnapshotRetentionPeriod",
                        "documentation": "-- | The number of days that automatic cluster snapshots are retained.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cAvailabilityZone",
                        "name": "_cAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The name of the Availability Zone in which the cluster is located.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterCreateTime",
                        "name": "_cClusterCreateTime",
                        "shape": "TStamp",
                        "locationName": "ClusterCreateTime",
                        "documentation": "-- | The date and time that the cluster was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterIdentifier",
                        "name": "_cClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cClusterNodes",
                        "name": "_cClusterNodes",
                        "shape": "ClusterNodesList",
                        "locationName": "ClusterNodes",
                        "documentation": "-- | The nodes in a cluster.",
                        "typeExposed": "[ClusterNode]",
                        "type": "List \"member\" ClusterNode"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cClusterParameterGroups",
                        "name": "_cClusterParameterGroups",
                        "shape": "ClusterParameterGroupStatusList",
                        "locationName": "ClusterParameterGroups",
                        "documentation": "-- | The list of cluster parameter groups that are associated with this cluster.",
                        "typeExposed": "[ClusterParameterGroupStatus]",
                        "type": "List \"member\" ClusterParameterGroupStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterPublicKey",
                        "name": "_cClusterPublicKey",
                        "shape": "String",
                        "locationName": "ClusterPublicKey",
                        "documentation": "-- | The public key for the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterRevisionNumber",
                        "name": "_cClusterRevisionNumber",
                        "shape": "String",
                        "locationName": "ClusterRevisionNumber",
                        "documentation": "-- | The specific revision number of the database in the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cClusterSecurityGroups",
                        "name": "_cClusterSecurityGroups",
                        "shape": "ClusterSecurityGroupMembershipList",
                        "locationName": "ClusterSecurityGroups",
                        "documentation": "-- | A list of cluster security group that are associated with the cluster. Each\n-- security group is represented by an element that contains 'ClusterSecurityGroup.Name' and 'ClusterSecurityGroup.Status' subelements.\n--\n-- Cluster security groups are used when the cluster is not created in a VPC.\n-- Clusters that are created in a VPC use VPC security groups, which are listed\n-- by the VpcSecurityGroups parameter.",
                        "typeExposed": "[ClusterSecurityGroupMembership]",
                        "type": "List \"member\" ClusterSecurityGroupMembership"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterSnapshotCopyStatus",
                        "name": "_cClusterSnapshotCopyStatus",
                        "shape": "ClusterSnapshotCopyStatus",
                        "locationName": "ClusterSnapshotCopyStatus",
                        "documentation": "-- | Returns the destination region and retention period that are configured for\n-- cross-region snapshot copy.",
                        "typeExposed": "Maybe ClusterSnapshotCopyStatus",
                        "type": "Maybe ClusterSnapshotCopyStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterStatus",
                        "name": "_cClusterStatus",
                        "shape": "String",
                        "locationName": "ClusterStatus",
                        "documentation": "-- | The current state of this cluster. Possible values include 'available', 'creating', 'deleting', 'rebooting', 'renaming', and 'resizing'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterSubnetGroupName",
                        "name": "_cClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name of the subnet group that is associated with the cluster. This\n-- parameter is valid only when the cluster is in a VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cClusterVersion",
                        "name": "_cClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The version ID of the Amazon Redshift engine that is running on the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cDBName",
                        "name": "_cDBName",
                        "shape": "String",
                        "locationName": "DBName",
                        "documentation": "-- | The name of the initial database that was created when the cluster was\n-- created. This same name is returned for the life of the cluster. If an\n-- initial database was not specified, a database named \"dev\" was created by\n-- default.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cElasticIpStatus",
                        "name": "_cElasticIpStatus",
                        "shape": "ElasticIpStatus",
                        "locationName": "ElasticIpStatus",
                        "documentation": "-- | Describes the status of the elastic IP (EIP) address.",
                        "typeExposed": "Maybe ElasticIpStatus",
                        "type": "Maybe ElasticIpStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cEncrypted",
                        "name": "_cEncrypted",
                        "shape": "Boolean",
                        "locationName": "Encrypted",
                        "documentation": "-- | If 'true', data in the cluster is encrypted at rest.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cEndpoint",
                        "name": "_cEndpoint",
                        "shape": "Endpoint",
                        "locationName": "Endpoint",
                        "documentation": "-- | The connection endpoint.",
                        "typeExposed": "Maybe Endpoint",
                        "type": "Maybe Endpoint"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cHsmStatus",
                        "name": "_cHsmStatus",
                        "shape": "HsmStatus",
                        "locationName": "HsmStatus",
                        "documentation": "-- | Reports whether the Amazon Redshift cluster has finished applying any HSM\n-- settings changes specified in a modify cluster command.\n--\n-- Values: active, applying",
                        "typeExposed": "Maybe HsmStatus",
                        "type": "Maybe HsmStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cKmsKeyId",
                        "name": "_cKmsKeyId",
                        "shape": "String",
                        "locationName": "KmsKeyId",
                        "documentation": "-- | The AWS Key Management Service (KMS) key ID of the encryption key used to\n-- encrypt data in the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cMasterUsername",
                        "name": "_cMasterUsername",
                        "shape": "String",
                        "locationName": "MasterUsername",
                        "documentation": "-- | The master user name for the cluster. This name is used to connect to the\n-- database that is specified in DBName.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cModifyStatus",
                        "name": "_cModifyStatus",
                        "shape": "String",
                        "locationName": "ModifyStatus",
                        "documentation": "-- | The status of a modify operation, if any, initiated for the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cNodeType",
                        "name": "_cNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The node type for the nodes in the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cNumberOfNodes",
                        "name": "_cNumberOfNodes",
                        "shape": "Integer",
                        "locationName": "NumberOfNodes",
                        "documentation": "-- | The number of compute nodes in the cluster.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cPendingModifiedValues",
                        "name": "_cPendingModifiedValues",
                        "shape": "PendingModifiedValues",
                        "locationName": "PendingModifiedValues",
                        "documentation": "-- | If present, changes to the cluster are pending. Specific pending changes are\n-- identified by subelements.",
                        "typeExposed": "Maybe PendingModifiedValues",
                        "type": "Maybe PendingModifiedValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cPreferredMaintenanceWindow",
                        "name": "_cPreferredMaintenanceWindow",
                        "shape": "String",
                        "locationName": "PreferredMaintenanceWindow",
                        "documentation": "-- | The weekly time range (in UTC) during which system maintenance can occur.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cPubliclyAccessible",
                        "name": "_cPubliclyAccessible",
                        "shape": "Boolean",
                        "locationName": "PubliclyAccessible",
                        "documentation": "-- | If 'true', the cluster can be accessed from a public network.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cRestoreStatus",
                        "name": "_cRestoreStatus",
                        "shape": "RestoreStatus",
                        "locationName": "RestoreStatus",
                        "documentation": "-- | Describes the status of a cluster restore action. Returns null if the\n-- cluster was not created by restoring a snapshot.",
                        "typeExposed": "Maybe RestoreStatus",
                        "type": "Maybe RestoreStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cTags",
                        "name": "_cTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the cluster.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cVpcId",
                        "name": "_cVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The identifier of the VPC the cluster is in, if the cluster is in a VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cVpcSecurityGroups",
                        "name": "_cVpcSecurityGroups",
                        "shape": "VpcSecurityGroupMembershipList",
                        "locationName": "VpcSecurityGroups",
                        "documentation": "-- | A list of Virtual Private Cloud (VPC) security groups that are associated\n-- with the cluster. This parameter is returned only if the cluster is in a VPC.",
                        "typeExposed": "[VpcSecurityGroupMembership]",
                        "type": "List \"member\" VpcSecurityGroupMembership"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 19,
                "ctor": "clusterNode",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ClusterNode",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cnNodeRole",
                        "name": "_cnNodeRole",
                        "shape": "String",
                        "locationName": "NodeRole",
                        "documentation": "-- | Whether the node is a leader node or a compute node.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cnPrivateIPAddress",
                        "name": "_cnPrivateIPAddress",
                        "shape": "String",
                        "locationName": "PrivateIPAddress",
                        "documentation": "-- | The private IP address of a node within a cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cnPublicIPAddress",
                        "name": "_cnPublicIPAddress",
                        "shape": "String",
                        "locationName": "PublicIPAddress",
                        "documentation": "-- | The public IP address of a node within a cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cnNodeRole",
                        "name": "_cnNodeRole",
                        "shape": "String",
                        "locationName": "NodeRole",
                        "documentation": "-- | Whether the node is a leader node or a compute node.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cnPrivateIPAddress",
                        "name": "_cnPrivateIPAddress",
                        "shape": "String",
                        "locationName": "PrivateIPAddress",
                        "documentation": "-- | The private IP address of a node within a cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cnPublicIPAddress",
                        "name": "_cnPublicIPAddress",
                        "shape": "String",
                        "locationName": "PublicIPAddress",
                        "documentation": "-- | The public IP address of a node within a cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 28,
                "ctor": "ec2SecurityGroup",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "EC2SecurityGroup",
                "locationPad": 24,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ecsgStatus",
                        "name": "_ecsgStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | The status of the EC2 security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ecsgEC2SecurityGroupName",
                        "name": "_ecsgEC2SecurityGroupName",
                        "shape": "String",
                        "locationName": "EC2SecurityGroupName",
                        "documentation": "-- | The name of the EC2 Security Group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ecsgEC2SecurityGroupOwnerId",
                        "name": "_ecsgEC2SecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "EC2SecurityGroupOwnerId",
                        "documentation": "-- | The AWS ID of the owner of the EC2 security group specified in the 'EC2SecurityGroupName' field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ecsgTags",
                        "name": "_ecsgTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the EC2 security group.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ecsgEC2SecurityGroupName",
                        "name": "_ecsgEC2SecurityGroupName",
                        "shape": "String",
                        "locationName": "EC2SecurityGroupName",
                        "documentation": "-- | The name of the EC2 Security Group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ecsgEC2SecurityGroupOwnerId",
                        "name": "_ecsgEC2SecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "EC2SecurityGroupOwnerId",
                        "documentation": "-- | The AWS ID of the owner of the EC2 security group specified in the 'EC2SecurityGroupName' field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ecsgStatus",
                        "name": "_ecsgStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | The status of the EC2 security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ecsgTags",
                        "name": "_ecsgTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the EC2 security group.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "orderableClusterOption",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "OrderableClusterOption",
                "locationPad": 18,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ocoClusterVersion",
                        "name": "_ocoClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The version of the orderable cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ocoClusterType",
                        "name": "_ocoClusterType",
                        "shape": "String",
                        "locationName": "ClusterType",
                        "documentation": "-- | The cluster type, for example 'multi-node'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ocoNodeType",
                        "name": "_ocoNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The node type for the orderable cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ocoAvailabilityZones",
                        "name": "_ocoAvailabilityZones",
                        "shape": "AvailabilityZoneList",
                        "locationName": "AvailabilityZones",
                        "documentation": "-- | A list of availability zones for the orderable cluster.",
                        "typeExposed": "[AvailabilityZone]",
                        "type": "List \"member\" AvailabilityZone"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ocoAvailabilityZones",
                        "name": "_ocoAvailabilityZones",
                        "shape": "AvailabilityZoneList",
                        "locationName": "AvailabilityZones",
                        "documentation": "-- | A list of availability zones for the orderable cluster.",
                        "typeExposed": "[AvailabilityZone]",
                        "type": "List \"member\" AvailabilityZone"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ocoClusterType",
                        "name": "_ocoClusterType",
                        "shape": "String",
                        "locationName": "ClusterType",
                        "documentation": "-- | The cluster type, for example 'multi-node'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ocoClusterVersion",
                        "name": "_ocoClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The version of the orderable cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ocoNodeType",
                        "name": "_ocoNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The node type for the orderable cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "STCluster": "cluster",
                    "STClusterParameterGroup": "cluster-parameter-group",
                    "STClusterSnapshot": "cluster-snapshot",
                    "STClusterSecurityGroup": "cluster-security-group"
                },
                "valuePad": 24,
                "name": "SourceType",
                "type": "nullary",
                "branchPad": 23
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 25,
                "ctor": "clusterParameterGroupStatus",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ClusterParameterGroupStatus",
                "locationPad": 21,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgsParameterGroupName",
                        "name": "_cpgsParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgsParameterApplyStatus",
                        "name": "_cpgsParameterApplyStatus",
                        "shape": "String",
                        "locationName": "ParameterApplyStatus",
                        "documentation": "-- | The status of parameter updates.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgsParameterApplyStatus",
                        "name": "_cpgsParameterApplyStatus",
                        "shape": "String",
                        "locationName": "ParameterApplyStatus",
                        "documentation": "-- | The status of parameter updates.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgsParameterGroupName",
                        "name": "_cpgsParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "subnet",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Subnet",
                "locationPad": 23,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sSubnetIdentifier",
                        "name": "_sSubnetIdentifier",
                        "shape": "String",
                        "locationName": "SubnetIdentifier",
                        "documentation": "-- | The identifier of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sSubnetAvailabilityZone",
                        "name": "_sSubnetAvailabilityZone",
                        "shape": "AvailabilityZone",
                        "locationName": "SubnetAvailabilityZone",
                        "documentation": null,
                        "typeExposed": "Maybe AvailabilityZone",
                        "type": "Maybe AvailabilityZone"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sSubnetStatus",
                        "name": "_sSubnetStatus",
                        "shape": "String",
                        "locationName": "SubnetStatus",
                        "documentation": "-- | The status of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sSubnetAvailabilityZone",
                        "name": "_sSubnetAvailabilityZone",
                        "shape": "AvailabilityZone",
                        "locationName": "SubnetAvailabilityZone",
                        "documentation": null,
                        "typeExposed": "Maybe AvailabilityZone",
                        "type": "Maybe AvailabilityZone"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sSubnetIdentifier",
                        "name": "_sSubnetIdentifier",
                        "shape": "String",
                        "locationName": "SubnetIdentifier",
                        "documentation": "-- | The identifier of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sSubnetStatus",
                        "name": "_sSubnetStatus",
                        "shape": "String",
                        "locationName": "SubnetStatus",
                        "documentation": "-- | The status of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 28,
                "ctor": "clusterSecurityGroup",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ClusterSecurityGroup",
                "locationPad": 25,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csgClusterSecurityGroupName",
                        "name": "_csgClusterSecurityGroupName",
                        "shape": "String",
                        "locationName": "ClusterSecurityGroupName",
                        "documentation": "-- | The name of the cluster security group to which the operation was applied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csgDescription",
                        "name": "_csgDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description of the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "csgEC2SecurityGroups",
                        "name": "_csgEC2SecurityGroups",
                        "shape": "EC2SecurityGroupList",
                        "locationName": "EC2SecurityGroups",
                        "documentation": "-- | A list of EC2 security groups that are permitted to access clusters\n-- associated with this cluster security group.",
                        "typeExposed": "[EC2SecurityGroup]",
                        "type": "List \"member\" EC2SecurityGroup"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "csgIPRanges",
                        "name": "_csgIPRanges",
                        "shape": "IPRangeList",
                        "locationName": "IPRanges",
                        "documentation": "-- | A list of IP ranges (CIDR blocks) that are permitted to access clusters\n-- associated with this cluster security group.",
                        "typeExposed": "[IPRange]",
                        "type": "List \"member\" IPRange"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "csgTags",
                        "name": "_csgTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the cluster security group.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csgClusterSecurityGroupName",
                        "name": "_csgClusterSecurityGroupName",
                        "shape": "String",
                        "locationName": "ClusterSecurityGroupName",
                        "documentation": "-- | The name of the cluster security group to which the operation was applied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csgDescription",
                        "name": "_csgDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description of the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "csgEC2SecurityGroups",
                        "name": "_csgEC2SecurityGroups",
                        "shape": "EC2SecurityGroupList",
                        "locationName": "EC2SecurityGroups",
                        "documentation": "-- | A list of EC2 security groups that are permitted to access clusters\n-- associated with this cluster security group.",
                        "typeExposed": "[EC2SecurityGroup]",
                        "type": "List \"member\" EC2SecurityGroup"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "csgIPRanges",
                        "name": "_csgIPRanges",
                        "shape": "IPRangeList",
                        "locationName": "IPRanges",
                        "documentation": "-- | A list of IP ranges (CIDR blocks) that are permitted to access clusters\n-- associated with this cluster security group.",
                        "typeExposed": "[IPRange]",
                        "type": "List \"member\" IPRange"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "csgTags",
                        "name": "_csgTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the cluster security group.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "defaultClusterParameters",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "DefaultClusterParameters",
                "locationPad": 21,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcpParameterGroupFamily",
                        "name": "_dcpParameterGroupFamily",
                        "shape": "String",
                        "locationName": "ParameterGroupFamily",
                        "documentation": "-- | The name of the cluster parameter group family to which the engine default\n-- parameters apply.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcpMarker",
                        "name": "_dcpMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcpParameters",
                        "name": "_dcpParameters",
                        "shape": "ParametersList",
                        "locationName": "Parameters",
                        "documentation": "-- | The list of cluster default parameters.",
                        "typeExposed": "[Parameter]",
                        "type": "List \"member\" Parameter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcpMarker",
                        "name": "_dcpMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcpParameterGroupFamily",
                        "name": "_dcpParameterGroupFamily",
                        "shape": "String",
                        "locationName": "ParameterGroupFamily",
                        "documentation": "-- | The name of the cluster parameter group family to which the engine default\n-- parameters apply.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcpParameters",
                        "name": "_dcpParameters",
                        "shape": "ParametersList",
                        "locationName": "Parameters",
                        "documentation": "-- | The list of cluster default parameters.",
                        "typeExposed": "[Parameter]",
                        "type": "List \"member\" Parameter"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 27,
                "ctor": "clusterSubnetGroup",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ClusterSubnetGroup",
                "locationPad": 23,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csg1ClusterSubnetGroupName",
                        "name": "_csg1ClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name of the cluster subnet group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csg1Description",
                        "name": "_csg1Description",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | The description of the cluster subnet group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csg1VpcId",
                        "name": "_csg1VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The VPC ID of the cluster subnet group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csg1SubnetGroupStatus",
                        "name": "_csg1SubnetGroupStatus",
                        "shape": "String",
                        "locationName": "SubnetGroupStatus",
                        "documentation": "-- | The status of the cluster subnet group. Possible values are 'Complete', 'Incomplete' and 'Invalid'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "csg1Subnets",
                        "name": "_csg1Subnets",
                        "shape": "SubnetList",
                        "locationName": "Subnets",
                        "documentation": "-- | A list of the VPC 'Subnet' elements.",
                        "typeExposed": "[Subnet]",
                        "type": "List \"member\" Subnet"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "csg1Tags",
                        "name": "_csg1Tags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the cluster subnet group.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csg1ClusterSubnetGroupName",
                        "name": "_csg1ClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name of the cluster subnet group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csg1Description",
                        "name": "_csg1Description",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | The description of the cluster subnet group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csg1SubnetGroupStatus",
                        "name": "_csg1SubnetGroupStatus",
                        "shape": "String",
                        "locationName": "SubnetGroupStatus",
                        "documentation": "-- | The status of the cluster subnet group. Possible values are 'Complete', 'Incomplete' and 'Invalid'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "csg1Subnets",
                        "name": "_csg1Subnets",
                        "shape": "SubnetList",
                        "locationName": "Subnets",
                        "documentation": "-- | A list of the VPC 'Subnet' elements.",
                        "typeExposed": "[Subnet]",
                        "type": "List \"member\" Subnet"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "csg1Tags",
                        "name": "_csg1Tags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the cluster subnet group.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csg1VpcId",
                        "name": "_csg1VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The VPC ID of the cluster subnet group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 20,
                "ctor": "eventInfoMap",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "EventInfoMap",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eimEventId",
                        "name": "_eimEventId",
                        "shape": "String",
                        "locationName": "EventId",
                        "documentation": "-- | The identifier of an Amazon Redshift event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "eimEventCategories",
                        "name": "_eimEventCategories",
                        "shape": "EventCategoriesList",
                        "locationName": "EventCategories",
                        "documentation": "-- | The category of an Amazon Redshift event.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eimEventDescription",
                        "name": "_eimEventDescription",
                        "shape": "String",
                        "locationName": "EventDescription",
                        "documentation": "-- | The description of an Amazon Redshift event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eimSeverity",
                        "name": "_eimSeverity",
                        "shape": "String",
                        "locationName": "Severity",
                        "documentation": "-- | The severity of the event.\n--\n-- Values: ERROR, INFO",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "eimEventCategories",
                        "name": "_eimEventCategories",
                        "shape": "EventCategoriesList",
                        "locationName": "EventCategories",
                        "documentation": "-- | The category of an Amazon Redshift event.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eimEventDescription",
                        "name": "_eimEventDescription",
                        "shape": "String",
                        "locationName": "EventDescription",
                        "documentation": "-- | The description of an Amazon Redshift event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eimEventId",
                        "name": "_eimEventId",
                        "shape": "String",
                        "locationName": "EventId",
                        "documentation": "-- | The identifier of an Amazon Redshift event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eimSeverity",
                        "name": "_eimSeverity",
                        "shape": "String",
                        "locationName": "Severity",
                        "documentation": "-- | The severity of the event.\n--\n-- Values: ERROR, INFO",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 29,
                "ctor": "clusterSecurityGroupMembership",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ClusterSecurityGroupMembership",
                "locationPad": 25,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csgmClusterSecurityGroupName",
                        "name": "_csgmClusterSecurityGroupName",
                        "shape": "String",
                        "locationName": "ClusterSecurityGroupName",
                        "documentation": "-- | The name of the cluster security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csgmStatus",
                        "name": "_csgmStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | The status of the cluster security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csgmClusterSecurityGroupName",
                        "name": "_csgmClusterSecurityGroupName",
                        "shape": "String",
                        "locationName": "ClusterSecurityGroupName",
                        "documentation": "-- | The name of the cluster security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "csgmStatus",
                        "name": "_csgmStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | The status of the cluster security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 26,
                "ctor": "reservedNodeOffering",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ReservedNodeOffering",
                "locationPad": 23,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnoReservedNodeOfferingId",
                        "name": "_rnoReservedNodeOfferingId",
                        "shape": "String",
                        "locationName": "ReservedNodeOfferingId",
                        "documentation": "-- | The offering identifier.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnoNodeType",
                        "name": "_rnoNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The node type offered by the reserved node offering.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnoDuration",
                        "name": "_rnoDuration",
                        "shape": "Integer",
                        "locationName": "Duration",
                        "documentation": "-- | The duration, in seconds, for which the offering will reserve the node.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnoFixedPrice",
                        "name": "_rnoFixedPrice",
                        "shape": "Double",
                        "locationName": "FixedPrice",
                        "documentation": "-- | The upfront fixed charge you will pay to purchase the specific reserved node\n-- offering.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnoUsagePrice",
                        "name": "_rnoUsagePrice",
                        "shape": "Double",
                        "locationName": "UsagePrice",
                        "documentation": "-- | The rate you are charged for each hour the cluster that is using the\n-- offering is running.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnoCurrencyCode",
                        "name": "_rnoCurrencyCode",
                        "shape": "String",
                        "locationName": "CurrencyCode",
                        "documentation": "-- | The currency code for the compute nodes offering.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnoOfferingType",
                        "name": "_rnoOfferingType",
                        "shape": "String",
                        "locationName": "OfferingType",
                        "documentation": "-- | The anticipated utilization of the reserved node, as defined in the reserved\n-- node offering.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rnoRecurringCharges",
                        "name": "_rnoRecurringCharges",
                        "shape": "RecurringChargeList",
                        "locationName": "RecurringCharges",
                        "documentation": "-- | The charge to your account regardless of whether you are creating any\n-- clusters using the node offering. Recurring charges are only in effect for\n-- heavy-utilization reserved nodes.",
                        "typeExposed": "[RecurringCharge]",
                        "type": "List \"member\" RecurringCharge"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnoCurrencyCode",
                        "name": "_rnoCurrencyCode",
                        "shape": "String",
                        "locationName": "CurrencyCode",
                        "documentation": "-- | The currency code for the compute nodes offering.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnoDuration",
                        "name": "_rnoDuration",
                        "shape": "Integer",
                        "locationName": "Duration",
                        "documentation": "-- | The duration, in seconds, for which the offering will reserve the node.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnoFixedPrice",
                        "name": "_rnoFixedPrice",
                        "shape": "Double",
                        "locationName": "FixedPrice",
                        "documentation": "-- | The upfront fixed charge you will pay to purchase the specific reserved node\n-- offering.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnoNodeType",
                        "name": "_rnoNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The node type offered by the reserved node offering.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnoOfferingType",
                        "name": "_rnoOfferingType",
                        "shape": "String",
                        "locationName": "OfferingType",
                        "documentation": "-- | The anticipated utilization of the reserved node, as defined in the reserved\n-- node offering.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rnoRecurringCharges",
                        "name": "_rnoRecurringCharges",
                        "shape": "RecurringChargeList",
                        "locationName": "RecurringCharges",
                        "documentation": "-- | The charge to your account regardless of whether you are creating any\n-- clusters using the node offering. Recurring charges are only in effect for\n-- heavy-utilization reserved nodes.",
                        "typeExposed": "[RecurringCharge]",
                        "type": "List \"member\" RecurringCharge"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnoReservedNodeOfferingId",
                        "name": "_rnoReservedNodeOfferingId",
                        "shape": "String",
                        "locationName": "ReservedNodeOfferingId",
                        "documentation": "-- | The offering identifier.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnoUsagePrice",
                        "name": "_rnoUsagePrice",
                        "shape": "Double",
                        "locationName": "UsagePrice",
                        "documentation": "-- | The rate you are charged for each hour the cluster that is using the\n-- offering is running.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 25,
                "ctor": "reservedNode",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ReservedNode",
                "locationPad": 23,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnReservedNodeId",
                        "name": "_rnReservedNodeId",
                        "shape": "String",
                        "locationName": "ReservedNodeId",
                        "documentation": "-- | The unique identifier for the reservation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnReservedNodeOfferingId",
                        "name": "_rnReservedNodeOfferingId",
                        "shape": "String",
                        "locationName": "ReservedNodeOfferingId",
                        "documentation": "-- | The identifier for the reserved node offering.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnNodeType",
                        "name": "_rnNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The node type of the reserved node.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnStartTime",
                        "name": "_rnStartTime",
                        "shape": "TStamp",
                        "locationName": "StartTime",
                        "documentation": "-- | The time the reservation started. You purchase a reserved node offering for\n-- a duration. This is the start time of that duration.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnDuration",
                        "name": "_rnDuration",
                        "shape": "Integer",
                        "locationName": "Duration",
                        "documentation": "-- | The duration of the node reservation in seconds.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnFixedPrice",
                        "name": "_rnFixedPrice",
                        "shape": "Double",
                        "locationName": "FixedPrice",
                        "documentation": "-- | The fixed cost Amazon Redshift charged you for this reserved node.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnUsagePrice",
                        "name": "_rnUsagePrice",
                        "shape": "Double",
                        "locationName": "UsagePrice",
                        "documentation": "-- | The hourly rate Amazon Redshift charge you for this reserved node.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnCurrencyCode",
                        "name": "_rnCurrencyCode",
                        "shape": "String",
                        "locationName": "CurrencyCode",
                        "documentation": "-- | The currency code for the reserved cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnNodeCount",
                        "name": "_rnNodeCount",
                        "shape": "Integer",
                        "locationName": "NodeCount",
                        "documentation": "-- | The number of reserved compute nodes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnState",
                        "name": "_rnState",
                        "shape": "String",
                        "locationName": "State",
                        "documentation": "-- | The state of the reserved compute node.\n--\n-- Possible Values:\n--\n-- pending-payment-This reserved node has recently been purchased, and the\n-- sale has been approved, but payment has not yet been confirmed. active-This\n-- reserved node is owned by the caller and is available for use. payment-failed-Payment failed for the purchase attempt.\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnOfferingType",
                        "name": "_rnOfferingType",
                        "shape": "String",
                        "locationName": "OfferingType",
                        "documentation": "-- | The anticipated utilization of the reserved node, as defined in the reserved\n-- node offering.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rnRecurringCharges",
                        "name": "_rnRecurringCharges",
                        "shape": "RecurringChargeList",
                        "locationName": "RecurringCharges",
                        "documentation": "-- | The recurring charges for the reserved node.",
                        "typeExposed": "[RecurringCharge]",
                        "type": "List \"member\" RecurringCharge"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnCurrencyCode",
                        "name": "_rnCurrencyCode",
                        "shape": "String",
                        "locationName": "CurrencyCode",
                        "documentation": "-- | The currency code for the reserved cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnDuration",
                        "name": "_rnDuration",
                        "shape": "Integer",
                        "locationName": "Duration",
                        "documentation": "-- | The duration of the node reservation in seconds.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnFixedPrice",
                        "name": "_rnFixedPrice",
                        "shape": "Double",
                        "locationName": "FixedPrice",
                        "documentation": "-- | The fixed cost Amazon Redshift charged you for this reserved node.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnNodeCount",
                        "name": "_rnNodeCount",
                        "shape": "Integer",
                        "locationName": "NodeCount",
                        "documentation": "-- | The number of reserved compute nodes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnNodeType",
                        "name": "_rnNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The node type of the reserved node.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnOfferingType",
                        "name": "_rnOfferingType",
                        "shape": "String",
                        "locationName": "OfferingType",
                        "documentation": "-- | The anticipated utilization of the reserved node, as defined in the reserved\n-- node offering.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rnRecurringCharges",
                        "name": "_rnRecurringCharges",
                        "shape": "RecurringChargeList",
                        "locationName": "RecurringCharges",
                        "documentation": "-- | The recurring charges for the reserved node.",
                        "typeExposed": "[RecurringCharge]",
                        "type": "List \"member\" RecurringCharge"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnReservedNodeId",
                        "name": "_rnReservedNodeId",
                        "shape": "String",
                        "locationName": "ReservedNodeId",
                        "documentation": "-- | The unique identifier for the reservation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnReservedNodeOfferingId",
                        "name": "_rnReservedNodeOfferingId",
                        "shape": "String",
                        "locationName": "ReservedNodeOfferingId",
                        "documentation": "-- | The identifier for the reserved node offering.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnStartTime",
                        "name": "_rnStartTime",
                        "shape": "TStamp",
                        "locationName": "StartTime",
                        "documentation": "-- | The time the reservation started. You purchase a reserved node offering for\n-- a duration. This is the start time of that duration.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnState",
                        "name": "_rnState",
                        "shape": "String",
                        "locationName": "State",
                        "documentation": "-- | The state of the reserved compute node.\n--\n-- Possible Values:\n--\n-- pending-payment-This reserved node has recently been purchased, and the\n-- sale has been approved, but payment has not yet been confirmed. active-This\n-- reserved node is owned by the caller and is available for use. payment-failed-Payment failed for the purchase attempt.\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rnUsagePrice",
                        "name": "_rnUsagePrice",
                        "shape": "Double",
                        "locationName": "UsagePrice",
                        "documentation": "-- | The hourly rate Amazon Redshift charge you for this reserved node.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 29,
                "ctor": "loggingStatus",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "LoggingStatus",
                "locationPad": 27,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsLoggingEnabled",
                        "name": "_lsLoggingEnabled",
                        "shape": "Boolean",
                        "locationName": "LoggingEnabled",
                        "documentation": "-- | 'true' if logging is on, 'false' if logging is off.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsBucketName",
                        "name": "_lsBucketName",
                        "shape": "String",
                        "locationName": "BucketName",
                        "documentation": "-- | The name of the S3 bucket where the log files are stored.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsS3KeyPrefix",
                        "name": "_lsS3KeyPrefix",
                        "shape": "String",
                        "locationName": "S3KeyPrefix",
                        "documentation": "-- | The prefix applied to the log file names.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsLastSuccessfulDeliveryTime",
                        "name": "_lsLastSuccessfulDeliveryTime",
                        "shape": "TStamp",
                        "locationName": "LastSuccessfulDeliveryTime",
                        "documentation": "-- | The last time when logs were delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsLastFailureTime",
                        "name": "_lsLastFailureTime",
                        "shape": "TStamp",
                        "locationName": "LastFailureTime",
                        "documentation": "-- | The last time when logs failed to be delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsLastFailureMessage",
                        "name": "_lsLastFailureMessage",
                        "shape": "String",
                        "locationName": "LastFailureMessage",
                        "documentation": "-- | The message indicating that logs failed to be delivered.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsBucketName",
                        "name": "_lsBucketName",
                        "shape": "String",
                        "locationName": "BucketName",
                        "documentation": "-- | The name of the S3 bucket where the log files are stored.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsLastFailureMessage",
                        "name": "_lsLastFailureMessage",
                        "shape": "String",
                        "locationName": "LastFailureMessage",
                        "documentation": "-- | The message indicating that logs failed to be delivered.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsLastFailureTime",
                        "name": "_lsLastFailureTime",
                        "shape": "TStamp",
                        "locationName": "LastFailureTime",
                        "documentation": "-- | The last time when logs failed to be delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsLastSuccessfulDeliveryTime",
                        "name": "_lsLastSuccessfulDeliveryTime",
                        "shape": "TStamp",
                        "locationName": "LastSuccessfulDeliveryTime",
                        "documentation": "-- | The last time when logs were delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsLoggingEnabled",
                        "name": "_lsLoggingEnabled",
                        "shape": "Boolean",
                        "locationName": "LoggingEnabled",
                        "documentation": "-- | 'true' if logging is on, 'false' if logging is off.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lsS3KeyPrefix",
                        "name": "_lsS3KeyPrefix",
                        "shape": "String",
                        "locationName": "S3KeyPrefix",
                        "documentation": "-- | The prefix applied to the log file names.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "accountWithRestoreAccess",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "awraAccountId",
                    "name": "_awraAccountId",
                    "shape": "String",
                    "locationName": "AccountId",
                    "documentation": "-- | The identifier of an AWS customer account authorized to restore a snapshot.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "AccountWithRestoreAccess",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "awraAccountId",
                        "name": "_awraAccountId",
                        "shape": "String",
                        "locationName": "AccountId",
                        "documentation": "-- | The identifier of an AWS customer account authorized to restore a snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "awraAccountId",
                        "name": "_awraAccountId",
                        "shape": "String",
                        "locationName": "AccountId",
                        "documentation": "-- | The identifier of an AWS customer account authorized to restore a snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "availabilityZone",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "azName",
                    "name": "_azName",
                    "shape": "String",
                    "locationName": "Name",
                    "documentation": "-- | The name of the availability zone.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "AvailabilityZone",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "azName",
                        "name": "_azName",
                        "shape": "String",
                        "locationName": "Name",
                        "documentation": "-- | The name of the availability zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "azName",
                        "name": "_azName",
                        "shape": "String",
                        "locationName": "Name",
                        "documentation": "-- | The name of the availability zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 27,
                "ctor": "eventSubscription",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "EventSubscription",
                "locationPad": 25,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esCustomerAwsId",
                        "name": "_esCustomerAwsId",
                        "shape": "String",
                        "locationName": "CustomerAwsId",
                        "documentation": "-- | The AWS customer account associated with the Amazon Redshift event\n-- notification subscription.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esCustSubscriptionId",
                        "name": "_esCustSubscriptionId",
                        "shape": "String",
                        "locationName": "CustSubscriptionId",
                        "documentation": "-- | The name of the Amazon Redshift event notification subscription.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esSnsTopicArn",
                        "name": "_esSnsTopicArn",
                        "shape": "String",
                        "locationName": "SnsTopicArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the Amazon SNS topic used by the event\n-- notification subscription.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esStatus",
                        "name": "_esStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | The status of the Amazon Redshift event notification subscription.\n--\n-- Constraints:\n--\n-- Can be one of the following: active | no-permission | topic-not-exist The\n-- status \"no-permission\" indicates that Amazon Redshift no longer has\n-- permission to post to the Amazon SNS topic. The status \"topic-not-exist\"\n-- indicates that the topic was deleted after the subscription was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esSubscriptionCreationTime",
                        "name": "_esSubscriptionCreationTime",
                        "shape": "TStamp",
                        "locationName": "SubscriptionCreationTime",
                        "documentation": "-- | The date and time the Amazon Redshift event notification subscription was\n-- created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esSourceType",
                        "name": "_esSourceType",
                        "shape": "String",
                        "locationName": "SourceType",
                        "documentation": "-- | The source type of the events returned the Amazon Redshift event\n-- notification, such as cluster, or cluster-snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "esSourceIdsList",
                        "name": "_esSourceIdsList",
                        "shape": "SourceIdsList",
                        "locationName": "SourceIdsList",
                        "documentation": "-- | A list of the sources that publish events to the Amazon Redshift event\n-- notification subscription.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "esEventCategoriesList",
                        "name": "_esEventCategoriesList",
                        "shape": "EventCategoriesList",
                        "locationName": "EventCategoriesList",
                        "documentation": "-- | The list of Amazon Redshift event categories specified in the event\n-- notification subscription.\n--\n-- Values: Configuration, Management, Monitoring, Security",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esSeverity",
                        "name": "_esSeverity",
                        "shape": "String",
                        "locationName": "Severity",
                        "documentation": "-- | The event severity specified in the Amazon Redshift event notification\n-- subscription.\n--\n-- Values: ERROR, INFO",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esEnabled",
                        "name": "_esEnabled",
                        "shape": "Boolean",
                        "locationName": "Enabled",
                        "documentation": "-- | A Boolean value indicating whether the subscription is enabled. 'true'\n-- indicates the subscription is enabled.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "esTags",
                        "name": "_esTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the event subscription.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esCustSubscriptionId",
                        "name": "_esCustSubscriptionId",
                        "shape": "String",
                        "locationName": "CustSubscriptionId",
                        "documentation": "-- | The name of the Amazon Redshift event notification subscription.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esCustomerAwsId",
                        "name": "_esCustomerAwsId",
                        "shape": "String",
                        "locationName": "CustomerAwsId",
                        "documentation": "-- | The AWS customer account associated with the Amazon Redshift event\n-- notification subscription.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esEnabled",
                        "name": "_esEnabled",
                        "shape": "Boolean",
                        "locationName": "Enabled",
                        "documentation": "-- | A Boolean value indicating whether the subscription is enabled. 'true'\n-- indicates the subscription is enabled.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "esEventCategoriesList",
                        "name": "_esEventCategoriesList",
                        "shape": "EventCategoriesList",
                        "locationName": "EventCategoriesList",
                        "documentation": "-- | The list of Amazon Redshift event categories specified in the event\n-- notification subscription.\n--\n-- Values: Configuration, Management, Monitoring, Security",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esSeverity",
                        "name": "_esSeverity",
                        "shape": "String",
                        "locationName": "Severity",
                        "documentation": "-- | The event severity specified in the Amazon Redshift event notification\n-- subscription.\n--\n-- Values: ERROR, INFO",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esSnsTopicArn",
                        "name": "_esSnsTopicArn",
                        "shape": "String",
                        "locationName": "SnsTopicArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the Amazon SNS topic used by the event\n-- notification subscription.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "esSourceIdsList",
                        "name": "_esSourceIdsList",
                        "shape": "SourceIdsList",
                        "locationName": "SourceIdsList",
                        "documentation": "-- | A list of the sources that publish events to the Amazon Redshift event\n-- notification subscription.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esSourceType",
                        "name": "_esSourceType",
                        "shape": "String",
                        "locationName": "SourceType",
                        "documentation": "-- | The source type of the events returned the Amazon Redshift event\n-- notification, such as cluster, or cluster-snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esStatus",
                        "name": "_esStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | The status of the Amazon Redshift event notification subscription.\n--\n-- Constraints:\n--\n-- Can be one of the following: active | no-permission | topic-not-exist The\n-- status \"no-permission\" indicates that Amazon Redshift no longer has\n-- permission to post to the Amazon SNS topic. The status \"topic-not-exist\"\n-- indicates that the topic was deleted after the subscription was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "esSubscriptionCreationTime",
                        "name": "_esSubscriptionCreationTime",
                        "shape": "TStamp",
                        "locationName": "SubscriptionCreationTime",
                        "documentation": "-- | The date and time the Amazon Redshift event notification subscription was\n-- created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "esTags",
                        "name": "_esTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the event subscription.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 33,
                "ctor": "hsmStatus",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "HsmStatus",
                "locationPad": 31,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hsHsmClientCertificateIdentifier",
                        "name": "_hsHsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | Specifies the name of the HSM client certificate the Amazon Redshift cluster\n-- uses to retrieve the data encryption keys stored in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hsHsmConfigurationIdentifier",
                        "name": "_hsHsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | Specifies the name of the HSM configuration that contains the information the\n-- Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hsStatus",
                        "name": "_hsStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | Reports whether the Amazon Redshift cluster has finished applying any HSM\n-- settings changes specified in a modify cluster command.\n--\n-- Values: active, applying",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hsHsmClientCertificateIdentifier",
                        "name": "_hsHsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | Specifies the name of the HSM client certificate the Amazon Redshift cluster\n-- uses to retrieve the data encryption keys stored in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hsHsmConfigurationIdentifier",
                        "name": "_hsHsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | Specifies the name of the HSM configuration that contains the information the\n-- Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hsStatus",
                        "name": "_hsStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | Reports whether the Amazon Redshift cluster has finished applying any HSM\n-- settings changes specified in a modify cluster command.\n--\n-- Values: active, applying",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 26,
                "ctor": "clusterParameterGroupNameMessage",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ClusterParameterGroupNameMessage",
                "locationPad": 21,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgnmParameterGroupName",
                        "name": "_cpgnmParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgnmParameterGroupStatus",
                        "name": "_cpgnmParameterGroupStatus",
                        "shape": "String",
                        "locationName": "ParameterGroupStatus",
                        "documentation": "-- | The status of the parameter group. For example, if you made a change to a\n-- parameter group name-value pair, then the change could be pending a reboot of\n-- an associated cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgnmParameterGroupName",
                        "name": "_cpgnmParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgnmParameterGroupStatus",
                        "name": "_cpgnmParameterGroupStatus",
                        "shape": "String",
                        "locationName": "ParameterGroupStatus",
                        "documentation": "-- | The status of the parameter group. For example, if you made a change to a\n-- parameter group name-value pair, then the change could be pending a reboot of\n-- an associated cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 13,
                "ctor": "elasticIpStatus",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ElasticIpStatus",
                "locationPad": 10,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eisElasticIp",
                        "name": "_eisElasticIp",
                        "shape": "String",
                        "locationName": "ElasticIp",
                        "documentation": "-- | The elastic IP (EIP) address for the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eisStatus",
                        "name": "_eisStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | Describes the status of the elastic IP (EIP) address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eisElasticIp",
                        "name": "_eisElasticIp",
                        "shape": "String",
                        "locationName": "ElasticIp",
                        "documentation": "-- | The elastic IP (EIP) address for the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eisStatus",
                        "name": "_eisStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | Describes the status of the elastic IP (EIP) address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 30,
                "ctor": "clusterVersion",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ClusterVersion",
                "locationPad": 28,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cvClusterVersion",
                        "name": "_cvClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The version number used by the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cvClusterParameterGroupFamily",
                        "name": "_cvClusterParameterGroupFamily",
                        "shape": "String",
                        "locationName": "ClusterParameterGroupFamily",
                        "documentation": "-- | The name of the cluster parameter group family for the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cvDescription",
                        "name": "_cvDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | The description of the cluster version.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cvClusterParameterGroupFamily",
                        "name": "_cvClusterParameterGroupFamily",
                        "shape": "String",
                        "locationName": "ClusterParameterGroupFamily",
                        "documentation": "-- | The name of the cluster parameter group family for the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cvClusterVersion",
                        "name": "_cvClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The version number used by the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cvDescription",
                        "name": "_cvDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | The description of the cluster version.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 27,
                "ctor": "recurringCharge",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "RecurringCharge",
                "locationPad": 25,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcRecurringChargeAmount",
                        "name": "_rcRecurringChargeAmount",
                        "shape": "Double",
                        "locationName": "RecurringChargeAmount",
                        "documentation": "-- | The amount charged per the period of time specified by the recurring charge\n-- frequency.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcRecurringChargeFrequency",
                        "name": "_rcRecurringChargeFrequency",
                        "shape": "String",
                        "locationName": "RecurringChargeFrequency",
                        "documentation": "-- | The frequency at which the recurring charge amount is applied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcRecurringChargeAmount",
                        "name": "_rcRecurringChargeAmount",
                        "shape": "Double",
                        "locationName": "RecurringChargeAmount",
                        "documentation": "-- | The amount charged per the period of time specified by the recurring charge\n-- frequency.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcRecurringChargeFrequency",
                        "name": "_rcRecurringChargeFrequency",
                        "shape": "String",
                        "locationName": "RecurringChargeFrequency",
                        "documentation": "-- | The frequency at which the recurring charge amount is applied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 9,
                "ctor": "endpoint",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Endpoint",
                "locationPad": 8,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eAddress",
                        "name": "_eAddress",
                        "shape": "String",
                        "locationName": "Address",
                        "documentation": "-- | The DNS address of the Cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ePort",
                        "name": "_ePort",
                        "shape": "Integer",
                        "locationName": "Port",
                        "documentation": "-- | The port that the database engine is listening on.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "eAddress",
                        "name": "_eAddress",
                        "shape": "String",
                        "locationName": "Address",
                        "documentation": "-- | The DNS address of the Cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ePort",
                        "name": "_ePort",
                        "shape": "Integer",
                        "locationName": "Port",
                        "documentation": "-- | The port that the database engine is listening on.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 10,
                "ctor": "iprange",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "IPRange",
                "locationPad": 7,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "iprStatus",
                        "name": "_iprStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | The status of the IP range, for example, \"authorized\".",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "iprCIDRIP",
                        "name": "_iprCIDRIP",
                        "shape": "String",
                        "locationName": "CIDRIP",
                        "documentation": "-- | The IP range in Classless Inter-Domain Routing (CIDR) notation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "iprTags",
                        "name": "_iprTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the IP range.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "iprCIDRIP",
                        "name": "_iprCIDRIP",
                        "shape": "String",
                        "locationName": "CIDRIP",
                        "documentation": "-- | The IP range in Classless Inter-Domain Routing (CIDR) notation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "iprStatus",
                        "name": "_iprStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | The status of the IP range, for example, \"authorized\".",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "iprTags",
                        "name": "_iprTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the IP range.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "taggedResource",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "TaggedResource",
                "locationPad": 13,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "trTag",
                        "name": "_trTag",
                        "shape": "Tag",
                        "locationName": "Tag",
                        "documentation": "-- | The tag for the resource.",
                        "typeExposed": "Maybe Tag",
                        "type": "Maybe Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "trResourceName",
                        "name": "_trResourceName",
                        "shape": "String",
                        "locationName": "ResourceName",
                        "documentation": "-- | The Amazon Resource Name (ARN) with which the tag is associated. For example, 'arn:aws:redshift:us-east-1:123456789:cluster:t1'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "trResourceType",
                        "name": "_trResourceType",
                        "shape": "String",
                        "locationName": "ResourceType",
                        "documentation": "-- | The type of resource with which the tag is associated. Valid resource types\n-- are:  Cluster CIDR/IP EC2 security group Snapshot Cluster security group Subnet group\n-- HSM connection HSM certificate Parameter group\n--\n-- For more information about Amazon Redshift resource types and constructing\n-- ARNs, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/constructing-redshift-arn.html Constructing an Amazon Redshift Amazon Resource Name (ARN)\u003e in the\n-- Amazon Redshift Cluster Management Guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "trResourceName",
                        "name": "_trResourceName",
                        "shape": "String",
                        "locationName": "ResourceName",
                        "documentation": "-- | The Amazon Resource Name (ARN) with which the tag is associated. For example, 'arn:aws:redshift:us-east-1:123456789:cluster:t1'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "trResourceType",
                        "name": "_trResourceType",
                        "shape": "String",
                        "locationName": "ResourceType",
                        "documentation": "-- | The type of resource with which the tag is associated. Valid resource types\n-- are:  Cluster CIDR/IP EC2 security group Snapshot Cluster security group Subnet group\n-- HSM connection HSM certificate Parameter group\n--\n-- For more information about Amazon Redshift resource types and constructing\n-- ARNs, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/constructing-redshift-arn.html Constructing an Amazon Redshift Amazon Resource Name (ARN)\u003e in the\n-- Amazon Redshift Cluster Management Guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "trTag",
                        "name": "_trTag",
                        "shape": "Tag",
                        "locationName": "Tag",
                        "documentation": "-- | The tag for the resource.",
                        "typeExposed": "Maybe Tag",
                        "type": "Maybe Tag"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 14,
                "ctor": "eventCategoriesMap",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "EventCategoriesMap",
                "locationPad": 11,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ecmSourceType",
                        "name": "_ecmSourceType",
                        "shape": "String",
                        "locationName": "SourceType",
                        "documentation": "-- | The Amazon Redshift source type, such as cluster or cluster-snapshot, that\n-- the returned categories belong to.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ecmEvents",
                        "name": "_ecmEvents",
                        "shape": "EventInfoMapList",
                        "locationName": "Events",
                        "documentation": "-- | The events in the event category.",
                        "typeExposed": "[EventInfoMap]",
                        "type": "List \"member\" EventInfoMap"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ecmEvents",
                        "name": "_ecmEvents",
                        "shape": "EventInfoMapList",
                        "locationName": "Events",
                        "documentation": "-- | The events in the event category.",
                        "typeExposed": "[EventInfoMap]",
                        "type": "List \"member\" EventInfoMap"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ecmSourceType",
                        "name": "_ecmSourceType",
                        "shape": "String",
                        "locationName": "SourceType",
                        "documentation": "-- | The Amazon Redshift source type, such as cluster or cluster-snapshot, that\n-- the returned categories belong to.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 29,
                "ctor": "hsmConfiguration",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "HsmConfiguration",
                "locationPad": 27,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hcHsmConfigurationIdentifier",
                        "name": "_hcHsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | The name of the Amazon Redshift HSM configuration.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hcDescription",
                        "name": "_hcDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A text description of the HSM configuration.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hcHsmIpAddress",
                        "name": "_hcHsmIpAddress",
                        "shape": "String",
                        "locationName": "HsmIpAddress",
                        "documentation": "-- | The IP address that the Amazon Redshift cluster must use to access the HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hcHsmPartitionName",
                        "name": "_hcHsmPartitionName",
                        "shape": "String",
                        "locationName": "HsmPartitionName",
                        "documentation": "-- | The name of the partition in the HSM where the Amazon Redshift clusters will\n-- store their database encryption keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "hcTags",
                        "name": "_hcTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the HSM configuration.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hcDescription",
                        "name": "_hcDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A text description of the HSM configuration.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hcHsmConfigurationIdentifier",
                        "name": "_hcHsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | The name of the Amazon Redshift HSM configuration.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hcHsmIpAddress",
                        "name": "_hcHsmIpAddress",
                        "shape": "String",
                        "locationName": "HsmIpAddress",
                        "documentation": "-- | The IP address that the Amazon Redshift cluster must use to access the HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "hcHsmPartitionName",
                        "name": "_hcHsmPartitionName",
                        "shape": "String",
                        "locationName": "HsmPartitionName",
                        "documentation": "-- | The name of the partition in the HSM where the Amazon Redshift clusters will\n-- store their database encryption keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "hcTags",
                        "name": "_hcTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | The list of tags for the HSM configuration.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 36,
                "ctor": "pendingModifiedValues",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PendingModifiedValues",
                "locationPad": 33,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pmvMasterUserPassword",
                        "name": "_pmvMasterUserPassword",
                        "shape": "String",
                        "locationName": "MasterUserPassword",
                        "documentation": "-- | The pending or in-progress change of the master user password for the\n-- cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pmvNodeType",
                        "name": "_pmvNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The pending or in-progress change of the cluster's node type.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pmvNumberOfNodes",
                        "name": "_pmvNumberOfNodes",
                        "shape": "IntegerOptional",
                        "locationName": "NumberOfNodes",
                        "documentation": "-- | The pending or in-progress change of the number of nodes in the cluster.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pmvClusterType",
                        "name": "_pmvClusterType",
                        "shape": "String",
                        "locationName": "ClusterType",
                        "documentation": "-- | The pending or in-progress change of the cluster type.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pmvClusterVersion",
                        "name": "_pmvClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The pending or in-progress change of the service version.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pmvAutomatedSnapshotRetentionPeriod",
                        "name": "_pmvAutomatedSnapshotRetentionPeriod",
                        "shape": "IntegerOptional",
                        "locationName": "AutomatedSnapshotRetentionPeriod",
                        "documentation": "-- | The pending or in-progress change of the automated snapshot retention\n-- period.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pmvClusterIdentifier",
                        "name": "_pmvClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The pending or in-progress change of the new identifier for the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pmvAutomatedSnapshotRetentionPeriod",
                        "name": "_pmvAutomatedSnapshotRetentionPeriod",
                        "shape": "IntegerOptional",
                        "locationName": "AutomatedSnapshotRetentionPeriod",
                        "documentation": "-- | The pending or in-progress change of the automated snapshot retention\n-- period.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pmvClusterIdentifier",
                        "name": "_pmvClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The pending or in-progress change of the new identifier for the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pmvClusterType",
                        "name": "_pmvClusterType",
                        "shape": "String",
                        "locationName": "ClusterType",
                        "documentation": "-- | The pending or in-progress change of the cluster type.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pmvClusterVersion",
                        "name": "_pmvClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The pending or in-progress change of the service version.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pmvMasterUserPassword",
                        "name": "_pmvMasterUserPassword",
                        "shape": "String",
                        "locationName": "MasterUserPassword",
                        "documentation": "-- | The pending or in-progress change of the master user password for the\n-- cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pmvNodeType",
                        "name": "_pmvNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The pending or in-progress change of the cluster's node type.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pmvNumberOfNodes",
                        "name": "_pmvNumberOfNodes",
                        "shape": "IntegerOptional",
                        "locationName": "NumberOfNodes",
                        "documentation": "-- | The pending or in-progress change of the number of nodes in the cluster.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 23,
                "ctor": "vpcSecurityGroupMembership",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VpcSecurityGroupMembership",
                "locationPad": 19,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "vsgmVpcSecurityGroupId",
                        "name": "_vsgmVpcSecurityGroupId",
                        "shape": "String",
                        "locationName": "VpcSecurityGroupId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "vsgmStatus",
                        "name": "_vsgmStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "vsgmStatus",
                        "name": "_vsgmStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "vsgmVpcSecurityGroupId",
                        "name": "_vsgmVpcSecurityGroupId",
                        "shape": "String",
                        "locationName": "VpcSecurityGroupId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 22,
                "ctor": "parameter",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Parameter",
                "locationPad": 21,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pParameterName",
                        "name": "_pParameterName",
                        "shape": "String",
                        "locationName": "ParameterName",
                        "documentation": "-- | The name of the parameter.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pParameterValue",
                        "name": "_pParameterValue",
                        "shape": "String",
                        "locationName": "ParameterValue",
                        "documentation": "-- | The value of the parameter.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pDescription",
                        "name": "_pDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description of the parameter.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pSource",
                        "name": "_pSource",
                        "shape": "String",
                        "locationName": "Source",
                        "documentation": "-- | The source of the parameter value, such as \"engine-default\" or \"user\".",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pDataType",
                        "name": "_pDataType",
                        "shape": "String",
                        "locationName": "DataType",
                        "documentation": "-- | The data type of the parameter.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pAllowedValues",
                        "name": "_pAllowedValues",
                        "shape": "String",
                        "locationName": "AllowedValues",
                        "documentation": "-- | The valid range of values for the parameter.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pIsModifiable",
                        "name": "_pIsModifiable",
                        "shape": "Boolean",
                        "locationName": "IsModifiable",
                        "documentation": "-- | If 'true', the parameter can be modified. Some parameters have security or\n-- operational implications that prevent them from being changed.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pMinimumEngineVersion",
                        "name": "_pMinimumEngineVersion",
                        "shape": "String",
                        "locationName": "MinimumEngineVersion",
                        "documentation": "-- | The earliest engine version to which the parameter can apply.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pAllowedValues",
                        "name": "_pAllowedValues",
                        "shape": "String",
                        "locationName": "AllowedValues",
                        "documentation": "-- | The valid range of values for the parameter.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pDataType",
                        "name": "_pDataType",
                        "shape": "String",
                        "locationName": "DataType",
                        "documentation": "-- | The data type of the parameter.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pDescription",
                        "name": "_pDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description of the parameter.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pIsModifiable",
                        "name": "_pIsModifiable",
                        "shape": "Boolean",
                        "locationName": "IsModifiable",
                        "documentation": "-- | If 'true', the parameter can be modified. Some parameters have security or\n-- operational implications that prevent them from being changed.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pMinimumEngineVersion",
                        "name": "_pMinimumEngineVersion",
                        "shape": "String",
                        "locationName": "MinimumEngineVersion",
                        "documentation": "-- | The earliest engine version to which the parameter can apply.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pParameterName",
                        "name": "_pParameterName",
                        "shape": "String",
                        "locationName": "ParameterName",
                        "documentation": "-- | The name of the parameter.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pParameterValue",
                        "name": "_pParameterValue",
                        "shape": "String",
                        "locationName": "ParameterValue",
                        "documentation": "-- | The value of the parameter.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "pSource",
                        "name": "_pSource",
                        "shape": "String",
                        "locationName": "Source",
                        "documentation": "-- | The source of the parameter value, such as \"engine-default\" or \"user\".",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        ],
        "imports": [],
        "shared": [
            "Snapshot",
            "ClusterParameterGroup",
            "Tag",
            "HsmClientCertificate",
            "Cluster",
            "ClusterSecurityGroup",
            "ClusterSubnetGroup",
            "ReservedNode",
            "LoggingStatus",
            "EventSubscription",
            "ClusterParameterGroupNameMessage",
            "HsmConfiguration",
            "Parameter"
        ]
    },
    "operations": [
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "authorizeClusterSecurityGroupIngressResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "acsgirClusterSecurityGroup",
                    "name": "_acsgirClusterSecurityGroup",
                    "shape": "ClusterSecurityGroup",
                    "locationName": "ClusterSecurityGroup",
                    "documentation": null,
                    "typeExposed": "Maybe ClusterSecurityGroup",
                    "type": "Maybe ClusterSecurityGroup"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AuthorizeClusterSecurityGroupIngressResponse",
                "resultWrapper": "AuthorizeClusterSecurityGroupIngressResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "acsgirClusterSecurityGroup",
                        "name": "_acsgirClusterSecurityGroup",
                        "shape": "ClusterSecurityGroup",
                        "locationName": "ClusterSecurityGroup",
                        "documentation": null,
                        "typeExposed": "Maybe ClusterSecurityGroup",
                        "type": "Maybe ClusterSecurityGroup"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "acsgirClusterSecurityGroup",
                        "name": "_acsgirClusterSecurityGroup",
                        "shape": "ClusterSecurityGroup",
                        "locationName": "ClusterSecurityGroup",
                        "documentation": null,
                        "typeExposed": "Maybe ClusterSecurityGroup",
                        "type": "Maybe ClusterSecurityGroup"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_AuthorizeClusterSecurityGroupIngress.html",
            "namespace": "Network.AWS.Redshift.AuthorizeClusterSecurityGroupIngress",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "AuthorizeClusterSecurityGroupIngress",
            "method": "post",
            "documentation": "-- | Adds an inbound (ingress) rule to an Amazon Redshift security group.\n-- Depending on whether the application accessing your cluster is running on the\n-- Internet or an EC2 instance, you can authorize inbound access to either a\n-- Classless Interdomain Routing (CIDR) IP address range or an EC2 security\n-- group. You can add as many as 20 ingress rules to an Amazon Redshift security\n-- group.\n--\n-- The EC2 security group must be defined in the AWS region where the cluster\n-- resides.  For an overview of CIDR blocks, see the Wikipedia article on \u003chttp://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing Classless Inter-Domain Routing\u003e.\n--\n-- You must also associate the security group with a cluster so that clients\n-- running on these IP addresses or the EC2 instance are authorized to connect\n-- to the cluster. For information about managing security groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html Workingwith Security Groups\u003e in the /Amazon Redshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 30,
                "ctor": "authorizeClusterSecurityGroupIngress",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "acsgiClusterSecurityGroupName",
                        "name": "_acsgiClusterSecurityGroupName",
                        "shape": "String",
                        "locationName": "ClusterSecurityGroupName",
                        "documentation": "-- | The name of the security group to which the ingress rule is added.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "AuthorizeClusterSecurityGroupIngress",
                "query": [
                    {
                        "field": "_acsgiClusterSecurityGroupName",
                        "locationName": "ClusterSecurityGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_acsgiCIDRIP",
                        "locationName": "CIDRIP",
                        "type": "field"
                    },
                    {
                        "field": "_acsgiEC2SecurityGroupName",
                        "locationName": "EC2SecurityGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_acsgiEC2SecurityGroupOwnerId",
                        "locationName": "EC2SecurityGroupOwnerId",
                        "type": "field"
                    }
                ],
                "locationPad": 25,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "acsgiCIDRIP",
                        "name": "_acsgiCIDRIP",
                        "shape": "String",
                        "locationName": "CIDRIP",
                        "documentation": "-- | The IP range to be added the Amazon Redshift security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "acsgiEC2SecurityGroupName",
                        "name": "_acsgiEC2SecurityGroupName",
                        "shape": "String",
                        "locationName": "EC2SecurityGroupName",
                        "documentation": "-- | The EC2 security group to be added the Amazon Redshift security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "acsgiEC2SecurityGroupOwnerId",
                        "name": "_acsgiEC2SecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "EC2SecurityGroupOwnerId",
                        "documentation": "-- | The AWS account number of the owner of the security group specified by the /EC2SecurityGroupName/ parameter. The AWS Access Key ID is not an acceptable value.\n--\n-- Example: '111122223333'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "acsgiCIDRIP",
                        "name": "_acsgiCIDRIP",
                        "shape": "String",
                        "locationName": "CIDRIP",
                        "documentation": "-- | The IP range to be added the Amazon Redshift security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "acsgiClusterSecurityGroupName",
                        "name": "_acsgiClusterSecurityGroupName",
                        "shape": "String",
                        "locationName": "ClusterSecurityGroupName",
                        "documentation": "-- | The name of the security group to which the ingress rule is added.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "acsgiEC2SecurityGroupName",
                        "name": "_acsgiEC2SecurityGroupName",
                        "shape": "String",
                        "locationName": "EC2SecurityGroupName",
                        "documentation": "-- | The EC2 security group to be added the Amazon Redshift security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "acsgiEC2SecurityGroupOwnerId",
                        "name": "_acsgiEC2SecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "EC2SecurityGroupOwnerId",
                        "documentation": "-- | The AWS account number of the owner of the security group specified by the /EC2SecurityGroupName/ parameter. The AWS Access Key ID is not an acceptable value.\n--\n-- Example: '111122223333'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "authorizeSnapshotAccessResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "asarSnapshot",
                    "name": "_asarSnapshot",
                    "shape": "Snapshot",
                    "locationName": "Snapshot",
                    "documentation": null,
                    "typeExposed": "Maybe Snapshot",
                    "type": "Maybe Snapshot"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AuthorizeSnapshotAccessResponse",
                "resultWrapper": "AuthorizeSnapshotAccessResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "asarSnapshot",
                        "name": "_asarSnapshot",
                        "shape": "Snapshot",
                        "locationName": "Snapshot",
                        "documentation": null,
                        "typeExposed": "Maybe Snapshot",
                        "type": "Maybe Snapshot"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "asarSnapshot",
                        "name": "_asarSnapshot",
                        "shape": "Snapshot",
                        "locationName": "Snapshot",
                        "documentation": null,
                        "typeExposed": "Maybe Snapshot",
                        "type": "Maybe Snapshot"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_AuthorizeSnapshotAccess.html",
            "namespace": "Network.AWS.Redshift.AuthorizeSnapshotAccess",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "AuthorizeSnapshotAccess",
            "method": "post",
            "documentation": "-- | Authorizes the specified AWS customer account to restore the specified\n-- snapshot.\n--\n-- For more information about working with snapshots, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html Amazon RedshiftSnapshots\u003e in the /Amazon Redshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 29,
                "ctor": "authorizeSnapshotAccess",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "asaSnapshotIdentifier",
                        "name": "_asaSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotIdentifier",
                        "documentation": "-- | The identifier of the snapshot the account is authorized to restore.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "asaAccountWithRestoreAccess",
                        "name": "_asaAccountWithRestoreAccess",
                        "shape": "String",
                        "locationName": "AccountWithRestoreAccess",
                        "documentation": "-- | The identifier of the AWS customer account authorized to restore the\n-- specified snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 26,
                "name": "AuthorizeSnapshotAccess",
                "query": [
                    {
                        "field": "_asaSnapshotIdentifier",
                        "locationName": "SnapshotIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_asaSnapshotClusterIdentifier",
                        "locationName": "SnapshotClusterIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_asaAccountWithRestoreAccess",
                        "locationName": "AccountWithRestoreAccess",
                        "type": "field"
                    }
                ],
                "locationPad": 26,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "asaSnapshotClusterIdentifier",
                        "name": "_asaSnapshotClusterIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster the snapshot was created from. This parameter\n-- is required if your IAM user has a policy containing a snapshot resource\n-- element that specifies anything other than * for the cluster name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "asaAccountWithRestoreAccess",
                        "name": "_asaAccountWithRestoreAccess",
                        "shape": "String",
                        "locationName": "AccountWithRestoreAccess",
                        "documentation": "-- | The identifier of the AWS customer account authorized to restore the\n-- specified snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "asaSnapshotClusterIdentifier",
                        "name": "_asaSnapshotClusterIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster the snapshot was created from. This parameter\n-- is required if your IAM user has a policy containing a snapshot resource\n-- element that specifies anything other than * for the cluster name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "asaSnapshotIdentifier",
                        "name": "_asaSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotIdentifier",
                        "documentation": "-- | The identifier of the snapshot the account is authorized to restore.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "copyClusterSnapshotResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "ccsrSnapshot",
                    "name": "_ccsrSnapshot",
                    "shape": "Snapshot",
                    "locationName": "Snapshot",
                    "documentation": null,
                    "typeExposed": "Maybe Snapshot",
                    "type": "Maybe Snapshot"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CopyClusterSnapshotResponse",
                "resultWrapper": "CopyClusterSnapshotResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccsrSnapshot",
                        "name": "_ccsrSnapshot",
                        "shape": "Snapshot",
                        "locationName": "Snapshot",
                        "documentation": null,
                        "typeExposed": "Maybe Snapshot",
                        "type": "Maybe Snapshot"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccsrSnapshot",
                        "name": "_ccsrSnapshot",
                        "shape": "Snapshot",
                        "locationName": "Snapshot",
                        "documentation": null,
                        "typeExposed": "Maybe Snapshot",
                        "type": "Maybe Snapshot"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_CopyClusterSnapshot.html",
            "namespace": "Network.AWS.Redshift.CopyClusterSnapshot",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "CopyClusterSnapshot",
            "method": "post",
            "documentation": "-- | Copies the specified automated cluster snapshot to a new manual cluster\n-- snapshot. The source must be an automated snapshot and it must be in the\n-- available state.\n--\n-- When you delete a cluster, Amazon Redshift deletes any automated snapshots\n-- of the cluster. Also, when the retention period of the snapshot expires,\n-- Amazon Redshift automatically deletes it. If you want to keep an automated\n-- snapshot for a longer period, you can make a manual copy of the snapshot.\n-- Manual snapshots are retained until you delete them.\n--\n-- For more information about working with snapshots, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html Amazon RedshiftSnapshots\u003e in the /Amazon Redshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 35,
                "ctor": "copyClusterSnapshot",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsSourceSnapshotIdentifier",
                        "name": "_ccsSourceSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SourceSnapshotIdentifier",
                        "documentation": "-- | The identifier for the source snapshot.\n--\n-- Constraints:\n--\n-- Must be the identifier for a valid automated snapshot whose state is 'available'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsTargetSnapshotIdentifier",
                        "name": "_ccsTargetSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "TargetSnapshotIdentifier",
                        "documentation": "-- | The identifier given to the new manual snapshot.\n--\n-- Constraints:\n--\n-- Cannot be null, empty, or blank. Must contain from 1 to 255 alphanumeric\n-- characters or hyphens. First character must be a letter. Cannot end with a\n-- hyphen or contain two consecutive hyphens. Must be unique for the AWS account\n-- that is making the request.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 32,
                "name": "CopyClusterSnapshot",
                "query": [
                    {
                        "field": "_ccsSourceSnapshotIdentifier",
                        "locationName": "SourceSnapshotIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_ccsSourceSnapshotClusterIdentifier",
                        "locationName": "SourceSnapshotClusterIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_ccsTargetSnapshotIdentifier",
                        "locationName": "TargetSnapshotIdentifier",
                        "type": "field"
                    }
                ],
                "locationPad": 32,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccsSourceSnapshotClusterIdentifier",
                        "name": "_ccsSourceSnapshotClusterIdentifier",
                        "shape": "String",
                        "locationName": "SourceSnapshotClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster the source snapshot was created from. This\n-- parameter is required if your IAM user has a policy containing a snapshot\n-- resource element that specifies anything other than * for the cluster name.\n--\n-- Constraints:\n--\n-- Must be the identifier for a valid cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccsSourceSnapshotClusterIdentifier",
                        "name": "_ccsSourceSnapshotClusterIdentifier",
                        "shape": "String",
                        "locationName": "SourceSnapshotClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster the source snapshot was created from. This\n-- parameter is required if your IAM user has a policy containing a snapshot\n-- resource element that specifies anything other than * for the cluster name.\n--\n-- Constraints:\n--\n-- Must be the identifier for a valid cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsSourceSnapshotIdentifier",
                        "name": "_ccsSourceSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SourceSnapshotIdentifier",
                        "documentation": "-- | The identifier for the source snapshot.\n--\n-- Constraints:\n--\n-- Must be the identifier for a valid automated snapshot whose state is 'available'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsTargetSnapshotIdentifier",
                        "name": "_ccsTargetSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "TargetSnapshotIdentifier",
                        "documentation": "-- | The identifier given to the new manual snapshot.\n--\n-- Constraints:\n--\n-- Cannot be null, empty, or blank. Must contain from 1 to 255 alphanumeric\n-- characters or hyphens. First character must be a letter. Cannot end with a\n-- hyphen or contain two consecutive hyphens. Must be unique for the AWS account\n-- that is making the request.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createClusterResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "ccrCluster",
                    "name": "_ccrCluster",
                    "shape": "Cluster",
                    "locationName": "Cluster",
                    "documentation": null,
                    "typeExposed": "Maybe Cluster",
                    "type": "Maybe Cluster"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateClusterResponse",
                "resultWrapper": "CreateClusterResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccrCluster",
                        "name": "_ccrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccrCluster",
                        "name": "_ccrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_CreateCluster.html",
            "namespace": "Network.AWS.Redshift.CreateCluster",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "CreateCluster",
            "method": "post",
            "documentation": "-- | Creates a new cluster. To create the cluster in virtual private cloud (VPC),\n-- you must provide cluster subnet group name. If you don't provide a cluster\n-- subnet group name or the cluster security group parameter, Amazon Redshift\n-- creates a non-VPC cluster, it associates the default cluster security group\n-- with the cluster. For more information about managing clusters, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html AmazonRedshift Clusters\u003e in the /Amazon Redshift Cluster Management Guide/ .",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 35,
                "ctor": "createCluster",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccClusterIdentifier",
                        "name": "_ccClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | A unique identifier for the cluster. You use this identifier to refer to the\n-- cluster for any subsequent cluster operations such as deleting or modifying.\n-- The identifier also appears in the Amazon Redshift console.\n--\n-- Constraints:\n--\n-- Must contain from 1 to 63 alphanumeric characters or hyphens. Alphabetic\n-- characters must be lowercase. First character must be a letter. Cannot end\n-- with a hyphen or contain two consecutive hyphens. Must be unique for all\n-- clusters within an AWS account.  Example: 'myexamplecluster'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccNodeType",
                        "name": "_ccNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The node type to be provisioned for the cluster. For information about node\n-- types, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes  Working with Clusters\u003e in the /Amazon Redshift Cluster ManagementGuide/.\n--\n-- Valid Values: 'dw1.xlarge' | 'dw1.8xlarge' | 'dw2.large' | 'dw2.8xlarge'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccMasterUsername",
                        "name": "_ccMasterUsername",
                        "shape": "String",
                        "locationName": "MasterUsername",
                        "documentation": "-- | The user name associated with the master user account for the cluster that\n-- is being created.\n--\n-- Constraints:\n--\n-- Must be 1 - 128 alphanumeric characters. First character must be a letter. Cannot be a reserved word. A list of reserved words can be found in\n-- \u003chttp://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html Reserved Words\u003e in the Amazon Redshift Database Developer Guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccMasterUserPassword",
                        "name": "_ccMasterUserPassword",
                        "shape": "String",
                        "locationName": "MasterUserPassword",
                        "documentation": "-- | The password associated with the master user account for the cluster that is\n-- being created.\n--\n-- Constraints:\n--\n-- Must be between 8 and 64 characters in length. Must contain at least one\n-- uppercase letter. Must contain at least one lowercase letter. Must contain\n-- one number. Can be any printable ASCII character (ASCII code 33 to 126)\n-- except ' (single quote), \" (double quote), \\, /, @, or space.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 33,
                "name": "CreateCluster",
                "query": [
                    {
                        "field": "_ccDBName",
                        "locationName": "DBName",
                        "type": "field"
                    },
                    {
                        "field": "_ccClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_ccClusterType",
                        "locationName": "ClusterType",
                        "type": "field"
                    },
                    {
                        "field": "_ccNodeType",
                        "locationName": "NodeType",
                        "type": "field"
                    },
                    {
                        "field": "_ccMasterUsername",
                        "locationName": "MasterUsername",
                        "type": "field"
                    },
                    {
                        "field": "_ccMasterUserPassword",
                        "locationName": "MasterUserPassword",
                        "type": "field"
                    },
                    {
                        "field": "_ccClusterSecurityGroups",
                        "locationName": "ClusterSecurityGroups",
                        "type": "field"
                    },
                    {
                        "field": "_ccVpcSecurityGroupIds",
                        "locationName": "VpcSecurityGroupIds",
                        "type": "field"
                    },
                    {
                        "field": "_ccClusterSubnetGroupName",
                        "locationName": "ClusterSubnetGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_ccAvailabilityZone",
                        "locationName": "AvailabilityZone",
                        "type": "field"
                    },
                    {
                        "field": "_ccPreferredMaintenanceWindow",
                        "locationName": "PreferredMaintenanceWindow",
                        "type": "field"
                    },
                    {
                        "field": "_ccClusterParameterGroupName",
                        "locationName": "ClusterParameterGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_ccAutomatedSnapshotRetentionPeriod",
                        "locationName": "AutomatedSnapshotRetentionPeriod",
                        "type": "field"
                    },
                    {
                        "field": "_ccPort",
                        "locationName": "Port",
                        "type": "field"
                    },
                    {
                        "field": "_ccClusterVersion",
                        "locationName": "ClusterVersion",
                        "type": "field"
                    },
                    {
                        "field": "_ccAllowVersionUpgrade",
                        "locationName": "AllowVersionUpgrade",
                        "type": "field"
                    },
                    {
                        "field": "_ccNumberOfNodes",
                        "locationName": "NumberOfNodes",
                        "type": "field"
                    },
                    {
                        "field": "_ccPubliclyAccessible",
                        "locationName": "PubliclyAccessible",
                        "type": "field"
                    },
                    {
                        "field": "_ccEncrypted",
                        "locationName": "Encrypted",
                        "type": "field"
                    },
                    {
                        "field": "_ccHsmClientCertificateIdentifier",
                        "locationName": "HsmClientCertificateIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_ccHsmConfigurationIdentifier",
                        "locationName": "HsmConfigurationIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_ccElasticIp",
                        "locationName": "ElasticIp",
                        "type": "field"
                    },
                    {
                        "field": "_ccTags",
                        "locationName": "Tags",
                        "type": "field"
                    },
                    {
                        "field": "_ccKmsKeyId",
                        "locationName": "KmsKeyId",
                        "type": "field"
                    }
                ],
                "locationPad": 33,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccDBName",
                        "name": "_ccDBName",
                        "shape": "String",
                        "locationName": "DBName",
                        "documentation": "-- | The name of the first database to be created when the cluster is created.\n--\n-- To create additional databases after the cluster is created, connect to the\n-- cluster with a SQL client and use SQL commands to create a database. For more\n-- information, go to \u003chttp://docs.aws.amazon.com/redshift/latest/dg/t_creating_database.html Create a Database\u003e in the Amazon Redshift Database\n-- Developer Guide.\n--\n-- Default: 'dev'\n--\n-- Constraints:\n--\n-- Must contain 1 to 64 alphanumeric characters. Must contain only lowercase\n-- letters. Cannot be a word that is reserved by the service. A list of reserved\n-- words can be found in \u003chttp://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html Reserved Words\u003e in the Amazon Redshift Database\n-- Developer Guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccClusterType",
                        "name": "_ccClusterType",
                        "shape": "String",
                        "locationName": "ClusterType",
                        "documentation": "-- | The type of the cluster. When cluster type is specified as   'single-node',\n-- the NumberOfNodes parameter is not required.  'multi-node', the NumberOfNodes\n-- parameter is required.\n--\n-- Valid Values: 'multi-node' | 'single-node'\n--\n-- Default: 'multi-node'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccClusterSecurityGroups",
                        "name": "_ccClusterSecurityGroups",
                        "shape": "ClusterSecurityGroupNameList",
                        "locationName": "ClusterSecurityGroups",
                        "documentation": "-- | A list of security groups to be associated with this cluster.\n--\n-- Default: The default cluster security group for Amazon Redshift.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccVpcSecurityGroupIds",
                        "name": "_ccVpcSecurityGroupIds",
                        "shape": "VpcSecurityGroupIdList",
                        "locationName": "VpcSecurityGroupIds",
                        "documentation": "-- | A list of Virtual Private Cloud (VPC) security groups to be associated with\n-- the cluster.\n--\n-- Default: The default VPC security group is associated with the cluster.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccClusterSubnetGroupName",
                        "name": "_ccClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name of a cluster subnet group to be associated with this cluster.\n--\n-- If this parameter is not provided the resulting cluster will be deployed\n-- outside virtual private cloud (VPC).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccAvailabilityZone",
                        "name": "_ccAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The EC2 Availability Zone (AZ) in which you want Amazon Redshift to\n-- provision the cluster. For example, if you have several EC2 instances running\n-- in a specific Availability Zone, then you might want the cluster to be\n-- provisioned in the same zone in order to decrease network latency.\n--\n-- Default: A random, system-chosen Availability Zone in the region that is\n-- specified by the endpoint.\n--\n-- Example: 'us-east-1d'\n--\n-- Constraint: The specified Availability Zone must be in the same region as\n-- the current endpoint.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccPreferredMaintenanceWindow",
                        "name": "_ccPreferredMaintenanceWindow",
                        "shape": "String",
                        "locationName": "PreferredMaintenanceWindow",
                        "documentation": "-- | The weekly time range (in UTC) during which automated cluster maintenance\n-- can occur.\n--\n-- Format: 'ddd:hh24:mi-ddd:hh24:mi'\n--\n-- Default: A 30-minute window selected at random from an 8-hour block of time\n-- per region, occurring on a random day of the week. For more information about\n-- the time blocks for each region, see \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows Maintenance Windows\u003e in Amazon Redshift\n-- Cluster Management Guide.\n--\n-- Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun\n--\n-- Constraints: Minimum 30-minute window.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccClusterParameterGroupName",
                        "name": "_ccClusterParameterGroupName",
                        "shape": "String",
                        "locationName": "ClusterParameterGroupName",
                        "documentation": "-- | The name of the parameter group to be associated with this cluster.\n--\n-- Default: The default Amazon Redshift cluster parameter group. For\n-- information about the default parameter group, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html Working with AmazonRedshift Parameter Groups\u003e\n--\n-- Constraints:\n--\n-- Must be 1 to 255 alphanumeric characters or hyphens. First character must\n-- be a letter. Cannot end with a hyphen or contain two consecutive hyphens.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccAutomatedSnapshotRetentionPeriod",
                        "name": "_ccAutomatedSnapshotRetentionPeriod",
                        "shape": "IntegerOptional",
                        "locationName": "AutomatedSnapshotRetentionPeriod",
                        "documentation": "-- | The number of days that automated snapshots are retained. If the value is 0,\n-- automated snapshots are disabled. Even if automated snapshots are disabled,\n-- you can still create manual snapshots when you want with 'CreateClusterSnapshot'\n-- .\n--\n-- Default: '1'\n--\n-- Constraints: Must be a value from 0 to 35.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccPort",
                        "name": "_ccPort",
                        "shape": "IntegerOptional",
                        "locationName": "Port",
                        "documentation": "-- | The port number on which the cluster accepts incoming connections.\n--\n-- The cluster is accessible only via the JDBC and ODBC connection strings.\n-- Part of the connection string requires the port on which the cluster will\n-- listen for incoming connections.\n--\n-- Default: '5439'\n--\n-- Valid Values: '1150-65535'",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccClusterVersion",
                        "name": "_ccClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The version of the Amazon Redshift engine software that you want to deploy\n-- on the cluster.\n--\n-- The version selected runs on all the nodes in the cluster.\n--\n-- Constraints: Only version 1.0 is currently available.\n--\n-- Example: '1.0'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccAllowVersionUpgrade",
                        "name": "_ccAllowVersionUpgrade",
                        "shape": "BooleanOptional",
                        "locationName": "AllowVersionUpgrade",
                        "documentation": "-- | If 'true', major version upgrades can be applied during the maintenance window\n-- to the Amazon Redshift engine that is running on the cluster.\n--\n-- When a new major version of the Amazon Redshift engine is released, you can\n-- request that the service automatically apply upgrades during the maintenance\n-- window to the Amazon Redshift engine that is running on your cluster.\n--\n-- Default: 'true'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccNumberOfNodes",
                        "name": "_ccNumberOfNodes",
                        "shape": "IntegerOptional",
                        "locationName": "NumberOfNodes",
                        "documentation": "-- | The number of compute nodes in the cluster. This parameter is required when\n-- the ClusterType parameter is specified as 'multi-node'.\n--\n-- For information about determining how many nodes you need, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes  Workingwith Clusters\u003e in the /Amazon Redshift Cluster Management Guide/.\n--\n-- If you don't specify this parameter, you get a single-node cluster. When\n-- requesting a multi-node cluster, you must specify the number of nodes that\n-- you want in the cluster.\n--\n-- Default: '1'\n--\n-- Constraints: Value must be at least 1 and no more than 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccPubliclyAccessible",
                        "name": "_ccPubliclyAccessible",
                        "shape": "BooleanOptional",
                        "locationName": "PubliclyAccessible",
                        "documentation": "-- | If 'true', the cluster can be accessed from a public network.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccEncrypted",
                        "name": "_ccEncrypted",
                        "shape": "BooleanOptional",
                        "locationName": "Encrypted",
                        "documentation": "-- | If 'true', the data in the cluster is encrypted at rest.\n--\n-- Default: false",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccHsmClientCertificateIdentifier",
                        "name": "_ccHsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | Specifies the name of the HSM client certificate the Amazon Redshift cluster\n-- uses to retrieve the data encryption keys stored in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccHsmConfigurationIdentifier",
                        "name": "_ccHsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | Specifies the name of the HSM configuration that contains the information the\n-- Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccElasticIp",
                        "name": "_ccElasticIp",
                        "shape": "String",
                        "locationName": "ElasticIp",
                        "documentation": "-- | The Elastic IP (EIP) address for the cluster.\n--\n-- Constraints: The cluster must be provisioned in EC2-VPC and\n-- publicly-accessible through an Internet gateway. For more information about\n-- provisioning clusters in EC2-VPC, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms Supported Platforms to Launch YourCluster\u003e in the Amazon Redshift Cluster Management Guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccTags",
                        "name": "_ccTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccKmsKeyId",
                        "name": "_ccKmsKeyId",
                        "shape": "String",
                        "locationName": "KmsKeyId",
                        "documentation": "-- | The AWS Key Management Service (KMS) key ID of the encryption key that you\n-- want to use to encrypt data in the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccAllowVersionUpgrade",
                        "name": "_ccAllowVersionUpgrade",
                        "shape": "BooleanOptional",
                        "locationName": "AllowVersionUpgrade",
                        "documentation": "-- | If 'true', major version upgrades can be applied during the maintenance window\n-- to the Amazon Redshift engine that is running on the cluster.\n--\n-- When a new major version of the Amazon Redshift engine is released, you can\n-- request that the service automatically apply upgrades during the maintenance\n-- window to the Amazon Redshift engine that is running on your cluster.\n--\n-- Default: 'true'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccAutomatedSnapshotRetentionPeriod",
                        "name": "_ccAutomatedSnapshotRetentionPeriod",
                        "shape": "IntegerOptional",
                        "locationName": "AutomatedSnapshotRetentionPeriod",
                        "documentation": "-- | The number of days that automated snapshots are retained. If the value is 0,\n-- automated snapshots are disabled. Even if automated snapshots are disabled,\n-- you can still create manual snapshots when you want with 'CreateClusterSnapshot'\n-- .\n--\n-- Default: '1'\n--\n-- Constraints: Must be a value from 0 to 35.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccAvailabilityZone",
                        "name": "_ccAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The EC2 Availability Zone (AZ) in which you want Amazon Redshift to\n-- provision the cluster. For example, if you have several EC2 instances running\n-- in a specific Availability Zone, then you might want the cluster to be\n-- provisioned in the same zone in order to decrease network latency.\n--\n-- Default: A random, system-chosen Availability Zone in the region that is\n-- specified by the endpoint.\n--\n-- Example: 'us-east-1d'\n--\n-- Constraint: The specified Availability Zone must be in the same region as\n-- the current endpoint.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccClusterIdentifier",
                        "name": "_ccClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | A unique identifier for the cluster. You use this identifier to refer to the\n-- cluster for any subsequent cluster operations such as deleting or modifying.\n-- The identifier also appears in the Amazon Redshift console.\n--\n-- Constraints:\n--\n-- Must contain from 1 to 63 alphanumeric characters or hyphens. Alphabetic\n-- characters must be lowercase. First character must be a letter. Cannot end\n-- with a hyphen or contain two consecutive hyphens. Must be unique for all\n-- clusters within an AWS account.  Example: 'myexamplecluster'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccClusterParameterGroupName",
                        "name": "_ccClusterParameterGroupName",
                        "shape": "String",
                        "locationName": "ClusterParameterGroupName",
                        "documentation": "-- | The name of the parameter group to be associated with this cluster.\n--\n-- Default: The default Amazon Redshift cluster parameter group. For\n-- information about the default parameter group, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html Working with AmazonRedshift Parameter Groups\u003e\n--\n-- Constraints:\n--\n-- Must be 1 to 255 alphanumeric characters or hyphens. First character must\n-- be a letter. Cannot end with a hyphen or contain two consecutive hyphens.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccClusterSecurityGroups",
                        "name": "_ccClusterSecurityGroups",
                        "shape": "ClusterSecurityGroupNameList",
                        "locationName": "ClusterSecurityGroups",
                        "documentation": "-- | A list of security groups to be associated with this cluster.\n--\n-- Default: The default cluster security group for Amazon Redshift.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccClusterSubnetGroupName",
                        "name": "_ccClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name of a cluster subnet group to be associated with this cluster.\n--\n-- If this parameter is not provided the resulting cluster will be deployed\n-- outside virtual private cloud (VPC).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccClusterType",
                        "name": "_ccClusterType",
                        "shape": "String",
                        "locationName": "ClusterType",
                        "documentation": "-- | The type of the cluster. When cluster type is specified as   'single-node',\n-- the NumberOfNodes parameter is not required.  'multi-node', the NumberOfNodes\n-- parameter is required.\n--\n-- Valid Values: 'multi-node' | 'single-node'\n--\n-- Default: 'multi-node'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccClusterVersion",
                        "name": "_ccClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The version of the Amazon Redshift engine software that you want to deploy\n-- on the cluster.\n--\n-- The version selected runs on all the nodes in the cluster.\n--\n-- Constraints: Only version 1.0 is currently available.\n--\n-- Example: '1.0'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccDBName",
                        "name": "_ccDBName",
                        "shape": "String",
                        "locationName": "DBName",
                        "documentation": "-- | The name of the first database to be created when the cluster is created.\n--\n-- To create additional databases after the cluster is created, connect to the\n-- cluster with a SQL client and use SQL commands to create a database. For more\n-- information, go to \u003chttp://docs.aws.amazon.com/redshift/latest/dg/t_creating_database.html Create a Database\u003e in the Amazon Redshift Database\n-- Developer Guide.\n--\n-- Default: 'dev'\n--\n-- Constraints:\n--\n-- Must contain 1 to 64 alphanumeric characters. Must contain only lowercase\n-- letters. Cannot be a word that is reserved by the service. A list of reserved\n-- words can be found in \u003chttp://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html Reserved Words\u003e in the Amazon Redshift Database\n-- Developer Guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccElasticIp",
                        "name": "_ccElasticIp",
                        "shape": "String",
                        "locationName": "ElasticIp",
                        "documentation": "-- | The Elastic IP (EIP) address for the cluster.\n--\n-- Constraints: The cluster must be provisioned in EC2-VPC and\n-- publicly-accessible through an Internet gateway. For more information about\n-- provisioning clusters in EC2-VPC, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms Supported Platforms to Launch YourCluster\u003e in the Amazon Redshift Cluster Management Guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccEncrypted",
                        "name": "_ccEncrypted",
                        "shape": "BooleanOptional",
                        "locationName": "Encrypted",
                        "documentation": "-- | If 'true', the data in the cluster is encrypted at rest.\n--\n-- Default: false",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccHsmClientCertificateIdentifier",
                        "name": "_ccHsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | Specifies the name of the HSM client certificate the Amazon Redshift cluster\n-- uses to retrieve the data encryption keys stored in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccHsmConfigurationIdentifier",
                        "name": "_ccHsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | Specifies the name of the HSM configuration that contains the information the\n-- Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccKmsKeyId",
                        "name": "_ccKmsKeyId",
                        "shape": "String",
                        "locationName": "KmsKeyId",
                        "documentation": "-- | The AWS Key Management Service (KMS) key ID of the encryption key that you\n-- want to use to encrypt data in the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccMasterUserPassword",
                        "name": "_ccMasterUserPassword",
                        "shape": "String",
                        "locationName": "MasterUserPassword",
                        "documentation": "-- | The password associated with the master user account for the cluster that is\n-- being created.\n--\n-- Constraints:\n--\n-- Must be between 8 and 64 characters in length. Must contain at least one\n-- uppercase letter. Must contain at least one lowercase letter. Must contain\n-- one number. Can be any printable ASCII character (ASCII code 33 to 126)\n-- except ' (single quote), \" (double quote), \\, /, @, or space.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccMasterUsername",
                        "name": "_ccMasterUsername",
                        "shape": "String",
                        "locationName": "MasterUsername",
                        "documentation": "-- | The user name associated with the master user account for the cluster that\n-- is being created.\n--\n-- Constraints:\n--\n-- Must be 1 - 128 alphanumeric characters. First character must be a letter. Cannot be a reserved word. A list of reserved words can be found in\n-- \u003chttp://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html Reserved Words\u003e in the Amazon Redshift Database Developer Guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccNodeType",
                        "name": "_ccNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The node type to be provisioned for the cluster. For information about node\n-- types, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes  Working with Clusters\u003e in the /Amazon Redshift Cluster ManagementGuide/.\n--\n-- Valid Values: 'dw1.xlarge' | 'dw1.8xlarge' | 'dw2.large' | 'dw2.8xlarge'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccNumberOfNodes",
                        "name": "_ccNumberOfNodes",
                        "shape": "IntegerOptional",
                        "locationName": "NumberOfNodes",
                        "documentation": "-- | The number of compute nodes in the cluster. This parameter is required when\n-- the ClusterType parameter is specified as 'multi-node'.\n--\n-- For information about determining how many nodes you need, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes  Workingwith Clusters\u003e in the /Amazon Redshift Cluster Management Guide/.\n--\n-- If you don't specify this parameter, you get a single-node cluster. When\n-- requesting a multi-node cluster, you must specify the number of nodes that\n-- you want in the cluster.\n--\n-- Default: '1'\n--\n-- Constraints: Value must be at least 1 and no more than 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccPort",
                        "name": "_ccPort",
                        "shape": "IntegerOptional",
                        "locationName": "Port",
                        "documentation": "-- | The port number on which the cluster accepts incoming connections.\n--\n-- The cluster is accessible only via the JDBC and ODBC connection strings.\n-- Part of the connection string requires the port on which the cluster will\n-- listen for incoming connections.\n--\n-- Default: '5439'\n--\n-- Valid Values: '1150-65535'",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccPreferredMaintenanceWindow",
                        "name": "_ccPreferredMaintenanceWindow",
                        "shape": "String",
                        "locationName": "PreferredMaintenanceWindow",
                        "documentation": "-- | The weekly time range (in UTC) during which automated cluster maintenance\n-- can occur.\n--\n-- Format: 'ddd:hh24:mi-ddd:hh24:mi'\n--\n-- Default: A 30-minute window selected at random from an 8-hour block of time\n-- per region, occurring on a random day of the week. For more information about\n-- the time blocks for each region, see \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows Maintenance Windows\u003e in Amazon Redshift\n-- Cluster Management Guide.\n--\n-- Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun\n--\n-- Constraints: Minimum 30-minute window.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccPubliclyAccessible",
                        "name": "_ccPubliclyAccessible",
                        "shape": "BooleanOptional",
                        "locationName": "PubliclyAccessible",
                        "documentation": "-- | If 'true', the cluster can be accessed from a public network.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccTags",
                        "name": "_ccTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccVpcSecurityGroupIds",
                        "name": "_ccVpcSecurityGroupIds",
                        "shape": "VpcSecurityGroupIdList",
                        "locationName": "VpcSecurityGroupIds",
                        "documentation": "-- | A list of Virtual Private Cloud (VPC) security groups to be associated with\n-- the cluster.\n--\n-- Default: The default VPC security group is associated with the cluster.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createClusterParameterGroupResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "ccpgrClusterParameterGroup",
                    "name": "_ccpgrClusterParameterGroup",
                    "shape": "ClusterParameterGroup",
                    "locationName": "ClusterParameterGroup",
                    "documentation": null,
                    "typeExposed": "Maybe ClusterParameterGroup",
                    "type": "Maybe ClusterParameterGroup"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateClusterParameterGroupResponse",
                "resultWrapper": "CreateClusterParameterGroupResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccpgrClusterParameterGroup",
                        "name": "_ccpgrClusterParameterGroup",
                        "shape": "ClusterParameterGroup",
                        "locationName": "ClusterParameterGroup",
                        "documentation": null,
                        "typeExposed": "Maybe ClusterParameterGroup",
                        "type": "Maybe ClusterParameterGroup"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccpgrClusterParameterGroup",
                        "name": "_ccpgrClusterParameterGroup",
                        "shape": "ClusterParameterGroup",
                        "locationName": "ClusterParameterGroup",
                        "documentation": null,
                        "typeExposed": "Maybe ClusterParameterGroup",
                        "type": "Maybe ClusterParameterGroup"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_CreateClusterParameterGroup.html",
            "namespace": "Network.AWS.Redshift.CreateClusterParameterGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "CreateClusterParameterGroup",
            "method": "post",
            "documentation": "-- | Creates an Amazon Redshift parameter group.\n--\n-- Creating parameter groups is independent of creating clusters. You can\n-- associate a cluster with a parameter group when you create the cluster. You\n-- can also associate an existing cluster with a parameter group after the\n-- cluster is created by using 'ModifyCluster'.\n--\n-- Parameters in the parameter group define specific behavior that applies to\n-- the databases you create on the cluster. For more information about managing\n-- parameter groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html Amazon Redshift Parameter Groups\u003e in the /AmazonRedshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "createClusterParameterGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccpgParameterGroupName",
                        "name": "_ccpgParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group.\n--\n-- Constraints:\n--\n-- Must be 1 to 255 alphanumeric characters or hyphens First character must be\n-- a letter. Cannot end with a hyphen or contain two consecutive hyphens. Must\n-- be unique withing your AWS account.  This value is stored as a lower-case\n-- string.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccpgParameterGroupFamily",
                        "name": "_ccpgParameterGroupFamily",
                        "shape": "String",
                        "locationName": "ParameterGroupFamily",
                        "documentation": "-- | The Amazon Redshift engine version to which the cluster parameter group\n-- applies. The cluster engine version determines the set of parameters.\n--\n-- To get a list of valid parameter group family names, you can call 'DescribeClusterParameterGroups'. By default, Amazon Redshift returns a list of all the parameter groups that\n-- are owned by your AWS account, including the default parameter groups for\n-- each Amazon Redshift engine version. The parameter group family names\n-- associated with the default parameter groups provide you the valid values.\n-- For example, a valid family name is \"redshift-1.0\".",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccpgDescription",
                        "name": "_ccpgDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description of the parameter group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 21,
                "name": "CreateClusterParameterGroup",
                "query": [
                    {
                        "field": "_ccpgParameterGroupName",
                        "locationName": "ParameterGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_ccpgParameterGroupFamily",
                        "locationName": "ParameterGroupFamily",
                        "type": "field"
                    },
                    {
                        "field": "_ccpgDescription",
                        "locationName": "Description",
                        "type": "field"
                    },
                    {
                        "field": "_ccpgTags",
                        "locationName": "Tags",
                        "type": "field"
                    }
                ],
                "locationPad": 21,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccpgTags",
                        "name": "_ccpgTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccpgDescription",
                        "name": "_ccpgDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description of the parameter group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccpgParameterGroupFamily",
                        "name": "_ccpgParameterGroupFamily",
                        "shape": "String",
                        "locationName": "ParameterGroupFamily",
                        "documentation": "-- | The Amazon Redshift engine version to which the cluster parameter group\n-- applies. The cluster engine version determines the set of parameters.\n--\n-- To get a list of valid parameter group family names, you can call 'DescribeClusterParameterGroups'. By default, Amazon Redshift returns a list of all the parameter groups that\n-- are owned by your AWS account, including the default parameter groups for\n-- each Amazon Redshift engine version. The parameter group family names\n-- associated with the default parameter groups provide you the valid values.\n-- For example, a valid family name is \"redshift-1.0\".",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccpgParameterGroupName",
                        "name": "_ccpgParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group.\n--\n-- Constraints:\n--\n-- Must be 1 to 255 alphanumeric characters or hyphens First character must be\n-- a letter. Cannot end with a hyphen or contain two consecutive hyphens. Must\n-- be unique withing your AWS account.  This value is stored as a lower-case\n-- string.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccpgTags",
                        "name": "_ccpgTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createClusterSecurityGroupResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "ccsgrClusterSecurityGroup",
                    "name": "_ccsgrClusterSecurityGroup",
                    "shape": "ClusterSecurityGroup",
                    "locationName": "ClusterSecurityGroup",
                    "documentation": null,
                    "typeExposed": "Maybe ClusterSecurityGroup",
                    "type": "Maybe ClusterSecurityGroup"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateClusterSecurityGroupResponse",
                "resultWrapper": "CreateClusterSecurityGroupResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccsgrClusterSecurityGroup",
                        "name": "_ccsgrClusterSecurityGroup",
                        "shape": "ClusterSecurityGroup",
                        "locationName": "ClusterSecurityGroup",
                        "documentation": null,
                        "typeExposed": "Maybe ClusterSecurityGroup",
                        "type": "Maybe ClusterSecurityGroup"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccsgrClusterSecurityGroup",
                        "name": "_ccsgrClusterSecurityGroup",
                        "shape": "ClusterSecurityGroup",
                        "locationName": "ClusterSecurityGroup",
                        "documentation": null,
                        "typeExposed": "Maybe ClusterSecurityGroup",
                        "type": "Maybe ClusterSecurityGroup"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_CreateClusterSecurityGroup.html",
            "namespace": "Network.AWS.Redshift.CreateClusterSecurityGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "CreateClusterSecurityGroup",
            "method": "post",
            "documentation": "-- | Creates a new Amazon Redshift security group. You use security groups to\n-- control access to non-VPC clusters.\n--\n-- For information about managing security groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html Amazon RedshiftCluster Security Groups\u003e in the /Amazon Redshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 30,
                "ctor": "createClusterSecurityGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsg1ClusterSecurityGroupName",
                        "name": "_ccsg1ClusterSecurityGroupName",
                        "shape": "String",
                        "locationName": "ClusterSecurityGroupName",
                        "documentation": "-- | The name for the security group. Amazon Redshift stores the value as a\n-- lowercase string.\n--\n-- Constraints:\n--\n-- Must contain no more than 255 alphanumeric characters or hyphens. Must not\n-- be \"Default\". Must be unique for all security groups that are created by your\n-- AWS account.  Example: 'examplesecuritygroup'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsg1Description",
                        "name": "_ccsg1Description",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description for the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "CreateClusterSecurityGroup",
                "query": [
                    {
                        "field": "_ccsg1ClusterSecurityGroupName",
                        "locationName": "ClusterSecurityGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_ccsg1Description",
                        "locationName": "Description",
                        "type": "field"
                    },
                    {
                        "field": "_ccsg1Tags",
                        "locationName": "Tags",
                        "type": "field"
                    }
                ],
                "locationPad": 25,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsg1Tags",
                        "name": "_ccsg1Tags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsg1ClusterSecurityGroupName",
                        "name": "_ccsg1ClusterSecurityGroupName",
                        "shape": "String",
                        "locationName": "ClusterSecurityGroupName",
                        "documentation": "-- | The name for the security group. Amazon Redshift stores the value as a\n-- lowercase string.\n--\n-- Constraints:\n--\n-- Must contain no more than 255 alphanumeric characters or hyphens. Must not\n-- be \"Default\". Must be unique for all security groups that are created by your\n-- AWS account.  Example: 'examplesecuritygroup'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsg1Description",
                        "name": "_ccsg1Description",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description for the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsg1Tags",
                        "name": "_ccsg1Tags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createClusterSnapshotResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "ccsr1Snapshot",
                    "name": "_ccsr1Snapshot",
                    "shape": "Snapshot",
                    "locationName": "Snapshot",
                    "documentation": null,
                    "typeExposed": "Maybe Snapshot",
                    "type": "Maybe Snapshot"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateClusterSnapshotResponse",
                "resultWrapper": "CreateClusterSnapshotResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccsr1Snapshot",
                        "name": "_ccsr1Snapshot",
                        "shape": "Snapshot",
                        "locationName": "Snapshot",
                        "documentation": null,
                        "typeExposed": "Maybe Snapshot",
                        "type": "Maybe Snapshot"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccsr1Snapshot",
                        "name": "_ccsr1Snapshot",
                        "shape": "Snapshot",
                        "locationName": "Snapshot",
                        "documentation": null,
                        "typeExposed": "Maybe Snapshot",
                        "type": "Maybe Snapshot"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_CreateClusterSnapshot.html",
            "namespace": "Network.AWS.Redshift.CreateClusterSnapshot",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "CreateClusterSnapshot",
            "method": "post",
            "documentation": "-- | Creates a manual snapshot of the specified cluster. The cluster must be in\n-- the 'available' state.\n--\n-- For more information about working with snapshots, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html Amazon RedshiftSnapshots\u003e in the /Amazon Redshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 22,
                "ctor": "createClusterSnapshot",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsSnapshotIdentifier",
                        "name": "_ccsSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotIdentifier",
                        "documentation": "-- | A unique identifier for the snapshot that you are requesting. This\n-- identifier must be unique for all snapshots within the AWS account.\n--\n-- Constraints:\n--\n-- Cannot be null, empty, or blank Must contain from 1 to 255 alphanumeric\n-- characters or hyphens First character must be a letter Cannot end with a\n-- hyphen or contain two consecutive hyphens  Example: 'my-snapshot-id'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsClusterIdentifier",
                        "name": "_ccsClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The cluster identifier for which you want a snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "CreateClusterSnapshot",
                "query": [
                    {
                        "field": "_ccsSnapshotIdentifier",
                        "locationName": "SnapshotIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_ccsClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_ccsTags",
                        "locationName": "Tags",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsTags",
                        "name": "_ccsTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsClusterIdentifier",
                        "name": "_ccsClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The cluster identifier for which you want a snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsSnapshotIdentifier",
                        "name": "_ccsSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotIdentifier",
                        "documentation": "-- | A unique identifier for the snapshot that you are requesting. This\n-- identifier must be unique for all snapshots within the AWS account.\n--\n-- Constraints:\n--\n-- Cannot be null, empty, or blank Must contain from 1 to 255 alphanumeric\n-- characters or hyphens First character must be a letter Cannot end with a\n-- hyphen or contain two consecutive hyphens  Example: 'my-snapshot-id'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsTags",
                        "name": "_ccsTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createClusterSubnetGroupResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "ccsgrClusterSubnetGroup",
                    "name": "_ccsgrClusterSubnetGroup",
                    "shape": "ClusterSubnetGroup",
                    "locationName": "ClusterSubnetGroup",
                    "documentation": null,
                    "typeExposed": "Maybe ClusterSubnetGroup",
                    "type": "Maybe ClusterSubnetGroup"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateClusterSubnetGroupResponse",
                "resultWrapper": "CreateClusterSubnetGroupResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccsgrClusterSubnetGroup",
                        "name": "_ccsgrClusterSubnetGroup",
                        "shape": "ClusterSubnetGroup",
                        "locationName": "ClusterSubnetGroup",
                        "documentation": null,
                        "typeExposed": "Maybe ClusterSubnetGroup",
                        "type": "Maybe ClusterSubnetGroup"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ccsgrClusterSubnetGroup",
                        "name": "_ccsgrClusterSubnetGroup",
                        "shape": "ClusterSubnetGroup",
                        "locationName": "ClusterSubnetGroup",
                        "documentation": null,
                        "typeExposed": "Maybe ClusterSubnetGroup",
                        "type": "Maybe ClusterSubnetGroup"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_CreateClusterSubnetGroup.html",
            "namespace": "Network.AWS.Redshift.CreateClusterSubnetGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "CreateClusterSubnetGroup",
            "method": "post",
            "documentation": "-- | Creates a new Amazon Redshift subnet group. You must provide a list of one\n-- or more subnets in your existing Amazon Virtual Private Cloud (Amazon VPC)\n-- when creating Amazon Redshift subnet group.\n--\n-- For information about subnet groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-cluster-subnet-groups.html Amazon Redshift Cluster SubnetGroups\u003e in the /Amazon Redshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "createClusterSubnetGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsgClusterSubnetGroupName",
                        "name": "_ccsgClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name for the subnet group. Amazon Redshift stores the value as a\n-- lowercase string.\n--\n-- Constraints:\n--\n-- Must contain no more than 255 alphanumeric characters or hyphens. Must not\n-- be \"Default\". Must be unique for all subnet groups that are created by your\n-- AWS account.  Example: 'examplesubnetgroup'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsgDescription",
                        "name": "_ccsgDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description for the subnet group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "CreateClusterSubnetGroup",
                "query": [
                    {
                        "field": "_ccsgClusterSubnetGroupName",
                        "locationName": "ClusterSubnetGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_ccsgDescription",
                        "locationName": "Description",
                        "type": "field"
                    },
                    {
                        "field": "_ccsgSubnetIds",
                        "locationName": "SubnetIds",
                        "type": "field"
                    },
                    {
                        "field": "_ccsgTags",
                        "locationName": "Tags",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsgSubnetIds",
                        "name": "_ccsgSubnetIds",
                        "shape": "SubnetIdentifierList",
                        "locationName": "SubnetIds",
                        "documentation": "-- | An array of VPC subnet IDs. A maximum of 20 subnets can be modified in a\n-- single request.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsgTags",
                        "name": "_ccsgTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsgClusterSubnetGroupName",
                        "name": "_ccsgClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name for the subnet group. Amazon Redshift stores the value as a\n-- lowercase string.\n--\n-- Constraints:\n--\n-- Must contain no more than 255 alphanumeric characters or hyphens. Must not\n-- be \"Default\". Must be unique for all subnet groups that are created by your\n-- AWS account.  Example: 'examplesubnetgroup'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsgDescription",
                        "name": "_ccsgDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description for the subnet group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsgSubnetIds",
                        "name": "_ccsgSubnetIds",
                        "shape": "SubnetIdentifierList",
                        "locationName": "SubnetIds",
                        "documentation": "-- | An array of VPC subnet IDs. A maximum of 20 subnets can be modified in a\n-- single request.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ccsgTags",
                        "name": "_ccsgTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createEventSubscriptionResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "cesrEventSubscription",
                    "name": "_cesrEventSubscription",
                    "shape": "EventSubscription",
                    "locationName": "EventSubscription",
                    "documentation": null,
                    "typeExposed": "Maybe EventSubscription",
                    "type": "Maybe EventSubscription"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateEventSubscriptionResponse",
                "resultWrapper": "CreateEventSubscriptionResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cesrEventSubscription",
                        "name": "_cesrEventSubscription",
                        "shape": "EventSubscription",
                        "locationName": "EventSubscription",
                        "documentation": null,
                        "typeExposed": "Maybe EventSubscription",
                        "type": "Maybe EventSubscription"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cesrEventSubscription",
                        "name": "_cesrEventSubscription",
                        "shape": "EventSubscription",
                        "locationName": "EventSubscription",
                        "documentation": null,
                        "typeExposed": "Maybe EventSubscription",
                        "type": "Maybe EventSubscription"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_CreateEventSubscription.html",
            "namespace": "Network.AWS.Redshift.CreateEventSubscription",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "CreateEventSubscription",
            "method": "post",
            "documentation": "-- | Creates an Amazon Redshift event notification subscription. This action\n-- requires an ARN (Amazon Resource Name) of an Amazon SNS topic created by\n-- either the Amazon Redshift console, the Amazon SNS console, or the Amazon SNS\n-- API. To obtain an ARN with Amazon SNS, you must create a topic in Amazon SNS\n-- and subscribe to the topic. The ARN is displayed in the SNS console.\n--\n-- You can specify the source type, and lists of Amazon Redshift source IDs,\n-- event categories, and event severities. Notifications will be sent for all\n-- events you want that match those criteria. For example, you can specify\n-- source type = cluster, source ID = my-cluster-1 and mycluster2, event\n-- categories = Availability, Backup, and severity = ERROR. The subscription\n-- will only send notifications for those ERROR events in the Availability and\n-- Backup categories for the specified clusters.\n--\n-- If you specify both the source type and source IDs, such as source type =\n-- cluster and source identifier = my-cluster-1, notifications will be sent for\n-- all the cluster events for my-cluster-1. If you specify a source type but do\n-- not specify a source identifier, you will receive notice of the events for\n-- the objects of that type in your AWS account. If you do not specify either\n-- the SourceType nor the SourceIdentifier, you will be notified of events\n-- generated from all Amazon Redshift sources belonging to your AWS account. You\n-- must specify a source type if you specify a source ID.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 20,
                "ctor": "createEventSubscription",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cesSubscriptionName",
                        "name": "_cesSubscriptionName",
                        "shape": "String",
                        "locationName": "SubscriptionName",
                        "documentation": "-- | The name of the event subscription to be created.\n--\n-- Constraints:\n--\n-- Cannot be null, empty, or blank. Must contain from 1 to 255 alphanumeric\n-- characters or hyphens. First character must be a letter. Cannot end with a\n-- hyphen or contain two consecutive hyphens.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cesSnsTopicArn",
                        "name": "_cesSnsTopicArn",
                        "shape": "String",
                        "locationName": "SnsTopicArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the Amazon SNS topic used to transmit the\n-- event notifications. The ARN is created by Amazon SNS when you create a topic\n-- and subscribe to it.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "CreateEventSubscription",
                "query": [
                    {
                        "field": "_cesSubscriptionName",
                        "locationName": "SubscriptionName",
                        "type": "field"
                    },
                    {
                        "field": "_cesSnsTopicArn",
                        "locationName": "SnsTopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_cesSourceType",
                        "locationName": "SourceType",
                        "type": "field"
                    },
                    {
                        "field": "_cesSourceIds",
                        "locationName": "SourceIds",
                        "type": "field"
                    },
                    {
                        "field": "_cesEventCategories",
                        "locationName": "EventCategories",
                        "type": "field"
                    },
                    {
                        "field": "_cesSeverity",
                        "locationName": "Severity",
                        "type": "field"
                    },
                    {
                        "field": "_cesEnabled",
                        "locationName": "Enabled",
                        "type": "field"
                    },
                    {
                        "field": "_cesTags",
                        "locationName": "Tags",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cesSourceType",
                        "name": "_cesSourceType",
                        "shape": "String",
                        "locationName": "SourceType",
                        "documentation": "-- | The type of source that will be generating the events. For example, if you\n-- want to be notified of events generated by a cluster, you would set this\n-- parameter to cluster. If this value is not specified, events are returned for\n-- all Amazon Redshift objects in your AWS account. You must specify a source\n-- type in order to specify source IDs.\n--\n-- Valid values: cluster, cluster-parameter-group, cluster-security-group, and\n-- cluster-snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cesSourceIds",
                        "name": "_cesSourceIds",
                        "shape": "SourceIdsList",
                        "locationName": "SourceIds",
                        "documentation": "-- | A list of one or more identifiers of Amazon Redshift source objects. All of\n-- the objects must be of the same type as was specified in the source type\n-- parameter. The event subscription will return only events generated by the\n-- specified objects. If not specified, then events are returned for all objects\n-- within the source type specified.\n--\n-- Example: my-cluster-1, my-cluster-2\n--\n-- Example: my-snapshot-20131010",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cesEventCategories",
                        "name": "_cesEventCategories",
                        "shape": "EventCategoriesList",
                        "locationName": "EventCategories",
                        "documentation": "-- | Specifies the Amazon Redshift event categories to be published by the event\n-- notification subscription.\n--\n-- Values: Configuration, Management, Monitoring, Security",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cesSeverity",
                        "name": "_cesSeverity",
                        "shape": "String",
                        "locationName": "Severity",
                        "documentation": "-- | Specifies the Amazon Redshift event severity to be published by the event\n-- notification subscription.\n--\n-- Values: ERROR, INFO",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cesEnabled",
                        "name": "_cesEnabled",
                        "shape": "BooleanOptional",
                        "locationName": "Enabled",
                        "documentation": "-- | A Boolean value; set to 'true' to activate the subscription, set to 'false' to\n-- create the subscription but not active it.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cesTags",
                        "name": "_cesTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cesEnabled",
                        "name": "_cesEnabled",
                        "shape": "BooleanOptional",
                        "locationName": "Enabled",
                        "documentation": "-- | A Boolean value; set to 'true' to activate the subscription, set to 'false' to\n-- create the subscription but not active it.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cesEventCategories",
                        "name": "_cesEventCategories",
                        "shape": "EventCategoriesList",
                        "locationName": "EventCategories",
                        "documentation": "-- | Specifies the Amazon Redshift event categories to be published by the event\n-- notification subscription.\n--\n-- Values: Configuration, Management, Monitoring, Security",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cesSeverity",
                        "name": "_cesSeverity",
                        "shape": "String",
                        "locationName": "Severity",
                        "documentation": "-- | Specifies the Amazon Redshift event severity to be published by the event\n-- notification subscription.\n--\n-- Values: ERROR, INFO",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cesSnsTopicArn",
                        "name": "_cesSnsTopicArn",
                        "shape": "String",
                        "locationName": "SnsTopicArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the Amazon SNS topic used to transmit the\n-- event notifications. The ARN is created by Amazon SNS when you create a topic\n-- and subscribe to it.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cesSourceIds",
                        "name": "_cesSourceIds",
                        "shape": "SourceIdsList",
                        "locationName": "SourceIds",
                        "documentation": "-- | A list of one or more identifiers of Amazon Redshift source objects. All of\n-- the objects must be of the same type as was specified in the source type\n-- parameter. The event subscription will return only events generated by the\n-- specified objects. If not specified, then events are returned for all objects\n-- within the source type specified.\n--\n-- Example: my-cluster-1, my-cluster-2\n--\n-- Example: my-snapshot-20131010",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cesSourceType",
                        "name": "_cesSourceType",
                        "shape": "String",
                        "locationName": "SourceType",
                        "documentation": "-- | The type of source that will be generating the events. For example, if you\n-- want to be notified of events generated by a cluster, you would set this\n-- parameter to cluster. If this value is not specified, events are returned for\n-- all Amazon Redshift objects in your AWS account. You must specify a source\n-- type in order to specify source IDs.\n--\n-- Valid values: cluster, cluster-parameter-group, cluster-security-group, and\n-- cluster-snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cesSubscriptionName",
                        "name": "_cesSubscriptionName",
                        "shape": "String",
                        "locationName": "SubscriptionName",
                        "documentation": "-- | The name of the event subscription to be created.\n--\n-- Constraints:\n--\n-- Cannot be null, empty, or blank. Must contain from 1 to 255 alphanumeric\n-- characters or hyphens. First character must be a letter. Cannot end with a\n-- hyphen or contain two consecutive hyphens.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cesTags",
                        "name": "_cesTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createHsmClientCertificateResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "chccrHsmClientCertificate",
                    "name": "_chccrHsmClientCertificate",
                    "shape": "HsmClientCertificate",
                    "locationName": "HsmClientCertificate",
                    "documentation": null,
                    "typeExposed": "Maybe HsmClientCertificate",
                    "type": "Maybe HsmClientCertificate"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateHsmClientCertificateResponse",
                "resultWrapper": "CreateHsmClientCertificateResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "chccrHsmClientCertificate",
                        "name": "_chccrHsmClientCertificate",
                        "shape": "HsmClientCertificate",
                        "locationName": "HsmClientCertificate",
                        "documentation": null,
                        "typeExposed": "Maybe HsmClientCertificate",
                        "type": "Maybe HsmClientCertificate"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "chccrHsmClientCertificate",
                        "name": "_chccrHsmClientCertificate",
                        "shape": "HsmClientCertificate",
                        "locationName": "HsmClientCertificate",
                        "documentation": null,
                        "typeExposed": "Maybe HsmClientCertificate",
                        "type": "Maybe HsmClientCertificate"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_CreateHsmClientCertificate.html",
            "namespace": "Network.AWS.Redshift.CreateHsmClientCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "CreateHsmClientCertificate",
            "method": "post",
            "documentation": "-- | Creates an HSM client certificate that an Amazon Redshift cluster will use to\n-- connect to the client's HSM in order to store and retrieve the keys used to\n-- encrypt the cluster databases.\n--\n-- The command returns a public key, which you must store in the HSM. In\n-- addition to creating the HSM certificate, you must create an Amazon Redshift\n-- HSM configuration that provides a cluster the information needed to store and\n-- use encryption keys in the HSM. For more information, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html Hardware SecurityModules\u003e in the Amazon Redshift Cluster Management Guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 35,
                "ctor": "createHsmClientCertificate",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chccHsmClientCertificateIdentifier",
                        "name": "_chccHsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | The identifier to be assigned to the new HSM client certificate that the\n-- cluster will use to connect to the HSM to use the database encryption keys.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 31,
                "name": "CreateHsmClientCertificate",
                "query": [
                    {
                        "field": "_chccHsmClientCertificateIdentifier",
                        "locationName": "HsmClientCertificateIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_chccTags",
                        "locationName": "Tags",
                        "type": "field"
                    }
                ],
                "locationPad": 31,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chccTags",
                        "name": "_chccTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chccHsmClientCertificateIdentifier",
                        "name": "_chccHsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | The identifier to be assigned to the new HSM client certificate that the\n-- cluster will use to connect to the HSM to use the database encryption keys.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chccTags",
                        "name": "_chccTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createHsmConfigurationResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "chcrHsmConfiguration",
                    "name": "_chcrHsmConfiguration",
                    "shape": "HsmConfiguration",
                    "locationName": "HsmConfiguration",
                    "documentation": null,
                    "typeExposed": "Maybe HsmConfiguration",
                    "type": "Maybe HsmConfiguration"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateHsmConfigurationResponse",
                "resultWrapper": "CreateHsmConfigurationResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "chcrHsmConfiguration",
                        "name": "_chcrHsmConfiguration",
                        "shape": "HsmConfiguration",
                        "locationName": "HsmConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe HsmConfiguration",
                        "type": "Maybe HsmConfiguration"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "chcrHsmConfiguration",
                        "name": "_chcrHsmConfiguration",
                        "shape": "HsmConfiguration",
                        "locationName": "HsmConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe HsmConfiguration",
                        "type": "Maybe HsmConfiguration"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_CreateHsmConfiguration.html",
            "namespace": "Network.AWS.Redshift.CreateHsmConfiguration",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "CreateHsmConfiguration",
            "method": "post",
            "documentation": "-- | Creates an HSM configuration that contains the information required by an\n-- Amazon Redshift cluster to store and use database encryption keys in a\n-- Hardware Security Module (HSM). After creating the HSM configuration, you can\n-- specify it as a parameter when creating a cluster. The cluster will then\n-- store its encryption keys in the HSM.\n--\n-- In addition to creating an HSM configuration, you must also create an HSM\n-- client certificate. For more information, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html Hardware Security Modules\u003e in\n-- the Amazon Redshift Cluster Management Guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 30,
                "ctor": "createHsmConfiguration",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chcHsmConfigurationIdentifier",
                        "name": "_chcHsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | The identifier to be assigned to the new Amazon Redshift HSM configuration.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chcDescription",
                        "name": "_chcDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A text description of the HSM configuration to be created.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chcHsmIpAddress",
                        "name": "_chcHsmIpAddress",
                        "shape": "String",
                        "locationName": "HsmIpAddress",
                        "documentation": "-- | The IP address that the Amazon Redshift cluster must use to access the HSM.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chcHsmPartitionName",
                        "name": "_chcHsmPartitionName",
                        "shape": "String",
                        "locationName": "HsmPartitionName",
                        "documentation": "-- | The name of the partition in the HSM where the Amazon Redshift clusters will\n-- store their database encryption keys.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chcHsmPartitionPassword",
                        "name": "_chcHsmPartitionPassword",
                        "shape": "String",
                        "locationName": "HsmPartitionPassword",
                        "documentation": "-- | The password required to access the HSM partition.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chcHsmServerPublicCertificate",
                        "name": "_chcHsmServerPublicCertificate",
                        "shape": "String",
                        "locationName": "HsmServerPublicCertificate",
                        "documentation": "-- | The HSMs public certificate file. When using Cloud HSM, the file name is\n-- server.pem.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 27,
                "name": "CreateHsmConfiguration",
                "query": [
                    {
                        "field": "_chcHsmConfigurationIdentifier",
                        "locationName": "HsmConfigurationIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_chcDescription",
                        "locationName": "Description",
                        "type": "field"
                    },
                    {
                        "field": "_chcHsmIpAddress",
                        "locationName": "HsmIpAddress",
                        "type": "field"
                    },
                    {
                        "field": "_chcHsmPartitionName",
                        "locationName": "HsmPartitionName",
                        "type": "field"
                    },
                    {
                        "field": "_chcHsmPartitionPassword",
                        "locationName": "HsmPartitionPassword",
                        "type": "field"
                    },
                    {
                        "field": "_chcHsmServerPublicCertificate",
                        "locationName": "HsmServerPublicCertificate",
                        "type": "field"
                    },
                    {
                        "field": "_chcTags",
                        "locationName": "Tags",
                        "type": "field"
                    }
                ],
                "locationPad": 27,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chcTags",
                        "name": "_chcTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chcDescription",
                        "name": "_chcDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A text description of the HSM configuration to be created.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chcHsmConfigurationIdentifier",
                        "name": "_chcHsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | The identifier to be assigned to the new Amazon Redshift HSM configuration.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chcHsmIpAddress",
                        "name": "_chcHsmIpAddress",
                        "shape": "String",
                        "locationName": "HsmIpAddress",
                        "documentation": "-- | The IP address that the Amazon Redshift cluster must use to access the HSM.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chcHsmPartitionName",
                        "name": "_chcHsmPartitionName",
                        "shape": "String",
                        "locationName": "HsmPartitionName",
                        "documentation": "-- | The name of the partition in the HSM where the Amazon Redshift clusters will\n-- store their database encryption keys.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chcHsmPartitionPassword",
                        "name": "_chcHsmPartitionPassword",
                        "shape": "String",
                        "locationName": "HsmPartitionPassword",
                        "documentation": "-- | The password required to access the HSM partition.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chcHsmServerPublicCertificate",
                        "name": "_chcHsmServerPublicCertificate",
                        "shape": "String",
                        "locationName": "HsmServerPublicCertificate",
                        "documentation": "-- | The HSMs public certificate file. When using Cloud HSM, the file name is\n-- server.pem.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "chcTags",
                        "name": "_chcTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tag instances.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "createTagsResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CreateTagsResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_CreateTags.html",
            "namespace": "Network.AWS.Redshift.CreateTags",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "CreateTags",
            "method": "post",
            "documentation": "-- | Adds one or more tags to a specified resource.\n--\n-- A resource can have up to 10 tags. If you try to create more than 10 tags\n-- for a resource, you will receive an error and the attempt will fail.\n--\n-- If you specify a key that already exists for the resource, the value for\n-- that key will be updated with the new value.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "createTags",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ctResourceName",
                        "name": "_ctResourceName",
                        "shape": "String",
                        "locationName": "ResourceName",
                        "documentation": "-- | The Amazon Resource Name (ARN) to which you want to add the tag or tags. For\n-- example, 'arn:aws:redshift:us-east-1:123456789:cluster:t1'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "CreateTags",
                "query": [
                    {
                        "field": "_ctResourceName",
                        "locationName": "ResourceName",
                        "type": "field"
                    },
                    {
                        "field": "_ctTags",
                        "locationName": "Tags",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ctTags",
                        "name": "_ctTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | One or more name/value pairs to add as tags to the specified resource. Each\n-- tag name is passed in with the parameter 'tag-key' and the corresponding value\n-- is passed in with the parameter 'tag-value'. The 'tag-key' and 'tag-value'\n-- parameters are separated by a colon (:). Separate multiple tags with a space.\n-- For example, '--tags \"tag-key\"=\"owner\":\"tag-value\"=\"admin\"\"tag-key\"=\"environment\":\"tag-value\"=\"test\"\"tag-key\"=\"version\":\"tag-value\"=\"1.0\"'.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ctResourceName",
                        "name": "_ctResourceName",
                        "shape": "String",
                        "locationName": "ResourceName",
                        "documentation": "-- | The Amazon Resource Name (ARN) to which you want to add the tag or tags. For\n-- example, 'arn:aws:redshift:us-east-1:123456789:cluster:t1'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ctTags",
                        "name": "_ctTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | One or more name/value pairs to add as tags to the specified resource. Each\n-- tag name is passed in with the parameter 'tag-key' and the corresponding value\n-- is passed in with the parameter 'tag-value'. The 'tag-key' and 'tag-value'\n-- parameters are separated by a colon (:). Separate multiple tags with a space.\n-- For example, '--tags \"tag-key\"=\"owner\":\"tag-value\"=\"admin\"\"tag-key\"=\"environment\":\"tag-value\"=\"test\"\"tag-key\"=\"version\":\"tag-value\"=\"1.0\"'.",
                        "typeExposed": "[Tag]",
                        "type": "List \"member\" Tag"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "deleteClusterResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "dcrCluster",
                    "name": "_dcrCluster",
                    "shape": "Cluster",
                    "locationName": "Cluster",
                    "documentation": null,
                    "typeExposed": "Maybe Cluster",
                    "type": "Maybe Cluster"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DeleteClusterResponse",
                "resultWrapper": "DeleteClusterResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcrCluster",
                        "name": "_dcrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcrCluster",
                        "name": "_dcrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DeleteCluster.html",
            "namespace": "Network.AWS.Redshift.DeleteCluster",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DeleteCluster",
            "method": "post",
            "documentation": "-- | Deletes a previously provisioned cluster. A successful response from the web\n-- service indicates that the request was received correctly. Use 'DescribeClusters' to monitor the status of the deletion. The delete operation cannot be\n-- canceled or reverted once submitted. For more information about managing\n-- clusters, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html Amazon Redshift Clusters\u003e in the /Amazon Redshift ClusterManagement Guide/ .\n--\n-- If you want to shut down the cluster and retain it for future use, set /SkipFinalClusterSnapshot/ to 'false' and specify a name for /FinalClusterSnapshotIdentifier/. You can\n-- later restore this snapshot to resume using the cluster. If a final cluster\n-- snapshot is requested, the status of the cluster will be \"final-snapshot\"\n-- while the snapshot is being taken, then it's \"deleting\" once Amazon Redshift\n-- begins deleting the cluster.\n--\n-- For more information about managing clusters, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html Amazon Redshift Clusters\u003e\n-- in the /Amazon Redshift Cluster Management Guide/ .",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 34,
                "ctor": "deleteCluster",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dc1ClusterIdentifier",
                        "name": "_dc1ClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster to be deleted.\n--\n-- Constraints:\n--\n-- Must contain lowercase characters. Must contain from 1 to 63 alphanumeric\n-- characters or hyphens. First character must be a letter. Cannot end with a\n-- hyphen or contain two consecutive hyphens.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 31,
                "name": "DeleteCluster",
                "query": [
                    {
                        "field": "_dc1ClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_dc1SkipFinalClusterSnapshot",
                        "locationName": "SkipFinalClusterSnapshot",
                        "type": "field"
                    },
                    {
                        "field": "_dc1FinalClusterSnapshotIdentifier",
                        "locationName": "FinalClusterSnapshotIdentifier",
                        "type": "field"
                    }
                ],
                "locationPad": 31,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dc1SkipFinalClusterSnapshot",
                        "name": "_dc1SkipFinalClusterSnapshot",
                        "shape": "Boolean",
                        "locationName": "SkipFinalClusterSnapshot",
                        "documentation": "-- | Determines whether a final snapshot of the cluster is created before Amazon\n-- Redshift deletes the cluster. If 'true', a final cluster snapshot is not\n-- created. If 'false', a final cluster snapshot is created before the cluster is\n-- deleted.\n--\n-- The /FinalClusterSnapshotIdentifier/ parameter must be specified if /SkipFinalClusterSnapshot/ is 'false'. Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dc1FinalClusterSnapshotIdentifier",
                        "name": "_dc1FinalClusterSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "FinalClusterSnapshotIdentifier",
                        "documentation": "-- | The identifier of the final snapshot that is to be created immediately\n-- before deleting the cluster. If this parameter is provided, /SkipFinalClusterSnapshot/ must be 'false'.\n--\n-- Constraints:\n--\n-- Must be 1 to 255 alphanumeric characters. First character must be a letter.\n-- Cannot end with a hyphen or contain two consecutive hyphens.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dc1ClusterIdentifier",
                        "name": "_dc1ClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster to be deleted.\n--\n-- Constraints:\n--\n-- Must contain lowercase characters. Must contain from 1 to 63 alphanumeric\n-- characters or hyphens. First character must be a letter. Cannot end with a\n-- hyphen or contain two consecutive hyphens.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dc1FinalClusterSnapshotIdentifier",
                        "name": "_dc1FinalClusterSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "FinalClusterSnapshotIdentifier",
                        "documentation": "-- | The identifier of the final snapshot that is to be created immediately\n-- before deleting the cluster. If this parameter is provided, /SkipFinalClusterSnapshot/ must be 'false'.\n--\n-- Constraints:\n--\n-- Must be 1 to 255 alphanumeric characters. First character must be a letter.\n-- Cannot end with a hyphen or contain two consecutive hyphens.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dc1SkipFinalClusterSnapshot",
                        "name": "_dc1SkipFinalClusterSnapshot",
                        "shape": "Boolean",
                        "locationName": "SkipFinalClusterSnapshot",
                        "documentation": "-- | Determines whether a final snapshot of the cluster is created before Amazon\n-- Redshift deletes the cluster. If 'true', a final cluster snapshot is not\n-- created. If 'false', a final cluster snapshot is created before the cluster is\n-- deleted.\n--\n-- The /FinalClusterSnapshotIdentifier/ parameter must be specified if /SkipFinalClusterSnapshot/ is 'false'. Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteClusterParameterGroupResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteClusterParameterGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DeleteClusterParameterGroup.html",
            "namespace": "Network.AWS.Redshift.DeleteClusterParameterGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DeleteClusterParameterGroup",
            "method": "post",
            "documentation": "-- | Deletes a specified Amazon Redshift parameter group. You cannot delete a\n-- parameter group if it is associated with a cluster.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteClusterParameterGroup",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dcpg1ParameterGroupName",
                    "name": "_dcpg1ParameterGroupName",
                    "shape": "String",
                    "locationName": "ParameterGroupName",
                    "documentation": "-- | The name of the parameter group to be deleted.\n--\n-- Constraints:\n--\n-- Must be the name of an existing cluster parameter group. Cannot delete a\n-- default cluster parameter group.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcpg1ParameterGroupName",
                        "name": "_dcpg1ParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the parameter group to be deleted.\n--\n-- Constraints:\n--\n-- Must be the name of an existing cluster parameter group. Cannot delete a\n-- default cluster parameter group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "DeleteClusterParameterGroup",
                "query": [
                    {
                        "field": "_dcpg1ParameterGroupName",
                        "locationName": "ParameterGroupName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcpg1ParameterGroupName",
                        "name": "_dcpg1ParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the parameter group to be deleted.\n--\n-- Constraints:\n--\n-- Must be the name of an existing cluster parameter group. Cannot delete a\n-- default cluster parameter group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteClusterSecurityGroupResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteClusterSecurityGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DeleteClusterSecurityGroup.html",
            "namespace": "Network.AWS.Redshift.DeleteClusterSecurityGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DeleteClusterSecurityGroup",
            "method": "post",
            "documentation": "-- | Deletes an Amazon Redshift security group.\n--\n-- You cannot delete a security group that is associated with any clusters. You\n-- cannot delete the default security group.  For information about managing\n-- security groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html Amazon Redshift Cluster Security Groups\u003e in the /AmazonRedshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteClusterSecurityGroup",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dcsg1ClusterSecurityGroupName",
                    "name": "_dcsg1ClusterSecurityGroupName",
                    "shape": "String",
                    "locationName": "ClusterSecurityGroupName",
                    "documentation": "-- | The name of the cluster security group to be deleted.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsg1ClusterSecurityGroupName",
                        "name": "_dcsg1ClusterSecurityGroupName",
                        "shape": "String",
                        "locationName": "ClusterSecurityGroupName",
                        "documentation": "-- | The name of the cluster security group to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "DeleteClusterSecurityGroup",
                "query": [
                    {
                        "field": "_dcsg1ClusterSecurityGroupName",
                        "locationName": "ClusterSecurityGroupName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsg1ClusterSecurityGroupName",
                        "name": "_dcsg1ClusterSecurityGroupName",
                        "shape": "String",
                        "locationName": "ClusterSecurityGroupName",
                        "documentation": "-- | The name of the cluster security group to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "deleteClusterSnapshotResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "dcsrSnapshot",
                    "name": "_dcsrSnapshot",
                    "shape": "Snapshot",
                    "locationName": "Snapshot",
                    "documentation": null,
                    "typeExposed": "Maybe Snapshot",
                    "type": "Maybe Snapshot"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DeleteClusterSnapshotResponse",
                "resultWrapper": "DeleteClusterSnapshotResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsrSnapshot",
                        "name": "_dcsrSnapshot",
                        "shape": "Snapshot",
                        "locationName": "Snapshot",
                        "documentation": null,
                        "typeExposed": "Maybe Snapshot",
                        "type": "Maybe Snapshot"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsrSnapshot",
                        "name": "_dcsrSnapshot",
                        "shape": "Snapshot",
                        "locationName": "Snapshot",
                        "documentation": null,
                        "typeExposed": "Maybe Snapshot",
                        "type": "Maybe Snapshot"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DeleteClusterSnapshot.html",
            "namespace": "Network.AWS.Redshift.DeleteClusterSnapshot",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DeleteClusterSnapshot",
            "method": "post",
            "documentation": "-- | Deletes the specified manual snapshot. The snapshot must be in the 'available'\n-- state, with no other users authorized to access the snapshot.\n--\n-- Unlike automated snapshots, manual snapshots are retained even after you\n-- delete your cluster. Amazon Redshift does not delete your manual snapshots.\n-- You must delete manual snapshot explicitly to avoid getting charged. If other\n-- accounts are authorized to access the snapshot, you must revoke all of the\n-- authorizations before you can delete the snapshot.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 29,
                "ctor": "deleteClusterSnapshot",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsSnapshotIdentifier",
                        "name": "_dcsSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotIdentifier",
                        "documentation": "-- | The unique identifier of the manual snapshot to be deleted.\n--\n-- Constraints: Must be the name of an existing snapshot that is in the 'available' state.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 26,
                "name": "DeleteClusterSnapshot",
                "query": [
                    {
                        "field": "_dcsSnapshotIdentifier",
                        "locationName": "SnapshotIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_dcsSnapshotClusterIdentifier",
                        "locationName": "SnapshotClusterIdentifier",
                        "type": "field"
                    }
                ],
                "locationPad": 26,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsSnapshotClusterIdentifier",
                        "name": "_dcsSnapshotClusterIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotClusterIdentifier",
                        "documentation": "-- | The unique identifier of the cluster the snapshot was created from. This\n-- parameter is required if your IAM user has a policy containing a snapshot\n-- resource element that specifies anything other than * for the cluster name.\n--\n-- Constraints: Must be the name of valid cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsSnapshotClusterIdentifier",
                        "name": "_dcsSnapshotClusterIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotClusterIdentifier",
                        "documentation": "-- | The unique identifier of the cluster the snapshot was created from. This\n-- parameter is required if your IAM user has a policy containing a snapshot\n-- resource element that specifies anything other than * for the cluster name.\n--\n-- Constraints: Must be the name of valid cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsSnapshotIdentifier",
                        "name": "_dcsSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotIdentifier",
                        "documentation": "-- | The unique identifier of the manual snapshot to be deleted.\n--\n-- Constraints: Must be the name of an existing snapshot that is in the 'available' state.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteClusterSubnetGroupResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteClusterSubnetGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DeleteClusterSubnetGroup.html",
            "namespace": "Network.AWS.Redshift.DeleteClusterSubnetGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DeleteClusterSubnetGroup",
            "method": "post",
            "documentation": "-- | Deletes the specified cluster subnet group.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteClusterSubnetGroup",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dcsgClusterSubnetGroupName",
                    "name": "_dcsgClusterSubnetGroupName",
                    "shape": "String",
                    "locationName": "ClusterSubnetGroupName",
                    "documentation": "-- | The name of the cluster subnet group name to be deleted.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsgClusterSubnetGroupName",
                        "name": "_dcsgClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name of the cluster subnet group name to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "DeleteClusterSubnetGroup",
                "query": [
                    {
                        "field": "_dcsgClusterSubnetGroupName",
                        "locationName": "ClusterSubnetGroupName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsgClusterSubnetGroupName",
                        "name": "_dcsgClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name of the cluster subnet group name to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteEventSubscriptionResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteEventSubscriptionResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DeleteEventSubscription.html",
            "namespace": "Network.AWS.Redshift.DeleteEventSubscription",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DeleteEventSubscription",
            "method": "post",
            "documentation": "-- | Deletes an Amazon Redshift event notification subscription.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteEventSubscription",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "desSubscriptionName",
                    "name": "_desSubscriptionName",
                    "shape": "String",
                    "locationName": "SubscriptionName",
                    "documentation": "-- | The name of the Amazon Redshift event notification subscription to be deleted.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "desSubscriptionName",
                        "name": "_desSubscriptionName",
                        "shape": "String",
                        "locationName": "SubscriptionName",
                        "documentation": "-- | The name of the Amazon Redshift event notification subscription to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "DeleteEventSubscription",
                "query": [
                    {
                        "field": "_desSubscriptionName",
                        "locationName": "SubscriptionName",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "desSubscriptionName",
                        "name": "_desSubscriptionName",
                        "shape": "String",
                        "locationName": "SubscriptionName",
                        "documentation": "-- | The name of the Amazon Redshift event notification subscription to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteHsmClientCertificateResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteHsmClientCertificateResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DeleteHsmClientCertificate.html",
            "namespace": "Network.AWS.Redshift.DeleteHsmClientCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DeleteHsmClientCertificate",
            "method": "post",
            "documentation": "-- | Deletes the specified HSM client certificate.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteHsmClientCertificate",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dhcc1HsmClientCertificateIdentifier",
                    "name": "_dhcc1HsmClientCertificateIdentifier",
                    "shape": "String",
                    "locationName": "HsmClientCertificateIdentifier",
                    "documentation": "-- | The identifier of the HSM client certificate to be deleted.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhcc1HsmClientCertificateIdentifier",
                        "name": "_dhcc1HsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | The identifier of the HSM client certificate to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 31,
                "name": "DeleteHsmClientCertificate",
                "query": [
                    {
                        "field": "_dhcc1HsmClientCertificateIdentifier",
                        "locationName": "HsmClientCertificateIdentifier",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhcc1HsmClientCertificateIdentifier",
                        "name": "_dhcc1HsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | The identifier of the HSM client certificate to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteHsmConfigurationResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteHsmConfigurationResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DeleteHsmConfiguration.html",
            "namespace": "Network.AWS.Redshift.DeleteHsmConfiguration",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DeleteHsmConfiguration",
            "method": "post",
            "documentation": "-- | Deletes the specified Amazon Redshift HSM configuration.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteHsmConfiguration",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dhcHsmConfigurationIdentifier",
                    "name": "_dhcHsmConfigurationIdentifier",
                    "shape": "String",
                    "locationName": "HsmConfigurationIdentifier",
                    "documentation": "-- | The identifier of the Amazon Redshift HSM configuration to be deleted.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhcHsmConfigurationIdentifier",
                        "name": "_dhcHsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | The identifier of the Amazon Redshift HSM configuration to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 27,
                "name": "DeleteHsmConfiguration",
                "query": [
                    {
                        "field": "_dhcHsmConfigurationIdentifier",
                        "locationName": "HsmConfigurationIdentifier",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhcHsmConfigurationIdentifier",
                        "name": "_dhcHsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | The identifier of the Amazon Redshift HSM configuration to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteTagsResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteTagsResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DeleteTags.html",
            "namespace": "Network.AWS.Redshift.DeleteTags",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DeleteTags",
            "method": "post",
            "documentation": "-- | Deletes a tag or tags from a resource. You must provide the ARN of the\n-- resource from which you want to delete the tag or tags.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 16,
                "ctor": "deleteTags",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dt1ResourceName",
                        "name": "_dt1ResourceName",
                        "shape": "String",
                        "locationName": "ResourceName",
                        "documentation": "-- | The Amazon Resource Name (ARN) from which you want to remove the tag or\n-- tags. For example, 'arn:aws:redshift:us-east-1:123456789:cluster:t1'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DeleteTags",
                "query": [
                    {
                        "field": "_dt1ResourceName",
                        "locationName": "ResourceName",
                        "type": "field"
                    },
                    {
                        "field": "_dt1TagKeys",
                        "locationName": "TagKeys",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dt1TagKeys",
                        "name": "_dt1TagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | The tag key that you want to delete.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dt1ResourceName",
                        "name": "_dt1ResourceName",
                        "shape": "String",
                        "locationName": "ResourceName",
                        "documentation": "-- | The Amazon Resource Name (ARN) from which you want to remove the tag or\n-- tags. For example, 'arn:aws:redshift:us-east-1:123456789:cluster:t1'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dt1TagKeys",
                        "name": "_dt1TagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | The tag key that you want to delete.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 21,
                "ctor": "describeClusterParameterGroupsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeClusterParameterGroupsResponse",
                "resultWrapper": "DescribeClusterParameterGroupsResult",
                "locationPad": 16,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcpgrMarker",
                        "name": "_dcpgrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcpgrParameterGroups",
                        "name": "_dcpgrParameterGroups",
                        "shape": "ParameterGroupList",
                        "locationName": "ParameterGroups",
                        "documentation": "-- | A list of 'ClusterParameterGroup' instances. Each instance describes one\n-- cluster parameter group.",
                        "typeExposed": "[ClusterParameterGroup]",
                        "type": "List \"member\" ClusterParameterGroup"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcpgrMarker",
                        "name": "_dcpgrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcpgrParameterGroups",
                        "name": "_dcpgrParameterGroups",
                        "shape": "ParameterGroupList",
                        "locationName": "ParameterGroups",
                        "documentation": "-- | A list of 'ClusterParameterGroup' instances. Each instance describes one\n-- cluster parameter group.",
                        "typeExposed": "[ClusterParameterGroup]",
                        "type": "List \"member\" ClusterParameterGroup"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeClusterParameterGroups.html",
            "namespace": "Network.AWS.Redshift.DescribeClusterParameterGroups",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "dcpgMarker",
                    "outputRequired": false,
                    "output": "dcpgrMarker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dcpgrParameterGroups"
            },
            "name": "DescribeClusterParameterGroups",
            "method": "post",
            "documentation": "-- | Returns a list of Amazon Redshift parameter groups, including parameter\n-- groups you created and the default parameter group. For each parameter group,\n-- the response includes the parameter group name, description, and parameter\n-- group family name. You can optionally specify a name to retrieve the\n-- description of a specific parameter group.\n--\n-- For more information about managing parameter groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html Amazon RedshiftParameter Groups\u003e in the /Amazon Redshift Cluster Management Guide/.\n--\n-- If you specify both tag keys and tag values in the same request, Amazon\n-- Redshift returns all parameter groups that match any combination of the\n-- specified keys and values. For example, if you have 'owner' and 'environment' for\n-- tag keys, and 'admin' and 'test' for tag values, all parameter groups that have\n-- any combination of those values are returned.\n--\n-- If both tag keys and values are omitted from the request, parameter groups\n-- are returned regardless of whether they have tag keys or values associated\n-- with them.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "describeClusterParameterGroups",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "DescribeClusterParameterGroups",
                "query": [
                    {
                        "field": "_dcpgParameterGroupName",
                        "locationName": "ParameterGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_dcpgMaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_dcpgMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_dcpgTagKeys",
                        "locationName": "TagKeys",
                        "type": "field"
                    },
                    {
                        "field": "_dcpgTagValues",
                        "locationName": "TagValues",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcpgParameterGroupName",
                        "name": "_dcpgParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of a specific parameter group for which to return details. By\n-- default, details about all parameter groups and the default parameter group\n-- are returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcpgMaxRecords",
                        "name": "_dcpgMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcpgMarker",
                        "name": "_dcpgMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeClusterParameterGroups'\n-- request exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker' field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcpgTagKeys",
                        "name": "_dcpgTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching cluster parameter\n-- groups that are associated with the specified key or keys. For example,\n-- suppose that you have parameter groups that are tagged with keys called 'owner'\n-- and 'environment'. If you specify both of these tag keys in the request, Amazon\n-- Redshift returns a response with the parameter groups that have either or\n-- both of these tag keys associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcpgTagValues",
                        "name": "_dcpgTagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching cluster\n-- parameter groups that are associated with the specified tag value or values.\n-- For example, suppose that you have parameter groups that are tagged with\n-- values called 'admin' and 'test'. If you specify both of these tag values in the\n-- request, Amazon Redshift returns a response with the parameter groups that\n-- have either or both of these tag values associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcpgMarker",
                        "name": "_dcpgMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeClusterParameterGroups'\n-- request exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker' field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcpgMaxRecords",
                        "name": "_dcpgMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcpgParameterGroupName",
                        "name": "_dcpgParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of a specific parameter group for which to return details. By\n-- default, details about all parameter groups and the default parameter group\n-- are returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcpgTagKeys",
                        "name": "_dcpgTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching cluster parameter\n-- groups that are associated with the specified key or keys. For example,\n-- suppose that you have parameter groups that are tagged with keys called 'owner'\n-- and 'environment'. If you specify both of these tag keys in the request, Amazon\n-- Redshift returns a response with the parameter groups that have either or\n-- both of these tag keys associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcpgTagValues",
                        "name": "_dcpgTagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching cluster\n-- parameter groups that are associated with the specified tag value or values.\n-- For example, suppose that you have parameter groups that are tagged with\n-- values called 'admin' and 'test'. If you specify both of these tag values in the\n-- request, Amazon Redshift returns a response with the parameter groups that\n-- have either or both of these tag values associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 15,
                "ctor": "describeClusterParametersResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeClusterParametersResponse",
                "resultWrapper": "DescribeClusterParametersResult",
                "locationPad": 11,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcprParameters",
                        "name": "_dcprParameters",
                        "shape": "ParametersList",
                        "locationName": "Parameters",
                        "documentation": "-- | A list of 'Parameter' instances. Each instance lists the parameters of one\n-- cluster parameter group.",
                        "typeExposed": "[Parameter]",
                        "type": "List \"member\" Parameter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcprMarker",
                        "name": "_dcprMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcprMarker",
                        "name": "_dcprMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcprParameters",
                        "name": "_dcprParameters",
                        "shape": "ParametersList",
                        "locationName": "Parameters",
                        "documentation": "-- | A list of 'Parameter' instances. Each instance lists the parameters of one\n-- cluster parameter group.",
                        "typeExposed": "[Parameter]",
                        "type": "List \"member\" Parameter"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeClusterParameters.html",
            "namespace": "Network.AWS.Redshift.DescribeClusterParameters",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "dcp1Marker",
                    "outputRequired": false,
                    "output": "dcprMarker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dcprParameters"
            },
            "name": "DescribeClusterParameters",
            "method": "post",
            "documentation": "-- | Returns a detailed list of parameters contained within the specified Amazon\n-- Redshift parameter group. For each parameter the response includes\n-- information such as parameter name, description, data type, value, whether\n-- the parameter value is modifiable, and so on.\n--\n-- You can specify /source/ filter to retrieve parameters of only specific type.\n-- For example, to retrieve parameters that were modified by a user action such\n-- as from 'ModifyClusterParameterGroup', you can specify /source/ equal to /user/.\n--\n-- For more information about managing parameter groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html Amazon RedshiftParameter Groups\u003e in the /Amazon Redshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "describeClusterParameters",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcp1ParameterGroupName",
                        "name": "_dcp1ParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of a cluster parameter group for which to return details.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "DescribeClusterParameters",
                "query": [
                    {
                        "field": "_dcp1ParameterGroupName",
                        "locationName": "ParameterGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_dcp1Source",
                        "locationName": "Source",
                        "type": "field"
                    },
                    {
                        "field": "_dcp1MaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_dcp1Marker",
                        "locationName": "Marker",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcp1Source",
                        "name": "_dcp1Source",
                        "shape": "String",
                        "locationName": "Source",
                        "documentation": "-- | The parameter types to return. Specify 'user' to show parameters that are\n-- different form the default. Similarly, specify 'engine-default' to show\n-- parameters that are the same as the default parameter group.\n--\n-- Default: All parameter types returned.\n--\n-- Valid Values: 'user' | 'engine-default'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcp1MaxRecords",
                        "name": "_dcp1MaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcp1Marker",
                        "name": "_dcp1Marker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeClusterParameters' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcp1Marker",
                        "name": "_dcp1Marker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeClusterParameters' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcp1MaxRecords",
                        "name": "_dcp1MaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcp1ParameterGroupName",
                        "name": "_dcp1ParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of a cluster parameter group for which to return details.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcp1Source",
                        "name": "_dcp1Source",
                        "shape": "String",
                        "locationName": "Source",
                        "documentation": "-- | The parameter types to return. Specify 'user' to show parameters that are\n-- different form the default. Similarly, specify 'engine-default' to show\n-- parameters that are the same as the default parameter group.\n--\n-- Default: All parameter types returned.\n--\n-- Valid Values: 'user' | 'engine-default'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 28,
                "ctor": "describeClusterSecurityGroupsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeClusterSecurityGroupsResponse",
                "resultWrapper": "DescribeClusterSecurityGroupsResult",
                "locationPad": 22,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsgr1Marker",
                        "name": "_dcsgr1Marker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsgr1ClusterSecurityGroups",
                        "name": "_dcsgr1ClusterSecurityGroups",
                        "shape": "ClusterSecurityGroups",
                        "locationName": "ClusterSecurityGroups",
                        "documentation": "-- | A list of 'ClusterSecurityGroup' instances.",
                        "typeExposed": "[ClusterSecurityGroup]",
                        "type": "List \"member\" ClusterSecurityGroup"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsgr1ClusterSecurityGroups",
                        "name": "_dcsgr1ClusterSecurityGroups",
                        "shape": "ClusterSecurityGroups",
                        "locationName": "ClusterSecurityGroups",
                        "documentation": "-- | A list of 'ClusterSecurityGroup' instances.",
                        "typeExposed": "[ClusterSecurityGroup]",
                        "type": "List \"member\" ClusterSecurityGroup"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsgr1Marker",
                        "name": "_dcsgr1Marker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeClusterSecurityGroups.html",
            "namespace": "Network.AWS.Redshift.DescribeClusterSecurityGroups",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "dcsgMarker",
                    "outputRequired": false,
                    "output": "dcsgr1Marker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dcsgr1ClusterSecurityGroups"
            },
            "name": "DescribeClusterSecurityGroups",
            "method": "post",
            "documentation": "-- | Returns information about Amazon Redshift security groups. If the name of a\n-- security group is specified, the response will contain only information about\n-- only that security group.\n--\n-- For information about managing security groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html Amazon RedshiftCluster Security Groups\u003e in the /Amazon Redshift Cluster Management Guide/.\n--\n-- If you specify both tag keys and tag values in the same request, Amazon\n-- Redshift returns all security groups that match any combination of the\n-- specified keys and values. For example, if you have 'owner' and 'environment' for\n-- tag keys, and 'admin' and 'test' for tag values, all security groups that have\n-- any combination of those values are returned.\n--\n-- If both tag keys and values are omitted from the request, security groups\n-- are returned regardless of whether they have tag keys or values associated\n-- with them.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 29,
                "ctor": "describeClusterSecurityGroups",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "DescribeClusterSecurityGroups",
                "query": [
                    {
                        "field": "_dcsgClusterSecurityGroupName",
                        "locationName": "ClusterSecurityGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_dcsgMaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_dcsgMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_dcsgTagKeys",
                        "locationName": "TagKeys",
                        "type": "field"
                    },
                    {
                        "field": "_dcsgTagValues",
                        "locationName": "TagValues",
                        "type": "field"
                    }
                ],
                "locationPad": 25,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsgClusterSecurityGroupName",
                        "name": "_dcsgClusterSecurityGroupName",
                        "shape": "String",
                        "locationName": "ClusterSecurityGroupName",
                        "documentation": "-- | The name of a cluster security group for which you are requesting details.\n-- You can specify either the Marker parameter or a ClusterSecurityGroupName\n-- parameter, but not both.\n--\n-- Example: 'securitygroup1'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsgMaxRecords",
                        "name": "_dcsgMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsgMarker",
                        "name": "_dcsgMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeClusterSecurityGroups' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.\n--\n-- Constraints: You can specify either the ClusterSecurityGroupName parameter\n-- or the Marker parameter, but not both.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsgTagKeys",
                        "name": "_dcsgTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching cluster security\n-- groups that are associated with the specified key or keys. For example,\n-- suppose that you have security groups that are tagged with keys called 'owner'\n-- and 'environment'. If you specify both of these tag keys in the request, Amazon\n-- Redshift returns a response with the security groups that have either or both\n-- of these tag keys associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsgTagValues",
                        "name": "_dcsgTagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching cluster\n-- security groups that are associated with the specified tag value or values.\n-- For example, suppose that you have security groups that are tagged with\n-- values called 'admin' and 'test'. If you specify both of these tag values in the\n-- request, Amazon Redshift returns a response with the security groups that\n-- have either or both of these tag values associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsgClusterSecurityGroupName",
                        "name": "_dcsgClusterSecurityGroupName",
                        "shape": "String",
                        "locationName": "ClusterSecurityGroupName",
                        "documentation": "-- | The name of a cluster security group for which you are requesting details.\n-- You can specify either the Marker parameter or a ClusterSecurityGroupName\n-- parameter, but not both.\n--\n-- Example: 'securitygroup1'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsgMarker",
                        "name": "_dcsgMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeClusterSecurityGroups' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.\n--\n-- Constraints: You can specify either the ClusterSecurityGroupName parameter\n-- or the Marker parameter, but not both.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsgMaxRecords",
                        "name": "_dcsgMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsgTagKeys",
                        "name": "_dcsgTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching cluster security\n-- groups that are associated with the specified key or keys. For example,\n-- suppose that you have security groups that are tagged with keys called 'owner'\n-- and 'environment'. If you specify both of these tag keys in the request, Amazon\n-- Redshift returns a response with the security groups that have either or both\n-- of these tag keys associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsgTagValues",
                        "name": "_dcsgTagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching cluster\n-- security groups that are associated with the specified tag value or values.\n-- For example, suppose that you have security groups that are tagged with\n-- values called 'admin' and 'test'. If you specify both of these tag values in the\n-- request, Amazon Redshift returns a response with the security groups that\n-- have either or both of these tag values associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 14,
                "ctor": "describeClusterSnapshotsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeClusterSnapshotsResponse",
                "resultWrapper": "DescribeClusterSnapshotsResult",
                "locationPad": 10,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsrMarker",
                        "name": "_dcsrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsrSnapshots",
                        "name": "_dcsrSnapshots",
                        "shape": "SnapshotList",
                        "locationName": "Snapshots",
                        "documentation": "-- | A list of 'Snapshot' instances.",
                        "typeExposed": "[Snapshot]",
                        "type": "List \"member\" Snapshot"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsrMarker",
                        "name": "_dcsrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsrSnapshots",
                        "name": "_dcsrSnapshots",
                        "shape": "SnapshotList",
                        "locationName": "Snapshots",
                        "documentation": "-- | A list of 'Snapshot' instances.",
                        "typeExposed": "[Snapshot]",
                        "type": "List \"member\" Snapshot"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeClusterSnapshots.html",
            "namespace": "Network.AWS.Redshift.DescribeClusterSnapshots",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "dcs1Marker",
                    "outputRequired": false,
                    "output": "dcsrMarker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dcsrSnapshots"
            },
            "name": "DescribeClusterSnapshots",
            "method": "post",
            "documentation": "-- | Returns one or more snapshot objects, which contain metadata about your\n-- cluster snapshots. By default, this operation returns information about all\n-- snapshots of all clusters that are owned by you AWS customer account. No\n-- information is returned for snapshots owned by inactive AWS customer\n-- accounts.\n--\n-- If you specify both tag keys and tag values in the same request, Amazon\n-- Redshift returns all snapshots that match any combination of the specified\n-- keys and values. For example, if you have 'owner' and 'environment' for tag keys,\n-- and 'admin' and 'test' for tag values, all snapshots that have any combination of\n-- those values are returned. Only snapshots that you own are returned in the\n-- response; shared snapshots are not returned with the tag key and tag value\n-- request parameters.\n--\n-- If both tag keys and values are omitted from the request, snapshots are\n-- returned regardless of whether they have tag keys or values associated with\n-- them.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "describeClusterSnapshots",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "DescribeClusterSnapshots",
                "query": [
                    {
                        "field": "_dcs1ClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_dcs1SnapshotIdentifier",
                        "locationName": "SnapshotIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_dcs1SnapshotType",
                        "locationName": "SnapshotType",
                        "type": "field"
                    },
                    {
                        "field": "_dcs1StartTime",
                        "locationName": "StartTime",
                        "type": "field"
                    },
                    {
                        "field": "_dcs1EndTime",
                        "locationName": "EndTime",
                        "type": "field"
                    },
                    {
                        "field": "_dcs1MaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_dcs1Marker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_dcs1OwnerAccount",
                        "locationName": "OwnerAccount",
                        "type": "field"
                    },
                    {
                        "field": "_dcs1TagKeys",
                        "locationName": "TagKeys",
                        "type": "field"
                    },
                    {
                        "field": "_dcs1TagValues",
                        "locationName": "TagValues",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1ClusterIdentifier",
                        "name": "_dcs1ClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster for which information about snapshots is\n-- requested.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1SnapshotIdentifier",
                        "name": "_dcs1SnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotIdentifier",
                        "documentation": "-- | The snapshot identifier of the snapshot about which to return information.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1SnapshotType",
                        "name": "_dcs1SnapshotType",
                        "shape": "String",
                        "locationName": "SnapshotType",
                        "documentation": "-- | The type of snapshots for which you are requesting information. By default,\n-- snapshots of all types are returned.\n--\n-- Valid Values: 'automated' | 'manual'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1StartTime",
                        "name": "_dcs1StartTime",
                        "shape": "TStamp",
                        "locationName": "StartTime",
                        "documentation": "-- | A value that requests only snapshots created at or after the specified time.\n-- The time value is specified in ISO 8601 format. For more information about\n-- ISO 8601, go to the \u003chttp://en.wikipedia.org/wiki/ISO_8601 ISO8601 Wikipedia page.\u003e\n--\n-- Example: '2012-07-16T18:00:00Z'",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1EndTime",
                        "name": "_dcs1EndTime",
                        "shape": "TStamp",
                        "locationName": "EndTime",
                        "documentation": "-- | A time value that requests only snapshots created at or before the specified\n-- time. The time value is specified in ISO 8601 format. For more information\n-- about ISO 8601, go to the \u003chttp://en.wikipedia.org/wiki/ISO_8601 ISO8601 Wikipedia page.\u003e\n--\n-- Example: '2012-07-16T18:00:00Z'",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1MaxRecords",
                        "name": "_dcs1MaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1Marker",
                        "name": "_dcs1Marker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeClusterSnapshots' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1OwnerAccount",
                        "name": "_dcs1OwnerAccount",
                        "shape": "String",
                        "locationName": "OwnerAccount",
                        "documentation": "-- | The AWS customer account used to create or copy the snapshot. Use this field\n-- to filter the results to snapshots owned by a particular account. To describe\n-- snapshots you own, either specify your AWS customer account, or do not\n-- specify the parameter.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcs1TagKeys",
                        "name": "_dcs1TagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching cluster snapshots\n-- that are associated with the specified key or keys. For example, suppose that\n-- you have snapshots that are tagged with keys called 'owner' and 'environment'. If\n-- you specify both of these tag keys in the request, Amazon Redshift returns a\n-- response with the snapshots that have either or both of these tag keys\n-- associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcs1TagValues",
                        "name": "_dcs1TagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching cluster\n-- snapshots that are associated with the specified tag value or values. For\n-- example, suppose that you have snapshots that are tagged with values called 'admin' and 'test'. If you specify both of these tag values in the request, Amazon\n-- Redshift returns a response with the snapshots that have either or both of\n-- these tag values associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1ClusterIdentifier",
                        "name": "_dcs1ClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster for which information about snapshots is\n-- requested.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1EndTime",
                        "name": "_dcs1EndTime",
                        "shape": "TStamp",
                        "locationName": "EndTime",
                        "documentation": "-- | A time value that requests only snapshots created at or before the specified\n-- time. The time value is specified in ISO 8601 format. For more information\n-- about ISO 8601, go to the \u003chttp://en.wikipedia.org/wiki/ISO_8601 ISO8601 Wikipedia page.\u003e\n--\n-- Example: '2012-07-16T18:00:00Z'",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1Marker",
                        "name": "_dcs1Marker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeClusterSnapshots' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1MaxRecords",
                        "name": "_dcs1MaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1OwnerAccount",
                        "name": "_dcs1OwnerAccount",
                        "shape": "String",
                        "locationName": "OwnerAccount",
                        "documentation": "-- | The AWS customer account used to create or copy the snapshot. Use this field\n-- to filter the results to snapshots owned by a particular account. To describe\n-- snapshots you own, either specify your AWS customer account, or do not\n-- specify the parameter.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1SnapshotIdentifier",
                        "name": "_dcs1SnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotIdentifier",
                        "documentation": "-- | The snapshot identifier of the snapshot about which to return information.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1SnapshotType",
                        "name": "_dcs1SnapshotType",
                        "shape": "String",
                        "locationName": "SnapshotType",
                        "documentation": "-- | The type of snapshots for which you are requesting information. By default,\n-- snapshots of all types are returned.\n--\n-- Valid Values: 'automated' | 'manual'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcs1StartTime",
                        "name": "_dcs1StartTime",
                        "shape": "TStamp",
                        "locationName": "StartTime",
                        "documentation": "-- | A value that requests only snapshots created at or after the specified time.\n-- The time value is specified in ISO 8601 format. For more information about\n-- ISO 8601, go to the \u003chttp://en.wikipedia.org/wiki/ISO_8601 ISO8601 Wikipedia page.\u003e\n--\n-- Example: '2012-07-16T18:00:00Z'",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcs1TagKeys",
                        "name": "_dcs1TagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching cluster snapshots\n-- that are associated with the specified key or keys. For example, suppose that\n-- you have snapshots that are tagged with keys called 'owner' and 'environment'. If\n-- you specify both of these tag keys in the request, Amazon Redshift returns a\n-- response with the snapshots that have either or both of these tag keys\n-- associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcs1TagValues",
                        "name": "_dcs1TagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching cluster\n-- snapshots that are associated with the specified tag value or values. For\n-- example, suppose that you have snapshots that are tagged with values called 'admin' and 'test'. If you specify both of these tag values in the request, Amazon\n-- Redshift returns a response with the snapshots that have either or both of\n-- these tag values associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 25,
                "ctor": "describeClusterSubnetGroupsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeClusterSubnetGroupsResponse",
                "resultWrapper": "DescribeClusterSubnetGroupsResult",
                "locationPad": 20,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsgrMarker",
                        "name": "_dcsgrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsgrClusterSubnetGroups",
                        "name": "_dcsgrClusterSubnetGroups",
                        "shape": "ClusterSubnetGroups",
                        "locationName": "ClusterSubnetGroups",
                        "documentation": "-- | A list of 'ClusterSubnetGroup' instances.",
                        "typeExposed": "[ClusterSubnetGroup]",
                        "type": "List \"member\" ClusterSubnetGroup"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsgrClusterSubnetGroups",
                        "name": "_dcsgrClusterSubnetGroups",
                        "shape": "ClusterSubnetGroups",
                        "locationName": "ClusterSubnetGroups",
                        "documentation": "-- | A list of 'ClusterSubnetGroup' instances.",
                        "typeExposed": "[ClusterSubnetGroup]",
                        "type": "List \"member\" ClusterSubnetGroup"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsgrMarker",
                        "name": "_dcsgrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeClusterSubnetGroups.html",
            "namespace": "Network.AWS.Redshift.DescribeClusterSubnetGroups",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "dcsg1Marker",
                    "outputRequired": false,
                    "output": "dcsgrMarker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dcsgrClusterSubnetGroups"
            },
            "name": "DescribeClusterSubnetGroups",
            "method": "post",
            "documentation": "-- | Returns one or more cluster subnet group objects, which contain metadata\n-- about your cluster subnet groups. By default, this operation returns\n-- information about all cluster subnet groups that are defined in you AWS\n-- account.\n--\n-- If you specify both tag keys and tag values in the same request, Amazon\n-- Redshift returns all subnet groups that match any combination of the\n-- specified keys and values. For example, if you have 'owner' and 'environment' for\n-- tag keys, and 'admin' and 'test' for tag values, all subnet groups that have any\n-- combination of those values are returned.\n--\n-- If both tag keys and values are omitted from the request, subnet groups are\n-- returned regardless of whether they have tag keys or values associated with\n-- them.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 28,
                "ctor": "describeClusterSubnetGroups",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "DescribeClusterSubnetGroups",
                "query": [
                    {
                        "field": "_dcsg1ClusterSubnetGroupName",
                        "locationName": "ClusterSubnetGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_dcsg1MaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_dcsg1Marker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_dcsg1TagKeys",
                        "locationName": "TagKeys",
                        "type": "field"
                    },
                    {
                        "field": "_dcsg1TagValues",
                        "locationName": "TagValues",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsg1ClusterSubnetGroupName",
                        "name": "_dcsg1ClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name of the cluster subnet group for which information is requested.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsg1MaxRecords",
                        "name": "_dcsg1MaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsg1Marker",
                        "name": "_dcsg1Marker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeClusterSubnetGroups' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsg1TagKeys",
                        "name": "_dcsg1TagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching cluster subnet\n-- groups that are associated with the specified key or keys. For example,\n-- suppose that you have subnet groups that are tagged with keys called 'owner'\n-- and 'environment'. If you specify both of these tag keys in the request, Amazon\n-- Redshift returns a response with the subnet groups that have either or both\n-- of these tag keys associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsg1TagValues",
                        "name": "_dcsg1TagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching cluster\n-- subnet groups that are associated with the specified tag value or values. For\n-- example, suppose that you have subnet groups that are tagged with values\n-- called 'admin' and 'test'. If you specify both of these tag values in the\n-- request, Amazon Redshift returns a response with the subnet groups that have\n-- either or both of these tag values associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsg1ClusterSubnetGroupName",
                        "name": "_dcsg1ClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name of the cluster subnet group for which information is requested.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsg1Marker",
                        "name": "_dcsg1Marker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeClusterSubnetGroups' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcsg1MaxRecords",
                        "name": "_dcsg1MaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsg1TagKeys",
                        "name": "_dcsg1TagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching cluster subnet\n-- groups that are associated with the specified key or keys. For example,\n-- suppose that you have subnet groups that are tagged with keys called 'owner'\n-- and 'environment'. If you specify both of these tag keys in the request, Amazon\n-- Redshift returns a response with the subnet groups that have either or both\n-- of these tag keys associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcsg1TagValues",
                        "name": "_dcsg1TagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching cluster\n-- subnet groups that are associated with the specified tag value or values. For\n-- example, suppose that you have subnet groups that are tagged with values\n-- called 'admin' and 'test'. If you specify both of these tag values in the\n-- request, Amazon Redshift returns a response with the subnet groups that have\n-- either or both of these tag values associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 20,
                "ctor": "describeClusterVersionsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeClusterVersionsResponse",
                "resultWrapper": "DescribeClusterVersionsResult",
                "locationPad": 16,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcvrMarker",
                        "name": "_dcvrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcvrClusterVersions",
                        "name": "_dcvrClusterVersions",
                        "shape": "ClusterVersionList",
                        "locationName": "ClusterVersions",
                        "documentation": "-- | A list of 'Version' elements.",
                        "typeExposed": "[ClusterVersion]",
                        "type": "List \"member\" ClusterVersion"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcvrClusterVersions",
                        "name": "_dcvrClusterVersions",
                        "shape": "ClusterVersionList",
                        "locationName": "ClusterVersions",
                        "documentation": "-- | A list of 'Version' elements.",
                        "typeExposed": "[ClusterVersion]",
                        "type": "List \"member\" ClusterVersion"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcvrMarker",
                        "name": "_dcvrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeClusterVersions.html",
            "namespace": "Network.AWS.Redshift.DescribeClusterVersions",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "dcvMarker",
                    "outputRequired": false,
                    "output": "dcvrMarker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dcvrClusterVersions"
            },
            "name": "DescribeClusterVersions",
            "method": "post",
            "documentation": "-- | Returns descriptions of the available Amazon Redshift cluster versions. You\n-- can call this operation even before creating any clusters to learn more about\n-- the Amazon Redshift versions. For more information about managing clusters,\n-- go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html Amazon Redshift Clusters\u003e in the /Amazon Redshift Cluster Management Guide/\n--",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 31,
                "ctor": "describeClusterVersions",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 28,
                "name": "DescribeClusterVersions",
                "query": [
                    {
                        "field": "_dcvClusterVersion",
                        "locationName": "ClusterVersion",
                        "type": "field"
                    },
                    {
                        "field": "_dcvClusterParameterGroupFamily",
                        "locationName": "ClusterParameterGroupFamily",
                        "type": "field"
                    },
                    {
                        "field": "_dcvMaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_dcvMarker",
                        "locationName": "Marker",
                        "type": "field"
                    }
                ],
                "locationPad": 28,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcvClusterVersion",
                        "name": "_dcvClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The specific cluster version to return.\n--\n-- Example: '1.0'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcvClusterParameterGroupFamily",
                        "name": "_dcvClusterParameterGroupFamily",
                        "shape": "String",
                        "locationName": "ClusterParameterGroupFamily",
                        "documentation": "-- | The name of a specific cluster parameter group family to return details for.\n--\n-- Constraints:\n--\n-- Must be 1 to 255 alphanumeric characters First character must be a letter Cannot end with a hyphen or contain two consecutive hyphens\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcvMaxRecords",
                        "name": "_dcvMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcvMarker",
                        "name": "_dcvMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeClusterVersions' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcvClusterParameterGroupFamily",
                        "name": "_dcvClusterParameterGroupFamily",
                        "shape": "String",
                        "locationName": "ClusterParameterGroupFamily",
                        "documentation": "-- | The name of a specific cluster parameter group family to return details for.\n--\n-- Constraints:\n--\n-- Must be 1 to 255 alphanumeric characters First character must be a letter Cannot end with a hyphen or contain two consecutive hyphens\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcvClusterVersion",
                        "name": "_dcvClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The specific cluster version to return.\n--\n-- Example: '1.0'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcvMarker",
                        "name": "_dcvMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeClusterVersions' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcvMaxRecords",
                        "name": "_dcvMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 12,
                "ctor": "describeClustersResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeClustersResponse",
                "resultWrapper": "DescribeClustersResult",
                "locationPad": 9,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcrMarker",
                        "name": "_dcrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcrClusters",
                        "name": "_dcrClusters",
                        "shape": "ClusterList",
                        "locationName": "Clusters",
                        "documentation": "-- | A list of 'Cluster' objects, where each object describes one cluster.",
                        "typeExposed": "[Cluster]",
                        "type": "List \"member\" Cluster"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcrClusters",
                        "name": "_dcrClusters",
                        "shape": "ClusterList",
                        "locationName": "Clusters",
                        "documentation": "-- | A list of 'Cluster' objects, where each object describes one cluster.",
                        "typeExposed": "[Cluster]",
                        "type": "List \"member\" Cluster"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcrMarker",
                        "name": "_dcrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeClusters.html",
            "namespace": "Network.AWS.Redshift.DescribeClusters",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "dcMarker",
                    "outputRequired": false,
                    "output": "dcrMarker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dcrClusters"
            },
            "name": "DescribeClusters",
            "method": "post",
            "documentation": "-- | Returns properties of provisioned clusters including general cluster\n-- properties, cluster database properties, maintenance and backup properties,\n-- and security and access properties. This operation supports pagination. For\n-- more information about managing clusters, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html Amazon Redshift Clusters\u003e in\n-- the /Amazon Redshift Cluster Management Guide/ .\n--\n-- If you specify both tag keys and tag values in the same request, Amazon\n-- Redshift returns all clusters that match any combination of the specified\n-- keys and values. For example, if you have 'owner' and 'environment' for tag keys,\n-- and 'admin' and 'test' for tag values, all clusters that have any combination of\n-- those values are returned.\n--\n-- If both tag keys and values are omitted from the request, clusters are\n-- returned regardless of whether they have tag keys or values associated with\n-- them.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 20,
                "ctor": "describeClusters",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "DescribeClusters",
                "query": [
                    {
                        "field": "_dcClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_dcMaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_dcMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_dcTagKeys",
                        "locationName": "TagKeys",
                        "type": "field"
                    },
                    {
                        "field": "_dcTagValues",
                        "locationName": "TagValues",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcClusterIdentifier",
                        "name": "_dcClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of a cluster whose properties you are requesting. This\n-- parameter is case sensitive.\n--\n-- The default is that all clusters defined for an account are returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcMaxRecords",
                        "name": "_dcMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcMarker",
                        "name": "_dcMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeClusters' request exceed the\n-- value specified in 'MaxRecords', AWS returns a value in the 'Marker' field of the\n-- response. You can retrieve the next set of response records by providing the\n-- returned marker value in the 'Marker' parameter and retrying the request.\n--\n-- Constraints: You can specify either the ClusterIdentifier parameter or the Marker\n-- parameter, but not both.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcTagKeys",
                        "name": "_dcTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching clusters that are\n-- associated with the specified key or keys. For example, suppose that you have\n-- clusters that are tagged with keys called 'owner' and 'environment'. If you\n-- specify both of these tag keys in the request, Amazon Redshift returns a\n-- response with the clusters that have either or both of these tag keys\n-- associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcTagValues",
                        "name": "_dcTagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching clusters that\n-- are associated with the specified tag value or values. For example, suppose\n-- that you have clusters that are tagged with values called 'admin' and 'test'. If\n-- you specify both of these tag values in the request, Amazon Redshift returns\n-- a response with the clusters that have either or both of these tag values\n-- associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcClusterIdentifier",
                        "name": "_dcClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of a cluster whose properties you are requesting. This\n-- parameter is case sensitive.\n--\n-- The default is that all clusters defined for an account are returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcMarker",
                        "name": "_dcMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeClusters' request exceed the\n-- value specified in 'MaxRecords', AWS returns a value in the 'Marker' field of the\n-- response. You can retrieve the next set of response records by providing the\n-- returned marker value in the 'Marker' parameter and retrying the request.\n--\n-- Constraints: You can specify either the ClusterIdentifier parameter or the Marker\n-- parameter, but not both.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dcMaxRecords",
                        "name": "_dcMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcTagKeys",
                        "name": "_dcTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching clusters that are\n-- associated with the specified key or keys. For example, suppose that you have\n-- clusters that are tagged with keys called 'owner' and 'environment'. If you\n-- specify both of these tag keys in the request, Amazon Redshift returns a\n-- response with the clusters that have either or both of these tag keys\n-- associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dcTagValues",
                        "name": "_dcTagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching clusters that\n-- are associated with the specified tag value or values. For example, suppose\n-- that you have clusters that are tagged with values called 'admin' and 'test'. If\n-- you specify both of these tag values in the request, Amazon Redshift returns\n-- a response with the clusters that have either or both of these tag values\n-- associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeDefaultClusterParametersResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "ddcprDefaultClusterParameters",
                    "name": "_ddcprDefaultClusterParameters",
                    "shape": "DefaultClusterParameters",
                    "locationName": "DefaultClusterParameters",
                    "documentation": null,
                    "typeExposed": "DefaultClusterParameters",
                    "type": "DefaultClusterParameters"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ddcprDefaultClusterParameters",
                        "name": "_ddcprDefaultClusterParameters",
                        "shape": "DefaultClusterParameters",
                        "locationName": "DefaultClusterParameters",
                        "documentation": null,
                        "typeExposed": "DefaultClusterParameters",
                        "type": "DefaultClusterParameters"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeDefaultClusterParametersResponse",
                "resultWrapper": "DescribeDefaultClusterParametersResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ddcprDefaultClusterParameters",
                        "name": "_ddcprDefaultClusterParameters",
                        "shape": "DefaultClusterParameters",
                        "locationName": "DefaultClusterParameters",
                        "documentation": null,
                        "typeExposed": "DefaultClusterParameters",
                        "type": "DefaultClusterParameters"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeDefaultClusterParameters.html",
            "namespace": "Network.AWS.Redshift.DescribeDefaultClusterParameters",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "ddcpMarker",
                    "outputRequired": false,
                    "output": "ddcprDefaultClusterParameters . dcpMarker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "ddcprDefaultClusterParameters . dcpParameters"
            },
            "name": "DescribeDefaultClusterParameters",
            "method": "post",
            "documentation": "-- | Returns a list of parameter settings for the specified parameter group\n-- family.\n--\n-- For more information about managing parameter groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html Amazon RedshiftParameter Groups\u003e in the /Amazon Redshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "describeDefaultClusterParameters",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ddcpParameterGroupFamily",
                        "name": "_ddcpParameterGroupFamily",
                        "shape": "String",
                        "locationName": "ParameterGroupFamily",
                        "documentation": "-- | The name of the cluster parameter group family.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 21,
                "name": "DescribeDefaultClusterParameters",
                "query": [
                    {
                        "field": "_ddcpParameterGroupFamily",
                        "locationName": "ParameterGroupFamily",
                        "type": "field"
                    },
                    {
                        "field": "_ddcpMaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_ddcpMarker",
                        "locationName": "Marker",
                        "type": "field"
                    }
                ],
                "locationPad": 21,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ddcpMaxRecords",
                        "name": "_ddcpMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ddcpMarker",
                        "name": "_ddcpMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeDefaultClusterParameters'\n-- request exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker' field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ddcpMarker",
                        "name": "_ddcpMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeDefaultClusterParameters'\n-- request exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker' field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ddcpMaxRecords",
                        "name": "_ddcpMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ddcpParameterGroupFamily",
                        "name": "_ddcpParameterGroupFamily",
                        "shape": "String",
                        "locationName": "ParameterGroupFamily",
                        "documentation": "-- | The name of the cluster parameter group family.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "EventCategoriesMap",
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeEventCategoriesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "decrEventCategoriesMapList",
                    "name": "_decrEventCategoriesMapList",
                    "shape": "EventCategoriesMapList",
                    "locationName": "EventCategoriesMapList",
                    "documentation": "-- | A list of event categories descriptions.",
                    "typeExposed": "[EventCategoriesMap]",
                    "type": "List \"member\" EventCategoriesMap"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeEventCategoriesResponse",
                "resultWrapper": "DescribeEventCategoriesResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "decrEventCategoriesMapList",
                        "name": "_decrEventCategoriesMapList",
                        "shape": "EventCategoriesMapList",
                        "locationName": "EventCategoriesMapList",
                        "documentation": "-- | A list of event categories descriptions.",
                        "typeExposed": "[EventCategoriesMap]",
                        "type": "List \"member\" EventCategoriesMap"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "decrEventCategoriesMapList",
                        "name": "_decrEventCategoriesMapList",
                        "shape": "EventCategoriesMapList",
                        "locationName": "EventCategoriesMapList",
                        "documentation": "-- | A list of event categories descriptions.",
                        "typeExposed": "[EventCategoriesMap]",
                        "type": "List \"member\" EventCategoriesMap"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeEventCategories.html",
            "namespace": "Network.AWS.Redshift.DescribeEventCategories",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DescribeEventCategories",
            "method": "post",
            "documentation": "-- | Displays a list of event categories for all event source types, or for a\n-- specified source type. For a list of the event categories and source types,\n-- go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-event-notifications.html Amazon Redshift Event Notifications\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "describeEventCategories",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "decSourceType",
                    "name": "_decSourceType",
                    "shape": "String",
                    "locationName": "SourceType",
                    "documentation": "-- | The source type, such as cluster or parameter group, to which the described\n-- event categories apply.\n--\n-- Valid values: cluster, snapshot, parameter group, and security group.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DescribeEventCategories",
                "query": [
                    {
                        "field": "_decSourceType",
                        "locationName": "SourceType",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "decSourceType",
                        "name": "_decSourceType",
                        "shape": "String",
                        "locationName": "SourceType",
                        "documentation": "-- | The source type, such as cluster or parameter group, to which the described\n-- event categories apply.\n--\n-- Valid values: cluster, snapshot, parameter group, and security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "decSourceType",
                        "name": "_decSourceType",
                        "shape": "String",
                        "locationName": "SourceType",
                        "documentation": "-- | The source type, such as cluster or parameter group, to which the described\n-- event categories apply.\n--\n-- Valid values: cluster, snapshot, parameter group, and security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 27,
                "ctor": "describeEventSubscriptionsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeEventSubscriptionsResponse",
                "resultWrapper": "DescribeEventSubscriptionsResult",
                "locationPad": 23,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "desrMarker",
                        "name": "_desrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "desrEventSubscriptionsList",
                        "name": "_desrEventSubscriptionsList",
                        "shape": "EventSubscriptionsList",
                        "locationName": "EventSubscriptionsList",
                        "documentation": "-- | A list of event subscriptions.",
                        "typeExposed": "[EventSubscription]",
                        "type": "List \"member\" EventSubscription"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "desrEventSubscriptionsList",
                        "name": "_desrEventSubscriptionsList",
                        "shape": "EventSubscriptionsList",
                        "locationName": "EventSubscriptionsList",
                        "documentation": "-- | A list of event subscriptions.",
                        "typeExposed": "[EventSubscription]",
                        "type": "List \"member\" EventSubscription"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "desrMarker",
                        "name": "_desrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeEventSubscriptions.html",
            "namespace": "Network.AWS.Redshift.DescribeEventSubscriptions",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "des1Marker",
                    "outputRequired": false,
                    "output": "desrMarker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "desrEventSubscriptionsList"
            },
            "name": "DescribeEventSubscriptions",
            "method": "post",
            "documentation": "-- | Lists descriptions of all the Amazon Redshift event notifications\n-- subscription for a customer account. If you specify a subscription name,\n-- lists the description for that subscription.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 21,
                "ctor": "describeEventSubscriptions",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "DescribeEventSubscriptions",
                "query": [
                    {
                        "field": "_des1SubscriptionName",
                        "locationName": "SubscriptionName",
                        "type": "field"
                    },
                    {
                        "field": "_des1MaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_des1Marker",
                        "locationName": "Marker",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "des1SubscriptionName",
                        "name": "_des1SubscriptionName",
                        "shape": "String",
                        "locationName": "SubscriptionName",
                        "documentation": "-- | The name of the Amazon Redshift event notification subscription to be\n-- described.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "des1MaxRecords",
                        "name": "_des1MaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "des1Marker",
                        "name": "_des1Marker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeEventSubscriptions' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "des1Marker",
                        "name": "_des1Marker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeEventSubscriptions' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "des1MaxRecords",
                        "name": "_des1MaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "des1SubscriptionName",
                        "name": "_des1SubscriptionName",
                        "shape": "String",
                        "locationName": "SubscriptionName",
                        "documentation": "-- | The name of the Amazon Redshift event notification subscription to be\n-- described.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 10,
                "ctor": "describeEventsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeEventsResponse",
                "resultWrapper": "DescribeEventsResult",
                "locationPad": 7,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "derMarker",
                        "name": "_derMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "derEvents",
                        "name": "_derEvents",
                        "shape": "EventList",
                        "locationName": "Events",
                        "documentation": "-- | A list of 'Event' instances.",
                        "typeExposed": "[Event]",
                        "type": "List \"member\" Event"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "derEvents",
                        "name": "_derEvents",
                        "shape": "EventList",
                        "locationName": "Events",
                        "documentation": "-- | A list of 'Event' instances.",
                        "typeExposed": "[Event]",
                        "type": "List \"member\" Event"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "derMarker",
                        "name": "_derMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeEvents.html",
            "namespace": "Network.AWS.Redshift.DescribeEvents",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "deMarker",
                    "outputRequired": false,
                    "output": "derMarker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "derEvents"
            },
            "name": "DescribeEvents",
            "method": "post",
            "documentation": "-- | Returns events related to clusters, security groups, snapshots, and\n-- parameter groups for the past 14 days. Events specific to a particular\n-- cluster, security group, snapshot or parameter group can be obtained by\n-- providing the name as a parameter. By default, the past hour of events are\n-- returned.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 19,
                "ctor": "describeEvents",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "DescribeEvents",
                "query": [
                    {
                        "field": "_deSourceIdentifier",
                        "locationName": "SourceIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_deSourceType",
                        "locationName": "SourceType",
                        "type": "field"
                    },
                    {
                        "field": "_deStartTime",
                        "locationName": "StartTime",
                        "type": "field"
                    },
                    {
                        "field": "_deEndTime",
                        "locationName": "EndTime",
                        "type": "field"
                    },
                    {
                        "field": "_deDuration",
                        "locationName": "Duration",
                        "type": "field"
                    },
                    {
                        "field": "_deMaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_deMarker",
                        "locationName": "Marker",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "deSourceIdentifier",
                        "name": "_deSourceIdentifier",
                        "shape": "String",
                        "locationName": "SourceIdentifier",
                        "documentation": "-- | The identifier of the event source for which events will be returned. If\n-- this parameter is not specified, then all sources are included in the\n-- response.\n--\n-- Constraints:\n--\n-- If /SourceIdentifier/ is supplied, /SourceType/ must also be provided.\n--\n-- Specify a cluster identifier when /SourceType/ is 'cluster'. Specify a cluster\n-- security group name when /SourceType/ is 'cluster-security-group'. Specify a\n-- cluster parameter group name when /SourceType/ is 'cluster-parameter-group'. Specify a cluster snapshot identifier when\n-- /SourceType/ is 'cluster-snapshot'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "deSourceType",
                        "name": "_deSourceType",
                        "shape": "SourceType",
                        "locationName": "SourceType",
                        "documentation": "-- | The event source to retrieve events for. If no value is specified, all\n-- events are returned.\n--\n-- Constraints:\n--\n-- If /SourceType/ is supplied, /SourceIdentifier/ must also be provided.\n--\n-- Specify 'cluster' when /SourceIdentifier/ is a cluster identifier. Specify 'cluster-security-group' when /SourceIdentifier/ is a cluster security group name. Specify 'cluster-parameter-group' when /SourceIdentifier/ is a cluster parameter group name. Specify 'cluster-snapshot' when /SourceIdentifier/ is a cluster snapshot identifier.",
                        "typeExposed": "Maybe SourceType",
                        "type": "Maybe SourceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "deStartTime",
                        "name": "_deStartTime",
                        "shape": "TStamp",
                        "locationName": "StartTime",
                        "documentation": "-- | The beginning of the time interval to retrieve events for, specified in ISO\n-- 8601 format. For more information about ISO 8601, go to the \u003chttp://en.wikipedia.org/wiki/ISO_8601 ISO8601 Wikipediapage.\u003e\n--\n-- Example: '2009-07-08T18:00Z'",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "deEndTime",
                        "name": "_deEndTime",
                        "shape": "TStamp",
                        "locationName": "EndTime",
                        "documentation": "-- | The end of the time interval for which to retrieve events, specified in ISO\n-- 8601 format. For more information about ISO 8601, go to the \u003chttp://en.wikipedia.org/wiki/ISO_8601 ISO8601 Wikipediapage.\u003e\n--\n-- Example: '2009-07-08T18:00Z'",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "deDuration",
                        "name": "_deDuration",
                        "shape": "IntegerOptional",
                        "locationName": "Duration",
                        "documentation": "-- | The number of minutes prior to the time of the request for which to retrieve\n-- events. For example, if the request is sent at 18:00 and you specify a\n-- duration of 60, then only events which have occurred after 17:00 will be\n-- returned.\n--\n-- Default: '60'",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "deMaxRecords",
                        "name": "_deMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "deMarker",
                        "name": "_deMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeEvents' request exceed the\n-- value specified in 'MaxRecords', AWS returns a value in the 'Marker' field of the\n-- response. You can retrieve the next set of response records by providing the\n-- returned marker value in the 'Marker' parameter and retrying the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "deDuration",
                        "name": "_deDuration",
                        "shape": "IntegerOptional",
                        "locationName": "Duration",
                        "documentation": "-- | The number of minutes prior to the time of the request for which to retrieve\n-- events. For example, if the request is sent at 18:00 and you specify a\n-- duration of 60, then only events which have occurred after 17:00 will be\n-- returned.\n--\n-- Default: '60'",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "deEndTime",
                        "name": "_deEndTime",
                        "shape": "TStamp",
                        "locationName": "EndTime",
                        "documentation": "-- | The end of the time interval for which to retrieve events, specified in ISO\n-- 8601 format. For more information about ISO 8601, go to the \u003chttp://en.wikipedia.org/wiki/ISO_8601 ISO8601 Wikipediapage.\u003e\n--\n-- Example: '2009-07-08T18:00Z'",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "deMarker",
                        "name": "_deMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeEvents' request exceed the\n-- value specified in 'MaxRecords', AWS returns a value in the 'Marker' field of the\n-- response. You can retrieve the next set of response records by providing the\n-- returned marker value in the 'Marker' parameter and retrying the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "deMaxRecords",
                        "name": "_deMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "deSourceIdentifier",
                        "name": "_deSourceIdentifier",
                        "shape": "String",
                        "locationName": "SourceIdentifier",
                        "documentation": "-- | The identifier of the event source for which events will be returned. If\n-- this parameter is not specified, then all sources are included in the\n-- response.\n--\n-- Constraints:\n--\n-- If /SourceIdentifier/ is supplied, /SourceType/ must also be provided.\n--\n-- Specify a cluster identifier when /SourceType/ is 'cluster'. Specify a cluster\n-- security group name when /SourceType/ is 'cluster-security-group'. Specify a\n-- cluster parameter group name when /SourceType/ is 'cluster-parameter-group'. Specify a cluster snapshot identifier when\n-- /SourceType/ is 'cluster-snapshot'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "deSourceType",
                        "name": "_deSourceType",
                        "shape": "SourceType",
                        "locationName": "SourceType",
                        "documentation": "-- | The event source to retrieve events for. If no value is specified, all\n-- events are returned.\n--\n-- Constraints:\n--\n-- If /SourceType/ is supplied, /SourceIdentifier/ must also be provided.\n--\n-- Specify 'cluster' when /SourceIdentifier/ is a cluster identifier. Specify 'cluster-security-group' when /SourceIdentifier/ is a cluster security group name. Specify 'cluster-parameter-group' when /SourceIdentifier/ is a cluster parameter group name. Specify 'cluster-snapshot' when /SourceIdentifier/ is a cluster snapshot identifier.",
                        "typeExposed": "Maybe SourceType",
                        "type": "Maybe SourceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "deStartTime",
                        "name": "_deStartTime",
                        "shape": "TStamp",
                        "locationName": "StartTime",
                        "documentation": "-- | The beginning of the time interval to retrieve events for, specified in ISO\n-- 8601 format. For more information about ISO 8601, go to the \u003chttp://en.wikipedia.org/wiki/ISO_8601 ISO8601 Wikipediapage.\u003e\n--\n-- Example: '2009-07-08T18:00Z'",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 27,
                "ctor": "describeHsmClientCertificatesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeHsmClientCertificatesResponse",
                "resultWrapper": "DescribeHsmClientCertificatesResult",
                "locationPad": 22,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhccrMarker",
                        "name": "_dhccrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhccrHsmClientCertificates",
                        "name": "_dhccrHsmClientCertificates",
                        "shape": "HsmClientCertificateList",
                        "locationName": "HsmClientCertificates",
                        "documentation": "-- | A list of the identifiers for one or more HSM client certificates used by\n-- Amazon Redshift clusters to store and retrieve database encryption keys in an\n-- HSM.",
                        "typeExposed": "[HsmClientCertificate]",
                        "type": "List \"member\" HsmClientCertificate"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhccrHsmClientCertificates",
                        "name": "_dhccrHsmClientCertificates",
                        "shape": "HsmClientCertificateList",
                        "locationName": "HsmClientCertificates",
                        "documentation": "-- | A list of the identifiers for one or more HSM client certificates used by\n-- Amazon Redshift clusters to store and retrieve database encryption keys in an\n-- HSM.",
                        "typeExposed": "[HsmClientCertificate]",
                        "type": "List \"member\" HsmClientCertificate"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhccrMarker",
                        "name": "_dhccrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeHsmClientCertificates.html",
            "namespace": "Network.AWS.Redshift.DescribeHsmClientCertificates",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "dhccMarker",
                    "outputRequired": false,
                    "output": "dhccrMarker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dhccrHsmClientCertificates"
            },
            "name": "DescribeHsmClientCertificates",
            "method": "post",
            "documentation": "-- | Returns information about the specified HSM client certificate. If no\n-- certificate ID is specified, returns information about all the HSM\n-- certificates owned by your AWS customer account.\n--\n-- If you specify both tag keys and tag values in the same request, Amazon\n-- Redshift returns all HSM client certificates that match any combination of\n-- the specified keys and values. For example, if you have 'owner' and 'environment'\n-- for tag keys, and 'admin' and 'test' for tag values, all HSM client certificates\n-- that have any combination of those values are returned.\n--\n-- If both tag keys and values are omitted from the request, HSM client\n-- certificates are returned regardless of whether they have tag keys or values\n-- associated with them.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 35,
                "ctor": "describeHsmClientCertificates",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 31,
                "name": "DescribeHsmClientCertificates",
                "query": [
                    {
                        "field": "_dhccHsmClientCertificateIdentifier",
                        "locationName": "HsmClientCertificateIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_dhccMaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_dhccMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_dhccTagKeys",
                        "locationName": "TagKeys",
                        "type": "field"
                    },
                    {
                        "field": "_dhccTagValues",
                        "locationName": "TagValues",
                        "type": "field"
                    }
                ],
                "locationPad": 31,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhccHsmClientCertificateIdentifier",
                        "name": "_dhccHsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | The identifier of a specific HSM client certificate for which you want\n-- information. If no identifier is specified, information is returned for all\n-- HSM client certificates owned by your AWS customer account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhccMaxRecords",
                        "name": "_dhccMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhccMarker",
                        "name": "_dhccMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeHsmClientCertificates' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhccTagKeys",
                        "name": "_dhccTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching HSM client\n-- certificates that are associated with the specified key or keys. For example,\n-- suppose that you have HSM client certificates that are tagged with keys\n-- called 'owner' and 'environment'. If you specify both of these tag keys in the\n-- request, Amazon Redshift returns a response with the HSM client certificates\n-- that have either or both of these tag keys associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhccTagValues",
                        "name": "_dhccTagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching HSM client\n-- certificates that are associated with the specified tag value or values. For\n-- example, suppose that you have HSM client certificates that are tagged with\n-- values called 'admin' and 'test'. If you specify both of these tag values in the\n-- request, Amazon Redshift returns a response with the HSM client certificates\n-- that have either or both of these tag values associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhccHsmClientCertificateIdentifier",
                        "name": "_dhccHsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | The identifier of a specific HSM client certificate for which you want\n-- information. If no identifier is specified, information is returned for all\n-- HSM client certificates owned by your AWS customer account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhccMarker",
                        "name": "_dhccMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeHsmClientCertificates' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhccMaxRecords",
                        "name": "_dhccMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhccTagKeys",
                        "name": "_dhccTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching HSM client\n-- certificates that are associated with the specified key or keys. For example,\n-- suppose that you have HSM client certificates that are tagged with keys\n-- called 'owner' and 'environment'. If you specify both of these tag keys in the\n-- request, Amazon Redshift returns a response with the HSM client certificates\n-- that have either or both of these tag keys associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhccTagValues",
                        "name": "_dhccTagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching HSM client\n-- certificates that are associated with the specified tag value or values. For\n-- example, suppose that you have HSM client certificates that are tagged with\n-- values called 'admin' and 'test'. If you specify both of these tag values in the\n-- request, Amazon Redshift returns a response with the HSM client certificates\n-- that have either or both of these tag values associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 22,
                "ctor": "describeHsmConfigurationsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeHsmConfigurationsResponse",
                "resultWrapper": "DescribeHsmConfigurationsResult",
                "locationPad": 18,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhcrMarker",
                        "name": "_dhcrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhcrHsmConfigurations",
                        "name": "_dhcrHsmConfigurations",
                        "shape": "HsmConfigurationList",
                        "locationName": "HsmConfigurations",
                        "documentation": "-- | A list of Amazon Redshift HSM configurations.",
                        "typeExposed": "[HsmConfiguration]",
                        "type": "List \"member\" HsmConfiguration"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhcrHsmConfigurations",
                        "name": "_dhcrHsmConfigurations",
                        "shape": "HsmConfigurationList",
                        "locationName": "HsmConfigurations",
                        "documentation": "-- | A list of Amazon Redshift HSM configurations.",
                        "typeExposed": "[HsmConfiguration]",
                        "type": "List \"member\" HsmConfiguration"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhcrMarker",
                        "name": "_dhcrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeHsmConfigurations.html",
            "namespace": "Network.AWS.Redshift.DescribeHsmConfigurations",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "dhc1Marker",
                    "outputRequired": false,
                    "output": "dhcrMarker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dhcrHsmConfigurations"
            },
            "name": "DescribeHsmConfigurations",
            "method": "post",
            "documentation": "-- | Returns information about the specified Amazon Redshift HSM configuration. If\n-- no configuration ID is specified, returns information about all the HSM\n-- configurations owned by your AWS customer account.\n--\n-- If you specify both tag keys and tag values in the same request, Amazon\n-- Redshift returns all HSM connections that match any combination of the\n-- specified keys and values. For example, if you have 'owner' and 'environment' for\n-- tag keys, and 'admin' and 'test' for tag values, all HSM connections that have\n-- any combination of those values are returned.\n--\n-- If both tag keys and values are omitted from the request, HSM connections\n-- are returned regardless of whether they have tag keys or values associated\n-- with them.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 31,
                "ctor": "describeHsmConfigurations",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 27,
                "name": "DescribeHsmConfigurations",
                "query": [
                    {
                        "field": "_dhc1HsmConfigurationIdentifier",
                        "locationName": "HsmConfigurationIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_dhc1MaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_dhc1Marker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_dhc1TagKeys",
                        "locationName": "TagKeys",
                        "type": "field"
                    },
                    {
                        "field": "_dhc1TagValues",
                        "locationName": "TagValues",
                        "type": "field"
                    }
                ],
                "locationPad": 27,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhc1HsmConfigurationIdentifier",
                        "name": "_dhc1HsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | The identifier of a specific Amazon Redshift HSM configuration to be\n-- described. If no identifier is specified, information is returned for all HSM\n-- configurations owned by your AWS customer account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhc1MaxRecords",
                        "name": "_dhc1MaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhc1Marker",
                        "name": "_dhc1Marker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeHsmConfigurations' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhc1TagKeys",
                        "name": "_dhc1TagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching HSM\n-- configurations that are associated with the specified key or keys. For\n-- example, suppose that you have HSM configurations that are tagged with keys\n-- called 'owner' and 'environment'. If you specify both of these tag keys in the\n-- request, Amazon Redshift returns a response with the HSM configurations that\n-- have either or both of these tag keys associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhc1TagValues",
                        "name": "_dhc1TagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching HSM\n-- configurations that are associated with the specified tag value or values.\n-- For example, suppose that you have HSM configurations that are tagged with\n-- values called 'admin' and 'test'. If you specify both of these tag values in the\n-- request, Amazon Redshift returns a response with the HSM configurations that\n-- have either or both of these tag values associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhc1HsmConfigurationIdentifier",
                        "name": "_dhc1HsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | The identifier of a specific Amazon Redshift HSM configuration to be\n-- described. If no identifier is specified, information is returned for all HSM\n-- configurations owned by your AWS customer account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhc1Marker",
                        "name": "_dhc1Marker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeHsmConfigurations' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dhc1MaxRecords",
                        "name": "_dhc1MaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhc1TagKeys",
                        "name": "_dhc1TagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching HSM\n-- configurations that are associated with the specified key or keys. For\n-- example, suppose that you have HSM configurations that are tagged with keys\n-- called 'owner' and 'environment'. If you specify both of these tag keys in the\n-- request, Amazon Redshift returns a response with the HSM configurations that\n-- have either or both of these tag keys associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dhc1TagValues",
                        "name": "_dhc1TagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching HSM\n-- configurations that are associated with the specified tag value or values.\n-- For example, suppose that you have HSM configurations that are tagged with\n-- values called 'admin' and 'test'. If you specify both of these tag values in the\n-- request, Amazon Redshift returns a response with the HSM configurations that\n-- have either or both of these tag values associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 31,
                "ctor": "describeLoggingStatusResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeLoggingStatusResponse",
                "resultWrapper": "DescribeLoggingStatusResult",
                "locationPad": 27,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlsrLoggingEnabled",
                        "name": "_dlsrLoggingEnabled",
                        "shape": "Boolean",
                        "locationName": "LoggingEnabled",
                        "documentation": "-- | 'true' if logging is on, 'false' if logging is off.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlsrBucketName",
                        "name": "_dlsrBucketName",
                        "shape": "String",
                        "locationName": "BucketName",
                        "documentation": "-- | The name of the S3 bucket where the log files are stored.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlsrS3KeyPrefix",
                        "name": "_dlsrS3KeyPrefix",
                        "shape": "String",
                        "locationName": "S3KeyPrefix",
                        "documentation": "-- | The prefix applied to the log file names.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlsrLastSuccessfulDeliveryTime",
                        "name": "_dlsrLastSuccessfulDeliveryTime",
                        "shape": "TStamp",
                        "locationName": "LastSuccessfulDeliveryTime",
                        "documentation": "-- | The last time when logs were delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlsrLastFailureTime",
                        "name": "_dlsrLastFailureTime",
                        "shape": "TStamp",
                        "locationName": "LastFailureTime",
                        "documentation": "-- | The last time when logs failed to be delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlsrLastFailureMessage",
                        "name": "_dlsrLastFailureMessage",
                        "shape": "String",
                        "locationName": "LastFailureMessage",
                        "documentation": "-- | The message indicating that logs failed to be delivered.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlsrBucketName",
                        "name": "_dlsrBucketName",
                        "shape": "String",
                        "locationName": "BucketName",
                        "documentation": "-- | The name of the S3 bucket where the log files are stored.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlsrLastFailureMessage",
                        "name": "_dlsrLastFailureMessage",
                        "shape": "String",
                        "locationName": "LastFailureMessage",
                        "documentation": "-- | The message indicating that logs failed to be delivered.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlsrLastFailureTime",
                        "name": "_dlsrLastFailureTime",
                        "shape": "TStamp",
                        "locationName": "LastFailureTime",
                        "documentation": "-- | The last time when logs failed to be delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlsrLastSuccessfulDeliveryTime",
                        "name": "_dlsrLastSuccessfulDeliveryTime",
                        "shape": "TStamp",
                        "locationName": "LastSuccessfulDeliveryTime",
                        "documentation": "-- | The last time when logs were delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlsrLoggingEnabled",
                        "name": "_dlsrLoggingEnabled",
                        "shape": "Boolean",
                        "locationName": "LoggingEnabled",
                        "documentation": "-- | 'true' if logging is on, 'false' if logging is off.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlsrS3KeyPrefix",
                        "name": "_dlsrS3KeyPrefix",
                        "shape": "String",
                        "locationName": "S3KeyPrefix",
                        "documentation": "-- | The prefix applied to the log file names.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeLoggingStatus.html",
            "namespace": "Network.AWS.Redshift.DescribeLoggingStatus",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DescribeLoggingStatus",
            "method": "post",
            "documentation": "-- | Describes whether information, such as queries and connection attempts, is\n-- being logged for the specified Amazon Redshift cluster.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "describeLoggingStatus",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dlsClusterIdentifier",
                    "name": "_dlsClusterIdentifier",
                    "shape": "String",
                    "locationName": "ClusterIdentifier",
                    "documentation": "-- | The identifier of the cluster to get the logging status from.\n--\n-- Example: 'examplecluster'",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dlsClusterIdentifier",
                        "name": "_dlsClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster to get the logging status from.\n--\n-- Example: 'examplecluster'",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "DescribeLoggingStatus",
                "query": [
                    {
                        "field": "_dlsClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dlsClusterIdentifier",
                        "name": "_dlsClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster to get the logging status from.\n--\n-- Example: 'examplecluster'",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 29,
                "ctor": "describeOrderableClusterOptionsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeOrderableClusterOptionsResponse",
                "resultWrapper": "DescribeOrderableClusterOptionsResult",
                "locationPad": 24,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "docorOrderableClusterOptions",
                        "name": "_docorOrderableClusterOptions",
                        "shape": "OrderableClusterOptionsList",
                        "locationName": "OrderableClusterOptions",
                        "documentation": "-- | An 'OrderableClusterOption' structure containing information about orderable\n-- options for the Cluster.",
                        "typeExposed": "[OrderableClusterOption]",
                        "type": "List \"member\" OrderableClusterOption"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "docorMarker",
                        "name": "_docorMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "docorMarker",
                        "name": "_docorMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "docorOrderableClusterOptions",
                        "name": "_docorOrderableClusterOptions",
                        "shape": "OrderableClusterOptionsList",
                        "locationName": "OrderableClusterOptions",
                        "documentation": "-- | An 'OrderableClusterOption' structure containing information about orderable\n-- options for the Cluster.",
                        "typeExposed": "[OrderableClusterOption]",
                        "type": "List \"member\" OrderableClusterOption"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeOrderableClusterOptions.html",
            "namespace": "Network.AWS.Redshift.DescribeOrderableClusterOptions",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "docoMarker",
                    "outputRequired": false,
                    "output": "docorMarker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "docorOrderableClusterOptions"
            },
            "name": "DescribeOrderableClusterOptions",
            "method": "post",
            "documentation": "-- | Returns a list of orderable cluster options. Before you create a new cluster\n-- you can use this operation to find what options are available, such as the\n-- EC2 Availability Zones (AZ) in the specific AWS region that you can specify,\n-- and the node types you can request. The node types differ by available\n-- storage, memory, CPU and price. With the cost involved you might want to\n-- obtain a list of cluster options in the specific region and specify values\n-- when creating a cluster. For more information about managing clusters, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html Amazon Redshift Clusters\u003e in the /Amazon Redshift Cluster Management Guide/",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 19,
                "ctor": "describeOrderableClusterOptions",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "DescribeOrderableClusterOptions",
                "query": [
                    {
                        "field": "_docoClusterVersion",
                        "locationName": "ClusterVersion",
                        "type": "field"
                    },
                    {
                        "field": "_docoNodeType",
                        "locationName": "NodeType",
                        "type": "field"
                    },
                    {
                        "field": "_docoMaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_docoMarker",
                        "locationName": "Marker",
                        "type": "field"
                    }
                ],
                "locationPad": 15,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "docoClusterVersion",
                        "name": "_docoClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The version filter value. Specify this parameter to show only the available\n-- offerings matching the specified version.\n--\n-- Default: All versions.\n--\n-- Constraints: Must be one of the version returned from 'DescribeClusterVersions'\n-- .",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "docoNodeType",
                        "name": "_docoNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The node type filter value. Specify this parameter to show only the\n-- available offerings matching the specified node type.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "docoMaxRecords",
                        "name": "_docoMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "docoMarker",
                        "name": "_docoMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeOrderableClusterOptions'\n-- request exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker' field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "docoClusterVersion",
                        "name": "_docoClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The version filter value. Specify this parameter to show only the available\n-- offerings matching the specified version.\n--\n-- Default: All versions.\n--\n-- Constraints: Must be one of the version returned from 'DescribeClusterVersions'\n-- .",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "docoMarker",
                        "name": "_docoMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeOrderableClusterOptions'\n-- request exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker' field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "docoMaxRecords",
                        "name": "_docoMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "docoNodeType",
                        "name": "_docoNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The node type filter value. Specify this parameter to show only the\n-- available offerings matching the specified node type.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 27,
                "ctor": "describeReservedNodeOfferingsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeReservedNodeOfferingsResponse",
                "resultWrapper": "DescribeReservedNodeOfferingsResult",
                "locationPad": 22,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnorMarker",
                        "name": "_drnorMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drnorReservedNodeOfferings",
                        "name": "_drnorReservedNodeOfferings",
                        "shape": "ReservedNodeOfferingList",
                        "locationName": "ReservedNodeOfferings",
                        "documentation": "-- | A list of reserved node offerings.",
                        "typeExposed": "[ReservedNodeOffering]",
                        "type": "List \"member\" ReservedNodeOffering"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnorMarker",
                        "name": "_drnorMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drnorReservedNodeOfferings",
                        "name": "_drnorReservedNodeOfferings",
                        "shape": "ReservedNodeOfferingList",
                        "locationName": "ReservedNodeOfferings",
                        "documentation": "-- | A list of reserved node offerings.",
                        "typeExposed": "[ReservedNodeOffering]",
                        "type": "List \"member\" ReservedNodeOffering"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeReservedNodeOfferings.html",
            "namespace": "Network.AWS.Redshift.DescribeReservedNodeOfferings",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "drnoMarker",
                    "outputRequired": false,
                    "output": "drnorMarker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "drnorReservedNodeOfferings"
            },
            "name": "DescribeReservedNodeOfferings",
            "method": "post",
            "documentation": "-- | Returns a list of the available reserved node offerings by Amazon Redshift\n-- with their descriptions including the node type, the fixed and recurring\n-- costs of reserving the node and duration the node will be reserved for you.\n-- These descriptions help you determine which reserve node offering you want to\n-- purchase. You then use the unique offering ID in you call to 'PurchaseReservedNodeOffering' to reserve one or more nodes for your Amazon Redshift cluster.\n--\n-- For more information about managing parameter groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html PurchasingReserved Nodes\u003e in the /Amazon Redshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "describeReservedNodeOfferings",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "DescribeReservedNodeOfferings",
                "query": [
                    {
                        "field": "_drnoReservedNodeOfferingId",
                        "locationName": "ReservedNodeOfferingId",
                        "type": "field"
                    },
                    {
                        "field": "_drnoMaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_drnoMarker",
                        "locationName": "Marker",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnoReservedNodeOfferingId",
                        "name": "_drnoReservedNodeOfferingId",
                        "shape": "String",
                        "locationName": "ReservedNodeOfferingId",
                        "documentation": "-- | The unique identifier for the offering.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnoMaxRecords",
                        "name": "_drnoMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnoMarker",
                        "name": "_drnoMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeReservedNodeOfferings' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnoMarker",
                        "name": "_drnoMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeReservedNodeOfferings' request\n-- exceed the value specified in 'MaxRecords', AWS returns a value in the 'Marker'\n-- field of the response. You can retrieve the next set of response records by\n-- providing the returned marker value in the 'Marker' parameter and retrying the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnoMaxRecords",
                        "name": "_drnoMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnoReservedNodeOfferingId",
                        "name": "_drnoReservedNodeOfferingId",
                        "shape": "String",
                        "locationName": "ReservedNodeOfferingId",
                        "documentation": "-- | The unique identifier for the offering.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 18,
                "ctor": "describeReservedNodesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeReservedNodesResponse",
                "resultWrapper": "DescribeReservedNodesResult",
                "locationPad": 14,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnrMarker",
                        "name": "_drnrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drnrReservedNodes",
                        "name": "_drnrReservedNodes",
                        "shape": "ReservedNodeList",
                        "locationName": "ReservedNodes",
                        "documentation": "-- | The list of reserved nodes.",
                        "typeExposed": "[ReservedNode]",
                        "type": "List \"member\" ReservedNode"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnrMarker",
                        "name": "_drnrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drnrReservedNodes",
                        "name": "_drnrReservedNodes",
                        "shape": "ReservedNodeList",
                        "locationName": "ReservedNodes",
                        "documentation": "-- | The list of reserved nodes.",
                        "typeExposed": "[ReservedNode]",
                        "type": "List \"member\" ReservedNode"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeReservedNodes.html",
            "namespace": "Network.AWS.Redshift.DescribeReservedNodes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": {
                "token": {
                    "input": "drnMarker",
                    "outputRequired": false,
                    "output": "drnrMarker",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "drnrReservedNodes"
            },
            "name": "DescribeReservedNodes",
            "method": "post",
            "documentation": "-- | Returns the descriptions of the reserved nodes.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "describeReservedNodes",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "DescribeReservedNodes",
                "query": [
                    {
                        "field": "_drnReservedNodeId",
                        "locationName": "ReservedNodeId",
                        "type": "field"
                    },
                    {
                        "field": "_drnMaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_drnMarker",
                        "locationName": "Marker",
                        "type": "field"
                    }
                ],
                "locationPad": 15,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnReservedNodeId",
                        "name": "_drnReservedNodeId",
                        "shape": "String",
                        "locationName": "ReservedNodeId",
                        "documentation": "-- | Identifier for the node reservation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnMaxRecords",
                        "name": "_drnMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnMarker",
                        "name": "_drnMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeReservedNodes' request exceed\n-- the value specified in 'MaxRecords', AWS returns a value in the 'Marker' field of\n-- the response. You can retrieve the next set of response records by providing\n-- the returned marker value in the 'Marker' parameter and retrying the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnMarker",
                        "name": "_drnMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | An optional parameter that specifies the starting point to return a set of\n-- response records. When the results of a 'DescribeReservedNodes' request exceed\n-- the value specified in 'MaxRecords', AWS returns a value in the 'Marker' field of\n-- the response. You can retrieve the next set of response records by providing\n-- the returned marker value in the 'Marker' parameter and retrying the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnMaxRecords",
                        "name": "_drnMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number of response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned marker value.\n--\n-- Default: '100'\n--\n-- Constraints: minimum 20, maximum 100.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drnReservedNodeId",
                        "name": "_drnReservedNodeId",
                        "shape": "String",
                        "locationName": "ReservedNodeId",
                        "documentation": "-- | Identifier for the node reservation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 38,
                "ctor": "describeResizeResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeResizeResponse",
                "resultWrapper": "DescribeResizeResult",
                "locationPad": 35,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrTargetNodeType",
                        "name": "_drrTargetNodeType",
                        "shape": "String",
                        "locationName": "TargetNodeType",
                        "documentation": "-- | The node type that the cluster will have after the resize operation is\n-- complete.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrTargetNumberOfNodes",
                        "name": "_drrTargetNumberOfNodes",
                        "shape": "IntegerOptional",
                        "locationName": "TargetNumberOfNodes",
                        "documentation": "-- | The number of nodes that the cluster will have after the resize operation is\n-- complete.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrTargetClusterType",
                        "name": "_drrTargetClusterType",
                        "shape": "String",
                        "locationName": "TargetClusterType",
                        "documentation": "-- | The cluster type after the resize operation is complete.\n--\n-- Valid Values: 'multi-node' | 'single-node'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrStatus",
                        "name": "_drrStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | The status of the resize operation.\n--\n-- Valid Values: 'NONE' | 'IN_PROGRESS' | 'FAILED' | 'SUCCEEDED'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drrImportTablesCompleted",
                        "name": "_drrImportTablesCompleted",
                        "shape": "ImportTablesCompleted",
                        "locationName": "ImportTablesCompleted",
                        "documentation": "-- | The names of tables that have been completely imported .\n--\n-- Valid Values: List of table names.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drrImportTablesInProgress",
                        "name": "_drrImportTablesInProgress",
                        "shape": "ImportTablesInProgress",
                        "locationName": "ImportTablesInProgress",
                        "documentation": "-- | The names of tables that are being currently imported.\n--\n-- Valid Values: List of table names.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drrImportTablesNotStarted",
                        "name": "_drrImportTablesNotStarted",
                        "shape": "ImportTablesNotStarted",
                        "locationName": "ImportTablesNotStarted",
                        "documentation": "-- | The names of tables that have not been yet imported.\n--\n-- Valid Values: List of table names",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrAvgResizeRateInMegaBytesPerSecond",
                        "name": "_drrAvgResizeRateInMegaBytesPerSecond",
                        "shape": "DoubleOptional",
                        "locationName": "AvgResizeRateInMegaBytesPerSecond",
                        "documentation": "-- | The average rate of the resize operation over the last few minutes, measured\n-- in megabytes per second. After the resize operation completes, this value\n-- shows the average rate of the entire resize operation.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrTotalResizeDataInMegaBytes",
                        "name": "_drrTotalResizeDataInMegaBytes",
                        "shape": "LongOptional",
                        "locationName": "TotalResizeDataInMegaBytes",
                        "documentation": "-- | The estimated total amount of data, in megabytes, on the cluster before the\n-- resize operation began.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrProgressInMegaBytes",
                        "name": "_drrProgressInMegaBytes",
                        "shape": "LongOptional",
                        "locationName": "ProgressInMegaBytes",
                        "documentation": "-- | While the resize operation is in progress, this value shows the current\n-- amount of data, in megabytes, that has been processed so far. When the resize\n-- operation is complete, this value shows the total amount of data, in\n-- megabytes, on the cluster, which may be more or less than\n-- TotalResizeDataInMegaBytes (the estimated total amount of data before\n-- resize).",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrElapsedTimeInSeconds",
                        "name": "_drrElapsedTimeInSeconds",
                        "shape": "LongOptional",
                        "locationName": "ElapsedTimeInSeconds",
                        "documentation": "-- | The amount of seconds that have elapsed since the resize operation began.\n-- After the resize operation completes, this value shows the total actual time,\n-- in seconds, for the resize operation.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrEstimatedTimeToCompletionInSeconds",
                        "name": "_drrEstimatedTimeToCompletionInSeconds",
                        "shape": "LongOptional",
                        "locationName": "EstimatedTimeToCompletionInSeconds",
                        "documentation": "-- | The estimated time remaining, in seconds, until the resize operation is\n-- complete. This value is calculated based on the average resize rate and the\n-- estimated amount of data remaining to be processed. Once the resize operation\n-- is complete, this value will be 0.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrAvgResizeRateInMegaBytesPerSecond",
                        "name": "_drrAvgResizeRateInMegaBytesPerSecond",
                        "shape": "DoubleOptional",
                        "locationName": "AvgResizeRateInMegaBytesPerSecond",
                        "documentation": "-- | The average rate of the resize operation over the last few minutes, measured\n-- in megabytes per second. After the resize operation completes, this value\n-- shows the average rate of the entire resize operation.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrElapsedTimeInSeconds",
                        "name": "_drrElapsedTimeInSeconds",
                        "shape": "LongOptional",
                        "locationName": "ElapsedTimeInSeconds",
                        "documentation": "-- | The amount of seconds that have elapsed since the resize operation began.\n-- After the resize operation completes, this value shows the total actual time,\n-- in seconds, for the resize operation.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrEstimatedTimeToCompletionInSeconds",
                        "name": "_drrEstimatedTimeToCompletionInSeconds",
                        "shape": "LongOptional",
                        "locationName": "EstimatedTimeToCompletionInSeconds",
                        "documentation": "-- | The estimated time remaining, in seconds, until the resize operation is\n-- complete. This value is calculated based on the average resize rate and the\n-- estimated amount of data remaining to be processed. Once the resize operation\n-- is complete, this value will be 0.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drrImportTablesCompleted",
                        "name": "_drrImportTablesCompleted",
                        "shape": "ImportTablesCompleted",
                        "locationName": "ImportTablesCompleted",
                        "documentation": "-- | The names of tables that have been completely imported .\n--\n-- Valid Values: List of table names.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drrImportTablesInProgress",
                        "name": "_drrImportTablesInProgress",
                        "shape": "ImportTablesInProgress",
                        "locationName": "ImportTablesInProgress",
                        "documentation": "-- | The names of tables that are being currently imported.\n--\n-- Valid Values: List of table names.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drrImportTablesNotStarted",
                        "name": "_drrImportTablesNotStarted",
                        "shape": "ImportTablesNotStarted",
                        "locationName": "ImportTablesNotStarted",
                        "documentation": "-- | The names of tables that have not been yet imported.\n--\n-- Valid Values: List of table names",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrProgressInMegaBytes",
                        "name": "_drrProgressInMegaBytes",
                        "shape": "LongOptional",
                        "locationName": "ProgressInMegaBytes",
                        "documentation": "-- | While the resize operation is in progress, this value shows the current\n-- amount of data, in megabytes, that has been processed so far. When the resize\n-- operation is complete, this value shows the total amount of data, in\n-- megabytes, on the cluster, which may be more or less than\n-- TotalResizeDataInMegaBytes (the estimated total amount of data before\n-- resize).",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrStatus",
                        "name": "_drrStatus",
                        "shape": "String",
                        "locationName": "Status",
                        "documentation": "-- | The status of the resize operation.\n--\n-- Valid Values: 'NONE' | 'IN_PROGRESS' | 'FAILED' | 'SUCCEEDED'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrTargetClusterType",
                        "name": "_drrTargetClusterType",
                        "shape": "String",
                        "locationName": "TargetClusterType",
                        "documentation": "-- | The cluster type after the resize operation is complete.\n--\n-- Valid Values: 'multi-node' | 'single-node'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrTargetNodeType",
                        "name": "_drrTargetNodeType",
                        "shape": "String",
                        "locationName": "TargetNodeType",
                        "documentation": "-- | The node type that the cluster will have after the resize operation is\n-- complete.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrTargetNumberOfNodes",
                        "name": "_drrTargetNumberOfNodes",
                        "shape": "IntegerOptional",
                        "locationName": "TargetNumberOfNodes",
                        "documentation": "-- | The number of nodes that the cluster will have after the resize operation is\n-- complete.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "drrTotalResizeDataInMegaBytes",
                        "name": "_drrTotalResizeDataInMegaBytes",
                        "shape": "LongOptional",
                        "locationName": "TotalResizeDataInMegaBytes",
                        "documentation": "-- | The estimated total amount of data, in megabytes, on the cluster before the\n-- resize operation began.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeResize.html",
            "namespace": "Network.AWS.Redshift.DescribeResize",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DescribeResize",
            "method": "post",
            "documentation": "-- | Returns information about the last resize operation for the specified\n-- cluster. If no resize operation has ever been initiated for the specified\n-- cluster, a 'HTTP 404' error is returned. If a resize operation was initiated\n-- and completed, the status of the resize remains as 'SUCCEEDED' until the next\n-- resize.\n--\n-- A resize operation can be requested using 'ModifyCluster' and specifying a\n-- different number or type of nodes for the cluster.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "describeResize",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "drClusterIdentifier",
                    "name": "_drClusterIdentifier",
                    "shape": "String",
                    "locationName": "ClusterIdentifier",
                    "documentation": "-- | The unique identifier of a cluster whose resize progress you are requesting.\n-- This parameter is case-sensitive.\n--\n-- By default, resize operations for all clusters defined for an AWS account\n-- are returned.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drClusterIdentifier",
                        "name": "_drClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of a cluster whose resize progress you are requesting.\n-- This parameter is case-sensitive.\n--\n-- By default, resize operations for all clusters defined for an AWS account\n-- are returned.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "DescribeResize",
                "query": [
                    {
                        "field": "_drClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "drClusterIdentifier",
                        "name": "_drClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of a cluster whose resize progress you are requesting.\n-- This parameter is case-sensitive.\n--\n-- By default, resize operations for all clusters defined for an AWS account\n-- are returned.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "describeTagsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeTagsResponse",
                "resultWrapper": "DescribeTagsResult",
                "locationPad": 16,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dtrTaggedResources",
                        "name": "_dtrTaggedResources",
                        "shape": "TaggedResourceList",
                        "locationName": "TaggedResources",
                        "documentation": "-- | A list of tags with their associated resources.",
                        "typeExposed": "[TaggedResource]",
                        "type": "List \"member\" TaggedResource"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dtrMarker",
                        "name": "_dtrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dtrMarker",
                        "name": "_dtrMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'Marker' parameter and retrying the command. If the 'Marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dtrTaggedResources",
                        "name": "_dtrTaggedResources",
                        "shape": "TaggedResourceList",
                        "locationName": "TaggedResources",
                        "documentation": "-- | A list of tags with their associated resources.",
                        "typeExposed": "[TaggedResource]",
                        "type": "List \"member\" TaggedResource"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DescribeTags.html",
            "namespace": "Network.AWS.Redshift.DescribeTags",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DescribeTags",
            "method": "post",
            "documentation": "-- | Returns a list of tags. You can return tags from a specific resource by\n-- specifying an ARN, or you can return all tags for a given type of resource,\n-- such as clusters, snapshots, and so on.\n--\n-- The following are limitations for 'DescribeTags':  You cannot specify an ARN\n-- and a resource-type value together in the same request. You cannot use the 'MaxRecords' and 'Marker' parameters together with the ARN parameter. The 'MaxRecords'\n-- parameter can be a range from 10 to 50 results to return in a request.\n--\n-- If you specify both tag keys and tag values in the same request, Amazon\n-- Redshift returns all resources that match any combination of the specified\n-- keys and values. For example, if you have 'owner' and 'environment' for tag keys,\n-- and 'admin' and 'test' for tag values, all resources that have any combination of\n-- those values are returned.\n--\n-- If both tag keys and values are omitted from the request, resources are\n-- returned regardless of whether they have tag keys or values associated with\n-- them.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "describeTags",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DescribeTags",
                "query": [
                    {
                        "field": "_dtResourceName",
                        "locationName": "ResourceName",
                        "type": "field"
                    },
                    {
                        "field": "_dtResourceType",
                        "locationName": "ResourceType",
                        "type": "field"
                    },
                    {
                        "field": "_dtMaxRecords",
                        "locationName": "MaxRecords",
                        "type": "field"
                    },
                    {
                        "field": "_dtMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_dtTagKeys",
                        "locationName": "TagKeys",
                        "type": "field"
                    },
                    {
                        "field": "_dtTagValues",
                        "locationName": "TagValues",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dtResourceName",
                        "name": "_dtResourceName",
                        "shape": "String",
                        "locationName": "ResourceName",
                        "documentation": "-- | The Amazon Resource Name (ARN) for which you want to describe the tag or\n-- tags. For example, 'arn:aws:redshift:us-east-1:123456789:cluster:t1'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dtResourceType",
                        "name": "_dtResourceType",
                        "shape": "String",
                        "locationName": "ResourceType",
                        "documentation": "-- | The type of resource with which you want to view tags. Valid resource types\n-- are:  Cluster CIDR/IP EC2 security group Snapshot Cluster security group Subnet group\n-- HSM connection HSM certificate Parameter group\n--\n-- For more information about Amazon Redshift resource types and constructing\n-- ARNs, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/constructing-redshift-arn.html Constructing an Amazon Redshift Amazon Resource Name (ARN)\u003e in the\n-- Amazon Redshift Cluster Management Guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dtMaxRecords",
                        "name": "_dtMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number or response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned 'marker' value.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dtMarker",
                        "name": "_dtMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'marker' parameter and retrying the command. If the 'marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dtTagKeys",
                        "name": "_dtTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching resources that\n-- are associated with the specified key or keys. For example, suppose that you\n-- have resources tagged with keys called 'owner' and 'environment'. If you specify\n-- both of these tag keys in the request, Amazon Redshift returns a response\n-- with all resources that have either or both of these tag keys associated with\n-- them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dtTagValues",
                        "name": "_dtTagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching resources\n-- that are associated with the specified value or values. For example, suppose\n-- that you have resources tagged with values called 'admin' and 'test'. If you\n-- specify both of these tag values in the request, Amazon Redshift returns a\n-- response with all resources that have either or both of these tag values\n-- associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dtMarker",
                        "name": "_dtMarker",
                        "shape": "String",
                        "locationName": "Marker",
                        "documentation": "-- | A value that indicates the starting point for the next set of response\n-- records in a subsequent request. If a value is returned in a response, you\n-- can retrieve the next set of records by providing this returned marker value\n-- in the 'marker' parameter and retrying the command. If the 'marker' field is\n-- empty, all response records have been retrieved for the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dtMaxRecords",
                        "name": "_dtMaxRecords",
                        "shape": "IntegerOptional",
                        "locationName": "MaxRecords",
                        "documentation": "-- | The maximum number or response records to return in each call. If the number\n-- of remaining response records exceeds the specified 'MaxRecords' value, a value\n-- is returned in a 'marker' field of the response. You can retrieve the next set\n-- of records by retrying the command with the returned 'marker' value.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dtResourceName",
                        "name": "_dtResourceName",
                        "shape": "String",
                        "locationName": "ResourceName",
                        "documentation": "-- | The Amazon Resource Name (ARN) for which you want to describe the tag or\n-- tags. For example, 'arn:aws:redshift:us-east-1:123456789:cluster:t1'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dtResourceType",
                        "name": "_dtResourceType",
                        "shape": "String",
                        "locationName": "ResourceType",
                        "documentation": "-- | The type of resource with which you want to view tags. Valid resource types\n-- are:  Cluster CIDR/IP EC2 security group Snapshot Cluster security group Subnet group\n-- HSM connection HSM certificate Parameter group\n--\n-- For more information about Amazon Redshift resource types and constructing\n-- ARNs, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/constructing-redshift-arn.html Constructing an Amazon Redshift Amazon Resource Name (ARN)\u003e in the\n-- Amazon Redshift Cluster Management Guide.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dtTagKeys",
                        "name": "_dtTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A tag key or keys for which you want to return all matching resources that\n-- are associated with the specified key or keys. For example, suppose that you\n-- have resources tagged with keys called 'owner' and 'environment'. If you specify\n-- both of these tag keys in the request, Amazon Redshift returns a response\n-- with all resources that have either or both of these tag keys associated with\n-- them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dtTagValues",
                        "name": "_dtTagValues",
                        "shape": "TagValueList",
                        "locationName": "TagValues",
                        "documentation": "-- | A tag value or values for which you want to return all matching resources\n-- that are associated with the specified value or values. For example, suppose\n-- that you have resources tagged with values called 'admin' and 'test'. If you\n-- specify both of these tag values in the request, Amazon Redshift returns a\n-- response with all resources that have either or both of these tag values\n-- associated with them.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 30,
                "ctor": "disableLoggingResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DisableLoggingResponse",
                "resultWrapper": "DisableLoggingResult",
                "locationPad": 27,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlrLoggingEnabled",
                        "name": "_dlrLoggingEnabled",
                        "shape": "Boolean",
                        "locationName": "LoggingEnabled",
                        "documentation": "-- | 'true' if logging is on, 'false' if logging is off.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlrBucketName",
                        "name": "_dlrBucketName",
                        "shape": "String",
                        "locationName": "BucketName",
                        "documentation": "-- | The name of the S3 bucket where the log files are stored.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlrS3KeyPrefix",
                        "name": "_dlrS3KeyPrefix",
                        "shape": "String",
                        "locationName": "S3KeyPrefix",
                        "documentation": "-- | The prefix applied to the log file names.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlrLastSuccessfulDeliveryTime",
                        "name": "_dlrLastSuccessfulDeliveryTime",
                        "shape": "TStamp",
                        "locationName": "LastSuccessfulDeliveryTime",
                        "documentation": "-- | The last time when logs were delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlrLastFailureTime",
                        "name": "_dlrLastFailureTime",
                        "shape": "TStamp",
                        "locationName": "LastFailureTime",
                        "documentation": "-- | The last time when logs failed to be delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlrLastFailureMessage",
                        "name": "_dlrLastFailureMessage",
                        "shape": "String",
                        "locationName": "LastFailureMessage",
                        "documentation": "-- | The message indicating that logs failed to be delivered.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlrBucketName",
                        "name": "_dlrBucketName",
                        "shape": "String",
                        "locationName": "BucketName",
                        "documentation": "-- | The name of the S3 bucket where the log files are stored.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlrLastFailureMessage",
                        "name": "_dlrLastFailureMessage",
                        "shape": "String",
                        "locationName": "LastFailureMessage",
                        "documentation": "-- | The message indicating that logs failed to be delivered.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlrLastFailureTime",
                        "name": "_dlrLastFailureTime",
                        "shape": "TStamp",
                        "locationName": "LastFailureTime",
                        "documentation": "-- | The last time when logs failed to be delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlrLastSuccessfulDeliveryTime",
                        "name": "_dlrLastSuccessfulDeliveryTime",
                        "shape": "TStamp",
                        "locationName": "LastSuccessfulDeliveryTime",
                        "documentation": "-- | The last time when logs were delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlrLoggingEnabled",
                        "name": "_dlrLoggingEnabled",
                        "shape": "Boolean",
                        "locationName": "LoggingEnabled",
                        "documentation": "-- | 'true' if logging is on, 'false' if logging is off.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dlrS3KeyPrefix",
                        "name": "_dlrS3KeyPrefix",
                        "shape": "String",
                        "locationName": "S3KeyPrefix",
                        "documentation": "-- | The prefix applied to the log file names.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DisableLogging.html",
            "namespace": "Network.AWS.Redshift.DisableLogging",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DisableLogging",
            "method": "post",
            "documentation": "-- | Stops logging information, such as queries and connection attempts, for the\n-- specified Amazon Redshift cluster.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "disableLogging",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dlClusterIdentifier",
                    "name": "_dlClusterIdentifier",
                    "shape": "String",
                    "locationName": "ClusterIdentifier",
                    "documentation": "-- | The identifier of the cluster on which logging is to be stopped.\n--\n-- Example: 'examplecluster'",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dlClusterIdentifier",
                        "name": "_dlClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster on which logging is to be stopped.\n--\n-- Example: 'examplecluster'",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "DisableLogging",
                "query": [
                    {
                        "field": "_dlClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dlClusterIdentifier",
                        "name": "_dlClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster on which logging is to be stopped.\n--\n-- Example: 'examplecluster'",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "disableSnapshotCopyResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "dscrCluster",
                    "name": "_dscrCluster",
                    "shape": "Cluster",
                    "locationName": "Cluster",
                    "documentation": null,
                    "typeExposed": "Maybe Cluster",
                    "type": "Maybe Cluster"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DisableSnapshotCopyResponse",
                "resultWrapper": "DisableSnapshotCopyResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dscrCluster",
                        "name": "_dscrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "dscrCluster",
                        "name": "_dscrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_DisableSnapshotCopy.html",
            "namespace": "Network.AWS.Redshift.DisableSnapshotCopy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "DisableSnapshotCopy",
            "method": "post",
            "documentation": "-- | Disables the automatic copying of snapshots from one region to another region\n-- for a specified cluster.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "disableSnapshotCopy",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dscClusterIdentifier",
                    "name": "_dscClusterIdentifier",
                    "shape": "String",
                    "locationName": "ClusterIdentifier",
                    "documentation": "-- | The unique identifier of the source cluster that you want to disable copying\n-- of snapshots to a destination region.\n--\n-- Constraints: Must be the valid name of an existing cluster that has\n-- cross-region snapshot copy enabled.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dscClusterIdentifier",
                        "name": "_dscClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of the source cluster that you want to disable copying\n-- of snapshots to a destination region.\n--\n-- Constraints: Must be the valid name of an existing cluster that has\n-- cross-region snapshot copy enabled.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "DisableSnapshotCopy",
                "query": [
                    {
                        "field": "_dscClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dscClusterIdentifier",
                        "name": "_dscClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of the source cluster that you want to disable copying\n-- of snapshots to a destination region.\n--\n-- Constraints: Must be the valid name of an existing cluster that has\n-- cross-region snapshot copy enabled.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 30,
                "ctor": "enableLoggingResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "EnableLoggingResponse",
                "resultWrapper": "EnableLoggingResult",
                "locationPad": 27,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "elrLoggingEnabled",
                        "name": "_elrLoggingEnabled",
                        "shape": "Boolean",
                        "locationName": "LoggingEnabled",
                        "documentation": "-- | 'true' if logging is on, 'false' if logging is off.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "elrBucketName",
                        "name": "_elrBucketName",
                        "shape": "String",
                        "locationName": "BucketName",
                        "documentation": "-- | The name of the S3 bucket where the log files are stored.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "elrS3KeyPrefix",
                        "name": "_elrS3KeyPrefix",
                        "shape": "String",
                        "locationName": "S3KeyPrefix",
                        "documentation": "-- | The prefix applied to the log file names.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "elrLastSuccessfulDeliveryTime",
                        "name": "_elrLastSuccessfulDeliveryTime",
                        "shape": "TStamp",
                        "locationName": "LastSuccessfulDeliveryTime",
                        "documentation": "-- | The last time when logs were delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "elrLastFailureTime",
                        "name": "_elrLastFailureTime",
                        "shape": "TStamp",
                        "locationName": "LastFailureTime",
                        "documentation": "-- | The last time when logs failed to be delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "elrLastFailureMessage",
                        "name": "_elrLastFailureMessage",
                        "shape": "String",
                        "locationName": "LastFailureMessage",
                        "documentation": "-- | The message indicating that logs failed to be delivered.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "elrBucketName",
                        "name": "_elrBucketName",
                        "shape": "String",
                        "locationName": "BucketName",
                        "documentation": "-- | The name of the S3 bucket where the log files are stored.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "elrLastFailureMessage",
                        "name": "_elrLastFailureMessage",
                        "shape": "String",
                        "locationName": "LastFailureMessage",
                        "documentation": "-- | The message indicating that logs failed to be delivered.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "elrLastFailureTime",
                        "name": "_elrLastFailureTime",
                        "shape": "TStamp",
                        "locationName": "LastFailureTime",
                        "documentation": "-- | The last time when logs failed to be delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "elrLastSuccessfulDeliveryTime",
                        "name": "_elrLastSuccessfulDeliveryTime",
                        "shape": "TStamp",
                        "locationName": "LastSuccessfulDeliveryTime",
                        "documentation": "-- | The last time when logs were delivered.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "elrLoggingEnabled",
                        "name": "_elrLoggingEnabled",
                        "shape": "Boolean",
                        "locationName": "LoggingEnabled",
                        "documentation": "-- | 'true' if logging is on, 'false' if logging is off.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "elrS3KeyPrefix",
                        "name": "_elrS3KeyPrefix",
                        "shape": "String",
                        "locationName": "S3KeyPrefix",
                        "documentation": "-- | The prefix applied to the log file names.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_EnableLogging.html",
            "namespace": "Network.AWS.Redshift.EnableLogging",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "EnableLogging",
            "method": "post",
            "documentation": "-- | Starts logging information, such as queries and connection attempts, for the\n-- specified Amazon Redshift cluster.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 20,
                "ctor": "enableLogging",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "elClusterIdentifier",
                        "name": "_elClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster on which logging is to be started.\n--\n-- Example: 'examplecluster'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "elBucketName",
                        "name": "_elBucketName",
                        "shape": "String",
                        "locationName": "BucketName",
                        "documentation": "-- | The name of an existing S3 bucket where the log files are to be stored.\n--\n-- Constraints:\n--\n-- Must be in the same region as the cluster The cluster must have read bucket\n-- and put object permissions",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "EnableLogging",
                "query": [
                    {
                        "field": "_elClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_elBucketName",
                        "locationName": "BucketName",
                        "type": "field"
                    },
                    {
                        "field": "_elS3KeyPrefix",
                        "locationName": "S3KeyPrefix",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "elS3KeyPrefix",
                        "name": "_elS3KeyPrefix",
                        "shape": "String",
                        "locationName": "S3KeyPrefix",
                        "documentation": "-- | The prefix applied to the log file names.\n--\n-- Constraints:\n--\n-- Cannot exceed 512 characters Cannot contain spaces( ), double quotes (\"),\n-- single quotes ('), a backslash (\\), or control characters. The hexadecimal\n-- codes for invalid characters are:  x00 to x20 x22 x27 x5c x7f or larger",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "elBucketName",
                        "name": "_elBucketName",
                        "shape": "String",
                        "locationName": "BucketName",
                        "documentation": "-- | The name of an existing S3 bucket where the log files are to be stored.\n--\n-- Constraints:\n--\n-- Must be in the same region as the cluster The cluster must have read bucket\n-- and put object permissions",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "elClusterIdentifier",
                        "name": "_elClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster on which logging is to be started.\n--\n-- Example: 'examplecluster'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "elS3KeyPrefix",
                        "name": "_elS3KeyPrefix",
                        "shape": "String",
                        "locationName": "S3KeyPrefix",
                        "documentation": "-- | The prefix applied to the log file names.\n--\n-- Constraints:\n--\n-- Cannot exceed 512 characters Cannot contain spaces( ), double quotes (\"),\n-- single quotes ('), a backslash (\\), or control characters. The hexadecimal\n-- codes for invalid characters are:  x00 to x20 x22 x27 x5c x7f or larger",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "enableSnapshotCopyResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "escrCluster",
                    "name": "_escrCluster",
                    "shape": "Cluster",
                    "locationName": "Cluster",
                    "documentation": null,
                    "typeExposed": "Maybe Cluster",
                    "type": "Maybe Cluster"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "EnableSnapshotCopyResponse",
                "resultWrapper": "EnableSnapshotCopyResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "escrCluster",
                        "name": "_escrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "escrCluster",
                        "name": "_escrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_EnableSnapshotCopy.html",
            "namespace": "Network.AWS.Redshift.EnableSnapshotCopy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "EnableSnapshotCopy",
            "method": "post",
            "documentation": "-- | Enables the automatic copy of snapshots from one region to another region for\n-- a specified cluster.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 21,
                "ctor": "enableSnapshotCopy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "escClusterIdentifier",
                        "name": "_escClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of the source cluster to copy snapshots from.\n--\n-- Constraints: Must be the valid name of an existing cluster that does not\n-- already have cross-region snapshot copy enabled.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "escDestinationRegion",
                        "name": "_escDestinationRegion",
                        "shape": "String",
                        "locationName": "DestinationRegion",
                        "documentation": "-- | The destination region that you want to copy snapshots to.\n--\n-- Constraints: Must be the name of a valid region. For more information, see \u003chttp://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region Regions and Endpoints\u003e in the Amazon Web Services General Reference.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "EnableSnapshotCopy",
                "query": [
                    {
                        "field": "_escClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_escDestinationRegion",
                        "locationName": "DestinationRegion",
                        "type": "field"
                    },
                    {
                        "field": "_escRetentionPeriod",
                        "locationName": "RetentionPeriod",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "escRetentionPeriod",
                        "name": "_escRetentionPeriod",
                        "shape": "IntegerOptional",
                        "locationName": "RetentionPeriod",
                        "documentation": "-- | The number of days to retain automated snapshots in the destination region\n-- after they are copied from the source region.\n--\n-- Default: 7.\n--\n-- Constraints: Must be at least 1 and no more than 35.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "escClusterIdentifier",
                        "name": "_escClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of the source cluster to copy snapshots from.\n--\n-- Constraints: Must be the valid name of an existing cluster that does not\n-- already have cross-region snapshot copy enabled.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "escDestinationRegion",
                        "name": "_escDestinationRegion",
                        "shape": "String",
                        "locationName": "DestinationRegion",
                        "documentation": "-- | The destination region that you want to copy snapshots to.\n--\n-- Constraints: Must be the name of a valid region. For more information, see \u003chttp://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region Regions and Endpoints\u003e in the Amazon Web Services General Reference.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "escRetentionPeriod",
                        "name": "_escRetentionPeriod",
                        "shape": "IntegerOptional",
                        "locationName": "RetentionPeriod",
                        "documentation": "-- | The number of days to retain automated snapshots in the destination region\n-- after they are copied from the source region.\n--\n-- Default: 7.\n--\n-- Constraints: Must be at least 1 and no more than 35.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "modifyClusterResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "mcrCluster",
                    "name": "_mcrCluster",
                    "shape": "Cluster",
                    "locationName": "Cluster",
                    "documentation": null,
                    "typeExposed": "Maybe Cluster",
                    "type": "Maybe Cluster"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ModifyClusterResponse",
                "resultWrapper": "ModifyClusterResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcrCluster",
                        "name": "_mcrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcrCluster",
                        "name": "_mcrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_ModifyCluster.html",
            "namespace": "Network.AWS.Redshift.ModifyCluster",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "ModifyCluster",
            "method": "post",
            "documentation": "-- | Modifies the settings for a cluster. For example, you can add another\n-- security or parameter group, update the preferred maintenance window, or\n-- change the master user password. Resetting a cluster password or modifying\n-- the security groups associated with a cluster do not need a reboot. However,\n-- modifying a parameter group requires a reboot for parameters to take effect.\n-- For more information about managing clusters, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html Amazon Redshift Clusters\u003e\n-- in the /Amazon Redshift Cluster Management Guide/ .\n--\n-- You can also change node type and the number of nodes to scale up or down\n-- the cluster. When resizing a cluster, you must specify both the number of\n-- nodes and the node type even if one of the parameters does not change.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 35,
                "ctor": "modifyCluster",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mcClusterIdentifier",
                        "name": "_mcClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of the cluster to be modified.\n--\n-- Example: 'examplecluster'",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 33,
                "name": "ModifyCluster",
                "query": [
                    {
                        "field": "_mcClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_mcClusterType",
                        "locationName": "ClusterType",
                        "type": "field"
                    },
                    {
                        "field": "_mcNodeType",
                        "locationName": "NodeType",
                        "type": "field"
                    },
                    {
                        "field": "_mcNumberOfNodes",
                        "locationName": "NumberOfNodes",
                        "type": "field"
                    },
                    {
                        "field": "_mcClusterSecurityGroups",
                        "locationName": "ClusterSecurityGroups",
                        "type": "field"
                    },
                    {
                        "field": "_mcVpcSecurityGroupIds",
                        "locationName": "VpcSecurityGroupIds",
                        "type": "field"
                    },
                    {
                        "field": "_mcMasterUserPassword",
                        "locationName": "MasterUserPassword",
                        "type": "field"
                    },
                    {
                        "field": "_mcClusterParameterGroupName",
                        "locationName": "ClusterParameterGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_mcAutomatedSnapshotRetentionPeriod",
                        "locationName": "AutomatedSnapshotRetentionPeriod",
                        "type": "field"
                    },
                    {
                        "field": "_mcPreferredMaintenanceWindow",
                        "locationName": "PreferredMaintenanceWindow",
                        "type": "field"
                    },
                    {
                        "field": "_mcClusterVersion",
                        "locationName": "ClusterVersion",
                        "type": "field"
                    },
                    {
                        "field": "_mcAllowVersionUpgrade",
                        "locationName": "AllowVersionUpgrade",
                        "type": "field"
                    },
                    {
                        "field": "_mcHsmClientCertificateIdentifier",
                        "locationName": "HsmClientCertificateIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_mcHsmConfigurationIdentifier",
                        "locationName": "HsmConfigurationIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_mcNewClusterIdentifier",
                        "locationName": "NewClusterIdentifier",
                        "type": "field"
                    }
                ],
                "locationPad": 33,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcClusterType",
                        "name": "_mcClusterType",
                        "shape": "String",
                        "locationName": "ClusterType",
                        "documentation": "-- | The new cluster type.\n--\n-- When you submit your cluster resize request, your existing cluster goes\n-- into a read-only mode. After Amazon Redshift provisions a new cluster based\n-- on your resize requirements, there will be outage for a period while the old\n-- cluster is deleted and your connection is switched to the new cluster. You\n-- can use 'DescribeResize' to track the progress of the resize request.\n--\n-- Valid Values: ' multi-node | single-node '",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcNodeType",
                        "name": "_mcNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The new node type of the cluster. If you specify a new node type, you must\n-- also specify the number of nodes parameter.\n--\n-- When you submit your request to resize a cluster, Amazon Redshift sets\n-- access permissions for the cluster to read-only. After Amazon Redshift\n-- provisions a new cluster according to your resize requirements, there will be\n-- a temporary outage while the old cluster is deleted and your connection is\n-- switched to the new cluster. When the new connection is complete, the\n-- original access permissions for the cluster are restored. You can use 'DescribeResize' to track the progress of the resize request.\n--\n-- Valid Values: ' dw1.xlarge' | 'dw1.8xlarge' | 'dw2.large' | 'dw2.8xlarge'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcNumberOfNodes",
                        "name": "_mcNumberOfNodes",
                        "shape": "IntegerOptional",
                        "locationName": "NumberOfNodes",
                        "documentation": "-- | The new number of nodes of the cluster. If you specify a new number of\n-- nodes, you must also specify the node type parameter.\n--\n-- When you submit your request to resize a cluster, Amazon Redshift sets\n-- access permissions for the cluster to read-only. After Amazon Redshift\n-- provisions a new cluster according to your resize requirements, there will be\n-- a temporary outage while the old cluster is deleted and your connection is\n-- switched to the new cluster. When the new connection is complete, the\n-- original access permissions for the cluster are restored. You can use 'DescribeResize' to track the progress of the resize request.\n--\n-- Valid Values: Integer greater than '0'.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mcClusterSecurityGroups",
                        "name": "_mcClusterSecurityGroups",
                        "shape": "ClusterSecurityGroupNameList",
                        "locationName": "ClusterSecurityGroups",
                        "documentation": "-- | A list of cluster security groups to be authorized on this cluster. This\n-- change is asynchronously applied as soon as possible.\n--\n-- Security groups currently associated with the cluster, and not in the list\n-- of groups to apply, will be revoked from the cluster.\n--\n-- Constraints:\n--\n-- Must be 1 to 255 alphanumeric characters or hyphens First character must be\n-- a letter Cannot end with a hyphen or contain two consecutive hyphens",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mcVpcSecurityGroupIds",
                        "name": "_mcVpcSecurityGroupIds",
                        "shape": "VpcSecurityGroupIdList",
                        "locationName": "VpcSecurityGroupIds",
                        "documentation": "-- | A list of virtual private cloud (VPC) security groups to be associated with\n-- the cluster.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcMasterUserPassword",
                        "name": "_mcMasterUserPassword",
                        "shape": "String",
                        "locationName": "MasterUserPassword",
                        "documentation": "-- | The new password for the cluster master user. This change is asynchronously\n-- applied as soon as possible. Between the time of the request and the\n-- completion of the request, the 'MasterUserPassword' element exists in the 'PendingModifiedValues' element of the operation response.  Operations never return the password, so\n-- this operation provides a way to regain access to the master user account for\n-- a cluster if the password is lost.\n--\n-- Default: Uses existing setting.\n--\n-- Constraints:\n--\n-- Must be between 8 and 64 characters in length. Must contain at least one\n-- uppercase letter. Must contain at least one lowercase letter. Must contain\n-- one number. Can be any printable ASCII character (ASCII code 33 to 126)\n-- except ' (single quote), \" (double quote), \\, /, @, or space.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcClusterParameterGroupName",
                        "name": "_mcClusterParameterGroupName",
                        "shape": "String",
                        "locationName": "ClusterParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group to apply to this cluster. This\n-- change is applied only after the cluster is rebooted. To reboot a cluster use 'RebootCluster'.\n--\n-- Default: Uses existing setting.\n--\n-- Constraints: The cluster parameter group must be in the same parameter group\n-- family that matches the cluster version.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcAutomatedSnapshotRetentionPeriod",
                        "name": "_mcAutomatedSnapshotRetentionPeriod",
                        "shape": "IntegerOptional",
                        "locationName": "AutomatedSnapshotRetentionPeriod",
                        "documentation": "-- | The number of days that automated snapshots are retained. If the value is 0,\n-- automated snapshots are disabled. Even if automated snapshots are disabled,\n-- you can still create manual snapshots when you want with 'CreateClusterSnapshot'\n-- .\n--\n-- If you decrease the automated snapshot retention period from its current\n-- value, existing automated snapshots that fall outside of the new retention\n-- period will be immediately deleted.\n--\n-- Default: Uses existing setting.\n--\n-- Constraints: Must be a value from 0 to 35.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcPreferredMaintenanceWindow",
                        "name": "_mcPreferredMaintenanceWindow",
                        "shape": "String",
                        "locationName": "PreferredMaintenanceWindow",
                        "documentation": "-- | The weekly time range (in UTC) during which system maintenance can occur, if\n-- necessary. If system maintenance is necessary during the window, it may\n-- result in an outage.\n--\n-- This maintenance window change is made immediately. If the new maintenance\n-- window indicates the current time, there must be at least 120 minutes between\n-- the current time and end of the window in order to ensure that pending\n-- changes are applied.\n--\n-- Default: Uses existing setting.\n--\n-- Format: ddd:hh24:mi-ddd:hh24:mi, for example 'wed:07:30-wed:08:00'.\n--\n-- Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun\n--\n-- Constraints: Must be at least 30 minutes.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcClusterVersion",
                        "name": "_mcClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The new version number of the Amazon Redshift engine to upgrade to.\n--\n-- For major version upgrades, if a non-default cluster parameter group is\n-- currently in use, a new cluster parameter group in the cluster parameter\n-- group family for the new version must be specified. The new cluster parameter\n-- group can be the default for that cluster parameter group family. For more\n-- information about managing parameter groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html Amazon Redshift ParameterGroups\u003e in the /Amazon Redshift Cluster Management Guide/.\n--\n-- Example: '1.0'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcAllowVersionUpgrade",
                        "name": "_mcAllowVersionUpgrade",
                        "shape": "BooleanOptional",
                        "locationName": "AllowVersionUpgrade",
                        "documentation": "-- | If 'true', major version upgrades will be applied automatically to the cluster\n-- during the maintenance window.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcHsmClientCertificateIdentifier",
                        "name": "_mcHsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | Specifies the name of the HSM client certificate the Amazon Redshift cluster\n-- uses to retrieve the data encryption keys stored in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcHsmConfigurationIdentifier",
                        "name": "_mcHsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | Specifies the name of the HSM configuration that contains the information the\n-- Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcNewClusterIdentifier",
                        "name": "_mcNewClusterIdentifier",
                        "shape": "String",
                        "locationName": "NewClusterIdentifier",
                        "documentation": "-- | The new identifier for the cluster.\n--\n-- Constraints:\n--\n-- Must contain from 1 to 63 alphanumeric characters or hyphens. Alphabetic\n-- characters must be lowercase. First character must be a letter. Cannot end\n-- with a hyphen or contain two consecutive hyphens. Must be unique for all\n-- clusters within an AWS account.  Example: 'examplecluster'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcAllowVersionUpgrade",
                        "name": "_mcAllowVersionUpgrade",
                        "shape": "BooleanOptional",
                        "locationName": "AllowVersionUpgrade",
                        "documentation": "-- | If 'true', major version upgrades will be applied automatically to the cluster\n-- during the maintenance window.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcAutomatedSnapshotRetentionPeriod",
                        "name": "_mcAutomatedSnapshotRetentionPeriod",
                        "shape": "IntegerOptional",
                        "locationName": "AutomatedSnapshotRetentionPeriod",
                        "documentation": "-- | The number of days that automated snapshots are retained. If the value is 0,\n-- automated snapshots are disabled. Even if automated snapshots are disabled,\n-- you can still create manual snapshots when you want with 'CreateClusterSnapshot'\n-- .\n--\n-- If you decrease the automated snapshot retention period from its current\n-- value, existing automated snapshots that fall outside of the new retention\n-- period will be immediately deleted.\n--\n-- Default: Uses existing setting.\n--\n-- Constraints: Must be a value from 0 to 35.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mcClusterIdentifier",
                        "name": "_mcClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of the cluster to be modified.\n--\n-- Example: 'examplecluster'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcClusterParameterGroupName",
                        "name": "_mcClusterParameterGroupName",
                        "shape": "String",
                        "locationName": "ClusterParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group to apply to this cluster. This\n-- change is applied only after the cluster is rebooted. To reboot a cluster use 'RebootCluster'.\n--\n-- Default: Uses existing setting.\n--\n-- Constraints: The cluster parameter group must be in the same parameter group\n-- family that matches the cluster version.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mcClusterSecurityGroups",
                        "name": "_mcClusterSecurityGroups",
                        "shape": "ClusterSecurityGroupNameList",
                        "locationName": "ClusterSecurityGroups",
                        "documentation": "-- | A list of cluster security groups to be authorized on this cluster. This\n-- change is asynchronously applied as soon as possible.\n--\n-- Security groups currently associated with the cluster, and not in the list\n-- of groups to apply, will be revoked from the cluster.\n--\n-- Constraints:\n--\n-- Must be 1 to 255 alphanumeric characters or hyphens First character must be\n-- a letter Cannot end with a hyphen or contain two consecutive hyphens",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcClusterType",
                        "name": "_mcClusterType",
                        "shape": "String",
                        "locationName": "ClusterType",
                        "documentation": "-- | The new cluster type.\n--\n-- When you submit your cluster resize request, your existing cluster goes\n-- into a read-only mode. After Amazon Redshift provisions a new cluster based\n-- on your resize requirements, there will be outage for a period while the old\n-- cluster is deleted and your connection is switched to the new cluster. You\n-- can use 'DescribeResize' to track the progress of the resize request.\n--\n-- Valid Values: ' multi-node | single-node '",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcClusterVersion",
                        "name": "_mcClusterVersion",
                        "shape": "String",
                        "locationName": "ClusterVersion",
                        "documentation": "-- | The new version number of the Amazon Redshift engine to upgrade to.\n--\n-- For major version upgrades, if a non-default cluster parameter group is\n-- currently in use, a new cluster parameter group in the cluster parameter\n-- group family for the new version must be specified. The new cluster parameter\n-- group can be the default for that cluster parameter group family. For more\n-- information about managing parameter groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html Amazon Redshift ParameterGroups\u003e in the /Amazon Redshift Cluster Management Guide/.\n--\n-- Example: '1.0'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcHsmClientCertificateIdentifier",
                        "name": "_mcHsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | Specifies the name of the HSM client certificate the Amazon Redshift cluster\n-- uses to retrieve the data encryption keys stored in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcHsmConfigurationIdentifier",
                        "name": "_mcHsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | Specifies the name of the HSM configuration that contains the information the\n-- Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcMasterUserPassword",
                        "name": "_mcMasterUserPassword",
                        "shape": "String",
                        "locationName": "MasterUserPassword",
                        "documentation": "-- | The new password for the cluster master user. This change is asynchronously\n-- applied as soon as possible. Between the time of the request and the\n-- completion of the request, the 'MasterUserPassword' element exists in the 'PendingModifiedValues' element of the operation response.  Operations never return the password, so\n-- this operation provides a way to regain access to the master user account for\n-- a cluster if the password is lost.\n--\n-- Default: Uses existing setting.\n--\n-- Constraints:\n--\n-- Must be between 8 and 64 characters in length. Must contain at least one\n-- uppercase letter. Must contain at least one lowercase letter. Must contain\n-- one number. Can be any printable ASCII character (ASCII code 33 to 126)\n-- except ' (single quote), \" (double quote), \\, /, @, or space.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcNewClusterIdentifier",
                        "name": "_mcNewClusterIdentifier",
                        "shape": "String",
                        "locationName": "NewClusterIdentifier",
                        "documentation": "-- | The new identifier for the cluster.\n--\n-- Constraints:\n--\n-- Must contain from 1 to 63 alphanumeric characters or hyphens. Alphabetic\n-- characters must be lowercase. First character must be a letter. Cannot end\n-- with a hyphen or contain two consecutive hyphens. Must be unique for all\n-- clusters within an AWS account.  Example: 'examplecluster'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcNodeType",
                        "name": "_mcNodeType",
                        "shape": "String",
                        "locationName": "NodeType",
                        "documentation": "-- | The new node type of the cluster. If you specify a new node type, you must\n-- also specify the number of nodes parameter.\n--\n-- When you submit your request to resize a cluster, Amazon Redshift sets\n-- access permissions for the cluster to read-only. After Amazon Redshift\n-- provisions a new cluster according to your resize requirements, there will be\n-- a temporary outage while the old cluster is deleted and your connection is\n-- switched to the new cluster. When the new connection is complete, the\n-- original access permissions for the cluster are restored. You can use 'DescribeResize' to track the progress of the resize request.\n--\n-- Valid Values: ' dw1.xlarge' | 'dw1.8xlarge' | 'dw2.large' | 'dw2.8xlarge'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcNumberOfNodes",
                        "name": "_mcNumberOfNodes",
                        "shape": "IntegerOptional",
                        "locationName": "NumberOfNodes",
                        "documentation": "-- | The new number of nodes of the cluster. If you specify a new number of\n-- nodes, you must also specify the node type parameter.\n--\n-- When you submit your request to resize a cluster, Amazon Redshift sets\n-- access permissions for the cluster to read-only. After Amazon Redshift\n-- provisions a new cluster according to your resize requirements, there will be\n-- a temporary outage while the old cluster is deleted and your connection is\n-- switched to the new cluster. When the new connection is complete, the\n-- original access permissions for the cluster are restored. You can use 'DescribeResize' to track the progress of the resize request.\n--\n-- Valid Values: Integer greater than '0'.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcPreferredMaintenanceWindow",
                        "name": "_mcPreferredMaintenanceWindow",
                        "shape": "String",
                        "locationName": "PreferredMaintenanceWindow",
                        "documentation": "-- | The weekly time range (in UTC) during which system maintenance can occur, if\n-- necessary. If system maintenance is necessary during the window, it may\n-- result in an outage.\n--\n-- This maintenance window change is made immediately. If the new maintenance\n-- window indicates the current time, there must be at least 120 minutes between\n-- the current time and end of the window in order to ensure that pending\n-- changes are applied.\n--\n-- Default: Uses existing setting.\n--\n-- Format: ddd:hh24:mi-ddd:hh24:mi, for example 'wed:07:30-wed:08:00'.\n--\n-- Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun\n--\n-- Constraints: Must be at least 30 minutes.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mcVpcSecurityGroupIds",
                        "name": "_mcVpcSecurityGroupIds",
                        "shape": "VpcSecurityGroupIdList",
                        "locationName": "VpcSecurityGroupIds",
                        "documentation": "-- | A list of virtual private cloud (VPC) security groups to be associated with\n-- the cluster.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 26,
                "ctor": "modifyClusterParameterGroupResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ModifyClusterParameterGroupResponse",
                "resultWrapper": "ModifyClusterParameterGroupResult",
                "locationPad": 21,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcpgrParameterGroupName",
                        "name": "_mcpgrParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcpgrParameterGroupStatus",
                        "name": "_mcpgrParameterGroupStatus",
                        "shape": "String",
                        "locationName": "ParameterGroupStatus",
                        "documentation": "-- | The status of the parameter group. For example, if you made a change to a\n-- parameter group name-value pair, then the change could be pending a reboot of\n-- an associated cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcpgrParameterGroupName",
                        "name": "_mcpgrParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcpgrParameterGroupStatus",
                        "name": "_mcpgrParameterGroupStatus",
                        "shape": "String",
                        "locationName": "ParameterGroupStatus",
                        "documentation": "-- | The status of the parameter group. For example, if you made a change to a\n-- parameter group name-value pair, then the change could be pending a reboot of\n-- an associated cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_ModifyClusterParameterGroup.html",
            "namespace": "Network.AWS.Redshift.ModifyClusterParameterGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "ModifyClusterParameterGroup",
            "method": "post",
            "documentation": "-- | Modifies the parameters of a parameter group.\n--\n-- For more information about managing parameter groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html Amazon RedshiftParameter Groups\u003e in the /Amazon Redshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "modifyClusterParameterGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mcpgParameterGroupName",
                        "name": "_mcpgParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the parameter group to be modified.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "ModifyClusterParameterGroup",
                "query": [
                    {
                        "field": "_mcpgParameterGroupName",
                        "locationName": "ParameterGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_mcpgParameters",
                        "locationName": "Parameters",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mcpgParameters",
                        "name": "_mcpgParameters",
                        "shape": "ParametersList",
                        "locationName": "Parameters",
                        "documentation": "-- | An array of parameters to be modified. A maximum of 20 parameters can be\n-- modified in a single request.\n--\n-- For each parameter to be modified, you must supply at least the parameter\n-- name and parameter value; other name-value pairs of the parameter are\n-- optional.\n--\n-- For the workload management (WLM) configuration, you must supply all the\n-- name-value pairs in the wlm_json_configuration parameter.",
                        "typeExposed": "[Parameter]",
                        "type": "List \"member\" Parameter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mcpgParameterGroupName",
                        "name": "_mcpgParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the parameter group to be modified.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mcpgParameters",
                        "name": "_mcpgParameters",
                        "shape": "ParametersList",
                        "locationName": "Parameters",
                        "documentation": "-- | An array of parameters to be modified. A maximum of 20 parameters can be\n-- modified in a single request.\n--\n-- For each parameter to be modified, you must supply at least the parameter\n-- name and parameter value; other name-value pairs of the parameter are\n-- optional.\n--\n-- For the workload management (WLM) configuration, you must supply all the\n-- name-value pairs in the wlm_json_configuration parameter.",
                        "typeExposed": "[Parameter]",
                        "type": "List \"member\" Parameter"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "modifyClusterSubnetGroupResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "mcsgrClusterSubnetGroup",
                    "name": "_mcsgrClusterSubnetGroup",
                    "shape": "ClusterSubnetGroup",
                    "locationName": "ClusterSubnetGroup",
                    "documentation": null,
                    "typeExposed": "Maybe ClusterSubnetGroup",
                    "type": "Maybe ClusterSubnetGroup"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ModifyClusterSubnetGroupResponse",
                "resultWrapper": "ModifyClusterSubnetGroupResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcsgrClusterSubnetGroup",
                        "name": "_mcsgrClusterSubnetGroup",
                        "shape": "ClusterSubnetGroup",
                        "locationName": "ClusterSubnetGroup",
                        "documentation": null,
                        "typeExposed": "Maybe ClusterSubnetGroup",
                        "type": "Maybe ClusterSubnetGroup"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcsgrClusterSubnetGroup",
                        "name": "_mcsgrClusterSubnetGroup",
                        "shape": "ClusterSubnetGroup",
                        "locationName": "ClusterSubnetGroup",
                        "documentation": null,
                        "typeExposed": "Maybe ClusterSubnetGroup",
                        "type": "Maybe ClusterSubnetGroup"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_ModifyClusterSubnetGroup.html",
            "namespace": "Network.AWS.Redshift.ModifyClusterSubnetGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "ModifyClusterSubnetGroup",
            "method": "post",
            "documentation": "-- | Modifies a cluster subnet group to include the specified list of VPC\n-- subnets. The operation replaces the existing list of subnets with the new\n-- list of subnets.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "modifyClusterSubnetGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mcsgClusterSubnetGroupName",
                        "name": "_mcsgClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name of the subnet group to be modified.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "ModifyClusterSubnetGroup",
                "query": [
                    {
                        "field": "_mcsgClusterSubnetGroupName",
                        "locationName": "ClusterSubnetGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_mcsgDescription",
                        "locationName": "Description",
                        "type": "field"
                    },
                    {
                        "field": "_mcsgSubnetIds",
                        "locationName": "SubnetIds",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcsgDescription",
                        "name": "_mcsgDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A text description of the subnet group to be modified.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mcsgSubnetIds",
                        "name": "_mcsgSubnetIds",
                        "shape": "SubnetIdentifierList",
                        "locationName": "SubnetIds",
                        "documentation": "-- | An array of VPC subnet IDs. A maximum of 20 subnets can be modified in a\n-- single request.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mcsgClusterSubnetGroupName",
                        "name": "_mcsgClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name of the subnet group to be modified.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mcsgDescription",
                        "name": "_mcsgDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A text description of the subnet group to be modified.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mcsgSubnetIds",
                        "name": "_mcsgSubnetIds",
                        "shape": "SubnetIdentifierList",
                        "locationName": "SubnetIds",
                        "documentation": "-- | An array of VPC subnet IDs. A maximum of 20 subnets can be modified in a\n-- single request.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "modifyEventSubscriptionResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "mesrEventSubscription",
                    "name": "_mesrEventSubscription",
                    "shape": "EventSubscription",
                    "locationName": "EventSubscription",
                    "documentation": null,
                    "typeExposed": "Maybe EventSubscription",
                    "type": "Maybe EventSubscription"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ModifyEventSubscriptionResponse",
                "resultWrapper": "ModifyEventSubscriptionResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mesrEventSubscription",
                        "name": "_mesrEventSubscription",
                        "shape": "EventSubscription",
                        "locationName": "EventSubscription",
                        "documentation": null,
                        "typeExposed": "Maybe EventSubscription",
                        "type": "Maybe EventSubscription"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mesrEventSubscription",
                        "name": "_mesrEventSubscription",
                        "shape": "EventSubscription",
                        "locationName": "EventSubscription",
                        "documentation": null,
                        "typeExposed": "Maybe EventSubscription",
                        "type": "Maybe EventSubscription"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_ModifyEventSubscription.html",
            "namespace": "Network.AWS.Redshift.ModifyEventSubscription",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "ModifyEventSubscription",
            "method": "post",
            "documentation": "-- | Modifies an existing Amazon Redshift event notification subscription.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 20,
                "ctor": "modifyEventSubscription",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mesSubscriptionName",
                        "name": "_mesSubscriptionName",
                        "shape": "String",
                        "locationName": "SubscriptionName",
                        "documentation": "-- | The name of the modified Amazon Redshift event notification subscription.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "ModifyEventSubscription",
                "query": [
                    {
                        "field": "_mesSubscriptionName",
                        "locationName": "SubscriptionName",
                        "type": "field"
                    },
                    {
                        "field": "_mesSnsTopicArn",
                        "locationName": "SnsTopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_mesSourceType",
                        "locationName": "SourceType",
                        "type": "field"
                    },
                    {
                        "field": "_mesSourceIds",
                        "locationName": "SourceIds",
                        "type": "field"
                    },
                    {
                        "field": "_mesEventCategories",
                        "locationName": "EventCategories",
                        "type": "field"
                    },
                    {
                        "field": "_mesSeverity",
                        "locationName": "Severity",
                        "type": "field"
                    },
                    {
                        "field": "_mesEnabled",
                        "locationName": "Enabled",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mesSnsTopicArn",
                        "name": "_mesSnsTopicArn",
                        "shape": "String",
                        "locationName": "SnsTopicArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SNS topic to be used by the event\n-- notification subscription.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mesSourceType",
                        "name": "_mesSourceType",
                        "shape": "String",
                        "locationName": "SourceType",
                        "documentation": "-- | The type of source that will be generating the events. For example, if you\n-- want to be notified of events generated by a cluster, you would set this\n-- parameter to cluster. If this value is not specified, events are returned for\n-- all Amazon Redshift objects in your AWS account. You must specify a source\n-- type in order to specify source IDs.\n--\n-- Valid values: cluster, cluster-parameter-group, cluster-security-group, and\n-- cluster-snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mesSourceIds",
                        "name": "_mesSourceIds",
                        "shape": "SourceIdsList",
                        "locationName": "SourceIds",
                        "documentation": "-- | A list of one or more identifiers of Amazon Redshift source objects. All of\n-- the objects must be of the same type as was specified in the source type\n-- parameter. The event subscription will return only events generated by the\n-- specified objects. If not specified, then events are returned for all objects\n-- within the source type specified.\n--\n-- Example: my-cluster-1, my-cluster-2\n--\n-- Example: my-snapshot-20131010",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mesEventCategories",
                        "name": "_mesEventCategories",
                        "shape": "EventCategoriesList",
                        "locationName": "EventCategories",
                        "documentation": "-- | Specifies the Amazon Redshift event categories to be published by the event\n-- notification subscription.\n--\n-- Values: Configuration, Management, Monitoring, Security",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mesSeverity",
                        "name": "_mesSeverity",
                        "shape": "String",
                        "locationName": "Severity",
                        "documentation": "-- | Specifies the Amazon Redshift event severity to be published by the event\n-- notification subscription.\n--\n-- Values: ERROR, INFO",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mesEnabled",
                        "name": "_mesEnabled",
                        "shape": "BooleanOptional",
                        "locationName": "Enabled",
                        "documentation": "-- | A Boolean value indicating if the subscription is enabled. 'true' indicates\n-- the subscription is enabled",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mesEnabled",
                        "name": "_mesEnabled",
                        "shape": "BooleanOptional",
                        "locationName": "Enabled",
                        "documentation": "-- | A Boolean value indicating if the subscription is enabled. 'true' indicates\n-- the subscription is enabled",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mesEventCategories",
                        "name": "_mesEventCategories",
                        "shape": "EventCategoriesList",
                        "locationName": "EventCategories",
                        "documentation": "-- | Specifies the Amazon Redshift event categories to be published by the event\n-- notification subscription.\n--\n-- Values: Configuration, Management, Monitoring, Security",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mesSeverity",
                        "name": "_mesSeverity",
                        "shape": "String",
                        "locationName": "Severity",
                        "documentation": "-- | Specifies the Amazon Redshift event severity to be published by the event\n-- notification subscription.\n--\n-- Values: ERROR, INFO",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mesSnsTopicArn",
                        "name": "_mesSnsTopicArn",
                        "shape": "String",
                        "locationName": "SnsTopicArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SNS topic to be used by the event\n-- notification subscription.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mesSourceIds",
                        "name": "_mesSourceIds",
                        "shape": "SourceIdsList",
                        "locationName": "SourceIds",
                        "documentation": "-- | A list of one or more identifiers of Amazon Redshift source objects. All of\n-- the objects must be of the same type as was specified in the source type\n-- parameter. The event subscription will return only events generated by the\n-- specified objects. If not specified, then events are returned for all objects\n-- within the source type specified.\n--\n-- Example: my-cluster-1, my-cluster-2\n--\n-- Example: my-snapshot-20131010",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mesSourceType",
                        "name": "_mesSourceType",
                        "shape": "String",
                        "locationName": "SourceType",
                        "documentation": "-- | The type of source that will be generating the events. For example, if you\n-- want to be notified of events generated by a cluster, you would set this\n-- parameter to cluster. If this value is not specified, events are returned for\n-- all Amazon Redshift objects in your AWS account. You must specify a source\n-- type in order to specify source IDs.\n--\n-- Valid values: cluster, cluster-parameter-group, cluster-security-group, and\n-- cluster-snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mesSubscriptionName",
                        "name": "_mesSubscriptionName",
                        "shape": "String",
                        "locationName": "SubscriptionName",
                        "documentation": "-- | The name of the modified Amazon Redshift event notification subscription.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "modifySnapshotCopyRetentionPeriodResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "mscrprCluster",
                    "name": "_mscrprCluster",
                    "shape": "Cluster",
                    "locationName": "Cluster",
                    "documentation": null,
                    "typeExposed": "Maybe Cluster",
                    "type": "Maybe Cluster"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ModifySnapshotCopyRetentionPeriodResponse",
                "resultWrapper": "ModifySnapshotCopyRetentionPeriodResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mscrprCluster",
                        "name": "_mscrprCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "mscrprCluster",
                        "name": "_mscrprCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_ModifySnapshotCopyRetentionPeriod.html",
            "namespace": "Network.AWS.Redshift.ModifySnapshotCopyRetentionPeriod",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "ModifySnapshotCopyRetentionPeriod",
            "method": "post",
            "documentation": "-- | Modifies the number of days to retain automated snapshots in the destination\n-- region after they are copied from the source region.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "modifySnapshotCopyRetentionPeriod",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mscrpClusterIdentifier",
                        "name": "_mscrpClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of the cluster for which you want to change the\n-- retention period for automated snapshots that are copied to a destination\n-- region.\n--\n-- Constraints: Must be the valid name of an existing cluster that has\n-- cross-region snapshot copy enabled.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mscrpRetentionPeriod",
                        "name": "_mscrpRetentionPeriod",
                        "shape": "Integer",
                        "locationName": "RetentionPeriod",
                        "documentation": "-- | The number of days to retain automated snapshots in the destination region\n-- after they are copied from the source region.\n--\n-- If you decrease the retention period for automated snapshots that are\n-- copied to a destination region, Amazon Redshift will delete any existing\n-- automated snapshots that were copied to the destination region and that fall\n-- outside of the new retention period.\n--\n-- Constraints: Must be at least 1 and no more than 35.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "ModifySnapshotCopyRetentionPeriod",
                "query": [
                    {
                        "field": "_mscrpClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_mscrpRetentionPeriod",
                        "locationName": "RetentionPeriod",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mscrpClusterIdentifier",
                        "name": "_mscrpClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of the cluster for which you want to change the\n-- retention period for automated snapshots that are copied to a destination\n-- region.\n--\n-- Constraints: Must be the valid name of an existing cluster that has\n-- cross-region snapshot copy enabled.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mscrpRetentionPeriod",
                        "name": "_mscrpRetentionPeriod",
                        "shape": "Integer",
                        "locationName": "RetentionPeriod",
                        "documentation": "-- | The number of days to retain automated snapshots in the destination region\n-- after they are copied from the source region.\n--\n-- If you decrease the retention period for automated snapshots that are\n-- copied to a destination region, Amazon Redshift will delete any existing\n-- automated snapshots that were copied to the destination region and that fall\n-- outside of the new retention period.\n--\n-- Constraints: Must be at least 1 and no more than 35.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "purchaseReservedNodeOfferingResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "prnorReservedNode",
                    "name": "_prnorReservedNode",
                    "shape": "ReservedNode",
                    "locationName": "ReservedNode",
                    "documentation": null,
                    "typeExposed": "Maybe ReservedNode",
                    "type": "Maybe ReservedNode"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "PurchaseReservedNodeOfferingResponse",
                "resultWrapper": "PurchaseReservedNodeOfferingResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "prnorReservedNode",
                        "name": "_prnorReservedNode",
                        "shape": "ReservedNode",
                        "locationName": "ReservedNode",
                        "documentation": null,
                        "typeExposed": "Maybe ReservedNode",
                        "type": "Maybe ReservedNode"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "prnorReservedNode",
                        "name": "_prnorReservedNode",
                        "shape": "ReservedNode",
                        "locationName": "ReservedNode",
                        "documentation": null,
                        "typeExposed": "Maybe ReservedNode",
                        "type": "Maybe ReservedNode"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_PurchaseReservedNodeOffering.html",
            "namespace": "Network.AWS.Redshift.PurchaseReservedNodeOffering",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "PurchaseReservedNodeOffering",
            "method": "post",
            "documentation": "-- | Allows you to purchase reserved nodes. Amazon Redshift offers a predefined\n-- set of reserved node offerings. You can purchase one of the offerings. You\n-- can call the 'DescribeReservedNodeOfferings' API to obtain the available\n-- reserved node offerings. You can call this API by providing a specific\n-- reserved node offering and the number of nodes you want to reserve.\n--\n-- For more information about managing parameter groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html PurchasingReserved Nodes\u003e in the /Amazon Redshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "purchaseReservedNodeOffering",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "prnoReservedNodeOfferingId",
                        "name": "_prnoReservedNodeOfferingId",
                        "shape": "String",
                        "locationName": "ReservedNodeOfferingId",
                        "documentation": "-- | The unique identifier of the reserved node offering you want to purchase.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "PurchaseReservedNodeOffering",
                "query": [
                    {
                        "field": "_prnoReservedNodeOfferingId",
                        "locationName": "ReservedNodeOfferingId",
                        "type": "field"
                    },
                    {
                        "field": "_prnoNodeCount",
                        "locationName": "NodeCount",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "prnoNodeCount",
                        "name": "_prnoNodeCount",
                        "shape": "IntegerOptional",
                        "locationName": "NodeCount",
                        "documentation": "-- | The number of reserved nodes you want to purchase.\n--\n-- Default: '1'",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "prnoNodeCount",
                        "name": "_prnoNodeCount",
                        "shape": "IntegerOptional",
                        "locationName": "NodeCount",
                        "documentation": "-- | The number of reserved nodes you want to purchase.\n--\n-- Default: '1'",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "prnoReservedNodeOfferingId",
                        "name": "_prnoReservedNodeOfferingId",
                        "shape": "String",
                        "locationName": "ReservedNodeOfferingId",
                        "documentation": "-- | The unique identifier of the reserved node offering you want to purchase.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "rebootClusterResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "rcrCluster",
                    "name": "_rcrCluster",
                    "shape": "Cluster",
                    "locationName": "Cluster",
                    "documentation": null,
                    "typeExposed": "Maybe Cluster",
                    "type": "Maybe Cluster"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "RebootClusterResponse",
                "resultWrapper": "RebootClusterResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcrCluster",
                        "name": "_rcrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcrCluster",
                        "name": "_rcrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_RebootCluster.html",
            "namespace": "Network.AWS.Redshift.RebootCluster",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "RebootCluster",
            "method": "post",
            "documentation": "-- | Reboots a cluster. This action is taken as soon as possible. It results in a\n-- momentary outage to the cluster, during which the cluster status is set to 'rebooting'. A cluster event is created when the reboot is completed. Any pending\n-- cluster modifications (see 'ModifyCluster') are applied at this reboot. For\n-- more information about managing clusters, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html Amazon Redshift Clusters\u003e in\n-- the /Amazon Redshift Cluster Management Guide/",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "rebootCluster",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "rcClusterIdentifier",
                    "name": "_rcClusterIdentifier",
                    "shape": "String",
                    "locationName": "ClusterIdentifier",
                    "documentation": "-- | The cluster identifier.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rcClusterIdentifier",
                        "name": "_rcClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The cluster identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "RebootCluster",
                "query": [
                    {
                        "field": "_rcClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rcClusterIdentifier",
                        "name": "_rcClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The cluster identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 26,
                "ctor": "resetClusterParameterGroupResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ResetClusterParameterGroupResponse",
                "resultWrapper": "ResetClusterParameterGroupResult",
                "locationPad": 21,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcpgrParameterGroupName",
                        "name": "_rcpgrParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcpgrParameterGroupStatus",
                        "name": "_rcpgrParameterGroupStatus",
                        "shape": "String",
                        "locationName": "ParameterGroupStatus",
                        "documentation": "-- | The status of the parameter group. For example, if you made a change to a\n-- parameter group name-value pair, then the change could be pending a reboot of\n-- an associated cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcpgrParameterGroupName",
                        "name": "_rcpgrParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcpgrParameterGroupStatus",
                        "name": "_rcpgrParameterGroupStatus",
                        "shape": "String",
                        "locationName": "ParameterGroupStatus",
                        "documentation": "-- | The status of the parameter group. For example, if you made a change to a\n-- parameter group name-value pair, then the change could be pending a reboot of\n-- an associated cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_ResetClusterParameterGroup.html",
            "namespace": "Network.AWS.Redshift.ResetClusterParameterGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "ResetClusterParameterGroup",
            "method": "post",
            "documentation": "-- | Sets one or more parameters of the specified parameter group to their\n-- default values and sets the source values of the parameters to\n-- \"engine-default\". To reset the entire parameter group specify the /ResetAllParameters/ parameter. For parameter changes to take effect you must reboot any\n-- associated clusters.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "resetClusterParameterGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rcpgParameterGroupName",
                        "name": "_rcpgParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group to be reset.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "ResetClusterParameterGroup",
                "query": [
                    {
                        "field": "_rcpgParameterGroupName",
                        "locationName": "ParameterGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_rcpgResetAllParameters",
                        "locationName": "ResetAllParameters",
                        "type": "field"
                    },
                    {
                        "field": "_rcpgParameters",
                        "locationName": "Parameters",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcpgResetAllParameters",
                        "name": "_rcpgResetAllParameters",
                        "shape": "Boolean",
                        "locationName": "ResetAllParameters",
                        "documentation": "-- | If 'true', all parameters in the specified parameter group will be reset to\n-- their default values.\n--\n-- Default: 'true'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rcpgParameters",
                        "name": "_rcpgParameters",
                        "shape": "ParametersList",
                        "locationName": "Parameters",
                        "documentation": "-- | An array of names of parameters to be reset. If /ResetAllParameters/ option is\n-- not used, then at least one parameter name must be supplied.\n--\n-- Constraints: A maximum of 20 parameters can be reset in a single request.",
                        "typeExposed": "[Parameter]",
                        "type": "List \"member\" Parameter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rcpgParameterGroupName",
                        "name": "_rcpgParameterGroupName",
                        "shape": "String",
                        "locationName": "ParameterGroupName",
                        "documentation": "-- | The name of the cluster parameter group to be reset.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rcpgParameters",
                        "name": "_rcpgParameters",
                        "shape": "ParametersList",
                        "locationName": "Parameters",
                        "documentation": "-- | An array of names of parameters to be reset. If /ResetAllParameters/ option is\n-- not used, then at least one parameter name must be supplied.\n--\n-- Constraints: A maximum of 20 parameters can be reset in a single request.",
                        "typeExposed": "[Parameter]",
                        "type": "List \"member\" Parameter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcpgResetAllParameters",
                        "name": "_rcpgResetAllParameters",
                        "shape": "Boolean",
                        "locationName": "ResetAllParameters",
                        "documentation": "-- | If 'true', all parameters in the specified parameter group will be reset to\n-- their default values.\n--\n-- Default: 'true'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "restoreFromClusterSnapshotResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "rfcsrCluster",
                    "name": "_rfcsrCluster",
                    "shape": "Cluster",
                    "locationName": "Cluster",
                    "documentation": null,
                    "typeExposed": "Maybe Cluster",
                    "type": "Maybe Cluster"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "RestoreFromClusterSnapshotResponse",
                "resultWrapper": "RestoreFromClusterSnapshotResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsrCluster",
                        "name": "_rfcsrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsrCluster",
                        "name": "_rfcsrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_RestoreFromClusterSnapshot.html",
            "namespace": "Network.AWS.Redshift.RestoreFromClusterSnapshot",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "RestoreFromClusterSnapshot",
            "method": "post",
            "documentation": "-- | Creates a new cluster from a snapshot. Amazon Redshift creates the resulting\n-- cluster with the same configuration as the original cluster from which the\n-- snapshot was created, except that the new cluster is created with the default\n-- cluster security and parameter group. After Amazon Redshift creates the\n-- cluster you can use the 'ModifyCluster' API to associate a different security\n-- group and different parameter group with the restored cluster.\n--\n-- If you restore a cluster into a VPC, you must provide a cluster subnet\n-- group where you want the cluster restored.\n--\n-- For more information about working with snapshots, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html Amazon RedshiftSnapshots\u003e in the /Amazon Redshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 37,
                "ctor": "restoreFromClusterSnapshot",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rfcsClusterIdentifier",
                        "name": "_rfcsClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster that will be created from restoring the\n-- snapshot.\n--\n-- Constraints:\n--\n-- Must contain from 1 to 63 alphanumeric characters or hyphens. Alphabetic\n-- characters must be lowercase. First character must be a letter. Cannot end\n-- with a hyphen or contain two consecutive hyphens. Must be unique for all\n-- clusters within an AWS account.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rfcsSnapshotIdentifier",
                        "name": "_rfcsSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotIdentifier",
                        "documentation": "-- | The name of the snapshot from which to create the new cluster. This\n-- parameter isn't case sensitive.\n--\n-- Example: 'my-snapshot-id'",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 33,
                "name": "RestoreFromClusterSnapshot",
                "query": [
                    {
                        "field": "_rfcsClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsSnapshotIdentifier",
                        "locationName": "SnapshotIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsSnapshotClusterIdentifier",
                        "locationName": "SnapshotClusterIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsPort",
                        "locationName": "Port",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsAvailabilityZone",
                        "locationName": "AvailabilityZone",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsAllowVersionUpgrade",
                        "locationName": "AllowVersionUpgrade",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsClusterSubnetGroupName",
                        "locationName": "ClusterSubnetGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsPubliclyAccessible",
                        "locationName": "PubliclyAccessible",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsOwnerAccount",
                        "locationName": "OwnerAccount",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsHsmClientCertificateIdentifier",
                        "locationName": "HsmClientCertificateIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsHsmConfigurationIdentifier",
                        "locationName": "HsmConfigurationIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsElasticIp",
                        "locationName": "ElasticIp",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsClusterParameterGroupName",
                        "locationName": "ClusterParameterGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsClusterSecurityGroups",
                        "locationName": "ClusterSecurityGroups",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsVpcSecurityGroupIds",
                        "locationName": "VpcSecurityGroupIds",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsPreferredMaintenanceWindow",
                        "locationName": "PreferredMaintenanceWindow",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsAutomatedSnapshotRetentionPeriod",
                        "locationName": "AutomatedSnapshotRetentionPeriod",
                        "type": "field"
                    },
                    {
                        "field": "_rfcsKmsKeyId",
                        "locationName": "KmsKeyId",
                        "type": "field"
                    }
                ],
                "locationPad": 33,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsSnapshotClusterIdentifier",
                        "name": "_rfcsSnapshotClusterIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotClusterIdentifier",
                        "documentation": "-- | The name of the cluster the source snapshot was created from. This parameter\n-- is required if your IAM user has a policy containing a snapshot resource\n-- element that specifies anything other than * for the cluster name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsPort",
                        "name": "_rfcsPort",
                        "shape": "IntegerOptional",
                        "locationName": "Port",
                        "documentation": "-- | The port number on which the cluster accepts connections.\n--\n-- Default: The same port as the original cluster.\n--\n-- Constraints: Must be between '1115' and '65535'.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsAvailabilityZone",
                        "name": "_rfcsAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The Amazon EC2 Availability Zone in which to restore the cluster.\n--\n-- Default: A random, system-chosen Availability Zone.\n--\n-- Example: 'us-east-1a'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsAllowVersionUpgrade",
                        "name": "_rfcsAllowVersionUpgrade",
                        "shape": "BooleanOptional",
                        "locationName": "AllowVersionUpgrade",
                        "documentation": "-- | If 'true', major version upgrades can be applied during the maintenance window\n-- to the Amazon Redshift engine that is running on the cluster.\n--\n-- Default: 'true'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsClusterSubnetGroupName",
                        "name": "_rfcsClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name of the subnet group where you want to cluster restored.\n--\n-- A snapshot of cluster in VPC can be restored only in VPC. Therefore, you\n-- must provide subnet group name where you want the cluster restored.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsPubliclyAccessible",
                        "name": "_rfcsPubliclyAccessible",
                        "shape": "BooleanOptional",
                        "locationName": "PubliclyAccessible",
                        "documentation": "-- | If 'true', the cluster can be accessed from a public network.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsOwnerAccount",
                        "name": "_rfcsOwnerAccount",
                        "shape": "String",
                        "locationName": "OwnerAccount",
                        "documentation": "-- | The AWS customer account used to create or copy the snapshot. Required if\n-- you are restoring a snapshot you do not own, optional if you own the\n-- snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsHsmClientCertificateIdentifier",
                        "name": "_rfcsHsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | Specifies the name of the HSM client certificate the Amazon Redshift cluster\n-- uses to retrieve the data encryption keys stored in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsHsmConfigurationIdentifier",
                        "name": "_rfcsHsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | Specifies the name of the HSM configuration that contains the information the\n-- Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsElasticIp",
                        "name": "_rfcsElasticIp",
                        "shape": "String",
                        "locationName": "ElasticIp",
                        "documentation": "-- | The elastic IP (EIP) address for the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsClusterParameterGroupName",
                        "name": "_rfcsClusterParameterGroupName",
                        "shape": "String",
                        "locationName": "ClusterParameterGroupName",
                        "documentation": "-- | The name of the parameter group to be associated with this cluster.\n--\n-- Default: The default Amazon Redshift cluster parameter group. For\n-- information about the default parameter group, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html Working with AmazonRedshift Parameter Groups\u003e.\n--\n-- Constraints:\n--\n-- Must be 1 to 255 alphanumeric characters or hyphens. First character must\n-- be a letter. Cannot end with a hyphen or contain two consecutive hyphens.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rfcsClusterSecurityGroups",
                        "name": "_rfcsClusterSecurityGroups",
                        "shape": "ClusterSecurityGroupNameList",
                        "locationName": "ClusterSecurityGroups",
                        "documentation": "-- | A list of security groups to be associated with this cluster.\n--\n-- Default: The default cluster security group for Amazon Redshift.\n--\n-- Cluster security groups only apply to clusters outside of VPCs.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rfcsVpcSecurityGroupIds",
                        "name": "_rfcsVpcSecurityGroupIds",
                        "shape": "VpcSecurityGroupIdList",
                        "locationName": "VpcSecurityGroupIds",
                        "documentation": "-- | A list of Virtual Private Cloud (VPC) security groups to be associated with\n-- the cluster.\n--\n-- Default: The default VPC security group is associated with the cluster.\n--\n-- VPC security groups only apply to clusters in VPCs.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsPreferredMaintenanceWindow",
                        "name": "_rfcsPreferredMaintenanceWindow",
                        "shape": "String",
                        "locationName": "PreferredMaintenanceWindow",
                        "documentation": "-- | The weekly time range (in UTC) during which automated cluster maintenance\n-- can occur.\n--\n-- Format: 'ddd:hh24:mi-ddd:hh24:mi'\n--\n-- Default: The value selected for the cluster from which the snapshot was\n-- taken. For more information about the time blocks for each region, see \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows Maintenance Windows\u003e in Amazon Redshift Cluster Management Guide.\n--\n-- Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun\n--\n-- Constraints: Minimum 30-minute window.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsAutomatedSnapshotRetentionPeriod",
                        "name": "_rfcsAutomatedSnapshotRetentionPeriod",
                        "shape": "IntegerOptional",
                        "locationName": "AutomatedSnapshotRetentionPeriod",
                        "documentation": "-- | The number of days that automated snapshots are retained. If the value is 0,\n-- automated snapshots are disabled. Even if automated snapshots are disabled,\n-- you can still create manual snapshots when you want with 'CreateClusterSnapshot'\n-- .\n--\n-- Default: The value selected for the cluster from which the snapshot was\n-- taken.\n--\n-- Constraints: Must be a value from 0 to 35.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsKmsKeyId",
                        "name": "_rfcsKmsKeyId",
                        "shape": "String",
                        "locationName": "KmsKeyId",
                        "documentation": "-- | The AWS Key Management Service (KMS) key ID of the encryption key that you\n-- want to use to encrypt data in the cluster that you restore from a shared\n-- snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsAllowVersionUpgrade",
                        "name": "_rfcsAllowVersionUpgrade",
                        "shape": "BooleanOptional",
                        "locationName": "AllowVersionUpgrade",
                        "documentation": "-- | If 'true', major version upgrades can be applied during the maintenance window\n-- to the Amazon Redshift engine that is running on the cluster.\n--\n-- Default: 'true'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsAutomatedSnapshotRetentionPeriod",
                        "name": "_rfcsAutomatedSnapshotRetentionPeriod",
                        "shape": "IntegerOptional",
                        "locationName": "AutomatedSnapshotRetentionPeriod",
                        "documentation": "-- | The number of days that automated snapshots are retained. If the value is 0,\n-- automated snapshots are disabled. Even if automated snapshots are disabled,\n-- you can still create manual snapshots when you want with 'CreateClusterSnapshot'\n-- .\n--\n-- Default: The value selected for the cluster from which the snapshot was\n-- taken.\n--\n-- Constraints: Must be a value from 0 to 35.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsAvailabilityZone",
                        "name": "_rfcsAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The Amazon EC2 Availability Zone in which to restore the cluster.\n--\n-- Default: A random, system-chosen Availability Zone.\n--\n-- Example: 'us-east-1a'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rfcsClusterIdentifier",
                        "name": "_rfcsClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster that will be created from restoring the\n-- snapshot.\n--\n-- Constraints:\n--\n-- Must contain from 1 to 63 alphanumeric characters or hyphens. Alphabetic\n-- characters must be lowercase. First character must be a letter. Cannot end\n-- with a hyphen or contain two consecutive hyphens. Must be unique for all\n-- clusters within an AWS account.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsClusterParameterGroupName",
                        "name": "_rfcsClusterParameterGroupName",
                        "shape": "String",
                        "locationName": "ClusterParameterGroupName",
                        "documentation": "-- | The name of the parameter group to be associated with this cluster.\n--\n-- Default: The default Amazon Redshift cluster parameter group. For\n-- information about the default parameter group, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html Working with AmazonRedshift Parameter Groups\u003e.\n--\n-- Constraints:\n--\n-- Must be 1 to 255 alphanumeric characters or hyphens. First character must\n-- be a letter. Cannot end with a hyphen or contain two consecutive hyphens.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rfcsClusterSecurityGroups",
                        "name": "_rfcsClusterSecurityGroups",
                        "shape": "ClusterSecurityGroupNameList",
                        "locationName": "ClusterSecurityGroups",
                        "documentation": "-- | A list of security groups to be associated with this cluster.\n--\n-- Default: The default cluster security group for Amazon Redshift.\n--\n-- Cluster security groups only apply to clusters outside of VPCs.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsClusterSubnetGroupName",
                        "name": "_rfcsClusterSubnetGroupName",
                        "shape": "String",
                        "locationName": "ClusterSubnetGroupName",
                        "documentation": "-- | The name of the subnet group where you want to cluster restored.\n--\n-- A snapshot of cluster in VPC can be restored only in VPC. Therefore, you\n-- must provide subnet group name where you want the cluster restored.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsElasticIp",
                        "name": "_rfcsElasticIp",
                        "shape": "String",
                        "locationName": "ElasticIp",
                        "documentation": "-- | The elastic IP (EIP) address for the cluster.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsHsmClientCertificateIdentifier",
                        "name": "_rfcsHsmClientCertificateIdentifier",
                        "shape": "String",
                        "locationName": "HsmClientCertificateIdentifier",
                        "documentation": "-- | Specifies the name of the HSM client certificate the Amazon Redshift cluster\n-- uses to retrieve the data encryption keys stored in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsHsmConfigurationIdentifier",
                        "name": "_rfcsHsmConfigurationIdentifier",
                        "shape": "String",
                        "locationName": "HsmConfigurationIdentifier",
                        "documentation": "-- | Specifies the name of the HSM configuration that contains the information the\n-- Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsKmsKeyId",
                        "name": "_rfcsKmsKeyId",
                        "shape": "String",
                        "locationName": "KmsKeyId",
                        "documentation": "-- | The AWS Key Management Service (KMS) key ID of the encryption key that you\n-- want to use to encrypt data in the cluster that you restore from a shared\n-- snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsOwnerAccount",
                        "name": "_rfcsOwnerAccount",
                        "shape": "String",
                        "locationName": "OwnerAccount",
                        "documentation": "-- | The AWS customer account used to create or copy the snapshot. Required if\n-- you are restoring a snapshot you do not own, optional if you own the\n-- snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsPort",
                        "name": "_rfcsPort",
                        "shape": "IntegerOptional",
                        "locationName": "Port",
                        "documentation": "-- | The port number on which the cluster accepts connections.\n--\n-- Default: The same port as the original cluster.\n--\n-- Constraints: Must be between '1115' and '65535'.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsPreferredMaintenanceWindow",
                        "name": "_rfcsPreferredMaintenanceWindow",
                        "shape": "String",
                        "locationName": "PreferredMaintenanceWindow",
                        "documentation": "-- | The weekly time range (in UTC) during which automated cluster maintenance\n-- can occur.\n--\n-- Format: 'ddd:hh24:mi-ddd:hh24:mi'\n--\n-- Default: The value selected for the cluster from which the snapshot was\n-- taken. For more information about the time blocks for each region, see \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows Maintenance Windows\u003e in Amazon Redshift Cluster Management Guide.\n--\n-- Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun\n--\n-- Constraints: Minimum 30-minute window.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsPubliclyAccessible",
                        "name": "_rfcsPubliclyAccessible",
                        "shape": "BooleanOptional",
                        "locationName": "PubliclyAccessible",
                        "documentation": "-- | If 'true', the cluster can be accessed from a public network.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rfcsSnapshotClusterIdentifier",
                        "name": "_rfcsSnapshotClusterIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotClusterIdentifier",
                        "documentation": "-- | The name of the cluster the source snapshot was created from. This parameter\n-- is required if your IAM user has a policy containing a snapshot resource\n-- element that specifies anything other than * for the cluster name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rfcsSnapshotIdentifier",
                        "name": "_rfcsSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotIdentifier",
                        "documentation": "-- | The name of the snapshot from which to create the new cluster. This\n-- parameter isn't case sensitive.\n--\n-- Example: 'my-snapshot-id'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rfcsVpcSecurityGroupIds",
                        "name": "_rfcsVpcSecurityGroupIds",
                        "shape": "VpcSecurityGroupIdList",
                        "locationName": "VpcSecurityGroupIds",
                        "documentation": "-- | A list of Virtual Private Cloud (VPC) security groups to be associated with\n-- the cluster.\n--\n-- Default: The default VPC security group is associated with the cluster.\n--\n-- VPC security groups only apply to clusters in VPCs.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "revokeClusterSecurityGroupIngressResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "rcsgirClusterSecurityGroup",
                    "name": "_rcsgirClusterSecurityGroup",
                    "shape": "ClusterSecurityGroup",
                    "locationName": "ClusterSecurityGroup",
                    "documentation": null,
                    "typeExposed": "Maybe ClusterSecurityGroup",
                    "type": "Maybe ClusterSecurityGroup"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "RevokeClusterSecurityGroupIngressResponse",
                "resultWrapper": "RevokeClusterSecurityGroupIngressResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcsgirClusterSecurityGroup",
                        "name": "_rcsgirClusterSecurityGroup",
                        "shape": "ClusterSecurityGroup",
                        "locationName": "ClusterSecurityGroup",
                        "documentation": null,
                        "typeExposed": "Maybe ClusterSecurityGroup",
                        "type": "Maybe ClusterSecurityGroup"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcsgirClusterSecurityGroup",
                        "name": "_rcsgirClusterSecurityGroup",
                        "shape": "ClusterSecurityGroup",
                        "locationName": "ClusterSecurityGroup",
                        "documentation": null,
                        "typeExposed": "Maybe ClusterSecurityGroup",
                        "type": "Maybe ClusterSecurityGroup"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_RevokeClusterSecurityGroupIngress.html",
            "namespace": "Network.AWS.Redshift.RevokeClusterSecurityGroupIngress",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "RevokeClusterSecurityGroupIngress",
            "method": "post",
            "documentation": "-- | Revokes an ingress rule in an Amazon Redshift security group for a\n-- previously authorized IP range or Amazon EC2 security group. To add an\n-- ingress rule, see 'AuthorizeClusterSecurityGroupIngress'. For information about\n-- managing security groups, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html Amazon Redshift Cluster Security Groups\u003e in\n-- the /Amazon Redshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 30,
                "ctor": "revokeClusterSecurityGroupIngress",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rcsgiClusterSecurityGroupName",
                        "name": "_rcsgiClusterSecurityGroupName",
                        "shape": "String",
                        "locationName": "ClusterSecurityGroupName",
                        "documentation": "-- | The name of the security Group from which to revoke the ingress rule.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "RevokeClusterSecurityGroupIngress",
                "query": [
                    {
                        "field": "_rcsgiClusterSecurityGroupName",
                        "locationName": "ClusterSecurityGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_rcsgiCIDRIP",
                        "locationName": "CIDRIP",
                        "type": "field"
                    },
                    {
                        "field": "_rcsgiEC2SecurityGroupName",
                        "locationName": "EC2SecurityGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_rcsgiEC2SecurityGroupOwnerId",
                        "locationName": "EC2SecurityGroupOwnerId",
                        "type": "field"
                    }
                ],
                "locationPad": 25,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcsgiCIDRIP",
                        "name": "_rcsgiCIDRIP",
                        "shape": "String",
                        "locationName": "CIDRIP",
                        "documentation": "-- | The IP range for which to revoke access. This range must be a valid\n-- Classless Inter-Domain Routing (CIDR) block of IP addresses. If 'CIDRIP' is\n-- specified, 'EC2SecurityGroupName' and 'EC2SecurityGroupOwnerId' cannot be\n-- provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcsgiEC2SecurityGroupName",
                        "name": "_rcsgiEC2SecurityGroupName",
                        "shape": "String",
                        "locationName": "EC2SecurityGroupName",
                        "documentation": "-- | The name of the EC2 Security Group whose access is to be revoked. If 'EC2SecurityGroupName' is specified, 'EC2SecurityGroupOwnerId' must also be provided and 'CIDRIP'\n-- cannot be provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcsgiEC2SecurityGroupOwnerId",
                        "name": "_rcsgiEC2SecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "EC2SecurityGroupOwnerId",
                        "documentation": "-- | The AWS account number of the owner of the security group specified in the 'EC2SecurityGroupName' parameter. The AWS access key ID is not an acceptable value. If 'EC2SecurityGroupOwnerId' is specified, 'EC2SecurityGroupName' must also be provided. and 'CIDRIP' cannot\n-- be provided.\n--\n-- Example: '111122223333'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcsgiCIDRIP",
                        "name": "_rcsgiCIDRIP",
                        "shape": "String",
                        "locationName": "CIDRIP",
                        "documentation": "-- | The IP range for which to revoke access. This range must be a valid\n-- Classless Inter-Domain Routing (CIDR) block of IP addresses. If 'CIDRIP' is\n-- specified, 'EC2SecurityGroupName' and 'EC2SecurityGroupOwnerId' cannot be\n-- provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rcsgiClusterSecurityGroupName",
                        "name": "_rcsgiClusterSecurityGroupName",
                        "shape": "String",
                        "locationName": "ClusterSecurityGroupName",
                        "documentation": "-- | The name of the security Group from which to revoke the ingress rule.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcsgiEC2SecurityGroupName",
                        "name": "_rcsgiEC2SecurityGroupName",
                        "shape": "String",
                        "locationName": "EC2SecurityGroupName",
                        "documentation": "-- | The name of the EC2 Security Group whose access is to be revoked. If 'EC2SecurityGroupName' is specified, 'EC2SecurityGroupOwnerId' must also be provided and 'CIDRIP'\n-- cannot be provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rcsgiEC2SecurityGroupOwnerId",
                        "name": "_rcsgiEC2SecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "EC2SecurityGroupOwnerId",
                        "documentation": "-- | The AWS account number of the owner of the security group specified in the 'EC2SecurityGroupName' parameter. The AWS access key ID is not an acceptable value. If 'EC2SecurityGroupOwnerId' is specified, 'EC2SecurityGroupName' must also be provided. and 'CIDRIP' cannot\n-- be provided.\n--\n-- Example: '111122223333'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "revokeSnapshotAccessResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "rsarSnapshot",
                    "name": "_rsarSnapshot",
                    "shape": "Snapshot",
                    "locationName": "Snapshot",
                    "documentation": null,
                    "typeExposed": "Maybe Snapshot",
                    "type": "Maybe Snapshot"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "RevokeSnapshotAccessResponse",
                "resultWrapper": "RevokeSnapshotAccessResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsarSnapshot",
                        "name": "_rsarSnapshot",
                        "shape": "Snapshot",
                        "locationName": "Snapshot",
                        "documentation": null,
                        "typeExposed": "Maybe Snapshot",
                        "type": "Maybe Snapshot"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsarSnapshot",
                        "name": "_rsarSnapshot",
                        "shape": "Snapshot",
                        "locationName": "Snapshot",
                        "documentation": null,
                        "typeExposed": "Maybe Snapshot",
                        "type": "Maybe Snapshot"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_RevokeSnapshotAccess.html",
            "namespace": "Network.AWS.Redshift.RevokeSnapshotAccess",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "RevokeSnapshotAccess",
            "method": "post",
            "documentation": "-- | Removes the ability of the specified AWS customer account to restore the\n-- specified snapshot. If the account is currently restoring the snapshot, the\n-- restore will run to completion.\n--\n-- For more information about working with snapshots, go to \u003chttp://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html Amazon RedshiftSnapshots\u003e in the /Amazon Redshift Cluster Management Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 29,
                "ctor": "revokeSnapshotAccess",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rsaSnapshotIdentifier",
                        "name": "_rsaSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotIdentifier",
                        "documentation": "-- | The identifier of the snapshot that the account can no longer access.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rsaAccountWithRestoreAccess",
                        "name": "_rsaAccountWithRestoreAccess",
                        "shape": "String",
                        "locationName": "AccountWithRestoreAccess",
                        "documentation": "-- | The identifier of the AWS customer account that can no longer restore the\n-- specified snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 26,
                "name": "RevokeSnapshotAccess",
                "query": [
                    {
                        "field": "_rsaSnapshotIdentifier",
                        "locationName": "SnapshotIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_rsaSnapshotClusterIdentifier",
                        "locationName": "SnapshotClusterIdentifier",
                        "type": "field"
                    },
                    {
                        "field": "_rsaAccountWithRestoreAccess",
                        "locationName": "AccountWithRestoreAccess",
                        "type": "field"
                    }
                ],
                "locationPad": 26,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsaSnapshotClusterIdentifier",
                        "name": "_rsaSnapshotClusterIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster the snapshot was created from. This parameter\n-- is required if your IAM user has a policy containing a snapshot resource\n-- element that specifies anything other than * for the cluster name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rsaAccountWithRestoreAccess",
                        "name": "_rsaAccountWithRestoreAccess",
                        "shape": "String",
                        "locationName": "AccountWithRestoreAccess",
                        "documentation": "-- | The identifier of the AWS customer account that can no longer restore the\n-- specified snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rsaSnapshotClusterIdentifier",
                        "name": "_rsaSnapshotClusterIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotClusterIdentifier",
                        "documentation": "-- | The identifier of the cluster the snapshot was created from. This parameter\n-- is required if your IAM user has a policy containing a snapshot resource\n-- element that specifies anything other than * for the cluster name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rsaSnapshotIdentifier",
                        "name": "_rsaSnapshotIdentifier",
                        "shape": "String",
                        "locationName": "SnapshotIdentifier",
                        "documentation": "-- | The identifier of the snapshot that the account can no longer access.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Redshift",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "rotateEncryptionKeyResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "rekrCluster",
                    "name": "_rekrCluster",
                    "shape": "Cluster",
                    "locationName": "Cluster",
                    "documentation": null,
                    "typeExposed": "Maybe Cluster",
                    "type": "Maybe Cluster"
                },
                "contents": [],
                "wrapper": true,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "RotateEncryptionKeyResponse",
                "resultWrapper": "RotateEncryptionKeyResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rekrCluster",
                        "name": "_rekrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "rekrCluster",
                        "name": "_rekrCluster",
                        "shape": "Cluster",
                        "locationName": "Cluster",
                        "documentation": null,
                        "typeExposed": "Maybe Cluster",
                        "type": "Maybe Cluster"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/redshift/latest/APIReference/API_RotateEncryptionKey.html",
            "namespace": "Network.AWS.Redshift.RotateEncryptionKey",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "pager": null,
            "name": "RotateEncryptionKey",
            "method": "post",
            "documentation": "-- | Rotates the encryption keys for a cluster.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "rotateEncryptionKey",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "rekClusterIdentifier",
                    "name": "_rekClusterIdentifier",
                    "shape": "String",
                    "locationName": "ClusterIdentifier",
                    "documentation": "-- | The unique identifier of the cluster that you want to rotate the encryption\n-- keys for.\n--\n-- Constraints: Must be the name of valid cluster that has encryption enabled.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rekClusterIdentifier",
                        "name": "_rekClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of the cluster that you want to rotate the encryption\n-- keys for.\n--\n-- Constraints: Must be the name of valid cluster that has encryption enabled.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "RotateEncryptionKey",
                "query": [
                    {
                        "field": "_rekClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rekClusterIdentifier",
                        "name": "_rekClusterIdentifier",
                        "shape": "String",
                        "locationName": "ClusterIdentifier",
                        "documentation": "-- | The unique identifier of the cluster that you want to rotate the encryption\n-- keys for.\n--\n-- Constraints: Must be the name of valid cluster that has encryption enabled.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        }
    ]
}