{
    "waiters": {
        "waiters": {},
        "namespace": "Network.AWS.SNS.Waiters",
        "imports": [
            "Network.AWS.SNS.Types"
        ]
    },
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "SNS",
        "error": "RESTError",
        "url": "http://docs.aws.amazon.com/sns/latest/api/Welcome.html",
        "namespace": "Network.AWS.SNS",
        "protocol": "query",
        "imports": [
            "Network.AWS.SNS.AddPermission",
            "Network.AWS.SNS.ConfirmSubscription",
            "Network.AWS.SNS.CreatePlatformApplication",
            "Network.AWS.SNS.CreatePlatformEndpoint",
            "Network.AWS.SNS.CreateTopic",
            "Network.AWS.SNS.DeleteEndpoint",
            "Network.AWS.SNS.DeletePlatformApplication",
            "Network.AWS.SNS.DeleteTopic",
            "Network.AWS.SNS.GetEndpointAttributes",
            "Network.AWS.SNS.GetPlatformApplicationAttributes",
            "Network.AWS.SNS.GetSubscriptionAttributes",
            "Network.AWS.SNS.GetTopicAttributes",
            "Network.AWS.SNS.ListEndpointsByPlatformApplication",
            "Network.AWS.SNS.ListPlatformApplications",
            "Network.AWS.SNS.ListSubscriptions",
            "Network.AWS.SNS.ListSubscriptionsByTopic",
            "Network.AWS.SNS.ListTopics",
            "Network.AWS.SNS.Publish",
            "Network.AWS.SNS.RemovePermission",
            "Network.AWS.SNS.SetEndpointAttributes",
            "Network.AWS.SNS.SetPlatformApplicationAttributes",
            "Network.AWS.SNS.SetSubscriptionAttributes",
            "Network.AWS.SNS.SetTopicAttributes",
            "Network.AWS.SNS.Subscribe",
            "Network.AWS.SNS.Types",
            "Network.AWS.SNS.Unsubscribe"
        ],
        "name": "Amazon Simple Notification Service",
        "version": "2010-03-31",
        "documentation": "-- | Amazon Simple Notification Service (Amazon SNS) is a fast, flexible, fully\n-- managed push messaging service. Amazon SNS makes it simple and cost-effective\n-- to push notifications to Apple, Google, Fire OS, and Windows devices, as well\n-- as Android devices in China with Baidu Cloud Push. You can also use SNS to\n-- push notifications to internet connected smart devices, as well as other\n-- distributed services. Besides pushing cloud notifications directly to mobile\n-- devices, Amazon SNS can also deliver notifications by SMS text message or\n-- email, to Amazon Simple Queue Service (SQS) queues, or to any HTTP endpoint.\n-- To prevent messages from being lost, all messages published to Amazon SNS are\n-- stored redundantly across multiple availability zones.",
        "xmlNamespace": "http://sns.amazonaws.com/doc/2010-03-31/",
        "jsonVersion": null,
        "retryDelay": {
            "base": 5.0e-2,
            "attempts": 5,
            "growth": 2
        },
        "endpointPrefix": "sns",
        "retryPolicies": {
            "throttling": {
                "error": "Throttling",
                "code": 400
            },
            "service_unavailable": {
                "error": null,
                "code": 503
            },
            "general_server_error": {
                "error": null,
                "code": 500
            },
            "limit_exceeded": {
                "error": null,
                "code": 509
            }
        },
        "targetPrefix": null
    },
    "cabal": {
        "other": [],
        "library": "amazonka-sns",
        "abbrev": "SNS",
        "exposed": [
            "Network.AWS.SNS",
            "Network.AWS.SNS.AddPermission",
            "Network.AWS.SNS.ConfirmSubscription",
            "Network.AWS.SNS.CreatePlatformApplication",
            "Network.AWS.SNS.CreatePlatformEndpoint",
            "Network.AWS.SNS.CreateTopic",
            "Network.AWS.SNS.DeleteEndpoint",
            "Network.AWS.SNS.DeletePlatformApplication",
            "Network.AWS.SNS.DeleteTopic",
            "Network.AWS.SNS.GetEndpointAttributes",
            "Network.AWS.SNS.GetPlatformApplicationAttributes",
            "Network.AWS.SNS.GetSubscriptionAttributes",
            "Network.AWS.SNS.GetTopicAttributes",
            "Network.AWS.SNS.ListEndpointsByPlatformApplication",
            "Network.AWS.SNS.ListPlatformApplications",
            "Network.AWS.SNS.ListSubscriptions",
            "Network.AWS.SNS.ListSubscriptionsByTopic",
            "Network.AWS.SNS.ListTopics",
            "Network.AWS.SNS.Publish",
            "Network.AWS.SNS.RemovePermission",
            "Network.AWS.SNS.SetEndpointAttributes",
            "Network.AWS.SNS.SetPlatformApplicationAttributes",
            "Network.AWS.SNS.SetSubscriptionAttributes",
            "Network.AWS.SNS.SetTopicAttributes",
            "Network.AWS.SNS.Subscribe",
            "Network.AWS.SNS.Types",
            "Network.AWS.SNS.Unsubscribe"
        ],
        "url": "http://docs.aws.amazon.com/sns/latest/api/Welcome.html",
        "protocol": "query",
        "name": "Amazon Simple Notification Service",
        "version": "0.3.4",
        "description": "Amazon Simple Notification Service (Amazon SNS) is a fast, flexible, fully\nmanaged push messaging service. Amazon SNS makes it simple and cost-effective\nto push notifications to Apple, Google, Fire OS, and Windows devices, as well\nas Android devices in China with Baidu Cloud Push. You can also use SNS to\npush notifications to internet connected smart devices, as well as other\ndistributed services. Besides pushing cloud notifications directly to mobile\ndevices, Amazon SNS can also deliver notifications by SMS text message or\nemail, to Amazon Simple Queue Service (SQS) queues, or to any HTTP endpoint.\nTo prevent messages from being lost, all messages published to Amazon SNS are\nstored redundantly across multiple availability zones."
    },
    "types": {
        "namespace": "Network.AWS.SNS.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "topic",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "tTopicArn",
                    "name": "_tTopicArn",
                    "shape": "topicARN",
                    "locationName": "TopicArn",
                    "documentation": "-- | The topic's ARN.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Topic",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "tTopicArn",
                        "name": "_tTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The topic's ARN.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "tTopicArn",
                        "name": "_tTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The topic's ARN.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "messageAttributeValue",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "mavDataType",
                        "name": "_mavDataType",
                        "shape": "String",
                        "locationName": "DataType",
                        "documentation": "-- | Amazon SNS supports the following logical data types: String, Number, and\n-- Binary. For more information, see \u003chttp://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html#SNSMessageAttributes.DataTypes Message Attribute Data Types\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "MessageAttributeValue",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mavStringValue",
                        "name": "_mavStringValue",
                        "shape": "String",
                        "locationName": "StringValue",
                        "documentation": "-- | Strings are Unicode with UTF8 binary encoding. For a list of code values, see \u003chttp://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\u003e.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mavBinaryValue",
                        "name": "_mavBinaryValue",
                        "shape": "Binary",
                        "locationName": "BinaryValue",
                        "documentation": "-- | Binary type attributes can store any binary data, for example, compressed\n-- data, encrypted data, or images.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mavBinaryValue",
                        "name": "_mavBinaryValue",
                        "shape": "Binary",
                        "locationName": "BinaryValue",
                        "documentation": "-- | Binary type attributes can store any binary data, for example, compressed\n-- data, encrypted data, or images.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "mavDataType",
                        "name": "_mavDataType",
                        "shape": "String",
                        "locationName": "DataType",
                        "documentation": "-- | Amazon SNS supports the following logical data types: String, Number, and\n-- Binary. For more information, see \u003chttp://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html#SNSMessageAttributes.DataTypes Message Attribute Data Types\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mavStringValue",
                        "name": "_mavStringValue",
                        "shape": "String",
                        "locationName": "StringValue",
                        "documentation": "-- | Strings are Unicode with UTF8 binary encoding. For a list of code values, see \u003chttp://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\u003e.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 25,
                "ctor": "platformApplication",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PlatformApplication",
                "locationPad": 23,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "paPlatformApplicationArn",
                        "name": "_paPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "-- | PlatformApplicationArn for platform application object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "paAttributes",
                        "name": "_paAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | Attributes for platform application object.",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "paAttributes",
                        "name": "_paAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | Attributes for platform application object.",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "paPlatformApplicationArn",
                        "name": "_paPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "-- | PlatformApplicationArn for platform application object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "subscription",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Subscription",
                "locationPad": 16,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "s1SubscriptionArn",
                        "name": "_s1SubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "-- | The subscription's ARN.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "s1Owner",
                        "name": "_s1Owner",
                        "shape": "account",
                        "locationName": "Owner",
                        "documentation": "-- | The subscription's owner.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "s1Protocol",
                        "name": "_s1Protocol",
                        "shape": "protocol",
                        "locationName": "Protocol",
                        "documentation": "-- | The subscription's protocol.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "s1Endpoint",
                        "name": "_s1Endpoint",
                        "shape": "endpoint",
                        "locationName": "Endpoint",
                        "documentation": "-- | The subscription's endpoint (format depends on the protocol).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "s1TopicArn",
                        "name": "_s1TopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the subscription's topic.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "s1Endpoint",
                        "name": "_s1Endpoint",
                        "shape": "endpoint",
                        "locationName": "Endpoint",
                        "documentation": "-- | The subscription's endpoint (format depends on the protocol).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "s1Owner",
                        "name": "_s1Owner",
                        "shape": "account",
                        "locationName": "Owner",
                        "documentation": "-- | The subscription's owner.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "s1Protocol",
                        "name": "_s1Protocol",
                        "shape": "protocol",
                        "locationName": "Protocol",
                        "documentation": "-- | The subscription's protocol.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "s1SubscriptionArn",
                        "name": "_s1SubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "-- | The subscription's ARN.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "s1TopicArn",
                        "name": "_s1TopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the subscription's topic.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 13,
                "ctor": "endpoint",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Endpoint",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eEndpointArn",
                        "name": "_eEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "-- | EndpointArn for mobile app and device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "eAttributes",
                        "name": "_eAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | Attributes for endpoint.",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "eAttributes",
                        "name": "_eAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | Attributes for endpoint.",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eEndpointArn",
                        "name": "_eEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "-- | EndpointArn for mobile app and device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        ],
        "imports": [],
        "shared": [
            "Subscription"
        ]
    },
    "operations": [
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "addPermissionResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AddPermissionResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_AddPermission.html",
            "namespace": "Network.AWS.SNS.AddPermission",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "AddPermission",
            "method": "post",
            "documentation": "-- | Adds a statement to a topic's access control policy, granting access for the\n-- specified AWS accounts to the specified actions.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "addPermission",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "apTopicArn",
                        "name": "_apTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic whose access control policy you wish to modify.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "apLabel",
                        "name": "_apLabel",
                        "shape": "label",
                        "locationName": "Label",
                        "documentation": "-- | A unique identifier for the new policy statement.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "AddPermission",
                "query": [
                    {
                        "field": "_apTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_apLabel",
                        "locationName": "Label",
                        "type": "field"
                    },
                    {
                        "field": "_apAWSAccountId",
                        "locationName": "AWSAccountId",
                        "type": "field"
                    },
                    {
                        "field": "_apActionName",
                        "locationName": "ActionName",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "apAWSAccountId",
                        "name": "_apAWSAccountId",
                        "shape": "DelegatesList",
                        "locationName": "AWSAccountId",
                        "documentation": "-- | The AWS account IDs of the users (principals) who will be given access to the\n-- specified actions. The users must have AWS accounts, but do not need to be\n-- signed up for this service.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "apActionName",
                        "name": "_apActionName",
                        "shape": "ActionsList",
                        "locationName": "ActionName",
                        "documentation": "-- | The action you want to allow for the specified principal(s).\n--\n-- Valid values: any Amazon SNS action name.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "apAWSAccountId",
                        "name": "_apAWSAccountId",
                        "shape": "DelegatesList",
                        "locationName": "AWSAccountId",
                        "documentation": "-- | The AWS account IDs of the users (principals) who will be given access to the\n-- specified actions. The users must have AWS accounts, but do not need to be\n-- signed up for this service.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "apActionName",
                        "name": "_apActionName",
                        "shape": "ActionsList",
                        "locationName": "ActionName",
                        "documentation": "-- | The action you want to allow for the specified principal(s).\n--\n-- Valid values: any Amazon SNS action name.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "apLabel",
                        "name": "_apLabel",
                        "shape": "label",
                        "locationName": "Label",
                        "documentation": "-- | A unique identifier for the new policy statement.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "apTopicArn",
                        "name": "_apTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic whose access control policy you wish to modify.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "confirmSubscriptionResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "csrSubscriptionArn",
                    "name": "_csrSubscriptionArn",
                    "shape": "subscriptionARN",
                    "locationName": "SubscriptionArn",
                    "documentation": "-- | The ARN of the created subscription.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ConfirmSubscriptionResponse",
                "resultWrapper": "ConfirmSubscriptionResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "csrSubscriptionArn",
                        "name": "_csrSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "-- | The ARN of the created subscription.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "csrSubscriptionArn",
                        "name": "_csrSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "-- | The ARN of the created subscription.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_ConfirmSubscription.html",
            "namespace": "Network.AWS.SNS.ConfirmSubscription",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "ConfirmSubscription",
            "method": "post",
            "documentation": "-- | Verifies an endpoint owner's intent to receive messages by validating the\n-- token sent to the endpoint by an earlier 'Subscribe' action. If the token is\n-- valid, the action creates a new subscription and returns its Amazon Resource\n-- Name (ARN). This call requires an AWS signature only when the 'AuthenticateOnUnsubscribe' flag is set to \"true\".",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 28,
                "ctor": "confirmSubscription",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "csTopicArn",
                        "name": "_csTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic for which you wish to confirm a subscription.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "csToken",
                        "name": "_csToken",
                        "shape": "token",
                        "locationName": "Token",
                        "documentation": "-- | Short-lived token sent to an endpoint during the 'Subscribe' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 26,
                "name": "ConfirmSubscription",
                "query": [
                    {
                        "field": "_csTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_csToken",
                        "locationName": "Token",
                        "type": "field"
                    },
                    {
                        "field": "_csAuthenticateOnUnsubscribe",
                        "locationName": "AuthenticateOnUnsubscribe",
                        "type": "field"
                    }
                ],
                "locationPad": 26,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "csAuthenticateOnUnsubscribe",
                        "name": "_csAuthenticateOnUnsubscribe",
                        "shape": "authenticateOnUnsubscribe",
                        "locationName": "AuthenticateOnUnsubscribe",
                        "documentation": "-- | Disallows unauthenticated unsubscribes of the subscription. If the value of\n-- this parameter is 'true' and the request has an AWS signature, then only the\n-- topic owner and the subscription owner can unsubscribe the endpoint. The\n-- unsubscribe action requires AWS authentication.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "csAuthenticateOnUnsubscribe",
                        "name": "_csAuthenticateOnUnsubscribe",
                        "shape": "authenticateOnUnsubscribe",
                        "locationName": "AuthenticateOnUnsubscribe",
                        "documentation": "-- | Disallows unauthenticated unsubscribes of the subscription. If the value of\n-- this parameter is 'true' and the request has an AWS signature, then only the\n-- topic owner and the subscription owner can unsubscribe the endpoint. The\n-- unsubscribe action requires AWS authentication.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "csToken",
                        "name": "_csToken",
                        "shape": "token",
                        "locationName": "Token",
                        "documentation": "-- | Short-lived token sent to an endpoint during the 'Subscribe' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "csTopicArn",
                        "name": "_csTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic for which you wish to confirm a subscription.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createPlatformApplicationResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "cparPlatformApplicationArn",
                    "name": "_cparPlatformApplicationArn",
                    "shape": "String",
                    "locationName": "PlatformApplicationArn",
                    "documentation": "-- | PlatformApplicationArn is returned.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreatePlatformApplicationResponse",
                "resultWrapper": "CreatePlatformApplicationResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cparPlatformApplicationArn",
                        "name": "_cparPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "-- | PlatformApplicationArn is returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cparPlatformApplicationArn",
                        "name": "_cparPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "-- | PlatformApplicationArn is returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html",
            "namespace": "Network.AWS.SNS.CreatePlatformApplication",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "CreatePlatformApplication",
            "method": "post",
            "documentation": "-- | Creates a platform application object for one of the supported push\n-- notification services, such as APNS and GCM, to which devices and mobile apps\n-- may register. You must specify PlatformPrincipal and PlatformCredential\n-- attributes when using the 'CreatePlatformApplication' action. The\n-- PlatformPrincipal is received from the notification service. For\n-- APNS/APNS_SANDBOX, PlatformPrincipal is \"SSL certificate\". For GCM,\n-- PlatformPrincipal is not applicable. For ADM, PlatformPrincipal is \"client\n-- id\". The PlatformCredential is also received from the notification service.\n-- For APNS/APNS_SANDBOX, PlatformCredential is \"private key\". For GCM,\n-- PlatformCredential is \"API key\". For ADM, PlatformCredential is \"client\n-- secret\". The PlatformApplicationArn that is returned when using 'CreatePlatformApplication' is then used as an attribute for the 'CreatePlatformEndpoint' action. For more\n-- information, see \u003chttp://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html Using Amazon SNS Mobile Push Notifications\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "createPlatformApplication",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cpaName",
                        "name": "_cpaName",
                        "shape": "String",
                        "locationName": "Name",
                        "documentation": "-- | Application names must be made up of only uppercase and lowercase ASCII\n-- letters, numbers, underscores, hyphens, and periods, and must be between 1\n-- and 256 characters long.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cpaPlatform",
                        "name": "_cpaPlatform",
                        "shape": "String",
                        "locationName": "Platform",
                        "documentation": "-- | The following platforms are supported: ADM (Amazon Device Messaging), APNS\n-- (Apple Push Notification Service), APNS_SANDBOX, and GCM (Google Cloud\n-- Messaging).",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "CreatePlatformApplication",
                "query": [
                    {
                        "field": "_cpaName",
                        "locationName": "Name",
                        "type": "field"
                    },
                    {
                        "field": "_cpaPlatform",
                        "locationName": "Platform",
                        "type": "field"
                    },
                    {
                        "field": "_cpaAttributes",
                        "locationName": "Attributes",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cpaAttributes",
                        "name": "_cpaAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | For a list of attributes, see \u003chttp://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html SetPlatformApplicationAttributes\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cpaAttributes",
                        "name": "_cpaAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | For a list of attributes, see \u003chttp://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html SetPlatformApplicationAttributes\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cpaName",
                        "name": "_cpaName",
                        "shape": "String",
                        "locationName": "Name",
                        "documentation": "-- | Application names must be made up of only uppercase and lowercase ASCII\n-- letters, numbers, underscores, hyphens, and periods, and must be between 1\n-- and 256 characters long.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cpaPlatform",
                        "name": "_cpaPlatform",
                        "shape": "String",
                        "locationName": "Platform",
                        "documentation": "-- | The following platforms are supported: ADM (Amazon Device Messaging), APNS\n-- (Apple Push Notification Service), APNS_SANDBOX, and GCM (Google Cloud\n-- Messaging).",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createPlatformEndpointResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "cperEndpointArn",
                    "name": "_cperEndpointArn",
                    "shape": "String",
                    "locationName": "EndpointArn",
                    "documentation": "-- | EndpointArn returned from CreateEndpoint action.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreatePlatformEndpointResponse",
                "resultWrapper": "CreatePlatformEndpointResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cperEndpointArn",
                        "name": "_cperEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "-- | EndpointArn returned from CreateEndpoint action.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cperEndpointArn",
                        "name": "_cperEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "-- | EndpointArn returned from CreateEndpoint action.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformEndpoint.html",
            "namespace": "Network.AWS.SNS.CreatePlatformEndpoint",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "CreatePlatformEndpoint",
            "method": "post",
            "documentation": "-- | Creates an endpoint for a device and mobile app on one of the supported push\n-- notification services, such as GCM and APNS. 'CreatePlatformEndpoint' requires\n-- the PlatformApplicationArn that is returned from 'CreatePlatformApplication'.\n-- The EndpointArn that is returned when using 'CreatePlatformEndpoint' can then\n-- be used by the 'Publish' action to send a message to a mobile app or by the 'Subscribe' action for subscription to a topic. The 'CreatePlatformEndpoint' action is\n-- idempotent, so if the requester already owns an endpoint with the same device\n-- token and attributes, that endpoint's ARN is returned without creating a new\n-- endpoint. For more information, see \u003chttp://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html Using Amazon SNS Mobile Push Notifications\u003e\n-- .\n--\n-- When using 'CreatePlatformEndpoint' with Baidu, two attributes must be\n-- provided: ChannelId and UserId. The token field must also contain the\n-- ChannelId. For more information, see \u003chttp://docs.aws.amazon.com/sns/latest/dg/SNSMobilePushBaiduEndpoint.html Creating an Amazon SNS Endpoint for Baidu\u003e\n-- .",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 26,
                "ctor": "createPlatformEndpoint",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cpePlatformApplicationArn",
                        "name": "_cpePlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "-- | PlatformApplicationArn returned from CreatePlatformApplication is used to\n-- create a an endpoint.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cpeToken",
                        "name": "_cpeToken",
                        "shape": "String",
                        "locationName": "Token",
                        "documentation": "-- | Unique identifier created by the notification service for an app on a device.\n-- The specific name for Token will vary, depending on which notification\n-- service is being used. For example, when using APNS as the notification\n-- service, you need the device token. Alternatively, when using GCM or ADM, the\n-- device token equivalent is called the registration ID.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "CreatePlatformEndpoint",
                "query": [
                    {
                        "field": "_cpePlatformApplicationArn",
                        "locationName": "PlatformApplicationArn",
                        "type": "field"
                    },
                    {
                        "field": "_cpeToken",
                        "locationName": "Token",
                        "type": "field"
                    },
                    {
                        "field": "_cpeCustomUserData",
                        "locationName": "CustomUserData",
                        "type": "field"
                    },
                    {
                        "field": "_cpeAttributes",
                        "locationName": "Attributes",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cpeCustomUserData",
                        "name": "_cpeCustomUserData",
                        "shape": "String",
                        "locationName": "CustomUserData",
                        "documentation": "-- | Arbitrary user data to associate with the endpoint. Amazon SNS does not use\n-- this data. The data must be in UTF-8 format and less than 2KB.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cpeAttributes",
                        "name": "_cpeAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | For a list of attributes, see \u003chttp://docs.aws.amazon.com/sns/latest/api/API_SetEndpointAttributes.html SetEndpointAttributes\u003e.",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cpeAttributes",
                        "name": "_cpeAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | For a list of attributes, see \u003chttp://docs.aws.amazon.com/sns/latest/api/API_SetEndpointAttributes.html SetEndpointAttributes\u003e.",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cpeCustomUserData",
                        "name": "_cpeCustomUserData",
                        "shape": "String",
                        "locationName": "CustomUserData",
                        "documentation": "-- | Arbitrary user data to associate with the endpoint. Amazon SNS does not use\n-- this data. The data must be in UTF-8 format and less than 2KB.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cpePlatformApplicationArn",
                        "name": "_cpePlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "-- | PlatformApplicationArn returned from CreatePlatformApplication is used to\n-- create a an endpoint.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cpeToken",
                        "name": "_cpeToken",
                        "shape": "String",
                        "locationName": "Token",
                        "documentation": "-- | Unique identifier created by the notification service for an app on a device.\n-- The specific name for Token will vary, depending on which notification\n-- service is being used. For example, when using APNS as the notification\n-- service, you need the device token. Alternatively, when using GCM or ADM, the\n-- device token equivalent is called the registration ID.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createTopicResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "ctrTopicArn",
                    "name": "_ctrTopicArn",
                    "shape": "topicARN",
                    "locationName": "TopicArn",
                    "documentation": "-- | The Amazon Resource Name (ARN) assigned to the created topic.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateTopicResponse",
                "resultWrapper": "CreateTopicResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ctrTopicArn",
                        "name": "_ctrTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) assigned to the created topic.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ctrTopicArn",
                        "name": "_ctrTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) assigned to the created topic.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_CreateTopic.html",
            "namespace": "Network.AWS.SNS.CreateTopic",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "CreateTopic",
            "method": "post",
            "documentation": "-- | Creates a topic to which notifications can be published. Users can create at\n-- most 3000 topics. For more information, see \u003chttp://aws.amazon.com/sns/ http://aws.amazon.com/sns\u003e. This\n-- action is idempotent, so if the requester already owns a topic with the\n-- specified name, that topic's ARN is returned without creating a new topic.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "createTopic",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "ctName",
                    "name": "_ctName",
                    "shape": "topicName",
                    "locationName": "Name",
                    "documentation": "-- | The name of the topic you want to create.\n--\n-- Constraints: Topic names must be made up of only uppercase and lowercase\n-- ASCII letters, numbers, underscores, and hyphens, and must be between 1 and\n-- 256 characters long.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ctName",
                        "name": "_ctName",
                        "shape": "topicName",
                        "locationName": "Name",
                        "documentation": "-- | The name of the topic you want to create.\n--\n-- Constraints: Topic names must be made up of only uppercase and lowercase\n-- ASCII letters, numbers, underscores, and hyphens, and must be between 1 and\n-- 256 characters long.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 5,
                "name": "CreateTopic",
                "query": [
                    {
                        "field": "_ctName",
                        "locationName": "Name",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ctName",
                        "name": "_ctName",
                        "shape": "topicName",
                        "locationName": "Name",
                        "documentation": "-- | The name of the topic you want to create.\n--\n-- Constraints: Topic names must be made up of only uppercase and lowercase\n-- ASCII letters, numbers, underscores, and hyphens, and must be between 1 and\n-- 256 characters long.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteEndpointResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteEndpointResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_DeleteEndpoint.html",
            "namespace": "Network.AWS.SNS.DeleteEndpoint",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "DeleteEndpoint",
            "method": "post",
            "documentation": "-- | Deletes the endpoint from Amazon SNS. This action is idempotent. For more\n-- information, see \u003chttp://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html Using Amazon SNS Mobile Push Notifications\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteEndpoint",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "deEndpointArn",
                    "name": "_deEndpointArn",
                    "shape": "String",
                    "locationName": "EndpointArn",
                    "documentation": "-- | EndpointArn of endpoint to delete.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "deEndpointArn",
                        "name": "_deEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "-- | EndpointArn of endpoint to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "DeleteEndpoint",
                "query": [
                    {
                        "field": "_deEndpointArn",
                        "locationName": "EndpointArn",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "deEndpointArn",
                        "name": "_deEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "-- | EndpointArn of endpoint to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deletePlatformApplicationResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeletePlatformApplicationResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_DeletePlatformApplication.html",
            "namespace": "Network.AWS.SNS.DeletePlatformApplication",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "DeletePlatformApplication",
            "method": "post",
            "documentation": "-- | Deletes a platform application object for one of the supported push\n-- notification services, such as APNS and GCM. For more information, see \u003chttp://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html UsingAmazon SNS Mobile Push Notifications\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deletePlatformApplication",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "dpaPlatformApplicationArn",
                    "name": "_dpaPlatformApplicationArn",
                    "shape": "String",
                    "locationName": "PlatformApplicationArn",
                    "documentation": "-- | PlatformApplicationArn of platform application object to delete.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dpaPlatformApplicationArn",
                        "name": "_dpaPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "-- | PlatformApplicationArn of platform application object to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "DeletePlatformApplication",
                "query": [
                    {
                        "field": "_dpaPlatformApplicationArn",
                        "locationName": "PlatformApplicationArn",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dpaPlatformApplicationArn",
                        "name": "_dpaPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "-- | PlatformApplicationArn of platform application object to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteTopicResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteTopicResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_DeleteTopic.html",
            "namespace": "Network.AWS.SNS.DeleteTopic",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "DeleteTopic",
            "method": "post",
            "documentation": "-- | Deletes a topic and all its subscriptions. Deleting a topic might prevent\n-- some messages previously sent to the topic from being delivered to\n-- subscribers. This action is idempotent, so deleting a topic that does not\n-- exist does not result in an error.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteTopic",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "dtTopicArn",
                    "name": "_dtTopicArn",
                    "shape": "topicARN",
                    "locationName": "TopicArn",
                    "documentation": "-- | The ARN of the topic you want to delete.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dtTopicArn",
                        "name": "_dtTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic you want to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "DeleteTopic",
                "query": [
                    {
                        "field": "_dtTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dtTopicArn",
                        "name": "_dtTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic you want to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getEndpointAttributesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_EMap",
                    "lensMapping": "_EMap",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "gearAttributes",
                    "name": "_gearAttributes",
                    "shape": "MapStringToString",
                    "locationName": "Attributes",
                    "documentation": "-- | Attributes include the following:\n--\n-- 'CustomUserData' -- arbitrary user data to associate with the endpoint.\n-- Amazon SNS does not use this data. The data must be in UTF-8 format and less\n-- than 2KB.  'Enabled' -- flag that enables/disables delivery to the endpoint.\n-- Amazon SNS will set this to false when a notification service indicates to\n-- Amazon SNS that the endpoint is invalid. Users can set it back to true,\n-- typically after updating Token.  'Token' -- device token, also referred to as a\n-- registration id, for an app and mobile device. This is returned from the\n-- notification service when an app and mobile device are registered with the\n-- notification service.",
                    "typeExposed": "HashMap Text Text",
                    "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetEndpointAttributesResponse",
                "resultWrapper": "GetEndpointAttributesResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gearAttributes",
                        "name": "_gearAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | Attributes include the following:\n--\n-- 'CustomUserData' -- arbitrary user data to associate with the endpoint.\n-- Amazon SNS does not use this data. The data must be in UTF-8 format and less\n-- than 2KB.  'Enabled' -- flag that enables/disables delivery to the endpoint.\n-- Amazon SNS will set this to false when a notification service indicates to\n-- Amazon SNS that the endpoint is invalid. Users can set it back to true,\n-- typically after updating Token.  'Token' -- device token, also referred to as a\n-- registration id, for an app and mobile device. This is returned from the\n-- notification service when an app and mobile device are registered with the\n-- notification service.",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gearAttributes",
                        "name": "_gearAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | Attributes include the following:\n--\n-- 'CustomUserData' -- arbitrary user data to associate with the endpoint.\n-- Amazon SNS does not use this data. The data must be in UTF-8 format and less\n-- than 2KB.  'Enabled' -- flag that enables/disables delivery to the endpoint.\n-- Amazon SNS will set this to false when a notification service indicates to\n-- Amazon SNS that the endpoint is invalid. Users can set it back to true,\n-- typically after updating Token.  'Token' -- device token, also referred to as a\n-- registration id, for an app and mobile device. This is returned from the\n-- notification service when an app and mobile device are registered with the\n-- notification service.",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_GetEndpointAttributes.html",
            "namespace": "Network.AWS.SNS.GetEndpointAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "GetEndpointAttributes",
            "method": "post",
            "documentation": "-- | Retrieves the endpoint attributes for a device on one of the supported push\n-- notification services, such as GCM and APNS. For more information, see \u003chttp://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html UsingAmazon SNS Mobile Push Notifications\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getEndpointAttributes",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "geaEndpointArn",
                    "name": "_geaEndpointArn",
                    "shape": "String",
                    "locationName": "EndpointArn",
                    "documentation": "-- | EndpointArn for GetEndpointAttributes input.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "geaEndpointArn",
                        "name": "_geaEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "-- | EndpointArn for GetEndpointAttributes input.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "GetEndpointAttributes",
                "query": [
                    {
                        "field": "_geaEndpointArn",
                        "locationName": "EndpointArn",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "geaEndpointArn",
                        "name": "_geaEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "-- | EndpointArn for GetEndpointAttributes input.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getPlatformApplicationAttributesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_EMap",
                    "lensMapping": "_EMap",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "gpaarAttributes",
                    "name": "_gpaarAttributes",
                    "shape": "MapStringToString",
                    "locationName": "Attributes",
                    "documentation": "-- | Attributes include the following:\n--\n-- 'EventEndpointCreated' -- Topic ARN to which EndpointCreated event\n-- notifications should be sent.  'EventEndpointDeleted' -- Topic ARN to which\n-- EndpointDeleted event notifications should be sent.  'EventEndpointUpdated' --\n-- Topic ARN to which EndpointUpdate event notifications should be sent.  'EventDeliveryFailure' -- Topic ARN to which DeliveryFailure event notifications should be sent\n-- upon Direct Publish delivery failure (permanent) to one of the application's\n-- endpoints.",
                    "typeExposed": "HashMap Text Text",
                    "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetPlatformApplicationAttributesResponse",
                "resultWrapper": "GetPlatformApplicationAttributesResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gpaarAttributes",
                        "name": "_gpaarAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | Attributes include the following:\n--\n-- 'EventEndpointCreated' -- Topic ARN to which EndpointCreated event\n-- notifications should be sent.  'EventEndpointDeleted' -- Topic ARN to which\n-- EndpointDeleted event notifications should be sent.  'EventEndpointUpdated' --\n-- Topic ARN to which EndpointUpdate event notifications should be sent.  'EventDeliveryFailure' -- Topic ARN to which DeliveryFailure event notifications should be sent\n-- upon Direct Publish delivery failure (permanent) to one of the application's\n-- endpoints.",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gpaarAttributes",
                        "name": "_gpaarAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | Attributes include the following:\n--\n-- 'EventEndpointCreated' -- Topic ARN to which EndpointCreated event\n-- notifications should be sent.  'EventEndpointDeleted' -- Topic ARN to which\n-- EndpointDeleted event notifications should be sent.  'EventEndpointUpdated' --\n-- Topic ARN to which EndpointUpdate event notifications should be sent.  'EventDeliveryFailure' -- Topic ARN to which DeliveryFailure event notifications should be sent\n-- upon Direct Publish delivery failure (permanent) to one of the application's\n-- endpoints.",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_GetPlatformApplicationAttributes.html",
            "namespace": "Network.AWS.SNS.GetPlatformApplicationAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "GetPlatformApplicationAttributes",
            "method": "post",
            "documentation": "-- | Retrieves the attributes of the platform application object for the supported\n-- push notification services, such as APNS and GCM. For more information, see \u003chttp://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html Using Amazon SNS Mobile Push Notifications\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getPlatformApplicationAttributes",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "gpaaPlatformApplicationArn",
                    "name": "_gpaaPlatformApplicationArn",
                    "shape": "String",
                    "locationName": "PlatformApplicationArn",
                    "documentation": "-- | PlatformApplicationArn for GetPlatformApplicationAttributesInput.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gpaaPlatformApplicationArn",
                        "name": "_gpaaPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "-- | PlatformApplicationArn for GetPlatformApplicationAttributesInput.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "GetPlatformApplicationAttributes",
                "query": [
                    {
                        "field": "_gpaaPlatformApplicationArn",
                        "locationName": "PlatformApplicationArn",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gpaaPlatformApplicationArn",
                        "name": "_gpaaPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "-- | PlatformApplicationArn for GetPlatformApplicationAttributesInput.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getSubscriptionAttributesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_EMap",
                    "lensMapping": "_EMap",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "gsarAttributes",
                    "name": "_gsarAttributes",
                    "shape": "SubscriptionAttributesMap",
                    "locationName": "Attributes",
                    "documentation": "-- | A map of the subscription's attributes. Attributes in this map include the\n-- following:\n--\n-- 'SubscriptionArn' -- the subscription's ARN  'TopicArn' -- the topic ARN that\n-- the subscription is associated with  'Owner' -- the AWS account ID of the\n-- subscription's owner  'ConfirmationWasAuthenticated' -- true if the\n-- subscription confirmation request was authenticated  'DeliveryPolicy' -- the\n-- JSON serialization of the subscription's delivery policy  'EffectiveDeliveryPolicy' -- the JSON serialization of the effective delivery policy that takes into\n-- account the topic delivery policy and account system defaults",
                    "typeExposed": "HashMap Text Text",
                    "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetSubscriptionAttributesResponse",
                "resultWrapper": "GetSubscriptionAttributesResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gsarAttributes",
                        "name": "_gsarAttributes",
                        "shape": "SubscriptionAttributesMap",
                        "locationName": "Attributes",
                        "documentation": "-- | A map of the subscription's attributes. Attributes in this map include the\n-- following:\n--\n-- 'SubscriptionArn' -- the subscription's ARN  'TopicArn' -- the topic ARN that\n-- the subscription is associated with  'Owner' -- the AWS account ID of the\n-- subscription's owner  'ConfirmationWasAuthenticated' -- true if the\n-- subscription confirmation request was authenticated  'DeliveryPolicy' -- the\n-- JSON serialization of the subscription's delivery policy  'EffectiveDeliveryPolicy' -- the JSON serialization of the effective delivery policy that takes into\n-- account the topic delivery policy and account system defaults",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gsarAttributes",
                        "name": "_gsarAttributes",
                        "shape": "SubscriptionAttributesMap",
                        "locationName": "Attributes",
                        "documentation": "-- | A map of the subscription's attributes. Attributes in this map include the\n-- following:\n--\n-- 'SubscriptionArn' -- the subscription's ARN  'TopicArn' -- the topic ARN that\n-- the subscription is associated with  'Owner' -- the AWS account ID of the\n-- subscription's owner  'ConfirmationWasAuthenticated' -- true if the\n-- subscription confirmation request was authenticated  'DeliveryPolicy' -- the\n-- JSON serialization of the subscription's delivery policy  'EffectiveDeliveryPolicy' -- the JSON serialization of the effective delivery policy that takes into\n-- account the topic delivery policy and account system defaults",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_GetSubscriptionAttributes.html",
            "namespace": "Network.AWS.SNS.GetSubscriptionAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "GetSubscriptionAttributes",
            "method": "post",
            "documentation": "-- | Returns all of the properties of a subscription.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getSubscriptionAttributes",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "gsaSubscriptionArn",
                    "name": "_gsaSubscriptionArn",
                    "shape": "subscriptionARN",
                    "locationName": "SubscriptionArn",
                    "documentation": "-- | The ARN of the subscription whose properties you want to get.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gsaSubscriptionArn",
                        "name": "_gsaSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "-- | The ARN of the subscription whose properties you want to get.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "GetSubscriptionAttributes",
                "query": [
                    {
                        "field": "_gsaSubscriptionArn",
                        "locationName": "SubscriptionArn",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gsaSubscriptionArn",
                        "name": "_gsaSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "-- | The ARN of the subscription whose properties you want to get.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getTopicAttributesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_EMap",
                    "lensMapping": "_EMap",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "gtarAttributes",
                    "name": "_gtarAttributes",
                    "shape": "TopicAttributesMap",
                    "locationName": "Attributes",
                    "documentation": "-- | A map of the topic's attributes. Attributes in this map include the following:\n--\n-- 'TopicArn' -- the topic's ARN  'Owner' -- the AWS account ID of the topic's\n-- owner  'Policy' -- the JSON serialization of the topic's access control policy  'DisplayName' -- the human-readable name used in the \"From\" field for\n-- notifications to email and email-json endpoints  'SubscriptionsPending' -- the\n-- number of subscriptions pending confirmation on this topic  'SubscriptionsConfirmed' -- the number of confirmed subscriptions on this topic  'SubscriptionsDeleted'\n-- -- the number of deleted subscriptions on this topic  'DeliveryPolicy' -- the\n-- JSON serialization of the topic's delivery policy  'EffectiveDeliveryPolicy' --\n-- the JSON serialization of the effective delivery policy that takes into\n-- account system defaults",
                    "typeExposed": "HashMap Text Text",
                    "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetTopicAttributesResponse",
                "resultWrapper": "GetTopicAttributesResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gtarAttributes",
                        "name": "_gtarAttributes",
                        "shape": "TopicAttributesMap",
                        "locationName": "Attributes",
                        "documentation": "-- | A map of the topic's attributes. Attributes in this map include the following:\n--\n-- 'TopicArn' -- the topic's ARN  'Owner' -- the AWS account ID of the topic's\n-- owner  'Policy' -- the JSON serialization of the topic's access control policy  'DisplayName' -- the human-readable name used in the \"From\" field for\n-- notifications to email and email-json endpoints  'SubscriptionsPending' -- the\n-- number of subscriptions pending confirmation on this topic  'SubscriptionsConfirmed' -- the number of confirmed subscriptions on this topic  'SubscriptionsDeleted'\n-- -- the number of deleted subscriptions on this topic  'DeliveryPolicy' -- the\n-- JSON serialization of the topic's delivery policy  'EffectiveDeliveryPolicy' --\n-- the JSON serialization of the effective delivery policy that takes into\n-- account system defaults",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gtarAttributes",
                        "name": "_gtarAttributes",
                        "shape": "TopicAttributesMap",
                        "locationName": "Attributes",
                        "documentation": "-- | A map of the topic's attributes. Attributes in this map include the following:\n--\n-- 'TopicArn' -- the topic's ARN  'Owner' -- the AWS account ID of the topic's\n-- owner  'Policy' -- the JSON serialization of the topic's access control policy  'DisplayName' -- the human-readable name used in the \"From\" field for\n-- notifications to email and email-json endpoints  'SubscriptionsPending' -- the\n-- number of subscriptions pending confirmation on this topic  'SubscriptionsConfirmed' -- the number of confirmed subscriptions on this topic  'SubscriptionsDeleted'\n-- -- the number of deleted subscriptions on this topic  'DeliveryPolicy' -- the\n-- JSON serialization of the topic's delivery policy  'EffectiveDeliveryPolicy' --\n-- the JSON serialization of the effective delivery policy that takes into\n-- account system defaults",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_GetTopicAttributes.html",
            "namespace": "Network.AWS.SNS.GetTopicAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "GetTopicAttributes",
            "method": "post",
            "documentation": "-- | Returns all of the properties of a topic. Topic properties returned might\n-- differ based on the authorization of the user.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getTopicAttributes",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "gtaTopicArn",
                    "name": "_gtaTopicArn",
                    "shape": "topicARN",
                    "locationName": "TopicArn",
                    "documentation": "-- | The ARN of the topic whose properties you want to get.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gtaTopicArn",
                        "name": "_gtaTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic whose properties you want to get.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "GetTopicAttributes",
                "query": [
                    {
                        "field": "_gtaTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gtaTopicArn",
                        "name": "_gtaTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic whose properties you want to get.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 16,
                "ctor": "listEndpointsByPlatformApplicationResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListEndpointsByPlatformApplicationResponse",
                "resultWrapper": "ListEndpointsByPlatformApplicationResult",
                "locationPad": 10,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "lebparEndpoints",
                        "name": "_lebparEndpoints",
                        "shape": "ListOfEndpoints",
                        "locationName": "Endpoints",
                        "documentation": "-- | Endpoints returned for ListEndpointsByPlatformApplication action.",
                        "typeExposed": "[Endpoint]",
                        "type": "List \"member\" Endpoint"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lebparNextToken",
                        "name": "_lebparNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "-- | NextToken string is returned when calling ListEndpointsByPlatformApplication\n-- action if additional records are available after the first page results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "lebparEndpoints",
                        "name": "_lebparEndpoints",
                        "shape": "ListOfEndpoints",
                        "locationName": "Endpoints",
                        "documentation": "-- | Endpoints returned for ListEndpointsByPlatformApplication action.",
                        "typeExposed": "[Endpoint]",
                        "type": "List \"member\" Endpoint"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lebparNextToken",
                        "name": "_lebparNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "-- | NextToken string is returned when calling ListEndpointsByPlatformApplication\n-- action if additional records are available after the first page results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_ListEndpointsByPlatformApplication.html",
            "namespace": "Network.AWS.SNS.ListEndpointsByPlatformApplication",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": {
                "token": {
                    "input": "lebpaNextToken",
                    "outputRequired": false,
                    "output": "lebparNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "lebparEndpoints"
            },
            "name": "ListEndpointsByPlatformApplication",
            "method": "post",
            "documentation": "-- | Lists the endpoints and endpoint attributes for devices in a supported push\n-- notification service, such as GCM and APNS. The results for 'ListEndpointsByPlatformApplication' are paginated and return a limited list of endpoints, up to 100. If\n-- additional records are available after the first page results, then a\n-- NextToken string will be returned. To receive the next page, you call 'ListEndpointsByPlatformApplication' again using the NextToken string received from the previous call. When there\n-- are no more records to return, NextToken will be null. For more information,\n-- see \u003chttp://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html Using Amazon SNS Mobile Push Notifications\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 28,
                "ctor": "listEndpointsByPlatformApplication",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "lebpaPlatformApplicationArn",
                        "name": "_lebpaPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "-- | PlatformApplicationArn for ListEndpointsByPlatformApplicationInput action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "ListEndpointsByPlatformApplication",
                "query": [
                    {
                        "field": "_lebpaPlatformApplicationArn",
                        "locationName": "PlatformApplicationArn",
                        "type": "field"
                    },
                    {
                        "field": "_lebpaNextToken",
                        "locationName": "NextToken",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lebpaNextToken",
                        "name": "_lebpaNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "-- | NextToken string is used when calling ListEndpointsByPlatformApplication\n-- action to retrieve additional records that are available after the first page\n-- results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lebpaNextToken",
                        "name": "_lebpaNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "-- | NextToken string is used when calling ListEndpointsByPlatformApplication\n-- action to retrieve additional records that are available after the first page\n-- results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "lebpaPlatformApplicationArn",
                        "name": "_lebpaPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "-- | PlatformApplicationArn for ListEndpointsByPlatformApplicationInput action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 25,
                "ctor": "listPlatformApplicationsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListPlatformApplicationsResponse",
                "resultWrapper": "ListPlatformApplicationsResult",
                "locationPad": 21,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "lparPlatformApplications",
                        "name": "_lparPlatformApplications",
                        "shape": "ListOfPlatformApplications",
                        "locationName": "PlatformApplications",
                        "documentation": "-- | Platform applications returned when calling ListPlatformApplications action.",
                        "typeExposed": "[PlatformApplication]",
                        "type": "List \"member\" PlatformApplication"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lparNextToken",
                        "name": "_lparNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "-- | NextToken string is returned when calling ListPlatformApplications action if\n-- additional records are available after the first page results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lparNextToken",
                        "name": "_lparNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "-- | NextToken string is returned when calling ListPlatformApplications action if\n-- additional records are available after the first page results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "lparPlatformApplications",
                        "name": "_lparPlatformApplications",
                        "shape": "ListOfPlatformApplications",
                        "locationName": "PlatformApplications",
                        "documentation": "-- | Platform applications returned when calling ListPlatformApplications action.",
                        "typeExposed": "[PlatformApplication]",
                        "type": "List \"member\" PlatformApplication"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_ListPlatformApplications.html",
            "namespace": "Network.AWS.SNS.ListPlatformApplications",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": {
                "token": {
                    "input": "lpaNextToken",
                    "outputRequired": false,
                    "output": "lparNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "lparPlatformApplications"
            },
            "name": "ListPlatformApplications",
            "method": "post",
            "documentation": "-- | Lists the platform application objects for the supported push notification\n-- services, such as APNS and GCM. The results for 'ListPlatformApplications' are\n-- paginated and return a limited list of applications, up to 100. If additional\n-- records are available after the first page results, then a NextToken string\n-- will be returned. To receive the next page, you call 'ListPlatformApplications'\n-- using the NextToken string received from the previous call. When there are no\n-- more records to return, NextToken will be null. For more information, see \u003chttp://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html Using Amazon SNS Mobile Push Notifications\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "listPlatformApplications",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "lpaNextToken",
                    "name": "_lpaNextToken",
                    "shape": "String",
                    "locationName": "NextToken",
                    "documentation": "-- | NextToken string is used when calling ListPlatformApplications action to\n-- retrieve additional records that are available after the first page results.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "ListPlatformApplications",
                "query": [
                    {
                        "field": "_lpaNextToken",
                        "locationName": "NextToken",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lpaNextToken",
                        "name": "_lpaNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "-- | NextToken string is used when calling ListPlatformApplications action to\n-- retrieve additional records that are available after the first page results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lpaNextToken",
                        "name": "_lpaNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "-- | NextToken string is used when calling ListPlatformApplications action to\n-- retrieve additional records that are available after the first page results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 17,
                "ctor": "listSubscriptionsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListSubscriptionsResponse",
                "resultWrapper": "ListSubscriptionsResult",
                "locationPad": 14,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "lsrSubscriptions",
                        "name": "_lsrSubscriptions",
                        "shape": "SubscriptionsList",
                        "locationName": "Subscriptions",
                        "documentation": "-- | A list of subscriptions.",
                        "typeExposed": "[Subscription]",
                        "type": "List \"member\" Subscription"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lsrNextToken",
                        "name": "_lsrNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | Token to pass along to the next 'ListSubscriptions' request. This element is\n-- returned if there are more subscriptions to retrieve.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lsrNextToken",
                        "name": "_lsrNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | Token to pass along to the next 'ListSubscriptions' request. This element is\n-- returned if there are more subscriptions to retrieve.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "lsrSubscriptions",
                        "name": "_lsrSubscriptions",
                        "shape": "SubscriptionsList",
                        "locationName": "Subscriptions",
                        "documentation": "-- | A list of subscriptions.",
                        "typeExposed": "[Subscription]",
                        "type": "List \"member\" Subscription"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_ListSubscriptions.html",
            "namespace": "Network.AWS.SNS.ListSubscriptions",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": {
                "token": {
                    "input": "lsNextToken",
                    "outputRequired": false,
                    "output": "lsrNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "lsrSubscriptions"
            },
            "name": "ListSubscriptions",
            "method": "post",
            "documentation": "-- | Returns a list of the requester's subscriptions. Each call returns a limited\n-- list of subscriptions, up to 100. If there are more subscriptions, a 'NextToken'\n-- is also returned. Use the 'NextToken' parameter in a new 'ListSubscriptions'\n-- call to get further results.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "listSubscriptions",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "lsNextToken",
                    "name": "_lsNextToken",
                    "shape": "nextToken",
                    "locationName": "NextToken",
                    "documentation": "-- | Token returned by the previous 'ListSubscriptions' request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "ListSubscriptions",
                "query": [
                    {
                        "field": "_lsNextToken",
                        "locationName": "NextToken",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lsNextToken",
                        "name": "_lsNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | Token returned by the previous 'ListSubscriptions' request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lsNextToken",
                        "name": "_lsNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | Token returned by the previous 'ListSubscriptions' request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "listSubscriptionsByTopicResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListSubscriptionsByTopicResponse",
                "resultWrapper": "ListSubscriptionsByTopicResult",
                "locationPad": 14,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "lsbtrSubscriptions",
                        "name": "_lsbtrSubscriptions",
                        "shape": "SubscriptionsList",
                        "locationName": "Subscriptions",
                        "documentation": "-- | A list of subscriptions.",
                        "typeExposed": "[Subscription]",
                        "type": "List \"member\" Subscription"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lsbtrNextToken",
                        "name": "_lsbtrNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | Token to pass along to the next 'ListSubscriptionsByTopic' request. This\n-- element is returned if there are more subscriptions to retrieve.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lsbtrNextToken",
                        "name": "_lsbtrNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | Token to pass along to the next 'ListSubscriptionsByTopic' request. This\n-- element is returned if there are more subscriptions to retrieve.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "lsbtrSubscriptions",
                        "name": "_lsbtrSubscriptions",
                        "shape": "SubscriptionsList",
                        "locationName": "Subscriptions",
                        "documentation": "-- | A list of subscriptions.",
                        "typeExposed": "[Subscription]",
                        "type": "List \"member\" Subscription"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_ListSubscriptionsByTopic.html",
            "namespace": "Network.AWS.SNS.ListSubscriptionsByTopic",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": {
                "token": {
                    "input": "lsbtNextToken",
                    "outputRequired": false,
                    "output": "lsbtrNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "lsbtrSubscriptions"
            },
            "name": "ListSubscriptionsByTopic",
            "method": "post",
            "documentation": "-- | Returns a list of the subscriptions to a specific topic. Each call returns a\n-- limited list of subscriptions, up to 100. If there are more subscriptions, a 'NextToken' is also returned. Use the 'NextToken' parameter in a new 'ListSubscriptionsByTopic' call to get further results.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "listSubscriptionsByTopic",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "lsbtTopicArn",
                        "name": "_lsbtTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic for which you wish to find subscriptions.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "ListSubscriptionsByTopic",
                "query": [
                    {
                        "field": "_lsbtTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_lsbtNextToken",
                        "locationName": "NextToken",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lsbtNextToken",
                        "name": "_lsbtNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | Token returned by the previous 'ListSubscriptionsByTopic' request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "lsbtNextToken",
                        "name": "_lsbtNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | Token returned by the previous 'ListSubscriptionsByTopic' request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "lsbtTopicArn",
                        "name": "_lsbtTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic for which you wish to find subscriptions.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 13,
                "ctor": "listTopicsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListTopicsResponse",
                "resultWrapper": "ListTopicsResult",
                "locationPad": 10,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ltrTopics",
                        "name": "_ltrTopics",
                        "shape": "TopicsList",
                        "locationName": "Topics",
                        "documentation": "-- | A list of topic ARNs.",
                        "typeExposed": "[Topic]",
                        "type": "List \"member\" Topic"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ltrNextToken",
                        "name": "_ltrNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | Token to pass along to the next 'ListTopics' request. This element is returned\n-- if there are additional topics to retrieve.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ltrNextToken",
                        "name": "_ltrNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | Token to pass along to the next 'ListTopics' request. This element is returned\n-- if there are additional topics to retrieve.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ltrTopics",
                        "name": "_ltrTopics",
                        "shape": "TopicsList",
                        "locationName": "Topics",
                        "documentation": "-- | A list of topic ARNs.",
                        "typeExposed": "[Topic]",
                        "type": "List \"member\" Topic"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_ListTopics.html",
            "namespace": "Network.AWS.SNS.ListTopics",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": {
                "token": {
                    "input": "ltNextToken",
                    "outputRequired": false,
                    "output": "ltrNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "ltrTopics"
            },
            "name": "ListTopics",
            "method": "post",
            "documentation": "-- | Returns a list of the requester's topics. Each call returns a limited list of\n-- topics, up to 100. If there are more topics, a 'NextToken' is also returned.\n-- Use the 'NextToken' parameter in a new 'ListTopics' call to get further results.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "listTopics",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "ltNextToken",
                    "name": "_ltNextToken",
                    "shape": "nextToken",
                    "locationName": "NextToken",
                    "documentation": "-- | Token returned by the previous 'ListTopics' request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "ListTopics",
                "query": [
                    {
                        "field": "_ltNextToken",
                        "locationName": "NextToken",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ltNextToken",
                        "name": "_ltNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | Token returned by the previous 'ListTopics' request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ltNextToken",
                        "name": "_ltNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | Token returned by the previous 'ListTopics' request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "publishResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "prMessageId",
                    "name": "_prMessageId",
                    "shape": "messageId",
                    "locationName": "MessageId",
                    "documentation": "-- | Unique identifier assigned to the published message.\n--\n-- Length Constraint: Maximum 100 characters",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "PublishResponse",
                "resultWrapper": "PublishResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "prMessageId",
                        "name": "_prMessageId",
                        "shape": "messageId",
                        "locationName": "MessageId",
                        "documentation": "-- | Unique identifier assigned to the published message.\n--\n-- Length Constraint: Maximum 100 characters",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "prMessageId",
                        "name": "_prMessageId",
                        "shape": "messageId",
                        "locationName": "MessageId",
                        "documentation": "-- | Unique identifier assigned to the published message.\n--\n-- Length Constraint: Maximum 100 characters",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_Publish.html",
            "namespace": "Network.AWS.SNS.Publish",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "Publish",
            "method": "post",
            "documentation": "-- | Sends a message to all of a topic's subscribed endpoints. When a 'messageId' is\n-- returned, the message has been saved and Amazon SNS will attempt to deliver\n-- it to the topic's subscribers shortly. The format of the outgoing message to\n-- each subscribed endpoint depends on the notification protocol selected.\n--\n-- To use the 'Publish' action for sending a message to a mobile endpoint, such\n-- as an app on a Kindle device or mobile phone, you must specify the\n-- EndpointArn. The EndpointArn is returned when making a call with the 'CreatePlatformEndpoint' action. The second example below shows a request and response for publishing\n-- to a mobile endpoint.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 19,
                "ctor": "publish",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pMessage",
                        "name": "_pMessage",
                        "shape": "message",
                        "locationName": "Message",
                        "documentation": "-- | The message you want to send to the topic.\n--\n-- If you want to send the same message to all transport protocols, include the\n-- text of the message as a String value.\n--\n-- If you want to send different messages for each transport protocol, set the\n-- value of the 'MessageStructure' parameter to 'json' and use a JSON object for the 'Message' parameter. See the Examples section for the format of the JSON\n-- object.\n--\n-- Constraints: Messages must be UTF-8 encoded strings at most 256 KB in size\n-- (262144 bytes, not 262144 characters).\n--\n-- JSON-specific constraints:  Keys in the JSON object that correspond to\n-- supported transport protocols must have simple JSON string values.  The\n-- values will be parsed (unescaped) before they are used in outgoing messages. Outbound notifications are JSON encoded (meaning that the characters will be reescaped for sending).\n-- Values have a minimum length of 0 (the empty string, \"\", is allowed). Values\n-- have a maximum length bounded by the overall message size (so, including\n-- multiple protocols may limit message sizes). Non-string values will cause the\n-- key to be ignored. Keys that do not correspond to supported transport\n-- protocols are ignored. Duplicate keys are not allowed. Failure to parse or\n-- validate any key or value in the message will cause the 'Publish' call to\n-- return an error (no partial delivery).",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "Publish",
                "query": [
                    {
                        "field": "_pTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_pTargetArn",
                        "locationName": "TargetArn",
                        "type": "field"
                    },
                    {
                        "field": "_pMessage",
                        "locationName": "Message",
                        "type": "field"
                    },
                    {
                        "field": "_pSubject",
                        "locationName": "Subject",
                        "type": "field"
                    },
                    {
                        "field": "_pMessageStructure",
                        "locationName": "MessageStructure",
                        "type": "field"
                    },
                    {
                        "field": "_pMessageAttributes",
                        "locationName": "MessageAttributes",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "pTopicArn",
                        "name": "_pTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The topic you want to publish to.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "pTargetArn",
                        "name": "_pTargetArn",
                        "shape": "String",
                        "locationName": "TargetArn",
                        "documentation": "-- | Either TopicArn or EndpointArn, but not both.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "pSubject",
                        "name": "_pSubject",
                        "shape": "subject",
                        "locationName": "Subject",
                        "documentation": "-- | Optional parameter to be used as the \"Subject\" line when the message is\n-- delivered to email endpoints. This field will also be included, if present,\n-- in the standard JSON messages delivered to other endpoints.\n--\n-- Constraints: Subjects must be ASCII text that begins with a letter, number,\n-- or punctuation mark; must not include line breaks or control characters; and\n-- must be less than 100 characters long.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "pMessageStructure",
                        "name": "_pMessageStructure",
                        "shape": "messageStructure",
                        "locationName": "MessageStructure",
                        "documentation": "-- | Set 'MessageStructure' to 'json' if you want to send a different message for each\n-- protocol. For example, using one publish action, you can send a short message\n-- to your SMS subscribers and a longer message to your email subscribers. If\n-- you set 'MessageStructure' to 'json', the value of the 'Message' parameter must:\n--\n-- be a syntactically valid JSON object; and contain at least a top-level JSON\n-- key of \"default\" with a value that is a string.   You can define other\n-- top-level keys that define the message you want to send to a specific\n-- transport protocol (e.g., \"http\").\n--\n-- For information about sending different messages for each protocol using the\n-- AWS Management Console, go to \u003chttp://docs.aws.amazon.com/sns/latest/gsg/Publish.html#sns-message-formatting-by-protocol Create Different Messages for Each Protocol\u003e in\n-- the /Amazon Simple Notification Service Getting Started Guide/.\n--\n-- Valid value: 'json'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pMessageAttributes",
                        "name": "_pMessageAttributes",
                        "shape": "MessageAttributeMap",
                        "locationName": "MessageAttributes",
                        "documentation": "-- | Message attributes for Publish action.",
                        "typeExposed": "HashMap Text MessageAttributeValue",
                        "type": "EMap \"entry\" \"Name\" \"Value\" Text MessageAttributeValue"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pMessage",
                        "name": "_pMessage",
                        "shape": "message",
                        "locationName": "Message",
                        "documentation": "-- | The message you want to send to the topic.\n--\n-- If you want to send the same message to all transport protocols, include the\n-- text of the message as a String value.\n--\n-- If you want to send different messages for each transport protocol, set the\n-- value of the 'MessageStructure' parameter to 'json' and use a JSON object for the 'Message' parameter. See the Examples section for the format of the JSON\n-- object.\n--\n-- Constraints: Messages must be UTF-8 encoded strings at most 256 KB in size\n-- (262144 bytes, not 262144 characters).\n--\n-- JSON-specific constraints:  Keys in the JSON object that correspond to\n-- supported transport protocols must have simple JSON string values.  The\n-- values will be parsed (unescaped) before they are used in outgoing messages. Outbound notifications are JSON encoded (meaning that the characters will be reescaped for sending).\n-- Values have a minimum length of 0 (the empty string, \"\", is allowed). Values\n-- have a maximum length bounded by the overall message size (so, including\n-- multiple protocols may limit message sizes). Non-string values will cause the\n-- key to be ignored. Keys that do not correspond to supported transport\n-- protocols are ignored. Duplicate keys are not allowed. Failure to parse or\n-- validate any key or value in the message will cause the 'Publish' call to\n-- return an error (no partial delivery).",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pMessageAttributes",
                        "name": "_pMessageAttributes",
                        "shape": "MessageAttributeMap",
                        "locationName": "MessageAttributes",
                        "documentation": "-- | Message attributes for Publish action.",
                        "typeExposed": "HashMap Text MessageAttributeValue",
                        "type": "EMap \"entry\" \"Name\" \"Value\" Text MessageAttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "pMessageStructure",
                        "name": "_pMessageStructure",
                        "shape": "messageStructure",
                        "locationName": "MessageStructure",
                        "documentation": "-- | Set 'MessageStructure' to 'json' if you want to send a different message for each\n-- protocol. For example, using one publish action, you can send a short message\n-- to your SMS subscribers and a longer message to your email subscribers. If\n-- you set 'MessageStructure' to 'json', the value of the 'Message' parameter must:\n--\n-- be a syntactically valid JSON object; and contain at least a top-level JSON\n-- key of \"default\" with a value that is a string.   You can define other\n-- top-level keys that define the message you want to send to a specific\n-- transport protocol (e.g., \"http\").\n--\n-- For information about sending different messages for each protocol using the\n-- AWS Management Console, go to \u003chttp://docs.aws.amazon.com/sns/latest/gsg/Publish.html#sns-message-formatting-by-protocol Create Different Messages for Each Protocol\u003e in\n-- the /Amazon Simple Notification Service Getting Started Guide/.\n--\n-- Valid value: 'json'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "pSubject",
                        "name": "_pSubject",
                        "shape": "subject",
                        "locationName": "Subject",
                        "documentation": "-- | Optional parameter to be used as the \"Subject\" line when the message is\n-- delivered to email endpoints. This field will also be included, if present,\n-- in the standard JSON messages delivered to other endpoints.\n--\n-- Constraints: Subjects must be ASCII text that begins with a letter, number,\n-- or punctuation mark; must not include line breaks or control characters; and\n-- must be less than 100 characters long.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "pTargetArn",
                        "name": "_pTargetArn",
                        "shape": "String",
                        "locationName": "TargetArn",
                        "documentation": "-- | Either TopicArn or EndpointArn, but not both.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "pTopicArn",
                        "name": "_pTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The topic you want to publish to.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "removePermissionResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "RemovePermissionResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_RemovePermission.html",
            "namespace": "Network.AWS.SNS.RemovePermission",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "RemovePermission",
            "method": "post",
            "documentation": "-- | Removes a statement from a topic's access control policy.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 11,
                "ctor": "removePermission",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rpTopicArn",
                        "name": "_rpTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic whose access control policy you wish to modify.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rpLabel",
                        "name": "_rpLabel",
                        "shape": "label",
                        "locationName": "Label",
                        "documentation": "-- | The unique label of the statement you want to remove.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "RemovePermission",
                "query": [
                    {
                        "field": "_rpTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_rpLabel",
                        "locationName": "Label",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rpLabel",
                        "name": "_rpLabel",
                        "shape": "label",
                        "locationName": "Label",
                        "documentation": "-- | The unique label of the statement you want to remove.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rpTopicArn",
                        "name": "_rpTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic whose access control policy you wish to modify.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "setEndpointAttributesResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "SetEndpointAttributesResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_SetEndpointAttributes.html",
            "namespace": "Network.AWS.SNS.SetEndpointAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "SetEndpointAttributes",
            "method": "post",
            "documentation": "-- | Sets the attributes for an endpoint for a device on one of the supported push\n-- notification services, such as GCM and APNS. For more information, see \u003chttp://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html UsingAmazon SNS Mobile Push Notifications\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "setEndpointAttributes",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "seaEndpointArn",
                        "name": "_seaEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "-- | EndpointArn used for SetEndpointAttributes action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "SetEndpointAttributes",
                "query": [
                    {
                        "field": "_seaEndpointArn",
                        "locationName": "EndpointArn",
                        "type": "field"
                    },
                    {
                        "field": "_seaAttributes",
                        "locationName": "Attributes",
                        "type": "field"
                    }
                ],
                "locationPad": 12,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "seaAttributes",
                        "name": "_seaAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | A map of the endpoint attributes. Attributes in this map include the\n-- following:\n--\n-- 'CustomUserData' -- arbitrary user data to associate with the endpoint.\n-- Amazon SNS does not use this data. The data must be in UTF-8 format and less\n-- than 2KB.  'Enabled' -- flag that enables/disables delivery to the endpoint.\n-- Amazon SNS will set this to false when a notification service indicates to\n-- Amazon SNS that the endpoint is invalid. Users can set it back to true,\n-- typically after updating Token.  'Token' -- device token, also referred to as a\n-- registration id, for an app and mobile device. This is returned from the\n-- notification service when an app and mobile device are registered with the\n-- notification service.",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "seaAttributes",
                        "name": "_seaAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | A map of the endpoint attributes. Attributes in this map include the\n-- following:\n--\n-- 'CustomUserData' -- arbitrary user data to associate with the endpoint.\n-- Amazon SNS does not use this data. The data must be in UTF-8 format and less\n-- than 2KB.  'Enabled' -- flag that enables/disables delivery to the endpoint.\n-- Amazon SNS will set this to false when a notification service indicates to\n-- Amazon SNS that the endpoint is invalid. Users can set it back to true,\n-- typically after updating Token.  'Token' -- device token, also referred to as a\n-- registration id, for an app and mobile device. This is returned from the\n-- notification service when an app and mobile device are registered with the\n-- notification service.",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "seaEndpointArn",
                        "name": "_seaEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "-- | EndpointArn used for SetEndpointAttributes action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "setPlatformApplicationAttributesResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "SetPlatformApplicationAttributesResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html",
            "namespace": "Network.AWS.SNS.SetPlatformApplicationAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "SetPlatformApplicationAttributes",
            "method": "post",
            "documentation": "-- | Sets the attributes of the platform application object for the supported push\n-- notification services, such as APNS and GCM. For more information, see \u003chttp://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html UsingAmazon SNS Mobile Push Notifications\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "setPlatformApplicationAttributes",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "spaaPlatformApplicationArn",
                        "name": "_spaaPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "-- | PlatformApplicationArn for SetPlatformApplicationAttributes action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "SetPlatformApplicationAttributes",
                "query": [
                    {
                        "field": "_spaaPlatformApplicationArn",
                        "locationName": "PlatformApplicationArn",
                        "type": "field"
                    },
                    {
                        "field": "_spaaAttributes",
                        "locationName": "Attributes",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "spaaAttributes",
                        "name": "_spaaAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | A map of the platform application attributes. Attributes in this map include\n-- the following:\n--\n-- 'PlatformCredential' -- The credential received from the notification\n-- service. For APNS/APNS_SANDBOX, PlatformCredential is \"private key\". For GCM,\n-- PlatformCredential is \"API key\". For ADM, PlatformCredential is \"client\n-- secret\".  'PlatformPrincipal' -- The principal received from the notification\n-- service. For APNS/APNS_SANDBOX, PlatformPrincipal is \"SSL certificate\". For\n-- GCM, PlatformPrincipal is not applicable. For ADM, PlatformPrincipal is\n-- \"client id\".  'EventEndpointCreated' -- Topic ARN to which EndpointCreated\n-- event notifications should be sent.  'EventEndpointDeleted' -- Topic ARN to\n-- which EndpointDeleted event notifications should be sent.  'EventEndpointUpdated' -- Topic ARN to which EndpointUpdate event notifications should be sent.  'EventDeliveryFailure' -- Topic ARN to which DeliveryFailure event notifications should be sent\n-- upon Direct Publish delivery failure (permanent) to one of the application's\n-- endpoints.",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "spaaAttributes",
                        "name": "_spaaAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "-- | A map of the platform application attributes. Attributes in this map include\n-- the following:\n--\n-- 'PlatformCredential' -- The credential received from the notification\n-- service. For APNS/APNS_SANDBOX, PlatformCredential is \"private key\". For GCM,\n-- PlatformCredential is \"API key\". For ADM, PlatformCredential is \"client\n-- secret\".  'PlatformPrincipal' -- The principal received from the notification\n-- service. For APNS/APNS_SANDBOX, PlatformPrincipal is \"SSL certificate\". For\n-- GCM, PlatformPrincipal is not applicable. For ADM, PlatformPrincipal is\n-- \"client id\".  'EventEndpointCreated' -- Topic ARN to which EndpointCreated\n-- event notifications should be sent.  'EventEndpointDeleted' -- Topic ARN to\n-- which EndpointDeleted event notifications should be sent.  'EventEndpointUpdated' -- Topic ARN to which EndpointUpdate event notifications should be sent.  'EventDeliveryFailure' -- Topic ARN to which DeliveryFailure event notifications should be sent\n-- upon Direct Publish delivery failure (permanent) to one of the application's\n-- endpoints.",
                        "typeExposed": "HashMap Text Text",
                        "type": "EMap \"entry\" \"key\" \"value\" Text Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "spaaPlatformApplicationArn",
                        "name": "_spaaPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "-- | PlatformApplicationArn for SetPlatformApplicationAttributes action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "setSubscriptionAttributesResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "SetSubscriptionAttributesResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_SetSubscriptionAttributes.html",
            "namespace": "Network.AWS.SNS.SetSubscriptionAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "SetSubscriptionAttributes",
            "method": "post",
            "documentation": "-- | Allows a subscription owner to set an attribute of the topic to a new value.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 19,
                "ctor": "setSubscriptionAttributes",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ssaSubscriptionArn",
                        "name": "_ssaSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "-- | The ARN of the subscription to modify.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ssaAttributeName",
                        "name": "_ssaAttributeName",
                        "shape": "attributeName",
                        "locationName": "AttributeName",
                        "documentation": "-- | The name of the attribute you want to set. Only a subset of the subscriptions\n-- attributes are mutable.\n--\n-- Valid values: 'DeliveryPolicy' | 'RawMessageDelivery'",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "SetSubscriptionAttributes",
                "query": [
                    {
                        "field": "_ssaSubscriptionArn",
                        "locationName": "SubscriptionArn",
                        "type": "field"
                    },
                    {
                        "field": "_ssaAttributeName",
                        "locationName": "AttributeName",
                        "type": "field"
                    },
                    {
                        "field": "_ssaAttributeValue",
                        "locationName": "AttributeValue",
                        "type": "field"
                    }
                ],
                "locationPad": 16,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ssaAttributeValue",
                        "name": "_ssaAttributeValue",
                        "shape": "attributeValue",
                        "locationName": "AttributeValue",
                        "documentation": "-- | The new value for the attribute in JSON format.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ssaAttributeName",
                        "name": "_ssaAttributeName",
                        "shape": "attributeName",
                        "locationName": "AttributeName",
                        "documentation": "-- | The name of the attribute you want to set. Only a subset of the subscriptions\n-- attributes are mutable.\n--\n-- Valid values: 'DeliveryPolicy' | 'RawMessageDelivery'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ssaAttributeValue",
                        "name": "_ssaAttributeValue",
                        "shape": "attributeValue",
                        "locationName": "AttributeValue",
                        "documentation": "-- | The new value for the attribute in JSON format.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ssaSubscriptionArn",
                        "name": "_ssaSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "-- | The ARN of the subscription to modify.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "setTopicAttributesResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "SetTopicAttributesResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_SetTopicAttributes.html",
            "namespace": "Network.AWS.SNS.SetTopicAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "SetTopicAttributes",
            "method": "post",
            "documentation": "-- | Allows a topic owner to set an attribute of the topic to a new value.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "setTopicAttributes",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "staTopicArn",
                        "name": "_staTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic to modify.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "staAttributeName",
                        "name": "_staAttributeName",
                        "shape": "attributeName",
                        "locationName": "AttributeName",
                        "documentation": "-- | The name of the attribute you want to set. Only a subset of the topic's\n-- attributes are mutable.\n--\n-- Valid values: 'Policy' | 'DisplayName' | 'DeliveryPolicy'",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "SetTopicAttributes",
                "query": [
                    {
                        "field": "_staTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_staAttributeName",
                        "locationName": "AttributeName",
                        "type": "field"
                    },
                    {
                        "field": "_staAttributeValue",
                        "locationName": "AttributeValue",
                        "type": "field"
                    }
                ],
                "locationPad": 15,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "staAttributeValue",
                        "name": "_staAttributeValue",
                        "shape": "attributeValue",
                        "locationName": "AttributeValue",
                        "documentation": "-- | The new value for the attribute.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "staAttributeName",
                        "name": "_staAttributeName",
                        "shape": "attributeName",
                        "locationName": "AttributeName",
                        "documentation": "-- | The name of the attribute you want to set. Only a subset of the topic's\n-- attributes are mutable.\n--\n-- Valid values: 'Policy' | 'DisplayName' | 'DeliveryPolicy'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "staAttributeValue",
                        "name": "_staAttributeValue",
                        "shape": "attributeValue",
                        "locationName": "AttributeValue",
                        "documentation": "-- | The new value for the attribute.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "staTopicArn",
                        "name": "_staTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic to modify.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "subscribeResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "srSubscriptionArn",
                    "name": "_srSubscriptionArn",
                    "shape": "subscriptionARN",
                    "locationName": "SubscriptionArn",
                    "documentation": "-- | The ARN of the subscription, if the service was able to create a subscription\n-- immediately (without requiring endpoint owner confirmation).",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "SubscribeResponse",
                "resultWrapper": "SubscribeResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "srSubscriptionArn",
                        "name": "_srSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "-- | The ARN of the subscription, if the service was able to create a subscription\n-- immediately (without requiring endpoint owner confirmation).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "srSubscriptionArn",
                        "name": "_srSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "-- | The ARN of the subscription, if the service was able to create a subscription\n-- immediately (without requiring endpoint owner confirmation).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_Subscribe.html",
            "namespace": "Network.AWS.SNS.Subscribe",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "Subscribe",
            "method": "post",
            "documentation": "-- | Prepares to subscribe an endpoint by sending the endpoint a confirmation\n-- message. To actually create a subscription, the endpoint owner must call the 'ConfirmSubscription' action with the token from the confirmation message. Confirmation tokens are\n-- valid for three days.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 10,
                "ctor": "subscribe",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "sTopicArn",
                        "name": "_sTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic you want to subscribe to.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "sProtocol",
                        "name": "_sProtocol",
                        "shape": "protocol",
                        "locationName": "Protocol",
                        "documentation": "-- | The protocol you want to use. Supported protocols include:\n--\n-- 'http' -- delivery of JSON-encoded message via HTTP POST  'https' -- delivery\n-- of JSON-encoded message via HTTPS POST  'email' -- delivery of message via SMTP\n-- 'email-json' -- delivery of JSON-encoded message via SMTP  'sms' -- delivery of\n-- message via SMS  'sqs' -- delivery of JSON-encoded message to an Amazon SQS\n-- queue  'application' -- delivery of JSON-encoded message to an EndpointArn for\n-- a mobile app and device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "Subscribe",
                "query": [
                    {
                        "field": "_sTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_sProtocol",
                        "locationName": "Protocol",
                        "type": "field"
                    },
                    {
                        "field": "_sEndpoint",
                        "locationName": "Endpoint",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "sEndpoint",
                        "name": "_sEndpoint",
                        "shape": "endpoint",
                        "locationName": "Endpoint",
                        "documentation": "-- | The endpoint that you want to receive notifications. Endpoints vary by\n-- protocol:\n--\n-- For the 'http' protocol, the endpoint is an URL beginning with \"http://\" For\n-- the 'https' protocol, the endpoint is a URL beginning with \"https://\" For the 'email' protocol, the endpoint is an email address For the 'email-json' protocol, the\n-- endpoint is an email address For the 'sms' protocol, the endpoint is a phone\n-- number of an SMS-enabled device For the 'sqs' protocol, the endpoint is the ARN\n-- of an Amazon SQS queue For the 'application' protocol, the endpoint is the\n-- EndpointArn of a mobile app and device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "sEndpoint",
                        "name": "_sEndpoint",
                        "shape": "endpoint",
                        "locationName": "Endpoint",
                        "documentation": "-- | The endpoint that you want to receive notifications. Endpoints vary by\n-- protocol:\n--\n-- For the 'http' protocol, the endpoint is an URL beginning with \"http://\" For\n-- the 'https' protocol, the endpoint is a URL beginning with \"https://\" For the 'email' protocol, the endpoint is an email address For the 'email-json' protocol, the\n-- endpoint is an email address For the 'sms' protocol, the endpoint is a phone\n-- number of an SMS-enabled device For the 'sqs' protocol, the endpoint is the ARN\n-- of an Amazon SQS queue For the 'application' protocol, the endpoint is the\n-- EndpointArn of a mobile app and device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "sProtocol",
                        "name": "_sProtocol",
                        "shape": "protocol",
                        "locationName": "Protocol",
                        "documentation": "-- | The protocol you want to use. Supported protocols include:\n--\n-- 'http' -- delivery of JSON-encoded message via HTTP POST  'https' -- delivery\n-- of JSON-encoded message via HTTPS POST  'email' -- delivery of message via SMTP\n-- 'email-json' -- delivery of JSON-encoded message via SMTP  'sms' -- delivery of\n-- message via SMS  'sqs' -- delivery of JSON-encoded message to an Amazon SQS\n-- queue  'application' -- delivery of JSON-encoded message to an EndpointArn for\n-- a mobile app and device.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "sTopicArn",
                        "name": "_sTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "-- | The ARN of the topic you want to subscribe to.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "unsubscribeResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UnsubscribeResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/sns/latest/api/API_Unsubscribe.html",
            "namespace": "Network.AWS.SNS.Unsubscribe",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "pager": null,
            "name": "Unsubscribe",
            "method": "post",
            "documentation": "-- | Deletes a subscription. If the subscription requires authentication for\n-- deletion, only the owner of the subscription or the topic's owner can\n-- unsubscribe, and an AWS signature is required. If the 'Unsubscribe' call does\n-- not require authentication and the requester is not the subscription owner, a\n-- final cancellation message is delivered to the endpoint, so that the endpoint\n-- owner can easily resubscribe to the topic if the 'Unsubscribe' request was\n-- unintended.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "unsubscribe",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "uSubscriptionArn",
                    "name": "_uSubscriptionArn",
                    "shape": "subscriptionARN",
                    "locationName": "SubscriptionArn",
                    "documentation": "-- | The ARN of the subscription to be deleted.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "uSubscriptionArn",
                        "name": "_uSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "-- | The ARN of the subscription to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "Unsubscribe",
                "query": [
                    {
                        "field": "_uSubscriptionArn",
                        "locationName": "SubscriptionArn",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "uSubscriptionArn",
                        "name": "_uSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "-- | The ARN of the subscription to be deleted.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        }
    ]
}