{
    "waiters": {
        "waiters": {},
        "namespace": "Network.AWS.STS.Waiters",
        "imports": [
            "Network.AWS.STS.Types"
        ]
    },
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "STS",
        "error": "RESTError",
        "url": "http://docs.aws.amazon.com/STS/latest/APIReference/Welcome.html",
        "namespace": "Network.AWS.STS",
        "protocol": "query",
        "imports": [
            "Network.AWS.STS.AssumeRole",
            "Network.AWS.STS.AssumeRoleWithSAML",
            "Network.AWS.STS.AssumeRoleWithWebIdentity",
            "Network.AWS.STS.DecodeAuthorizationMessage",
            "Network.AWS.STS.GetFederationToken",
            "Network.AWS.STS.GetSessionToken",
            "Network.AWS.STS.Types"
        ],
        "name": "Amazon Security Token Service",
        "version": "2011-06-15",
        "documentation": "-- | The AWS Security Token Service (STS) is a web service that enables you to\n-- request temporary, limited-privilege credentials for AWS Identity and Access\n-- Management (IAM) users or for users that you authenticate (federated users).",
        "xmlNamespace": "https://sts.amazonaws.com/doc/2011-06-15/",
        "jsonVersion": null,
        "retryDelay": {
            "base": 5.0e-2,
            "attempts": 5,
            "growth": 2
        },
        "endpointPrefix": "sts",
        "retryPolicies": {
            "throttling": {
                "error": "Throttling",
                "code": 400
            },
            "service_unavailable": {
                "error": null,
                "code": 503
            },
            "general_server_error": {
                "error": null,
                "code": 500
            },
            "limit_exceeded": {
                "error": null,
                "code": 509
            }
        },
        "targetPrefix": null
    },
    "cabal": {
        "other": [],
        "library": "amazonka-sts",
        "abbrev": "STS",
        "exposed": [
            "Network.AWS.STS",
            "Network.AWS.STS.AssumeRole",
            "Network.AWS.STS.AssumeRoleWithSAML",
            "Network.AWS.STS.AssumeRoleWithWebIdentity",
            "Network.AWS.STS.DecodeAuthorizationMessage",
            "Network.AWS.STS.GetFederationToken",
            "Network.AWS.STS.GetSessionToken",
            "Network.AWS.STS.Types"
        ],
        "url": "http://docs.aws.amazon.com/STS/latest/APIReference/Welcome.html",
        "protocol": "query",
        "name": "Amazon Security Token Service",
        "version": "0.1.0",
        "description": "The AWS Security Token Service (STS) is a web service that enables you to\nrequest temporary, limited-privilege credentials for AWS Identity and Access\nManagement (IAM) users or for users that you authenticate (federated users)."
    },
    "types": {
        "namespace": "Network.AWS.STS.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 17,
                "ctor": "credentials",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cAccessKeyId",
                        "name": "_cAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "-- | The access key ID that identifies the temporary security credentials.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cSecretAccessKey",
                        "name": "_cSecretAccessKey",
                        "shape": "accessKeySecretType",
                        "locationName": "SecretAccessKey",
                        "documentation": "-- | The secret access key that can be used to sign requests.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cSessionToken",
                        "name": "_cSessionToken",
                        "shape": "tokenType",
                        "locationName": "SessionToken",
                        "documentation": "-- | The token that users must pass to the service API to use the temporary\n-- credentials.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cExpiration",
                        "name": "_cExpiration",
                        "shape": "dateType",
                        "locationName": "Expiration",
                        "documentation": "-- | The date on which the current credentials expire.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    }
                ],
                "contentPad": 0,
                "name": "Credentials",
                "locationPad": 16,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cAccessKeyId",
                        "name": "_cAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "-- | The access key ID that identifies the temporary security credentials.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cExpiration",
                        "name": "_cExpiration",
                        "shape": "dateType",
                        "locationName": "Expiration",
                        "documentation": "-- | The date on which the current credentials expire.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cSecretAccessKey",
                        "name": "_cSecretAccessKey",
                        "shape": "accessKeySecretType",
                        "locationName": "SecretAccessKey",
                        "documentation": "-- | The secret access key that can be used to sign requests.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cSessionToken",
                        "name": "_cSessionToken",
                        "shape": "tokenType",
                        "locationName": "SessionToken",
                        "documentation": "-- | The token that users must pass to the service API to use the temporary\n-- credentials.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "federatedUser",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "fuFederatedUserId",
                        "name": "_fuFederatedUserId",
                        "shape": "federatedIdType",
                        "locationName": "FederatedUserId",
                        "documentation": "-- | The string that identifies the federated user associated with the\n-- credentials, similar to the unique ID of an IAM user.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "fuArn",
                        "name": "_fuArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The ARN that specifies the federated user that is associated with the\n-- credentials. For more information about ARNs and how to use them in policies,\n-- see Identifiers for IAM Entities in /Using IAM/.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "FederatedUser",
                "locationPad": 16,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "fuArn",
                        "name": "_fuArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The ARN that specifies the federated user that is associated with the\n-- credentials. For more information about ARNs and how to use them in policies,\n-- see Identifiers for IAM Entities in /Using IAM/.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "fuFederatedUserId",
                        "name": "_fuFederatedUserId",
                        "shape": "federatedIdType",
                        "locationName": "FederatedUserId",
                        "documentation": "-- | The string that identifies the federated user associated with the\n-- credentials, similar to the unique ID of an IAM user.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 17,
                "ctor": "assumedRoleUser",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "aruAssumedRoleId",
                        "name": "_aruAssumedRoleId",
                        "shape": "assumedRoleIdType",
                        "locationName": "AssumedRoleId",
                        "documentation": "-- | A unique identifier that contains the role ID and the role session name of\n-- the role that is being assumed. The role ID is generated by AWS when the role\n-- is created.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "aruArn",
                        "name": "_aruArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The ARN of the temporary security credentials that are returned from the 'AssumeRole' action. For more information about ARNs and how to use them in policies, see\n-- Identifiers for IAM Entities  in /Using IAM/.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "AssumedRoleUser",
                "locationPad": 14,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "aruArn",
                        "name": "_aruArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "-- | The ARN of the temporary security credentials that are returned from the 'AssumeRole' action. For more information about ARNs and how to use them in policies, see\n-- Identifiers for IAM Entities  in /Using IAM/.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "aruAssumedRoleId",
                        "name": "_aruAssumedRoleId",
                        "shape": "assumedRoleIdType",
                        "locationName": "AssumedRoleId",
                        "documentation": "-- | A unique identifier that contains the role ID and the role session name of\n-- the role that is being assumed. The role ID is generated by AWS when the role\n-- is created.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        ],
        "imports": [],
        "shared": [
            "Credentials",
            "AssumedRoleUser"
        ]
    },
    "operations": [
        {
            "service": "STS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 20,
                "ctor": "assumeRoleResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AssumeRoleResponse",
                "resultWrapper": "AssumeRoleResult",
                "locationPad": 17,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arrCredentials",
                        "name": "_arrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "-- | The temporary security credentials, which include an access key ID, a secret\n-- access key, and a security (or session) token.",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arrAssumedRoleUser",
                        "name": "_arrAssumedRoleUser",
                        "shape": "AssumedRoleUser",
                        "locationName": "AssumedRoleUser",
                        "documentation": "-- | The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers\n-- that you can use to refer to the resulting temporary security credentials.\n-- For example, you can reference these credentials as a principal in a\n-- resource-based policy by using the ARN or assumed role ID. The ARN and ID\n-- include the 'RoleSessionName' that you specified when you called 'AssumeRole'.",
                        "typeExposed": "Maybe AssumedRoleUser",
                        "type": "Maybe AssumedRoleUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arrPackedPolicySize",
                        "name": "_arrPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "-- | A percentage value that indicates the size of the policy in packed form. The\n-- service rejects any policy with a packed size greater than 100 percent, which\n-- means the policy exceeded the allowed space.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arrAssumedRoleUser",
                        "name": "_arrAssumedRoleUser",
                        "shape": "AssumedRoleUser",
                        "locationName": "AssumedRoleUser",
                        "documentation": "-- | The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers\n-- that you can use to refer to the resulting temporary security credentials.\n-- For example, you can reference these credentials as a principal in a\n-- resource-based policy by using the ARN or assumed role ID. The ARN and ID\n-- include the 'RoleSessionName' that you specified when you called 'AssumeRole'.",
                        "typeExposed": "Maybe AssumedRoleUser",
                        "type": "Maybe AssumedRoleUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arrCredentials",
                        "name": "_arrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "-- | The temporary security credentials, which include an access key ID, a secret\n-- access key, and a security (or session) token.",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arrPackedPolicySize",
                        "name": "_arrPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "-- | A percentage value that indicates the size of the policy in packed form. The\n-- service rejects any policy with a packed size greater than 100 percent, which\n-- means the policy exceeded the allowed space.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html",
            "namespace": "Network.AWS.STS.AssumeRole",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.STS.Types"
            ],
            "pager": null,
            "name": "AssumeRole",
            "method": "post",
            "documentation": "-- | Returns a set of temporary security credentials (consisting of an access key\n-- ID, a secret access key, and a security token) that you can use to access AWS\n-- resources that you might not normally have access to. Typically, you use 'AssumeRole' for cross-account access or federation.\n--\n-- Important: You cannot call 'AssumeRole' by using AWS account credentials;\n-- access will be denied. You must use IAM user credentials or temporary\n-- security credentials to call 'AssumeRole'.\n--\n-- For cross-account access, imagine that you own multiple accounts and need to\n-- access resources in each account. You could create long-term credentials in\n-- each account to access those resources. However, managing all those\n-- credentials and remembering which one can access which account can be time\n-- consuming. Instead, you can create one set of long-term credentials in one\n-- account and then use temporary security credentials to access all the other\n-- accounts by assuming roles in those accounts. For more information about\n-- roles, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html Roles\u003e in /Using IAM/.\n--\n-- For federation, you can, for example, grant single sign-on access to the AWS\n-- Management Console. If you already have an identity and authentication system\n-- in your corporate network, you don't have to recreate user identities in AWS\n-- in order to grant those user identities access to AWS. Instead, after a user\n-- has been authenticated, you call 'AssumeRole' (and specify the role with the\n-- appropriate permissions) to get temporary security credentials for that user.\n-- With those temporary security credentials, you construct a sign-in URL that\n-- users can use to access the console. For more information, see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/STSUseCases.html Scenarios forGranting Temporary Access\u003e in /Using Temporary Security Credentials/.\n--\n-- The temporary security credentials are valid for the duration that you\n-- specified when calling 'AssumeRole', which can be from 900 seconds (15 minutes)\n-- to 3600 seconds (1 hour). The default is 1 hour.\n--\n-- Optionally, you can pass an IAM access policy to this operation. If you\n-- choose not to pass a policy, the temporary security credentials that are\n-- returned by the operation have the permissions that are defined in the access\n-- policy of the role that is being assumed. If you pass a policy to this\n-- operation, the temporary security credentials that are returned by the\n-- operation have the permissions that are allowed by both the access policy of\n-- the role that is being assumed, /and/ the policy that you pass. This gives you\n-- a way to further restrict the permissions for the resulting temporary\n-- security credentials. You cannot use the passed policy to grant permissions\n-- that are in excess of those allowed by the access policy of the role that is\n-- being assumed. For more information, see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html Permissions for AssumeRole\u003e in /UsingTemporary Security Credentials/.\n--\n-- To assume a role, your AWS account must be trusted by the role. The trust\n-- relationship is defined in the role's trust policy when the role is created.\n-- You must also have a policy that allows you to call 'sts:AssumeRole'.\n--\n-- Using MFA with AssumeRole\n--\n-- You can optionally include multi-factor authentication (MFA) information\n-- when you call 'AssumeRole'. This is useful for cross-account scenarios in which\n-- you want to make sure that the user who is assuming the role has been\n-- authenticated using an AWS MFA device. In that scenario, the trust policy of\n-- the role being assumed includes a condition that tests for MFA\n-- authentication; if the caller does not include valid MFA information, the\n-- request to assume the role is denied. The condition in a trust policy that\n-- tests for MFA authentication might look like the following example.\n--\n-- '\"Condition\": {\"Null\": {\"aws:MultiFactorAuthAge\": false}}'\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI.html Configuring MFA-Protected API Access\u003e in the /UsingIAM/ guide.\n--\n-- To use MFA with 'AssumeRole', you pass values for the 'SerialNumber' and 'TokenCode' parameters. The 'SerialNumber' value identifies the user's hardware or virtual\n-- MFA device. The 'TokenCode' is the time-based one-time password (TOTP) that the\n-- MFA devices produces.\n--\n--",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "assumeRole",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arRoleArn",
                        "name": "_arRoleArn",
                        "shape": "arnType",
                        "locationName": "RoleArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the role that the caller is assuming.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arRoleSessionName",
                        "name": "_arRoleSessionName",
                        "shape": "userNameType",
                        "locationName": "RoleSessionName",
                        "documentation": "-- | An identifier for the assumed role session. The session name is included as\n-- part of the 'AssumedRoleUser'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "AssumeRole",
                "query": [
                    {
                        "field": "_arRoleArn",
                        "locationName": "RoleArn",
                        "type": "field"
                    },
                    {
                        "field": "_arRoleSessionName",
                        "locationName": "RoleSessionName",
                        "type": "field"
                    },
                    {
                        "field": "_arPolicy",
                        "locationName": "Policy",
                        "type": "field"
                    },
                    {
                        "field": "_arDurationSeconds",
                        "locationName": "DurationSeconds",
                        "type": "field"
                    },
                    {
                        "field": "_arExternalId",
                        "locationName": "ExternalId",
                        "type": "field"
                    },
                    {
                        "field": "_arSerialNumber",
                        "locationName": "SerialNumber",
                        "type": "field"
                    },
                    {
                        "field": "_arTokenCode",
                        "locationName": "TokenCode",
                        "type": "field"
                    }
                ],
                "locationPad": 16,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arPolicy",
                        "name": "_arPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "-- | An IAM policy in JSON format.\n--\n-- The policy parameter is optional. If you pass a policy, the temporary\n-- security credentials that are returned by the operation have the permissions\n-- that are allowed by both the access policy of the role that is being assumed, /and/ the policy that you pass. This gives you a way to further restrict the\n-- permissions for the resulting temporary security credentials. You cannot use\n-- the passed policy to grant permissions that are in excess of those allowed by\n-- the access policy of the role that is being assumed. For more information,\n-- see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html Permissions for AssumeRole\u003e in /Using Temporary Security Credentials/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arDurationSeconds",
                        "name": "_arDurationSeconds",
                        "shape": "roleDurationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "-- | The duration, in seconds, of the role session. The value can range from 900\n-- seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set\n-- to 3600 seconds.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arExternalId",
                        "name": "_arExternalId",
                        "shape": "externalIdType",
                        "locationName": "ExternalId",
                        "documentation": "-- | A unique identifier that is used by third parties to assume a role in their\n-- customers' accounts. For each role that the third party can assume, they\n-- should instruct their customers to create a role with the external ID that\n-- the third party generated. Each time the third party assumes the role, they\n-- must pass the customer's external ID. The external ID is useful in order to\n-- help third parties bind a role to the customer who created it. For more\n-- information about the external ID, see About the External ID in /UsingTemporary Security Credentials/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arSerialNumber",
                        "name": "_arSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | The identification number of the MFA device that is associated with the user\n-- who is making the 'AssumeRole' call. Specify this value if the trust policy of\n-- the role being assumed includes a condition that requires MFA authentication.\n-- The value is either the serial number for a hardware device (such as 'GAHT12345678') or an Amazon Resource Name (ARN) for a virtual device (such as 'arn:aws:iam::123456789012:mfa/user').",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arTokenCode",
                        "name": "_arTokenCode",
                        "shape": "tokenCodeType",
                        "locationName": "TokenCode",
                        "documentation": "-- | The value provided by the MFA device, if the trust policy of the role being\n-- assumed requires MFA (that is, if the policy includes a condition that tests\n-- for MFA). If the role being assumed requires MFA and if the 'TokenCode' value\n-- is missing or expired, the 'AssumeRole' call returns an \"access denied\" error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arDurationSeconds",
                        "name": "_arDurationSeconds",
                        "shape": "roleDurationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "-- | The duration, in seconds, of the role session. The value can range from 900\n-- seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set\n-- to 3600 seconds.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arExternalId",
                        "name": "_arExternalId",
                        "shape": "externalIdType",
                        "locationName": "ExternalId",
                        "documentation": "-- | A unique identifier that is used by third parties to assume a role in their\n-- customers' accounts. For each role that the third party can assume, they\n-- should instruct their customers to create a role with the external ID that\n-- the third party generated. Each time the third party assumes the role, they\n-- must pass the customer's external ID. The external ID is useful in order to\n-- help third parties bind a role to the customer who created it. For more\n-- information about the external ID, see About the External ID in /UsingTemporary Security Credentials/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arPolicy",
                        "name": "_arPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "-- | An IAM policy in JSON format.\n--\n-- The policy parameter is optional. If you pass a policy, the temporary\n-- security credentials that are returned by the operation have the permissions\n-- that are allowed by both the access policy of the role that is being assumed, /and/ the policy that you pass. This gives you a way to further restrict the\n-- permissions for the resulting temporary security credentials. You cannot use\n-- the passed policy to grant permissions that are in excess of those allowed by\n-- the access policy of the role that is being assumed. For more information,\n-- see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html Permissions for AssumeRole\u003e in /Using Temporary Security Credentials/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arRoleArn",
                        "name": "_arRoleArn",
                        "shape": "arnType",
                        "locationName": "RoleArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the role that the caller is assuming.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arRoleSessionName",
                        "name": "_arRoleSessionName",
                        "shape": "userNameType",
                        "locationName": "RoleSessionName",
                        "documentation": "-- | An identifier for the assumed role session. The session name is included as\n-- part of the 'AssumedRoleUser'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arSerialNumber",
                        "name": "_arSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | The identification number of the MFA device that is associated with the user\n-- who is making the 'AssumeRole' call. Specify this value if the trust policy of\n-- the role being assumed includes a condition that requires MFA authentication.\n-- The value is either the serial number for a hardware device (such as 'GAHT12345678') or an Amazon Resource Name (ARN) for a virtual device (such as 'arn:aws:iam::123456789012:mfa/user').",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arTokenCode",
                        "name": "_arTokenCode",
                        "shape": "tokenCodeType",
                        "locationName": "TokenCode",
                        "documentation": "-- | The value provided by the MFA device, if the trust policy of the role being\n-- assumed requires MFA (that is, if the policy includes a condition that tests\n-- for MFA). If the role being assumed requires MFA and if the 'TokenCode' value\n-- is missing or expired, the 'AssumeRole' call returns an \"access denied\" error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "STS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 25,
                "ctor": "assumeRoleWithSAMLResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AssumeRoleWithSAMLResponse",
                "resultWrapper": "AssumeRoleWithSAMLResult",
                "locationPad": 17,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrCredentials",
                        "name": "_arwsamlrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": null,
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrAssumedRoleUser",
                        "name": "_arwsamlrAssumedRoleUser",
                        "shape": "AssumedRoleUser",
                        "locationName": "AssumedRoleUser",
                        "documentation": null,
                        "typeExposed": "Maybe AssumedRoleUser",
                        "type": "Maybe AssumedRoleUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrPackedPolicySize",
                        "name": "_arwsamlrPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "-- | A percentage value that indicates the size of the policy in packed form. The\n-- service rejects any policy with a packed size greater than 100 percent, which\n-- means the policy exceeded the allowed space.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrSubject",
                        "name": "_arwsamlrSubject",
                        "shape": "Subject",
                        "locationName": "Subject",
                        "documentation": "-- | The value of the 'NameID' element in the 'Subject' element of the SAML assertion.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrSubjectType",
                        "name": "_arwsamlrSubjectType",
                        "shape": "SubjectType",
                        "locationName": "SubjectType",
                        "documentation": "-- | The format of the name ID, as defined by the 'Format' attribute in the 'NameID'\n-- element of the SAML assertion. Typical examples of the format are 'transient'\n-- or 'persistent'.\n--\n-- If the format includes the prefix 'urn:oasis:names:tc:SAML:2.0:nameid-format', that prefix is removed. For example,\n-- 'urn:oasis:names:tc:SAML:2.0:nameid-format:transient' is returned as 'transient'.\n-- If the format includes any other prefix, the format is returned with no\n-- modifications.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrIssuer",
                        "name": "_arwsamlrIssuer",
                        "shape": "Issuer",
                        "locationName": "Issuer",
                        "documentation": "-- | The value of the 'Issuer' element of the SAML assertion.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrAudience",
                        "name": "_arwsamlrAudience",
                        "shape": "Audience",
                        "locationName": "Audience",
                        "documentation": "-- | The value of the 'Recipient' attribute of the 'SubjectConfirmationData' element\n-- of the SAML assertion.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrNameQualifier",
                        "name": "_arwsamlrNameQualifier",
                        "shape": "NameQualifier",
                        "locationName": "NameQualifier",
                        "documentation": "-- | A hash value based on the concatenation of the 'Issuer' response value, the AWS\n-- account ID, and the friendly name (the last part of the ARN) of the SAML\n-- provider in IAM. The combination of 'NameQualifier' and 'Subject' can be used to\n-- uniquely identify a federated user.\n--\n-- The following pseudocode shows how the hash value is calculated:\n--\n-- 'BASE64 ( SHA1 ( \"https://example.com/saml\" + \"123456789012\" + \"/MySAMLIdP\") )'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrAssumedRoleUser",
                        "name": "_arwsamlrAssumedRoleUser",
                        "shape": "AssumedRoleUser",
                        "locationName": "AssumedRoleUser",
                        "documentation": null,
                        "typeExposed": "Maybe AssumedRoleUser",
                        "type": "Maybe AssumedRoleUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrAudience",
                        "name": "_arwsamlrAudience",
                        "shape": "Audience",
                        "locationName": "Audience",
                        "documentation": "-- | The value of the 'Recipient' attribute of the 'SubjectConfirmationData' element\n-- of the SAML assertion.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrCredentials",
                        "name": "_arwsamlrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": null,
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrIssuer",
                        "name": "_arwsamlrIssuer",
                        "shape": "Issuer",
                        "locationName": "Issuer",
                        "documentation": "-- | The value of the 'Issuer' element of the SAML assertion.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrNameQualifier",
                        "name": "_arwsamlrNameQualifier",
                        "shape": "NameQualifier",
                        "locationName": "NameQualifier",
                        "documentation": "-- | A hash value based on the concatenation of the 'Issuer' response value, the AWS\n-- account ID, and the friendly name (the last part of the ARN) of the SAML\n-- provider in IAM. The combination of 'NameQualifier' and 'Subject' can be used to\n-- uniquely identify a federated user.\n--\n-- The following pseudocode shows how the hash value is calculated:\n--\n-- 'BASE64 ( SHA1 ( \"https://example.com/saml\" + \"123456789012\" + \"/MySAMLIdP\") )'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrPackedPolicySize",
                        "name": "_arwsamlrPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "-- | A percentage value that indicates the size of the policy in packed form. The\n-- service rejects any policy with a packed size greater than 100 percent, which\n-- means the policy exceeded the allowed space.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrSubject",
                        "name": "_arwsamlrSubject",
                        "shape": "Subject",
                        "locationName": "Subject",
                        "documentation": "-- | The value of the 'NameID' element in the 'Subject' element of the SAML assertion.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrSubjectType",
                        "name": "_arwsamlrSubjectType",
                        "shape": "SubjectType",
                        "locationName": "SubjectType",
                        "documentation": "-- | The format of the name ID, as defined by the 'Format' attribute in the 'NameID'\n-- element of the SAML assertion. Typical examples of the format are 'transient'\n-- or 'persistent'.\n--\n-- If the format includes the prefix 'urn:oasis:names:tc:SAML:2.0:nameid-format', that prefix is removed. For example,\n-- 'urn:oasis:names:tc:SAML:2.0:nameid-format:transient' is returned as 'transient'.\n-- If the format includes any other prefix, the format is returned with no\n-- modifications.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithSAML.html",
            "namespace": "Network.AWS.STS.AssumeRoleWithSAML",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.STS.Types"
            ],
            "pager": null,
            "name": "AssumeRoleWithSAML",
            "method": "post",
            "documentation": "-- | Returns a set of temporary security credentials for users who have been\n-- authenticated via a SAML authentication response. This operation provides a\n-- mechanism for tying an enterprise identity store or directory to role-based\n-- AWS access without user-specific credentials or configuration.\n--\n-- The temporary security credentials returned by this operation consist of an\n-- access key ID, a secret access key, and a security token. Applications can\n-- use these temporary security credentials to sign calls to AWS services. The\n-- credentials are valid for the duration that you specified when calling 'AssumeRoleWithSAML', which can be up to 3600 seconds (1 hour) or until the time specified in the\n-- SAML authentication response's 'NotOnOrAfter' value, whichever is shorter.\n--\n-- Optionally, you can pass an IAM access policy to this operation. If you\n-- choose not to pass a policy, the temporary security credentials that are\n-- returned by the operation have the permissions that are defined in the access\n-- policy of the role that is being assumed. If you pass a policy to this\n-- operation, the temporary security credentials that are returned by the\n-- operation have the permissions that are allowed by both the access policy of\n-- the role that is being assumed, /and/ the policy that you pass. This gives you\n-- a way to further restrict the permissions for the resulting temporary\n-- security credentials. You cannot use the passed policy to grant permissions\n-- that are in excess of those allowed by the access policy of the role that is\n-- being assumed. For more information, see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html Permissions for AssumeRoleWithSAML\u003e\n-- in /Using Temporary Security Credentials/.\n--\n-- Before your application can call 'AssumeRoleWithSAML', you must configure your\n-- SAML identity provider (IdP) to issue the claims required by AWS.\n-- Additionally, you must use AWS Identity and Access Management (IAM) to create\n-- a SAML provider entity in your AWS account that represents your identity\n-- provider, and create an IAM role that specifies this SAML provider in its\n-- trust policy.\n--\n-- Calling 'AssumeRoleWithSAML' does not require the use of AWS security\n-- credentials. The identity of the caller is validated by using keys in the\n-- metadata document that is uploaded for the SAML provider entity for your\n-- identity provider.\n--\n-- For more information, see the following resources:\n--\n-- \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html Creating Temporary Security Credentials for SAML Federation\u003e in /UsingTemporary Security Credentials/.   \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/idp-managing-identityproviders.html SAML Providers\u003e in /Using IAM/.   \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html Configuringa Relying Party and Claims\u003e in /Using IAM/.   \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml.html Creating a Role for SAML-BasedFederation\u003e in /Using IAM/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "assumeRoleWithSAML",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arwsamlRoleArn",
                        "name": "_arwsamlRoleArn",
                        "shape": "arnType",
                        "locationName": "RoleArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the role that the caller is assuming.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arwsamlPrincipalArn",
                        "name": "_arwsamlPrincipalArn",
                        "shape": "arnType",
                        "locationName": "PrincipalArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider in IAM that describes the\n-- IdP.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arwsamlSAMLAssertion",
                        "name": "_arwsamlSAMLAssertion",
                        "shape": "SAMLAssertionType",
                        "locationName": "SAMLAssertion",
                        "documentation": "-- | The base-64 encoded SAML authentication response provided by the IdP.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html Configuring a Relying Party and Adding Claims\u003e in\n-- the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "AssumeRoleWithSAML",
                "query": [
                    {
                        "field": "_arwsamlRoleArn",
                        "locationName": "RoleArn",
                        "type": "field"
                    },
                    {
                        "field": "_arwsamlPrincipalArn",
                        "locationName": "PrincipalArn",
                        "type": "field"
                    },
                    {
                        "field": "_arwsamlSAMLAssertion",
                        "locationName": "SAMLAssertion",
                        "type": "field"
                    },
                    {
                        "field": "_arwsamlPolicy",
                        "locationName": "Policy",
                        "type": "field"
                    },
                    {
                        "field": "_arwsamlDurationSeconds",
                        "locationName": "DurationSeconds",
                        "type": "field"
                    }
                ],
                "locationPad": 16,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlPolicy",
                        "name": "_arwsamlPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "-- | An IAM policy in JSON format.\n--\n-- The policy parameter is optional. If you pass a policy, the temporary\n-- security credentials that are returned by the operation have the permissions\n-- that are allowed by both the access policy of the role that is being assumed, /and/ the policy that you pass. This gives you a way to further restrict the\n-- permissions for the resulting temporary security credentials. You cannot use\n-- the passed policy to grant permissions that are in excess of those allowed by\n-- the access policy of the role that is being assumed. For more information,\n-- see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html Permissions for AssumeRoleWithSAML\u003e in /Using Temporary Security Credentials/\n-- .",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlDurationSeconds",
                        "name": "_arwsamlDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "-- | The duration, in seconds, of the role session. The value can range from 900\n-- seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set\n-- to 3600 seconds. An expiration can also be specified in the SAML\n-- authentication response's 'NotOnOrAfter' value. The actual expiration time is\n-- whichever value is shorter.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlDurationSeconds",
                        "name": "_arwsamlDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "-- | The duration, in seconds, of the role session. The value can range from 900\n-- seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set\n-- to 3600 seconds. An expiration can also be specified in the SAML\n-- authentication response's 'NotOnOrAfter' value. The actual expiration time is\n-- whichever value is shorter.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlPolicy",
                        "name": "_arwsamlPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "-- | An IAM policy in JSON format.\n--\n-- The policy parameter is optional. If you pass a policy, the temporary\n-- security credentials that are returned by the operation have the permissions\n-- that are allowed by both the access policy of the role that is being assumed, /and/ the policy that you pass. This gives you a way to further restrict the\n-- permissions for the resulting temporary security credentials. You cannot use\n-- the passed policy to grant permissions that are in excess of those allowed by\n-- the access policy of the role that is being assumed. For more information,\n-- see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html Permissions for AssumeRoleWithSAML\u003e in /Using Temporary Security Credentials/\n-- .",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arwsamlPrincipalArn",
                        "name": "_arwsamlPrincipalArn",
                        "shape": "arnType",
                        "locationName": "PrincipalArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the SAML provider in IAM that describes the\n-- IdP.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arwsamlRoleArn",
                        "name": "_arwsamlRoleArn",
                        "shape": "arnType",
                        "locationName": "RoleArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the role that the caller is assuming.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arwsamlSAMLAssertion",
                        "name": "_arwsamlSAMLAssertion",
                        "shape": "SAMLAssertionType",
                        "locationName": "SAMLAssertion",
                        "documentation": "-- | The base-64 encoded SAML authentication response provided by the IdP.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html Configuring a Relying Party and Adding Claims\u003e in\n-- the /Using IAM/ guide.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "STS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 34,
                "ctor": "assumeRoleWithWebIdentityResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AssumeRoleWithWebIdentityResponse",
                "resultWrapper": "AssumeRoleWithWebIdentityResult",
                "locationPad": 28,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirCredentials",
                        "name": "_arwwirCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "-- | The temporary security credentials, which include an access key ID, a secret\n-- access key, and a security token.",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirSubjectFromWebIdentityToken",
                        "name": "_arwwirSubjectFromWebIdentityToken",
                        "shape": "webIdentitySubjectType",
                        "locationName": "SubjectFromWebIdentityToken",
                        "documentation": "-- | The unique user identifier that is returned by the identity provider. This\n-- identifier is associated with the 'WebIdentityToken' that was submitted with\n-- the 'AssumeRoleWithWebIdentity' call. The identifier is typically unique to the\n-- user and the application that acquired the 'WebIdentityToken' (pairwise\n-- identifier). If an OpenID Connect ID token was submitted in the 'WebIdentityToken', this value is returned by the identity provider as the token's 'sub'\n-- (Subject) claim.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirAssumedRoleUser",
                        "name": "_arwwirAssumedRoleUser",
                        "shape": "AssumedRoleUser",
                        "locationName": "AssumedRoleUser",
                        "documentation": "-- | The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers\n-- that you can use to refer to the resulting temporary security credentials.\n-- For example, you can reference these credentials as a principal in a\n-- resource-based policy by using the ARN or assumed role ID. The ARN and ID\n-- include the 'RoleSessionName' that you specified when you called 'AssumeRole'.",
                        "typeExposed": "Maybe AssumedRoleUser",
                        "type": "Maybe AssumedRoleUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirPackedPolicySize",
                        "name": "_arwwirPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "-- | A percentage value that indicates the size of the policy in packed form. The\n-- service rejects any policy with a packed size greater than 100 percent, which\n-- means the policy exceeded the allowed space.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirProvider",
                        "name": "_arwwirProvider",
                        "shape": "Issuer",
                        "locationName": "Provider",
                        "documentation": "-- | The issuing authority of the web identity token presented. For OpenID\n-- Connect ID Tokens this contains the value of the 'iss' field. For OAuth 2.0\n-- Access Tokens, this contains the value of the 'ProviderId' parameter that was\n-- passed in the 'AssumeRoleWithWebIdentity' request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirAudience",
                        "name": "_arwwirAudience",
                        "shape": "Audience",
                        "locationName": "Audience",
                        "documentation": "-- | The intended audience of the web identity token. This is traditionally the\n-- client identifier issued to the application that requested the web identity\n-- token.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirAssumedRoleUser",
                        "name": "_arwwirAssumedRoleUser",
                        "shape": "AssumedRoleUser",
                        "locationName": "AssumedRoleUser",
                        "documentation": "-- | The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers\n-- that you can use to refer to the resulting temporary security credentials.\n-- For example, you can reference these credentials as a principal in a\n-- resource-based policy by using the ARN or assumed role ID. The ARN and ID\n-- include the 'RoleSessionName' that you specified when you called 'AssumeRole'.",
                        "typeExposed": "Maybe AssumedRoleUser",
                        "type": "Maybe AssumedRoleUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirAudience",
                        "name": "_arwwirAudience",
                        "shape": "Audience",
                        "locationName": "Audience",
                        "documentation": "-- | The intended audience of the web identity token. This is traditionally the\n-- client identifier issued to the application that requested the web identity\n-- token.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirCredentials",
                        "name": "_arwwirCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "-- | The temporary security credentials, which include an access key ID, a secret\n-- access key, and a security token.",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirPackedPolicySize",
                        "name": "_arwwirPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "-- | A percentage value that indicates the size of the policy in packed form. The\n-- service rejects any policy with a packed size greater than 100 percent, which\n-- means the policy exceeded the allowed space.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirProvider",
                        "name": "_arwwirProvider",
                        "shape": "Issuer",
                        "locationName": "Provider",
                        "documentation": "-- | The issuing authority of the web identity token presented. For OpenID\n-- Connect ID Tokens this contains the value of the 'iss' field. For OAuth 2.0\n-- Access Tokens, this contains the value of the 'ProviderId' parameter that was\n-- passed in the 'AssumeRoleWithWebIdentity' request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirSubjectFromWebIdentityToken",
                        "name": "_arwwirSubjectFromWebIdentityToken",
                        "shape": "webIdentitySubjectType",
                        "locationName": "SubjectFromWebIdentityToken",
                        "documentation": "-- | The unique user identifier that is returned by the identity provider. This\n-- identifier is associated with the 'WebIdentityToken' that was submitted with\n-- the 'AssumeRoleWithWebIdentity' call. The identifier is typically unique to the\n-- user and the application that acquired the 'WebIdentityToken' (pairwise\n-- identifier). If an OpenID Connect ID token was submitted in the 'WebIdentityToken', this value is returned by the identity provider as the token's 'sub'\n-- (Subject) claim.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html",
            "namespace": "Network.AWS.STS.AssumeRoleWithWebIdentity",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.STS.Types"
            ],
            "pager": null,
            "name": "AssumeRoleWithWebIdentity",
            "method": "post",
            "documentation": "-- | Returns a set of temporary security credentials for users who have been\n-- authenticated in a mobile or web application with a web identity provider,\n-- such as Login with Amazon, Amazon Cognito, Facebook, or Google.\n--\n-- Calling 'AssumeRoleWithWebIdentity' does not require the use of AWS security\n-- credentials. Therefore, you can distribute an application (for example, on\n-- mobile devices) that requests temporary security credentials without\n-- including long-term AWS credentials in the application, and without deploying\n-- server-based proxy services that use long-term AWS credentials. Instead, the\n-- identity of the caller is validated by using a token from the web identity\n-- provider.\n--\n-- The temporary security credentials returned by this API consist of an access\n-- key ID, a secret access key, and a security token. Applications can use these\n-- temporary security credentials to sign calls to AWS service APIs. The\n-- credentials are valid for the duration that you specified when calling 'AssumeRoleWithWebIdentity', which can be from 900 seconds (15 minutes) to 3600 seconds (1 hour). By\n-- default, the temporary security credentials are valid for 1 hour.\n--\n-- Optionally, you can pass an IAM access policy to this operation. If you\n-- choose not to pass a policy, the temporary security credentials that are\n-- returned by the operation have the permissions that are defined in the access\n-- policy of the role that is being assumed. If you pass a policy to this\n-- operation, the temporary security credentials that are returned by the\n-- operation have the permissions that are allowed by both the access policy of\n-- the role that is being assumed, /and/ the policy that you pass. This gives you\n-- a way to further restrict the permissions for the resulting temporary\n-- security credentials. You cannot use the passed policy to grant permissions\n-- that are in excess of those allowed by the access policy of the role that is\n-- being assumed. For more information, see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html Permissions forAssumeRoleWithWebIdentity\u003e in /Using Temporary Security Credentials/.\n--\n-- Before your application can call 'AssumeRoleWithWebIdentity', you must have an\n-- identity token from a supported identity provider and create a role that the\n-- application can assume. The role that your application assumes must trust the\n-- identity provider that is associated with the identity token. In other words,\n-- the identity provider must be specified in the role's trust policy.\n--\n-- For more information about how to use web identity federation and the 'AssumeRoleWithWebIdentity', see the following resources:\n--\n-- Creating a Mobile Application with Third-Party Sign-In and  Creating\n-- Temporary Security Credentials for Mobile Apps Using Third-Party Identity\n-- Providers in /Using Temporary Security Credentials/.    Web Identity Federation\n-- Playground. This interactive website lets you walk through the process of\n-- authenticating via Login with Amazon, Facebook, or Google, getting temporary\n-- security credentials, and then using those credentials to make a request to\n-- AWS.   \u003chttp://aws.amazon.com/sdkforios/ AWS SDK for iOS\u003e and AWS SDK for Android. These toolkits contain sample\n-- apps that show how to invoke the identity providers, and then how to use the\n-- information from these providers to get and use temporary security\n-- credentials.   Web Identity Federation with Mobile Applications. This article\n-- discusses web identity federation and shows an example of how to use web\n-- identity federation to get access to content in Amazon S3.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 22,
                "ctor": "assumeRoleWithWebIdentity",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arwwiRoleArn",
                        "name": "_arwwiRoleArn",
                        "shape": "arnType",
                        "locationName": "RoleArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the role that the caller is assuming.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arwwiRoleSessionName",
                        "name": "_arwwiRoleSessionName",
                        "shape": "userNameType",
                        "locationName": "RoleSessionName",
                        "documentation": "-- | An identifier for the assumed role session. Typically, you pass the name or\n-- identifier that is associated with the user who is using your application.\n-- That way, the temporary security credentials that your application will use\n-- are associated with that user. This session name is included as part of the\n-- ARN and assumed role ID in the 'AssumedRoleUser' response element.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arwwiWebIdentityToken",
                        "name": "_arwwiWebIdentityToken",
                        "shape": "clientTokenType",
                        "locationName": "WebIdentityToken",
                        "documentation": "-- | The OAuth 2.0 access token or OpenID Connect ID token that is provided by the\n-- identity provider. Your application must get this token by authenticating the\n-- user who is using your application with a web identity provider before the\n-- application makes an 'AssumeRoleWithWebIdentity' call.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "AssumeRoleWithWebIdentity",
                "query": [
                    {
                        "field": "_arwwiRoleArn",
                        "locationName": "RoleArn",
                        "type": "field"
                    },
                    {
                        "field": "_arwwiRoleSessionName",
                        "locationName": "RoleSessionName",
                        "type": "field"
                    },
                    {
                        "field": "_arwwiWebIdentityToken",
                        "locationName": "WebIdentityToken",
                        "type": "field"
                    },
                    {
                        "field": "_arwwiProviderId",
                        "locationName": "ProviderId",
                        "type": "field"
                    },
                    {
                        "field": "_arwwiPolicy",
                        "locationName": "Policy",
                        "type": "field"
                    },
                    {
                        "field": "_arwwiDurationSeconds",
                        "locationName": "DurationSeconds",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwiProviderId",
                        "name": "_arwwiProviderId",
                        "shape": "urlType",
                        "locationName": "ProviderId",
                        "documentation": "-- | The fully-qualified host component of the domain name of the identity\n-- provider. Specify this value only for OAuth access tokens. Do not specify\n-- this value for OpenID Connect ID tokens, such as 'accounts.google.com'. Do not\n-- include URL schemes and port numbers. Currently, 'www.amazon.com' and 'graph.facebook.com' are supported.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwiPolicy",
                        "name": "_arwwiPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "-- | An IAM policy in JSON format.\n--\n-- The policy parameter is optional. If you pass a policy, the temporary\n-- security credentials that are returned by the operation have the permissions\n-- that are allowed by both the access policy of the role that is being assumed, /and/ the policy that you pass. This gives you a way to further restrict the\n-- permissions for the resulting temporary security credentials. You cannot use\n-- the passed policy to grant permissions that are in excess of those allowed by\n-- the access policy of the role that is being assumed. For more information,\n-- see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html Permissions for AssumeRoleWithWebIdentity\u003e in /Using Temporary SecurityCredentials/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwiDurationSeconds",
                        "name": "_arwwiDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "-- | The duration, in seconds, of the role session. The value can range from 900\n-- seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set\n-- to 3600 seconds.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwiDurationSeconds",
                        "name": "_arwwiDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "-- | The duration, in seconds, of the role session. The value can range from 900\n-- seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set\n-- to 3600 seconds.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwiPolicy",
                        "name": "_arwwiPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "-- | An IAM policy in JSON format.\n--\n-- The policy parameter is optional. If you pass a policy, the temporary\n-- security credentials that are returned by the operation have the permissions\n-- that are allowed by both the access policy of the role that is being assumed, /and/ the policy that you pass. This gives you a way to further restrict the\n-- permissions for the resulting temporary security credentials. You cannot use\n-- the passed policy to grant permissions that are in excess of those allowed by\n-- the access policy of the role that is being assumed. For more information,\n-- see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html Permissions for AssumeRoleWithWebIdentity\u003e in /Using Temporary SecurityCredentials/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwiProviderId",
                        "name": "_arwwiProviderId",
                        "shape": "urlType",
                        "locationName": "ProviderId",
                        "documentation": "-- | The fully-qualified host component of the domain name of the identity\n-- provider. Specify this value only for OAuth access tokens. Do not specify\n-- this value for OpenID Connect ID tokens, such as 'accounts.google.com'. Do not\n-- include URL schemes and port numbers. Currently, 'www.amazon.com' and 'graph.facebook.com' are supported.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arwwiRoleArn",
                        "name": "_arwwiRoleArn",
                        "shape": "arnType",
                        "locationName": "RoleArn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the role that the caller is assuming.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arwwiRoleSessionName",
                        "name": "_arwwiRoleSessionName",
                        "shape": "userNameType",
                        "locationName": "RoleSessionName",
                        "documentation": "-- | An identifier for the assumed role session. Typically, you pass the name or\n-- identifier that is associated with the user who is using your application.\n-- That way, the temporary security credentials that your application will use\n-- are associated with that user. This session name is included as part of the\n-- ARN and assumed role ID in the 'AssumedRoleUser' response element.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "arwwiWebIdentityToken",
                        "name": "_arwwiWebIdentityToken",
                        "shape": "clientTokenType",
                        "locationName": "WebIdentityToken",
                        "documentation": "-- | The OAuth 2.0 access token or OpenID Connect ID token that is provided by the\n-- identity provider. Your application must get this token by authenticating the\n-- user who is using your application with a web identity provider before the\n-- application makes an 'AssumeRoleWithWebIdentity' call.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "STS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "decodeAuthorizationMessageResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "damrDecodedMessage",
                    "name": "_damrDecodedMessage",
                    "shape": "decodedMessageType",
                    "locationName": "DecodedMessage",
                    "documentation": "-- | An XML document that contains the decoded message. For more information, see 'DecodeAuthorizationMessage'.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DecodeAuthorizationMessageResponse",
                "resultWrapper": "DecodeAuthorizationMessageResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "damrDecodedMessage",
                        "name": "_damrDecodedMessage",
                        "shape": "decodedMessageType",
                        "locationName": "DecodedMessage",
                        "documentation": "-- | An XML document that contains the decoded message. For more information, see 'DecodeAuthorizationMessage'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "damrDecodedMessage",
                        "name": "_damrDecodedMessage",
                        "shape": "decodedMessageType",
                        "locationName": "DecodedMessage",
                        "documentation": "-- | An XML document that contains the decoded message. For more information, see 'DecodeAuthorizationMessage'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/STS/latest/APIReference/API_DecodeAuthorizationMessage.html",
            "namespace": "Network.AWS.STS.DecodeAuthorizationMessage",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.STS.Types"
            ],
            "pager": null,
            "name": "DecodeAuthorizationMessage",
            "method": "post",
            "documentation": "-- | Decodes additional information about the authorization status of a request\n-- from an encoded message returned in response to an AWS request.\n--\n-- For example, if a user is not authorized to perform an action that he or she\n-- has requested, the request returns a 'Client.UnauthorizedOperation' response\n-- (an HTTP 403 response). Some AWS actions additionally return an encoded\n-- message that can provide details about this authorization failure.\n--\n-- The message is encoded because the details of the authorization status can\n-- constitute privileged information that the user who requested the action\n-- should not see. To decode an authorization status message, a user must be\n-- granted permissions via an IAM policy to request the 'DecodeAuthorizationMessage' ('sts:DecodeAuthorizationMessage') action.\n--\n-- The decoded message includes the following type of information:\n--\n-- Whether the request was denied due to an explicit deny or due to the\n-- absence of an explicit allow. For more information, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/AccessPolicyLanguage_EvaluationLogic.html#policy-eval-denyallow Determining Whether aRequest is Allowed or Denied\u003e in /Using IAM/.  The principal who made the\n-- request. The requested action. The requested resource. The values of\n-- condition keys in the context of the user's request.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "decodeAuthorizationMessage",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "damEncodedMessage",
                    "name": "_damEncodedMessage",
                    "shape": "encodedMessageType",
                    "locationName": "EncodedMessage",
                    "documentation": "-- | The encoded message that was returned with the response.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "damEncodedMessage",
                        "name": "_damEncodedMessage",
                        "shape": "encodedMessageType",
                        "locationName": "EncodedMessage",
                        "documentation": "-- | The encoded message that was returned with the response.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "DecodeAuthorizationMessage",
                "query": [
                    {
                        "field": "_damEncodedMessage",
                        "locationName": "EncodedMessage",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "damEncodedMessage",
                        "name": "_damEncodedMessage",
                        "shape": "encodedMessageType",
                        "locationName": "EncodedMessage",
                        "documentation": "-- | The encoded message that was returned with the response.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "STS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 21,
                "ctor": "getFederationTokenResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetFederationTokenResponse",
                "resultWrapper": "GetFederationTokenResult",
                "locationPad": 17,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gftrCredentials",
                        "name": "_gftrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "-- | Credentials for the service API authentication.",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gftrFederatedUser",
                        "name": "_gftrFederatedUser",
                        "shape": "FederatedUser",
                        "locationName": "FederatedUser",
                        "documentation": "-- | Identifiers for the federated user associated with the credentials (such as 'arn:aws:sts::123456789012:federated-user/Bob' or '123456789012:Bob'). You can use the federated user's ARN in your\n-- resource-based policies, such as an Amazon S3 bucket policy.",
                        "typeExposed": "Maybe FederatedUser",
                        "type": "Maybe FederatedUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gftrPackedPolicySize",
                        "name": "_gftrPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "-- | A percentage value indicating the size of the policy in packed form. The\n-- service rejects policies for which the packed size is greater than 100\n-- percent of the allowed value.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gftrCredentials",
                        "name": "_gftrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "-- | Credentials for the service API authentication.",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gftrFederatedUser",
                        "name": "_gftrFederatedUser",
                        "shape": "FederatedUser",
                        "locationName": "FederatedUser",
                        "documentation": "-- | Identifiers for the federated user associated with the credentials (such as 'arn:aws:sts::123456789012:federated-user/Bob' or '123456789012:Bob'). You can use the federated user's ARN in your\n-- resource-based policies, such as an Amazon S3 bucket policy.",
                        "typeExposed": "Maybe FederatedUser",
                        "type": "Maybe FederatedUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gftrPackedPolicySize",
                        "name": "_gftrPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "-- | A percentage value indicating the size of the policy in packed form. The\n-- service rejects policies for which the packed size is greater than 100\n-- percent of the allowed value.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/STS/latest/APIReference/API_GetFederationToken.html",
            "namespace": "Network.AWS.STS.GetFederationToken",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.STS.Types"
            ],
            "pager": null,
            "name": "GetFederationToken",
            "method": "post",
            "documentation": "-- | Returns a set of temporary security credentials (consisting of an access key\n-- ID, a secret access key, and a security token) for a federated user. A\n-- typical use is in a proxy application that gets temporary security\n-- credentials on behalf of distributed applications inside a corporate network.\n-- Because you must call the 'GetFederationToken' action using the long-term\n-- security credentials of an IAM user, this call is appropriate in contexts\n-- where those credentials can be safely stored, usually in a server-based\n-- application.\n--\n-- Note: Do not use this call in mobile applications or client-based web\n-- applications that directly get temporary security credentials. For those\n-- types of applications, use 'AssumeRoleWithWebIdentity'.\n--\n-- The 'GetFederationToken' action must be called by using the long-term AWS\n-- security credentials of an IAM user. You can also call 'GetFederationToken'\n-- using the security credentials of an AWS account (root), but this is not\n-- recommended. Instead, we recommend that you create an IAM user for the\n-- purpose of the proxy application and then attach a policy to the IAM user\n-- that limits federated users to only the actions and resources they need\n-- access to. For more information, see \u003chttp://docs.aws.amazon.com/IAM/latest/UserGuide/IAMBestPractices.html IAM Best Practices\u003e in /Using IAM/.\n--\n-- The temporary security credentials that are obtained by using the long-term\n-- credentials of an IAM user are valid for the specified duration, between 900\n-- seconds (15 minutes) and 129600 seconds (36 hours). Temporary credentials\n-- that are obtained by using AWS account (root) credentials have a maximum\n-- duration of 3600 seconds (1 hour)\n--\n-- Permissions\n--\n-- The permissions for the temporary security credentials returned by 'GetFederationToken' are determined by a combination of the following:\n--\n-- The policy or policies that are attached to the IAM user whose credentials\n-- are used to call 'GetFederationToken'. The policy that is passed as a parameter\n-- in the call.  The passed policy is attached to the temporary security\n-- credentials that result from the 'GetFederationToken' API call--that is, to the /federated user/. When the federated user makes an AWS request, AWS evaluates\n-- the policy attached to the federated user in combination with the policy or\n-- policies attached to the IAM user whose credentials were used to call 'GetFederationToken'. AWS allows the federated user's request only when both the federated user /and/ the IAM user are explicitly allowed to perform the requested action. The\n-- passed policy cannot grant more permissions than those that are defined in\n-- the IAM user policy.\n--\n-- A typical use case is that the permissions of the IAM user whose credentials\n-- are used to call 'GetFederationToken' are designed to allow access to all the\n-- actions and resources that any federated user will need. Then, for individual\n-- users, you pass a policy to the operation that scopes down the permissions to\n-- a level that's appropriate to that individual user, using a policy that\n-- allows only a subset of permissions that are granted to the IAM user.\n--\n-- If you do not pass a policy, the resulting temporary security credentials\n-- have no effective permissions. The only exception is when the temporary\n-- security credentials are used to access a resource that has a resource-based\n-- policy that specifically allows the federated user to access the resource.\n--\n-- For more information about how permissions work, see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-get-federation-token.html Permissions forGetFederationToken\u003e in /Using Temporary Security Credentials/. For information\n-- about using 'GetFederationToken' to create temporary security credentials, see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingFedTokens.html Creating Temporary Credentials to Enable Access for Federated Users\u003e in /Using Temporary Security Credentials/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 19,
                "ctor": "getFederationToken",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gftName",
                        "name": "_gftName",
                        "shape": "userNameType",
                        "locationName": "Name",
                        "documentation": "-- | The name of the federated user. The name is used as an identifier for the\n-- temporary security credentials (such as 'Bob'). For example, you can reference\n-- the federated user name in a resource-based policy, such as in an Amazon S3\n-- bucket policy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "GetFederationToken",
                "query": [
                    {
                        "field": "_gftName",
                        "locationName": "Name",
                        "type": "field"
                    },
                    {
                        "field": "_gftPolicy",
                        "locationName": "Policy",
                        "type": "field"
                    },
                    {
                        "field": "_gftDurationSeconds",
                        "locationName": "DurationSeconds",
                        "type": "field"
                    }
                ],
                "locationPad": 16,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gftPolicy",
                        "name": "_gftPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "-- | An IAM policy in JSON format that is passed with the 'GetFederationToken' call\n-- and evaluated along with the policy or policies that are attached to the IAM\n-- user whose credentials are used to call 'GetFederationToken'. The passed policy\n-- is used to scope down the permissions that are available to the IAM user, by\n-- allowing only a subset of the permissions that are granted to the IAM user.\n-- The passed policy cannot grant more permissions than those granted to the IAM\n-- user. The final permissions for the federated user are the most restrictive\n-- set based on the intersection of the passed policy and the IAM user policy.\n--\n-- If you do not pass a policy, the resulting temporary security credentials\n-- have no effective permissions. The only exception is when the temporary\n-- security credentials are used to access a resource that has a resource-based\n-- policy that specifically allows the federated user to access the resource.\n--\n-- For more information about how permissions work, see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-get-federation-token.html Permissions forGetFederationToken\u003e in /Using Temporary Security Credentials/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gftDurationSeconds",
                        "name": "_gftDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "-- | The duration, in seconds, that the session should last. Acceptable durations\n-- for federation sessions range from 900 seconds (15 minutes) to 129600 seconds\n-- (36 hours), with 43200 seconds (12 hours) as the default. Sessions obtained\n-- using AWS account (root) credentials are restricted to a maximum of 3600\n-- seconds (one hour). If the specified duration is longer than one hour, the\n-- session obtained by using AWS account (root) credentials defaults to one\n-- hour.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gftDurationSeconds",
                        "name": "_gftDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "-- | The duration, in seconds, that the session should last. Acceptable durations\n-- for federation sessions range from 900 seconds (15 minutes) to 129600 seconds\n-- (36 hours), with 43200 seconds (12 hours) as the default. Sessions obtained\n-- using AWS account (root) credentials are restricted to a maximum of 3600\n-- seconds (one hour). If the specified duration is longer than one hour, the\n-- session obtained by using AWS account (root) credentials defaults to one\n-- hour.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gftName",
                        "name": "_gftName",
                        "shape": "userNameType",
                        "locationName": "Name",
                        "documentation": "-- | The name of the federated user. The name is used as an identifier for the\n-- temporary security credentials (such as 'Bob'). For example, you can reference\n-- the federated user name in a resource-based policy, such as in an Amazon S3\n-- bucket policy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gftPolicy",
                        "name": "_gftPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "-- | An IAM policy in JSON format that is passed with the 'GetFederationToken' call\n-- and evaluated along with the policy or policies that are attached to the IAM\n-- user whose credentials are used to call 'GetFederationToken'. The passed policy\n-- is used to scope down the permissions that are available to the IAM user, by\n-- allowing only a subset of the permissions that are granted to the IAM user.\n-- The passed policy cannot grant more permissions than those granted to the IAM\n-- user. The final permissions for the federated user are the most restrictive\n-- set based on the intersection of the passed policy and the IAM user policy.\n--\n-- If you do not pass a policy, the resulting temporary security credentials\n-- have no effective permissions. The only exception is when the temporary\n-- security credentials are used to access a resource that has a resource-based\n-- policy that specifically allows the federated user to access the resource.\n--\n-- For more information about how permissions work, see \u003chttp://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-get-federation-token.html Permissions forGetFederationToken\u003e in /Using Temporary Security Credentials/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "STS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getSessionTokenResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": false,
                    "lens": "gstrCredentials",
                    "name": "_gstrCredentials",
                    "shape": "Credentials",
                    "locationName": "Credentials",
                    "documentation": "-- | The session credentials for API authentication.",
                    "typeExposed": "Maybe Credentials",
                    "type": "Maybe Credentials"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetSessionTokenResponse",
                "resultWrapper": "GetSessionTokenResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gstrCredentials",
                        "name": "_gstrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "-- | The session credentials for API authentication.",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gstrCredentials",
                        "name": "_gstrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "-- | The session credentials for API authentication.",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html",
            "namespace": "Network.AWS.STS.GetSessionToken",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.STS.Types"
            ],
            "pager": null,
            "name": "GetSessionToken",
            "method": "post",
            "documentation": "-- | Returns a set of temporary credentials for an AWS account or IAM user. The\n-- credentials consist of an access key ID, a secret access key, and a security\n-- token. Typically, you use 'GetSessionToken' if you want to use MFA to protect\n-- programmatic calls to specific AWS APIs like Amazon EC2 'StopInstances'.\n-- MFA-enabled IAM users would need to call 'GetSessionToken' and submit an MFA\n-- code that is associated with their MFA device. Using the temporary security\n-- credentials that are returned from the call, IAM users can then make\n-- programmatic calls to APIs that require MFA authentication.\n--\n-- The 'GetSessionToken' action must be called by using the long-term AWS\n-- security credentials of the AWS account or an IAM user. Credentials that are\n-- created by IAM users are valid for the duration that you specify, between 900\n-- seconds (15 minutes) and 129600 seconds (36 hours); credentials that are\n-- created by using account credentials have a maximum duration of 3600 seconds\n-- (1 hour).\n--\n-- The permissions associated with the temporary security credentials returned\n-- by 'GetSessionToken' are based on the permissions associated with account or\n-- IAM user whose credentials are used to call the action. If 'GetSessionToken' is\n-- called using root account credentials, the temporary credentials have root\n-- account permissions. Similarly, if 'GetSessionToken' is called using the\n-- credentials of an IAM user, the temporary credentials have the same\n-- permissions as the IAM user.\n--\n-- For more information about using 'GetSessionToken' to create temporary\n-- credentials, go to Creating Temporary Credentials to Enable Access for IAM\n-- Users in /Using Temporary Security Credentials/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 19,
                "ctor": "getSessionToken",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "GetSessionToken",
                "query": [
                    {
                        "field": "_gstDurationSeconds",
                        "locationName": "DurationSeconds",
                        "type": "field"
                    },
                    {
                        "field": "_gstSerialNumber",
                        "locationName": "SerialNumber",
                        "type": "field"
                    },
                    {
                        "field": "_gstTokenCode",
                        "locationName": "TokenCode",
                        "type": "field"
                    }
                ],
                "locationPad": 16,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gstDurationSeconds",
                        "name": "_gstDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "-- | The duration, in seconds, that the credentials should remain valid.\n-- Acceptable durations for IAM user sessions range from 900 seconds (15\n-- minutes) to 129600 seconds (36 hours), with 43200 seconds (12 hours) as the\n-- default. Sessions for AWS account owners are restricted to a maximum of 3600\n-- seconds (one hour). If the duration is longer than one hour, the session for\n-- AWS account owners defaults to one hour.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gstSerialNumber",
                        "name": "_gstSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | The identification number of the MFA device that is associated with the IAM\n-- user who is making the 'GetSessionToken' call. Specify this value if the IAM\n-- user has a policy that requires MFA authentication. The value is either the\n-- serial number for a hardware device (such as 'GAHT12345678') or an Amazon\n-- Resource Name (ARN) for a virtual device (such as 'arn:aws:iam::123456789012:mfa/user'). You can find the device for an IAM user by going to the AWS Management\n-- Console and viewing the user's security credentials.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gstTokenCode",
                        "name": "_gstTokenCode",
                        "shape": "tokenCodeType",
                        "locationName": "TokenCode",
                        "documentation": "-- | The value provided by the MFA device, if MFA is required. If any policy\n-- requires the IAM user to submit an MFA code, specify this value. If MFA\n-- authentication is required, and the user does not provide a code when\n-- requesting a set of temporary security credentials, the user will receive an\n-- \"access denied\" response when requesting resources that require MFA\n-- authentication.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gstDurationSeconds",
                        "name": "_gstDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "-- | The duration, in seconds, that the credentials should remain valid.\n-- Acceptable durations for IAM user sessions range from 900 seconds (15\n-- minutes) to 129600 seconds (36 hours), with 43200 seconds (12 hours) as the\n-- default. Sessions for AWS account owners are restricted to a maximum of 3600\n-- seconds (one hour). If the duration is longer than one hour, the session for\n-- AWS account owners defaults to one hour.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gstSerialNumber",
                        "name": "_gstSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "-- | The identification number of the MFA device that is associated with the IAM\n-- user who is making the 'GetSessionToken' call. Specify this value if the IAM\n-- user has a policy that requires MFA authentication. The value is either the\n-- serial number for a hardware device (such as 'GAHT12345678') or an Amazon\n-- Resource Name (ARN) for a virtual device (such as 'arn:aws:iam::123456789012:mfa/user'). You can find the device for an IAM user by going to the AWS Management\n-- Console and viewing the user's security credentials.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gstTokenCode",
                        "name": "_gstTokenCode",
                        "shape": "tokenCodeType",
                        "locationName": "TokenCode",
                        "documentation": "-- | The value provided by the MFA device, if MFA is required. If any policy\n-- requires the IAM user to submit an MFA code, specify this value. If MFA\n-- authentication is required, and the user does not provide a code when\n-- requesting a set of temporary security credentials, the user will receive an\n-- \"access denied\" response when requesting resources that require MFA\n-- authentication.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        }
    ]
}