{
    "waiters": {
        "waiters": {},
        "namespace": "Network.AWS.MachineLearning.Waiters",
        "imports": [
            "Network.AWS.MachineLearning.Types"
        ]
    },
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "MachineLearning",
        "error": "JSONError",
        "url": "http://docs.aws.amazon.com/machine-learning/latest/APIReference/Welcome.html",
        "namespace": "Network.AWS.MachineLearning",
        "protocol": "json",
        "imports": [
            "Network.AWS.MachineLearning.CreateBatchPrediction",
            "Network.AWS.MachineLearning.CreateDataSourceFromRDS",
            "Network.AWS.MachineLearning.CreateDataSourceFromRedshift",
            "Network.AWS.MachineLearning.CreateDataSourceFromS",
            "Network.AWS.MachineLearning.CreateEvaluation",
            "Network.AWS.MachineLearning.CreateMLModel",
            "Network.AWS.MachineLearning.CreateRealtimeEndpoint",
            "Network.AWS.MachineLearning.DeleteBatchPrediction",
            "Network.AWS.MachineLearning.DeleteDataSource",
            "Network.AWS.MachineLearning.DeleteEvaluation",
            "Network.AWS.MachineLearning.DeleteMLModel",
            "Network.AWS.MachineLearning.DeleteRealtimeEndpoint",
            "Network.AWS.MachineLearning.DescribeBatchPredictions",
            "Network.AWS.MachineLearning.DescribeDataSources",
            "Network.AWS.MachineLearning.DescribeEvaluations",
            "Network.AWS.MachineLearning.DescribeMLModels",
            "Network.AWS.MachineLearning.GetBatchPrediction",
            "Network.AWS.MachineLearning.GetDataSource",
            "Network.AWS.MachineLearning.GetEvaluation",
            "Network.AWS.MachineLearning.GetMLModel",
            "Network.AWS.MachineLearning.Predict",
            "Network.AWS.MachineLearning.Types",
            "Network.AWS.MachineLearning.UpdateBatchPrediction",
            "Network.AWS.MachineLearning.UpdateDataSource",
            "Network.AWS.MachineLearning.UpdateEvaluation",
            "Network.AWS.MachineLearning.UpdateMLModel"
        ],
        "name": "Amazon Machine Learning",
        "version": "2014-12-12",
        "documentation": "-- | Amazon Machine Learning (Amazon ML) is a robust machine learning platform\n-- that allows software developers to build and train predictive applications\n-- and host those applications in a scalable AWS cloud solution.",
        "xmlNamespace": null,
        "jsonVersion": "1.1",
        "retryDelay": {
            "base": 5.0e-2,
            "attempts": 5,
            "growth": 2
        },
        "endpointPrefix": "machinelearning",
        "retryPolicies": {
            "service_unavailable": {
                "error": null,
                "code": 503
            },
            "general_server_error": {
                "error": null,
                "code": 500
            },
            "limit_exceeded": {
                "error": null,
                "code": 509
            }
        },
        "targetPrefix": "AmazonML_20141212"
    },
    "cabal": {
        "other": [],
        "library": "amazonka-ml",
        "abbrev": "MachineLearning",
        "exposed": [
            "Network.AWS.MachineLearning",
            "Network.AWS.MachineLearning.CreateBatchPrediction",
            "Network.AWS.MachineLearning.CreateDataSourceFromRDS",
            "Network.AWS.MachineLearning.CreateDataSourceFromRedshift",
            "Network.AWS.MachineLearning.CreateDataSourceFromS",
            "Network.AWS.MachineLearning.CreateEvaluation",
            "Network.AWS.MachineLearning.CreateMLModel",
            "Network.AWS.MachineLearning.CreateRealtimeEndpoint",
            "Network.AWS.MachineLearning.DeleteBatchPrediction",
            "Network.AWS.MachineLearning.DeleteDataSource",
            "Network.AWS.MachineLearning.DeleteEvaluation",
            "Network.AWS.MachineLearning.DeleteMLModel",
            "Network.AWS.MachineLearning.DeleteRealtimeEndpoint",
            "Network.AWS.MachineLearning.DescribeBatchPredictions",
            "Network.AWS.MachineLearning.DescribeDataSources",
            "Network.AWS.MachineLearning.DescribeEvaluations",
            "Network.AWS.MachineLearning.DescribeMLModels",
            "Network.AWS.MachineLearning.GetBatchPrediction",
            "Network.AWS.MachineLearning.GetDataSource",
            "Network.AWS.MachineLearning.GetEvaluation",
            "Network.AWS.MachineLearning.GetMLModel",
            "Network.AWS.MachineLearning.Predict",
            "Network.AWS.MachineLearning.Types",
            "Network.AWS.MachineLearning.UpdateBatchPrediction",
            "Network.AWS.MachineLearning.UpdateDataSource",
            "Network.AWS.MachineLearning.UpdateEvaluation",
            "Network.AWS.MachineLearning.UpdateMLModel"
        ],
        "url": "http://docs.aws.amazon.com/machine-learning/latest/APIReference/Welcome.html",
        "protocol": "json",
        "name": "Amazon Machine Learning",
        "version": "0.3.6",
        "description": "Amazon Machine Learning (Amazon ML) is a robust machine learning platform\nthat allows software developers to build and train predictive applications\nand host those applications in a scalable AWS cloud solution."
    },
    "types": {
        "namespace": "Network.AWS.MachineLearning.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "BatchDataSourceId": "DataSourceId",
                    "BatchMLModelId": "MLModelId",
                    "BatchIAMUser": "IAMUser",
                    "BatchStatus": "Status",
                    "BatchCreatedAt": "CreatedAt",
                    "BatchDataURI": "DataURI",
                    "BatchName": "Name",
                    "BatchLastUpdatedAt": "LastUpdatedAt"
                },
                "valuePad": 14,
                "name": "BatchPredictionFilterVariable",
                "type": "nullary",
                "branchPad": 18
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "performanceMetrics",
                "field": {
                    "location": null,
                    "iso": "_Map",
                    "lensMapping": "_Map",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "pmProperties",
                    "name": "_pmProperties",
                    "shape": "PerformanceMetricsProperties",
                    "locationName": "Properties",
                    "documentation": null,
                    "typeExposed": "HashMap Text Text",
                    "type": "Map Text Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pmProperties",
                        "name": "_pmProperties",
                        "shape": "PerformanceMetricsProperties",
                        "locationName": "Properties",
                        "documentation": null,
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PerformanceMetrics",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pmProperties",
                        "name": "_pmProperties",
                        "shape": "PerformanceMetricsProperties",
                        "locationName": "Properties",
                        "documentation": null,
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pmProperties",
                        "name": "_pmProperties",
                        "shape": "PerformanceMetricsProperties",
                        "locationName": "Properties",
                        "documentation": null,
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 25,
                "ctor": "realtimeEndpointInfo",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "reiPeakRequestsPerSecond",
                        "name": "_reiPeakRequestsPerSecond",
                        "shape": "IntegerType",
                        "locationName": "PeakRequestsPerSecond",
                        "documentation": "-- | The maximum processing rate for the real-time endpoint for 'MLModel', measured\n-- in incoming requests per second.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "reiCreatedAt",
                        "name": "_reiCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the request to create the real-time endpoint for the 'MLModel'\n-- was received. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "reiEndpointUrl",
                        "name": "_reiEndpointUrl",
                        "shape": "VipURL",
                        "locationName": "EndpointUrl",
                        "documentation": "-- | The URI that specifies where to send real-time prediction requests for the 'MLModel'.\n--\n-- Note The application must wait until the real-time endpoint is ready before\n-- using this URI.\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "reiEndpointStatus",
                        "name": "_reiEndpointStatus",
                        "shape": "RealtimeEndpointStatus",
                        "locationName": "EndpointStatus",
                        "documentation": "-- | The current status of the real-time endpoint for the 'MLModel'. This element\n-- can have one of the following values:\n--\n-- NONE - Endpoint does not exist or was previously deleted. READY - Endpoint\n-- is ready to be used for real-time predictions. UPDATING - Updating/creating\n-- the endpoint.",
                        "typeExposed": "Maybe RealtimeEndpointStatus",
                        "type": "Maybe RealtimeEndpointStatus"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 22,
                "name": "RealtimeEndpointInfo",
                "locationPad": 22,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "reiPeakRequestsPerSecond",
                        "name": "_reiPeakRequestsPerSecond",
                        "shape": "IntegerType",
                        "locationName": "PeakRequestsPerSecond",
                        "documentation": "-- | The maximum processing rate for the real-time endpoint for 'MLModel', measured\n-- in incoming requests per second.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "reiCreatedAt",
                        "name": "_reiCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the request to create the real-time endpoint for the 'MLModel'\n-- was received. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "reiEndpointUrl",
                        "name": "_reiEndpointUrl",
                        "shape": "VipURL",
                        "locationName": "EndpointUrl",
                        "documentation": "-- | The URI that specifies where to send real-time prediction requests for the 'MLModel'.\n--\n-- Note The application must wait until the real-time endpoint is ready before\n-- using this URI.\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "reiEndpointStatus",
                        "name": "_reiEndpointStatus",
                        "shape": "RealtimeEndpointStatus",
                        "locationName": "EndpointStatus",
                        "documentation": "-- | The current status of the real-time endpoint for the 'MLModel'. This element\n-- can have one of the following values:\n--\n-- NONE - Endpoint does not exist or was previously deleted. READY - Endpoint\n-- is ready to be used for real-time predictions. UPDATING - Updating/creating\n-- the endpoint.",
                        "typeExposed": "Maybe RealtimeEndpointStatus",
                        "type": "Maybe RealtimeEndpointStatus"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "reiCreatedAt",
                        "name": "_reiCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the request to create the real-time endpoint for the 'MLModel'\n-- was received. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "reiEndpointStatus",
                        "name": "_reiEndpointStatus",
                        "shape": "RealtimeEndpointStatus",
                        "locationName": "EndpointStatus",
                        "documentation": "-- | The current status of the real-time endpoint for the 'MLModel'. This element\n-- can have one of the following values:\n--\n-- NONE - Endpoint does not exist or was previously deleted. READY - Endpoint\n-- is ready to be used for real-time predictions. UPDATING - Updating/creating\n-- the endpoint.",
                        "typeExposed": "Maybe RealtimeEndpointStatus",
                        "type": "Maybe RealtimeEndpointStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "reiEndpointUrl",
                        "name": "_reiEndpointUrl",
                        "shape": "VipURL",
                        "locationName": "EndpointUrl",
                        "documentation": "-- | The URI that specifies where to send real-time prediction requests for the 'MLModel'.\n--\n-- Note The application must wait until the real-time endpoint is ready before\n-- using this URI.\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "reiPeakRequestsPerSecond",
                        "name": "_reiPeakRequestsPerSecond",
                        "shape": "IntegerType",
                        "locationName": "PeakRequestsPerSecond",
                        "documentation": "-- | The maximum processing rate for the real-time endpoint for 'MLModel', measured\n-- in incoming requests per second.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 17,
                "ctor": "prediction",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "pPredictedLabel",
                        "name": "_pPredictedLabel",
                        "shape": "Label",
                        "locationName": "predictedLabel",
                        "documentation": "-- | The prediction label for either a BINARY or MULTICLASS 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "pPredictedValue",
                        "name": "_pPredictedValue",
                        "shape": "floatLabel",
                        "locationName": "predictedValue",
                        "documentation": "-- | The prediction value for REGRESSION 'MLModel'.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pPredictedScores",
                        "name": "_pPredictedScores",
                        "shape": "ScoreValuePerLabelMap",
                        "locationName": "predictedScores",
                        "documentation": null,
                        "typeExposed": "HashMap Text Double",
                        "type": "Map Text Double"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pDetails",
                        "name": "_pDetails",
                        "shape": "DetailsMap",
                        "locationName": "details",
                        "documentation": null,
                        "typeExposed": "HashMap DetailsAttributes Text",
                        "type": "Map DetailsAttributes Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 16,
                "name": "Prediction",
                "locationPad": 16,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "pPredictedLabel",
                        "name": "_pPredictedLabel",
                        "shape": "Label",
                        "locationName": "predictedLabel",
                        "documentation": "-- | The prediction label for either a BINARY or MULTICLASS 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "pPredictedValue",
                        "name": "_pPredictedValue",
                        "shape": "floatLabel",
                        "locationName": "predictedValue",
                        "documentation": "-- | The prediction value for REGRESSION 'MLModel'.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pPredictedScores",
                        "name": "_pPredictedScores",
                        "shape": "ScoreValuePerLabelMap",
                        "locationName": "predictedScores",
                        "documentation": null,
                        "typeExposed": "HashMap Text Double",
                        "type": "Map Text Double"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pDetails",
                        "name": "_pDetails",
                        "shape": "DetailsMap",
                        "locationName": "details",
                        "documentation": null,
                        "typeExposed": "HashMap DetailsAttributes Text",
                        "type": "Map DetailsAttributes Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pDetails",
                        "name": "_pDetails",
                        "shape": "DetailsMap",
                        "locationName": "details",
                        "documentation": null,
                        "typeExposed": "HashMap DetailsAttributes Text",
                        "type": "Map DetailsAttributes Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "pPredictedLabel",
                        "name": "_pPredictedLabel",
                        "shape": "Label",
                        "locationName": "predictedLabel",
                        "documentation": "-- | The prediction label for either a BINARY or MULTICLASS 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pPredictedScores",
                        "name": "_pPredictedScores",
                        "shape": "ScoreValuePerLabelMap",
                        "locationName": "predictedScores",
                        "documentation": null,
                        "typeExposed": "HashMap Text Double",
                        "type": "Map Text Double"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "pPredictedValue",
                        "name": "_pPredictedValue",
                        "shape": "floatLabel",
                        "locationName": "predictedValue",
                        "documentation": "-- | The prediction value for REGRESSION 'MLModel'.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "s3DataSpec",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "sdsDataLocationS3",
                        "name": "_sdsDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "DataLocationS3",
                        "documentation": "-- | The location of the data file(s) used by a 'DataSource'. The URI specifies a\n-- data file or an Amazon Simple Storage Service (Amazon S3) directory or bucket\n-- containing data files.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "sdsDataRearrangement",
                        "name": "_sdsDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | Describes the splitting requirement of a 'Datasource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "sdsDataSchema",
                        "name": "_sdsDataSchema",
                        "shape": "DataSchema",
                        "locationName": "DataSchema",
                        "documentation": "-- | Describes the schema for an Amazon S3 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "sdsDataSchemaLocationS3",
                        "name": "_sdsDataSchemaLocationS3",
                        "shape": "S3Url",
                        "locationName": "DataSchemaLocationS3",
                        "documentation": "-- | Describes the schema Location in Amazon S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "sdsDataLocationS3",
                        "name": "_sdsDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "DataLocationS3",
                        "documentation": "-- | The location of the data file(s) used by a 'DataSource'. The URI specifies a\n-- data file or an Amazon Simple Storage Service (Amazon S3) directory or bucket\n-- containing data files.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 21,
                "name": "S3DataSpec",
                "locationPad": 21,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "sdsDataRearrangement",
                        "name": "_sdsDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | Describes the splitting requirement of a 'Datasource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "sdsDataSchema",
                        "name": "_sdsDataSchema",
                        "shape": "DataSchema",
                        "locationName": "DataSchema",
                        "documentation": "-- | Describes the schema for an Amazon S3 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "sdsDataSchemaLocationS3",
                        "name": "_sdsDataSchemaLocationS3",
                        "shape": "S3Url",
                        "locationName": "DataSchemaLocationS3",
                        "documentation": "-- | Describes the schema Location in Amazon S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "sdsDataLocationS3",
                        "name": "_sdsDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "DataLocationS3",
                        "documentation": "-- | The location of the data file(s) used by a 'DataSource'. The URI specifies a\n-- data file or an Amazon Simple Storage Service (Amazon S3) directory or bucket\n-- containing data files.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "sdsDataRearrangement",
                        "name": "_sdsDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | Describes the splitting requirement of a 'Datasource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "sdsDataSchema",
                        "name": "_sdsDataSchema",
                        "shape": "DataSchema",
                        "locationName": "DataSchema",
                        "documentation": "-- | Describes the schema for an Amazon S3 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "sdsDataSchemaLocationS3",
                        "name": "_sdsDataSchemaLocationS3",
                        "shape": "S3Url",
                        "locationName": "DataSchemaLocationS3",
                        "documentation": "-- | Describes the schema Location in Amazon S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "DAAlgorithm": "Algorithm",
                    "DAPredictiveModelType": "PredictiveModelType"
                },
                "valuePad": 20,
                "name": "DetailsAttributes",
                "type": "nullary",
                "branchPad": 21
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "EvalDataURI": "DataURI",
                    "EvalDataSourceId": "DataSourceId",
                    "EvalName": "Name",
                    "EvalLastUpdatedAt": "LastUpdatedAt",
                    "EvalIAMUser": "IAMUser",
                    "EvalStatus": "Status",
                    "EvalMLModelId": "MLModelId",
                    "EvalCreatedAt": "CreatedAt"
                },
                "valuePad": 14,
                "name": "EvaluationFilterVariable",
                "type": "nullary",
                "branchPad": 17
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Updating": "UPDATING",
                    "None": "NONE",
                    "Ready": "READY",
                    "Failed": "FAILED"
                },
                "valuePad": 9,
                "name": "RealtimeEndpointStatus",
                "type": "nullary",
                "branchPad": 8
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 25,
                "ctor": "rdsdataSpec",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsDatabaseInformation",
                        "name": "_rdsdsDatabaseInformation",
                        "shape": "RDSDatabase",
                        "locationName": "DatabaseInformation",
                        "documentation": "-- | Describes the 'DatabaseName' and 'InstanceIdentifier' of an an Amazon RDS\n-- database.",
                        "typeExposed": "RDSDatabase",
                        "type": "RDSDatabase"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsSelectSqlQuery",
                        "name": "_rdsdsSelectSqlQuery",
                        "shape": "RDSSelectSqlQuery",
                        "locationName": "SelectSqlQuery",
                        "documentation": "-- | The query that is used to retrieve the observation data for the 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsDatabaseCredentials",
                        "name": "_rdsdsDatabaseCredentials",
                        "shape": "RDSDatabaseCredentials",
                        "locationName": "DatabaseCredentials",
                        "documentation": "-- | The AWS Identity and Access Management (IAM) credentials that are used\n-- connect to the Amazon RDS database.",
                        "typeExposed": "RDSDatabaseCredentials",
                        "type": "RDSDatabaseCredentials"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsS3StagingLocation",
                        "name": "_rdsdsS3StagingLocation",
                        "shape": "S3Url",
                        "locationName": "S3StagingLocation",
                        "documentation": "-- | The Amazon S3 location for staging Amazon RDS data. The data retrieved from\n-- Amazon RDS using 'SelectSqlQuery' is stored in this location.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsdsDataRearrangement",
                        "name": "_rdsdsDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | DataRearrangement - A JSON string that represents the splitting requirement\n-- of a 'DataSource'.\n--\n--\n-- Sample - ' \"{\\\"randomSeed\\\":\\\"some-random-seed\\\",\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsdsDataSchema",
                        "name": "_rdsdsDataSchema",
                        "shape": "DataSchema",
                        "locationName": "DataSchema",
                        "documentation": "-- | A JSON string that represents the schema. This is not required if 'DataSchemaUri' is specified.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsdsDataSchemaUri",
                        "name": "_rdsdsDataSchemaUri",
                        "shape": "S3Url",
                        "locationName": "DataSchemaUri",
                        "documentation": "-- | The Amazon S3 location of the 'DataSchema'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsResourceRole",
                        "name": "_rdsdsResourceRole",
                        "shape": "EDPResourceRole",
                        "locationName": "ResourceRole",
                        "documentation": "-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon Elastic\n-- Compute Cloud (Amazon EC2) instance to carry out the copy operation from\n-- Amazon RDS to an Amazon S3 task. For more information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for\n-- data pipelines.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsServiceRole",
                        "name": "_rdsdsServiceRole",
                        "shape": "EDPServiceRole",
                        "locationName": "ServiceRole",
                        "documentation": "-- | The role (DataPipelineDefaultRole) assumed by AWS Data Pipeline service to\n-- monitor the progress of the copy task from Amazon RDS to Amazon S3. For more\n-- information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for data pipelines.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsSubnetId",
                        "name": "_rdsdsSubnetId",
                        "shape": "EDPSubnetId",
                        "locationName": "SubnetId",
                        "documentation": "-- | The subnet ID to be used to access a VPC-based RDS DB instance. This\n-- attribute is used by Data Pipeline to carry out the copy task from Amazon RDS\n-- to Amazon S3.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsSecurityGroupIds",
                        "name": "_rdsdsSecurityGroupIds",
                        "shape": "EDPSecurityGroupIds",
                        "locationName": "SecurityGroupIds",
                        "documentation": "-- | The security group IDs to be used to access a VPC-based RDS DB instance.\n-- Ensure that there are appropriate ingress rules set up to allow access to the\n-- RDS DB instance. This attribute is used by Data Pipeline to carry out the\n-- copy operation from Amazon RDS to an Amazon S3 task.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroupIds\" Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsDatabaseInformation",
                        "name": "_rdsdsDatabaseInformation",
                        "shape": "RDSDatabase",
                        "locationName": "DatabaseInformation",
                        "documentation": "-- | Describes the 'DatabaseName' and 'InstanceIdentifier' of an an Amazon RDS\n-- database.",
                        "typeExposed": "RDSDatabase",
                        "type": "RDSDatabase"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsSelectSqlQuery",
                        "name": "_rdsdsSelectSqlQuery",
                        "shape": "RDSSelectSqlQuery",
                        "locationName": "SelectSqlQuery",
                        "documentation": "-- | The query that is used to retrieve the observation data for the 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsDatabaseCredentials",
                        "name": "_rdsdsDatabaseCredentials",
                        "shape": "RDSDatabaseCredentials",
                        "locationName": "DatabaseCredentials",
                        "documentation": "-- | The AWS Identity and Access Management (IAM) credentials that are used\n-- connect to the Amazon RDS database.",
                        "typeExposed": "RDSDatabaseCredentials",
                        "type": "RDSDatabaseCredentials"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsS3StagingLocation",
                        "name": "_rdsdsS3StagingLocation",
                        "shape": "S3Url",
                        "locationName": "S3StagingLocation",
                        "documentation": "-- | The Amazon S3 location for staging Amazon RDS data. The data retrieved from\n-- Amazon RDS using 'SelectSqlQuery' is stored in this location.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsResourceRole",
                        "name": "_rdsdsResourceRole",
                        "shape": "EDPResourceRole",
                        "locationName": "ResourceRole",
                        "documentation": "-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon Elastic\n-- Compute Cloud (Amazon EC2) instance to carry out the copy operation from\n-- Amazon RDS to an Amazon S3 task. For more information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for\n-- data pipelines.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsServiceRole",
                        "name": "_rdsdsServiceRole",
                        "shape": "EDPServiceRole",
                        "locationName": "ServiceRole",
                        "documentation": "-- | The role (DataPipelineDefaultRole) assumed by AWS Data Pipeline service to\n-- monitor the progress of the copy task from Amazon RDS to Amazon S3. For more\n-- information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for data pipelines.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsSubnetId",
                        "name": "_rdsdsSubnetId",
                        "shape": "EDPSubnetId",
                        "locationName": "SubnetId",
                        "documentation": "-- | The subnet ID to be used to access a VPC-based RDS DB instance. This\n-- attribute is used by Data Pipeline to carry out the copy task from Amazon RDS\n-- to Amazon S3.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 20,
                "name": "RDSDataSpec",
                "locationPad": 20,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsdsDataRearrangement",
                        "name": "_rdsdsDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | DataRearrangement - A JSON string that represents the splitting requirement\n-- of a 'DataSource'.\n--\n--\n-- Sample - ' \"{\\\"randomSeed\\\":\\\"some-random-seed\\\",\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsdsDataSchema",
                        "name": "_rdsdsDataSchema",
                        "shape": "DataSchema",
                        "locationName": "DataSchema",
                        "documentation": "-- | A JSON string that represents the schema. This is not required if 'DataSchemaUri' is specified.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsdsDataSchemaUri",
                        "name": "_rdsdsDataSchemaUri",
                        "shape": "S3Url",
                        "locationName": "DataSchemaUri",
                        "documentation": "-- | The Amazon S3 location of the 'DataSchema'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsSecurityGroupIds",
                        "name": "_rdsdsSecurityGroupIds",
                        "shape": "EDPSecurityGroupIds",
                        "locationName": "SecurityGroupIds",
                        "documentation": "-- | The security group IDs to be used to access a VPC-based RDS DB instance.\n-- Ensure that there are appropriate ingress rules set up to allow access to the\n-- RDS DB instance. This attribute is used by Data Pipeline to carry out the\n-- copy operation from Amazon RDS to an Amazon S3 task.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroupIds\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsdsDataRearrangement",
                        "name": "_rdsdsDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | DataRearrangement - A JSON string that represents the splitting requirement\n-- of a 'DataSource'.\n--\n--\n-- Sample - ' \"{\\\"randomSeed\\\":\\\"some-random-seed\\\",\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsdsDataSchema",
                        "name": "_rdsdsDataSchema",
                        "shape": "DataSchema",
                        "locationName": "DataSchema",
                        "documentation": "-- | A JSON string that represents the schema. This is not required if 'DataSchemaUri' is specified.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsdsDataSchemaUri",
                        "name": "_rdsdsDataSchemaUri",
                        "shape": "S3Url",
                        "locationName": "DataSchemaUri",
                        "documentation": "-- | The Amazon S3 location of the 'DataSchema'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsDatabaseCredentials",
                        "name": "_rdsdsDatabaseCredentials",
                        "shape": "RDSDatabaseCredentials",
                        "locationName": "DatabaseCredentials",
                        "documentation": "-- | The AWS Identity and Access Management (IAM) credentials that are used\n-- connect to the Amazon RDS database.",
                        "typeExposed": "RDSDatabaseCredentials",
                        "type": "RDSDatabaseCredentials"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsDatabaseInformation",
                        "name": "_rdsdsDatabaseInformation",
                        "shape": "RDSDatabase",
                        "locationName": "DatabaseInformation",
                        "documentation": "-- | Describes the 'DatabaseName' and 'InstanceIdentifier' of an an Amazon RDS\n-- database.",
                        "typeExposed": "RDSDatabase",
                        "type": "RDSDatabase"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsResourceRole",
                        "name": "_rdsdsResourceRole",
                        "shape": "EDPResourceRole",
                        "locationName": "ResourceRole",
                        "documentation": "-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon Elastic\n-- Compute Cloud (Amazon EC2) instance to carry out the copy operation from\n-- Amazon RDS to an Amazon S3 task. For more information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for\n-- data pipelines.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsS3StagingLocation",
                        "name": "_rdsdsS3StagingLocation",
                        "shape": "S3Url",
                        "locationName": "S3StagingLocation",
                        "documentation": "-- | The Amazon S3 location for staging Amazon RDS data. The data retrieved from\n-- Amazon RDS using 'SelectSqlQuery' is stored in this location.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsSecurityGroupIds",
                        "name": "_rdsdsSecurityGroupIds",
                        "shape": "EDPSecurityGroupIds",
                        "locationName": "SecurityGroupIds",
                        "documentation": "-- | The security group IDs to be used to access a VPC-based RDS DB instance.\n-- Ensure that there are appropriate ingress rules set up to allow access to the\n-- RDS DB instance. This attribute is used by Data Pipeline to carry out the\n-- copy operation from Amazon RDS to an Amazon S3 task.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroupIds\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsSelectSqlQuery",
                        "name": "_rdsdsSelectSqlQuery",
                        "shape": "RDSSelectSqlQuery",
                        "locationName": "SelectSqlQuery",
                        "documentation": "-- | The query that is used to retrieve the observation data for the 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsServiceRole",
                        "name": "_rdsdsServiceRole",
                        "shape": "EDPServiceRole",
                        "locationName": "ServiceRole",
                        "documentation": "-- | The role (DataPipelineDefaultRole) assumed by AWS Data Pipeline service to\n-- monitor the progress of the copy task from Amazon RDS to Amazon S3. For more\n-- information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for data pipelines.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdsSubnetId",
                        "name": "_rdsdsSubnetId",
                        "shape": "EDPSubnetId",
                        "locationName": "SubnetId",
                        "documentation": "-- | The subnet ID to be used to access a VPC-based RDS DB instance. This\n-- attribute is used by Data Pipeline to carry out the copy task from Amazon RDS\n-- to Amazon S3.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "rdsmetadata",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmDatabase",
                        "name": "_rdsmDatabase",
                        "shape": "RDSDatabase",
                        "locationName": "Database",
                        "documentation": "-- | The database details required to connect to an Amazon RDS.",
                        "typeExposed": "Maybe RDSDatabase",
                        "type": "Maybe RDSDatabase"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmDatabaseUserName",
                        "name": "_rdsmDatabaseUserName",
                        "shape": "RDSDatabaseUsername",
                        "locationName": "DatabaseUserName",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmSelectSqlQuery",
                        "name": "_rdsmSelectSqlQuery",
                        "shape": "RDSSelectSqlQuery",
                        "locationName": "SelectSqlQuery",
                        "documentation": "-- | The SQL query that is supplied during 'CreateDataSourceFromRDS'. Returns only\n-- if 'Verbose' is true in 'GetDataSourceInput'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmResourceRole",
                        "name": "_rdsmResourceRole",
                        "shape": "EDPResourceRole",
                        "locationName": "ResourceRole",
                        "documentation": "-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon EC2 instance\n-- to carry out the copy task from Amazon RDS to Amazon S3. For more\n-- information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for data pipelines.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmServiceRole",
                        "name": "_rdsmServiceRole",
                        "shape": "EDPServiceRole",
                        "locationName": "ServiceRole",
                        "documentation": "-- | The role (DataPipelineDefaultRole) assumed by the Data Pipeline service to\n-- monitor the progress of the copy task from Amazon RDS to Amazon S3. For more\n-- information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for data pipelines.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmDataPipelineId",
                        "name": "_rdsmDataPipelineId",
                        "shape": "EDPPipelineId",
                        "locationName": "DataPipelineId",
                        "documentation": "-- | The ID of the Data Pipeline instance that is used to carry to copy data from\n-- Amazon RDS to Amazon S3. You can use the ID to find details about the\n-- instance in the Data Pipeline console.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 17,
                "name": "RDSMetadata",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmDatabase",
                        "name": "_rdsmDatabase",
                        "shape": "RDSDatabase",
                        "locationName": "Database",
                        "documentation": "-- | The database details required to connect to an Amazon RDS.",
                        "typeExposed": "Maybe RDSDatabase",
                        "type": "Maybe RDSDatabase"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmDatabaseUserName",
                        "name": "_rdsmDatabaseUserName",
                        "shape": "RDSDatabaseUsername",
                        "locationName": "DatabaseUserName",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmSelectSqlQuery",
                        "name": "_rdsmSelectSqlQuery",
                        "shape": "RDSSelectSqlQuery",
                        "locationName": "SelectSqlQuery",
                        "documentation": "-- | The SQL query that is supplied during 'CreateDataSourceFromRDS'. Returns only\n-- if 'Verbose' is true in 'GetDataSourceInput'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmResourceRole",
                        "name": "_rdsmResourceRole",
                        "shape": "EDPResourceRole",
                        "locationName": "ResourceRole",
                        "documentation": "-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon EC2 instance\n-- to carry out the copy task from Amazon RDS to Amazon S3. For more\n-- information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for data pipelines.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmServiceRole",
                        "name": "_rdsmServiceRole",
                        "shape": "EDPServiceRole",
                        "locationName": "ServiceRole",
                        "documentation": "-- | The role (DataPipelineDefaultRole) assumed by the Data Pipeline service to\n-- monitor the progress of the copy task from Amazon RDS to Amazon S3. For more\n-- information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for data pipelines.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmDataPipelineId",
                        "name": "_rdsmDataPipelineId",
                        "shape": "EDPPipelineId",
                        "locationName": "DataPipelineId",
                        "documentation": "-- | The ID of the Data Pipeline instance that is used to carry to copy data from\n-- Amazon RDS to Amazon S3. You can use the ID to find details about the\n-- instance in the Data Pipeline console.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmDataPipelineId",
                        "name": "_rdsmDataPipelineId",
                        "shape": "EDPPipelineId",
                        "locationName": "DataPipelineId",
                        "documentation": "-- | The ID of the Data Pipeline instance that is used to carry to copy data from\n-- Amazon RDS to Amazon S3. You can use the ID to find details about the\n-- instance in the Data Pipeline console.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmDatabase",
                        "name": "_rdsmDatabase",
                        "shape": "RDSDatabase",
                        "locationName": "Database",
                        "documentation": "-- | The database details required to connect to an Amazon RDS.",
                        "typeExposed": "Maybe RDSDatabase",
                        "type": "Maybe RDSDatabase"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmDatabaseUserName",
                        "name": "_rdsmDatabaseUserName",
                        "shape": "RDSDatabaseUsername",
                        "locationName": "DatabaseUserName",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmResourceRole",
                        "name": "_rdsmResourceRole",
                        "shape": "EDPResourceRole",
                        "locationName": "ResourceRole",
                        "documentation": "-- | The role (DataPipelineDefaultResourceRole) assumed by an Amazon EC2 instance\n-- to carry out the copy task from Amazon RDS to Amazon S3. For more\n-- information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for data pipelines.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmSelectSqlQuery",
                        "name": "_rdsmSelectSqlQuery",
                        "shape": "RDSSelectSqlQuery",
                        "locationName": "SelectSqlQuery",
                        "documentation": "-- | The SQL query that is supplied during 'CreateDataSourceFromRDS'. Returns only\n-- if 'Verbose' is true in 'GetDataSourceInput'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsmServiceRole",
                        "name": "_rdsmServiceRole",
                        "shape": "EDPServiceRole",
                        "locationName": "ServiceRole",
                        "documentation": "-- | The role (DataPipelineDefaultRole) assumed by the Data Pipeline service to\n-- monitor the progress of the copy task from Amazon RDS to Amazon S3. For more\n-- information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for data pipelines.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 20,
                "ctor": "redshiftDatabase",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdDatabaseName",
                        "name": "_rdDatabaseName",
                        "shape": "RedshiftDatabaseName",
                        "locationName": "DatabaseName",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdClusterIdentifier",
                        "name": "_rdClusterIdentifier",
                        "shape": "RedshiftClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdDatabaseName",
                        "name": "_rdDatabaseName",
                        "shape": "RedshiftDatabaseName",
                        "locationName": "DatabaseName",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdClusterIdentifier",
                        "name": "_rdClusterIdentifier",
                        "shape": "RedshiftClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 18,
                "name": "RedshiftDatabase",
                "locationPad": 18,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdClusterIdentifier",
                        "name": "_rdClusterIdentifier",
                        "shape": "RedshiftClusterIdentifier",
                        "locationName": "ClusterIdentifier",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdDatabaseName",
                        "name": "_rdDatabaseName",
                        "shape": "RedshiftDatabaseName",
                        "locationName": "DatabaseName",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 12,
                "ctor": "redshiftDatabaseCredentials",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdcUsername",
                        "name": "_rdcUsername",
                        "shape": "RedshiftDatabaseUsername",
                        "locationName": "Username",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdcPassword",
                        "name": "_rdcPassword",
                        "shape": "RedshiftDatabasePassword",
                        "locationName": "Password",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdcUsername",
                        "name": "_rdcUsername",
                        "shape": "RedshiftDatabaseUsername",
                        "locationName": "Username",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdcPassword",
                        "name": "_rdcPassword",
                        "shape": "RedshiftDatabasePassword",
                        "locationName": "Password",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 9,
                "name": "RedshiftDatabaseCredentials",
                "locationPad": 9,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdcPassword",
                        "name": "_rdcPassword",
                        "shape": "RedshiftDatabasePassword",
                        "locationName": "Password",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdcUsername",
                        "name": "_rdcUsername",
                        "shape": "RedshiftDatabaseUsername",
                        "locationName": "Username",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 31,
                "ctor": "mlmodel",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmMLModelId",
                        "name": "_mlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' at creation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmTrainingDataSourceId",
                        "name": "_mlmTrainingDataSourceId",
                        "shape": "EntityId",
                        "locationName": "TrainingDataSourceId",
                        "documentation": "-- | The ID of the training 'DataSource'. The 'CreateMLModel' operation uses the 'TrainingDataSourceId'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmCreatedByIamUser",
                        "name": "_mlmCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account from which the 'MLModel' was created. The account type can\n-- be either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmCreatedAt",
                        "name": "_mlmCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'MLModel' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmLastUpdatedAt",
                        "name": "_mlmLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'MLModel'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmName",
                        "name": "_mlmName",
                        "shape": "MLModelName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmStatus",
                        "name": "_mlmStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The current status of an 'MLModel'. This element can have one of the following\n-- values:\n--\n-- PENDING - Amazon Machine Learning (Amazon ML) submitted a request to create\n-- an 'MLModel'. INPROGRESS - The creation process is underway. FAILED - The\n-- request to create an 'MLModel' did not run to completion. It is not usable. COMPLETED - The creation process completed successfully.\n-- DELETED - The 'MLModel' is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmSizeInBytes",
                        "name": "_mlmSizeInBytes",
                        "shape": "LongType",
                        "locationName": "SizeInBytes",
                        "documentation": null,
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmEndpointInfo",
                        "name": "_mlmEndpointInfo",
                        "shape": "RealtimeEndpointInfo",
                        "locationName": "EndpointInfo",
                        "documentation": "-- | The current endpoint of the 'MLModel'.",
                        "typeExposed": "Maybe RealtimeEndpointInfo",
                        "type": "Maybe RealtimeEndpointInfo"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "mlmTrainingParameters",
                        "name": "_mlmTrainingParameters",
                        "shape": "TrainingParameters",
                        "locationName": "TrainingParameters",
                        "documentation": "-- | A list of the training parameters in the 'MLModel'. The list is implemented as\n-- a map of key/value pairs.\n--\n-- The following is the current set of training parameters:\n--\n-- 'sgd.l1RegularizationAmount' - Coefficient regularization L1 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to zero, resulting in a sparse feature set. If you use\n-- this parameter, specify a small value, such as 1.0E-04 or 1.0E-08.\n--\n-- The value is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L1 normalization. The parameter cannot be used when 'L2' is specified.\n-- Use this parameter sparingly.\n--\n-- 'sgd.l2RegularizationAmount' - Coefficient regularization L2 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to small, nonzero values. If you use this parameter,\n-- specify a small value, such as 1.0E-04 or 1.0E-08.\n--\n-- The valus is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L2 normalization. This cannot be used when 'L1' is specified. Use this\n-- parameter sparingly.\n--\n-- 'sgd.maxPasses' - Number of times that the training process traverses the\n-- observations to build the 'MLModel'. The value is an integer that ranges from 1\n-- to 10000. The default value is 10.\n--\n-- 'sgd.maxMLModelSizeInBytes' - Maximum allowed size of the model. Depending on\n-- the input data, the model size might affect performance.\n--\n-- The value is an integer that ranges from 100000 to 2147483648. The default\n-- value is 33554432.\n--\n--",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmInputDataLocationS3",
                        "name": "_mlmInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmAlgorithm",
                        "name": "_mlmAlgorithm",
                        "shape": "Algorithm",
                        "locationName": "Algorithm",
                        "documentation": "-- | The algorithm used to train the 'MLModel'. The following algorithm is supported:\n--\n-- SGD -- Stochastic gradient descent. The goal of SGD is to minimize the\n-- gradient of the loss function.",
                        "typeExposed": "Maybe Algorithm",
                        "type": "Maybe Algorithm"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmMLModelType",
                        "name": "_mlmMLModelType",
                        "shape": "MLModelType",
                        "locationName": "MLModelType",
                        "documentation": "-- | Identifies the 'MLModel' category. The following are the available types:\n--\n-- REGRESSION - Produces a numeric result. For example, \"What listing price\n-- should a house have?\". BINARY - Produces one of two possible results. For\n-- example, \"Is this a child-friendly web site?\". MULTICLASS - Produces more\n-- than two possible results. For example, \"Is this a HIGH, LOW or MEDIUM risk\n-- trade?\".",
                        "typeExposed": "Maybe MLModelType",
                        "type": "Maybe MLModelType"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmScoreThreshold",
                        "name": "_mlmScoreThreshold",
                        "shape": "ScoreThreshold",
                        "locationName": "ScoreThreshold",
                        "documentation": null,
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmScoreThresholdLastUpdatedAt",
                        "name": "_mlmScoreThresholdLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "ScoreThresholdLastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'ScoreThreshold'. The time is expressed\n-- in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmMessage",
                        "name": "_mlmMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about accessing the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 28,
                "name": "MLModel",
                "locationPad": 28,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmMLModelId",
                        "name": "_mlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' at creation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmTrainingDataSourceId",
                        "name": "_mlmTrainingDataSourceId",
                        "shape": "EntityId",
                        "locationName": "TrainingDataSourceId",
                        "documentation": "-- | The ID of the training 'DataSource'. The 'CreateMLModel' operation uses the 'TrainingDataSourceId'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmCreatedByIamUser",
                        "name": "_mlmCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account from which the 'MLModel' was created. The account type can\n-- be either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmCreatedAt",
                        "name": "_mlmCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'MLModel' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmLastUpdatedAt",
                        "name": "_mlmLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'MLModel'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmName",
                        "name": "_mlmName",
                        "shape": "MLModelName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmStatus",
                        "name": "_mlmStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The current status of an 'MLModel'. This element can have one of the following\n-- values:\n--\n-- PENDING - Amazon Machine Learning (Amazon ML) submitted a request to create\n-- an 'MLModel'. INPROGRESS - The creation process is underway. FAILED - The\n-- request to create an 'MLModel' did not run to completion. It is not usable. COMPLETED - The creation process completed successfully.\n-- DELETED - The 'MLModel' is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmSizeInBytes",
                        "name": "_mlmSizeInBytes",
                        "shape": "LongType",
                        "locationName": "SizeInBytes",
                        "documentation": null,
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmEndpointInfo",
                        "name": "_mlmEndpointInfo",
                        "shape": "RealtimeEndpointInfo",
                        "locationName": "EndpointInfo",
                        "documentation": "-- | The current endpoint of the 'MLModel'.",
                        "typeExposed": "Maybe RealtimeEndpointInfo",
                        "type": "Maybe RealtimeEndpointInfo"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "mlmTrainingParameters",
                        "name": "_mlmTrainingParameters",
                        "shape": "TrainingParameters",
                        "locationName": "TrainingParameters",
                        "documentation": "-- | A list of the training parameters in the 'MLModel'. The list is implemented as\n-- a map of key/value pairs.\n--\n-- The following is the current set of training parameters:\n--\n-- 'sgd.l1RegularizationAmount' - Coefficient regularization L1 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to zero, resulting in a sparse feature set. If you use\n-- this parameter, specify a small value, such as 1.0E-04 or 1.0E-08.\n--\n-- The value is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L1 normalization. The parameter cannot be used when 'L2' is specified.\n-- Use this parameter sparingly.\n--\n-- 'sgd.l2RegularizationAmount' - Coefficient regularization L2 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to small, nonzero values. If you use this parameter,\n-- specify a small value, such as 1.0E-04 or 1.0E-08.\n--\n-- The valus is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L2 normalization. This cannot be used when 'L1' is specified. Use this\n-- parameter sparingly.\n--\n-- 'sgd.maxPasses' - Number of times that the training process traverses the\n-- observations to build the 'MLModel'. The value is an integer that ranges from 1\n-- to 10000. The default value is 10.\n--\n-- 'sgd.maxMLModelSizeInBytes' - Maximum allowed size of the model. Depending on\n-- the input data, the model size might affect performance.\n--\n-- The value is an integer that ranges from 100000 to 2147483648. The default\n-- value is 33554432.\n--\n--",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmInputDataLocationS3",
                        "name": "_mlmInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmAlgorithm",
                        "name": "_mlmAlgorithm",
                        "shape": "Algorithm",
                        "locationName": "Algorithm",
                        "documentation": "-- | The algorithm used to train the 'MLModel'. The following algorithm is supported:\n--\n-- SGD -- Stochastic gradient descent. The goal of SGD is to minimize the\n-- gradient of the loss function.",
                        "typeExposed": "Maybe Algorithm",
                        "type": "Maybe Algorithm"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmMLModelType",
                        "name": "_mlmMLModelType",
                        "shape": "MLModelType",
                        "locationName": "MLModelType",
                        "documentation": "-- | Identifies the 'MLModel' category. The following are the available types:\n--\n-- REGRESSION - Produces a numeric result. For example, \"What listing price\n-- should a house have?\". BINARY - Produces one of two possible results. For\n-- example, \"Is this a child-friendly web site?\". MULTICLASS - Produces more\n-- than two possible results. For example, \"Is this a HIGH, LOW or MEDIUM risk\n-- trade?\".",
                        "typeExposed": "Maybe MLModelType",
                        "type": "Maybe MLModelType"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmScoreThreshold",
                        "name": "_mlmScoreThreshold",
                        "shape": "ScoreThreshold",
                        "locationName": "ScoreThreshold",
                        "documentation": null,
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmScoreThresholdLastUpdatedAt",
                        "name": "_mlmScoreThresholdLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "ScoreThresholdLastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'ScoreThreshold'. The time is expressed\n-- in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmMessage",
                        "name": "_mlmMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about accessing the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmAlgorithm",
                        "name": "_mlmAlgorithm",
                        "shape": "Algorithm",
                        "locationName": "Algorithm",
                        "documentation": "-- | The algorithm used to train the 'MLModel'. The following algorithm is supported:\n--\n-- SGD -- Stochastic gradient descent. The goal of SGD is to minimize the\n-- gradient of the loss function.",
                        "typeExposed": "Maybe Algorithm",
                        "type": "Maybe Algorithm"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmCreatedAt",
                        "name": "_mlmCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'MLModel' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmCreatedByIamUser",
                        "name": "_mlmCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account from which the 'MLModel' was created. The account type can\n-- be either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmEndpointInfo",
                        "name": "_mlmEndpointInfo",
                        "shape": "RealtimeEndpointInfo",
                        "locationName": "EndpointInfo",
                        "documentation": "-- | The current endpoint of the 'MLModel'.",
                        "typeExposed": "Maybe RealtimeEndpointInfo",
                        "type": "Maybe RealtimeEndpointInfo"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmInputDataLocationS3",
                        "name": "_mlmInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmLastUpdatedAt",
                        "name": "_mlmLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'MLModel'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmMLModelId",
                        "name": "_mlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' at creation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmMLModelType",
                        "name": "_mlmMLModelType",
                        "shape": "MLModelType",
                        "locationName": "MLModelType",
                        "documentation": "-- | Identifies the 'MLModel' category. The following are the available types:\n--\n-- REGRESSION - Produces a numeric result. For example, \"What listing price\n-- should a house have?\". BINARY - Produces one of two possible results. For\n-- example, \"Is this a child-friendly web site?\". MULTICLASS - Produces more\n-- than two possible results. For example, \"Is this a HIGH, LOW or MEDIUM risk\n-- trade?\".",
                        "typeExposed": "Maybe MLModelType",
                        "type": "Maybe MLModelType"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmMessage",
                        "name": "_mlmMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about accessing the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmName",
                        "name": "_mlmName",
                        "shape": "MLModelName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmScoreThreshold",
                        "name": "_mlmScoreThreshold",
                        "shape": "ScoreThreshold",
                        "locationName": "ScoreThreshold",
                        "documentation": null,
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmScoreThresholdLastUpdatedAt",
                        "name": "_mlmScoreThresholdLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "ScoreThresholdLastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'ScoreThreshold'. The time is expressed\n-- in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmSizeInBytes",
                        "name": "_mlmSizeInBytes",
                        "shape": "LongType",
                        "locationName": "SizeInBytes",
                        "documentation": null,
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmStatus",
                        "name": "_mlmStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The current status of an 'MLModel'. This element can have one of the following\n-- values:\n--\n-- PENDING - Amazon Machine Learning (Amazon ML) submitted a request to create\n-- an 'MLModel'. INPROGRESS - The creation process is underway. FAILED - The\n-- request to create an 'MLModel' did not run to completion. It is not usable. COMPLETED - The creation process completed successfully.\n-- DELETED - The 'MLModel' is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "mlmTrainingDataSourceId",
                        "name": "_mlmTrainingDataSourceId",
                        "shape": "EntityId",
                        "locationName": "TrainingDataSourceId",
                        "documentation": "-- | The ID of the training 'DataSource'. The 'CreateMLModel' operation uses the 'TrainingDataSourceId'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "mlmTrainingParameters",
                        "name": "_mlmTrainingParameters",
                        "shape": "TrainingParameters",
                        "locationName": "TrainingParameters",
                        "documentation": "-- | A list of the training parameters in the 'MLModel'. The list is implemented as\n-- a map of key/value pairs.\n--\n-- The following is the current set of training parameters:\n--\n-- 'sgd.l1RegularizationAmount' - Coefficient regularization L1 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to zero, resulting in a sparse feature set. If you use\n-- this parameter, specify a small value, such as 1.0E-04 or 1.0E-08.\n--\n-- The value is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L1 normalization. The parameter cannot be used when 'L2' is specified.\n-- Use this parameter sparingly.\n--\n-- 'sgd.l2RegularizationAmount' - Coefficient regularization L2 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to small, nonzero values. If you use this parameter,\n-- specify a small value, such as 1.0E-04 or 1.0E-08.\n--\n-- The valus is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L2 normalization. This cannot be used when 'L1' is specified. Use this\n-- parameter sparingly.\n--\n-- 'sgd.maxPasses' - Number of times that the training process traverses the\n-- observations to build the 'MLModel'. The value is an integer that ranges from 1\n-- to 10000. The default value is 10.\n--\n-- 'sgd.maxMLModelSizeInBytes' - Maximum allowed size of the model. Depending on\n-- the input data, the model size might affect performance.\n--\n-- The value is an integer that ranges from 100000 to 2147483648. The default\n-- value is 33554432.\n--\n--",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 30,
                "ctor": "batchPrediction",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpBatchPredictionId",
                        "name": "_bpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | The ID assigned to the 'BatchPrediction' at creation. This value should be\n-- identical to the value of the 'BatchPredictionID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpMLModelId",
                        "name": "_bpMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that generated predictions for the 'BatchPrediction'\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpBatchPredictionDataSourceId",
                        "name": "_bpBatchPredictionDataSourceId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' that points to the group of observations to predict.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpInputDataLocationS3",
                        "name": "_bpInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpCreatedByIamUser",
                        "name": "_bpCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account that invoked the 'BatchPrediction'. The account type can\n-- be either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpCreatedAt",
                        "name": "_bpCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'BatchPrediction' was created. The time is expressed in epoch\n-- time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpLastUpdatedAt",
                        "name": "_bpLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'BatchPrediction'. The time is\n-- expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpName",
                        "name": "_bpName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'BatchPrediction'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpStatus",
                        "name": "_bpStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The status of the 'BatchPrediction'. This element can have one of the following\n-- values:\n--\n-- 'PENDING' - Amazon Machine Learning (Amazon ML) submitted a request to\n-- generate predictions for a batch of observations.  'INPROGRESS' - The process\n-- is underway.  'FAILED' - The request to peform a batch prediction did not run\n-- to completion. It is not usable.  'COMPLETED' - The batch prediction process\n-- completed successfully.  'DELETED' - The 'BatchPrediction' is marked as deleted.\n-- It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpOutputUri",
                        "name": "_bpOutputUri",
                        "shape": "S3Url",
                        "locationName": "OutputUri",
                        "documentation": "-- | The location of an Amazon S3 bucket or directory to receive the operation\n-- results. The following substrings are not allowed in the s3 key portion of\n-- the \"outputURI\" field: ':', '//', '/./', '/../'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpMessage",
                        "name": "_bpMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about processing the batch\n-- prediction request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 28,
                "name": "BatchPrediction",
                "locationPad": 28,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpBatchPredictionId",
                        "name": "_bpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | The ID assigned to the 'BatchPrediction' at creation. This value should be\n-- identical to the value of the 'BatchPredictionID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpMLModelId",
                        "name": "_bpMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that generated predictions for the 'BatchPrediction'\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpBatchPredictionDataSourceId",
                        "name": "_bpBatchPredictionDataSourceId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' that points to the group of observations to predict.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpInputDataLocationS3",
                        "name": "_bpInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpCreatedByIamUser",
                        "name": "_bpCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account that invoked the 'BatchPrediction'. The account type can\n-- be either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpCreatedAt",
                        "name": "_bpCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'BatchPrediction' was created. The time is expressed in epoch\n-- time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpLastUpdatedAt",
                        "name": "_bpLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'BatchPrediction'. The time is\n-- expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpName",
                        "name": "_bpName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'BatchPrediction'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpStatus",
                        "name": "_bpStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The status of the 'BatchPrediction'. This element can have one of the following\n-- values:\n--\n-- 'PENDING' - Amazon Machine Learning (Amazon ML) submitted a request to\n-- generate predictions for a batch of observations.  'INPROGRESS' - The process\n-- is underway.  'FAILED' - The request to peform a batch prediction did not run\n-- to completion. It is not usable.  'COMPLETED' - The batch prediction process\n-- completed successfully.  'DELETED' - The 'BatchPrediction' is marked as deleted.\n-- It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpOutputUri",
                        "name": "_bpOutputUri",
                        "shape": "S3Url",
                        "locationName": "OutputUri",
                        "documentation": "-- | The location of an Amazon S3 bucket or directory to receive the operation\n-- results. The following substrings are not allowed in the s3 key portion of\n-- the \"outputURI\" field: ':', '//', '/./', '/../'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpMessage",
                        "name": "_bpMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about processing the batch\n-- prediction request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpBatchPredictionDataSourceId",
                        "name": "_bpBatchPredictionDataSourceId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' that points to the group of observations to predict.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpBatchPredictionId",
                        "name": "_bpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | The ID assigned to the 'BatchPrediction' at creation. This value should be\n-- identical to the value of the 'BatchPredictionID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpCreatedAt",
                        "name": "_bpCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'BatchPrediction' was created. The time is expressed in epoch\n-- time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpCreatedByIamUser",
                        "name": "_bpCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account that invoked the 'BatchPrediction'. The account type can\n-- be either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpInputDataLocationS3",
                        "name": "_bpInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpLastUpdatedAt",
                        "name": "_bpLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'BatchPrediction'. The time is\n-- expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpMLModelId",
                        "name": "_bpMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that generated predictions for the 'BatchPrediction'\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpMessage",
                        "name": "_bpMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about processing the batch\n-- prediction request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpName",
                        "name": "_bpName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'BatchPrediction'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpOutputUri",
                        "name": "_bpOutputUri",
                        "shape": "S3Url",
                        "locationName": "OutputUri",
                        "documentation": "-- | The location of an Amazon S3 bucket or directory to receive the operation\n-- results. The following substrings are not allowed in the s3 key portion of\n-- the \"outputURI\" field: ':', '//', '/./', '/../'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "bpStatus",
                        "name": "_bpStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The status of the 'BatchPrediction'. This element can have one of the following\n-- values:\n--\n-- 'PENDING' - Amazon Machine Learning (Amazon ML) submitted a request to\n-- generate predictions for a batch of observations.  'INPROGRESS' - The process\n-- is underway.  'FAILED' - The request to peform a batch prediction did not run\n-- to completion. It is not usable.  'COMPLETED' - The batch prediction process\n-- completed successfully.  'DELETED' - The 'BatchPrediction' is marked as deleted.\n-- It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Dsc": "dsc",
                    "Asc": "asc"
                },
                "valuePad": 4,
                "name": "SortOrder",
                "type": "nullary",
                "branchPad": 3
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Sgd": "sgd"
                },
                "valuePad": 4,
                "name": "Algorithm",
                "type": "nullary",
                "branchPad": 3
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "ESInprogress": "INPROGRESS",
                    "ESFailed": "FAILED",
                    "ESCompleted": "COMPLETED",
                    "ESDeleted": "DELETED",
                    "ESPending": "PENDING"
                },
                "valuePad": 11,
                "name": "EntityStatus",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 20,
                "ctor": "dataSource",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsDataSourceId",
                        "name": "_dsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID that is assigned to the 'DataSource' during creation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsDataLocationS3",
                        "name": "_dsDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "DataLocationS3",
                        "documentation": "-- | The location and name of the data in Amazon Simple Storage Service (Amazon\n-- S3) that is used by a 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsDataRearrangement",
                        "name": "_dsDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | A JSON string that represents the splitting requirement of a 'Datasource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsCreatedByIamUser",
                        "name": "_dsCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account from which the 'DataSource' was created. The account type\n-- can be either an AWS root account or an AWS Identity and Access Management\n-- (IAM) user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsCreatedAt",
                        "name": "_dsCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'DataSource' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsLastUpdatedAt",
                        "name": "_dsLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'BatchPrediction'. The time is\n-- expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsDataSizeInBytes",
                        "name": "_dsDataSizeInBytes",
                        "shape": "LongType",
                        "locationName": "DataSizeInBytes",
                        "documentation": "-- | The total number of observations contained in the data files that the 'DataSource' references.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsNumberOfFiles",
                        "name": "_dsNumberOfFiles",
                        "shape": "LongType",
                        "locationName": "NumberOfFiles",
                        "documentation": "-- | The number of data files referenced by the 'DataSource'.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsName",
                        "name": "_dsName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsStatus",
                        "name": "_dsStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The current status of the 'DataSource'. This element can have one of the\n-- following values:\n--\n-- PENDING - Amazon Machine Learning (Amazon ML) submitted a request to create\n-- a 'DataSource'. INPROGRESS - The creation process is underway. FAILED - The\n-- request to create a 'DataSource' did not run to completion. It is not usable. COMPLETED - The creation process completed successfully.\n-- DELETED - The 'DataSource' is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsMessage",
                        "name": "_dsMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about creating the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsRedshiftMetadata",
                        "name": "_dsRedshiftMetadata",
                        "shape": "RedshiftMetadata",
                        "locationName": "RedshiftMetadata",
                        "documentation": null,
                        "typeExposed": "Maybe RedshiftMetadata",
                        "type": "Maybe RedshiftMetadata"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsRDSMetadata",
                        "name": "_dsRDSMetadata",
                        "shape": "RDSMetadata",
                        "locationName": "RDSMetadata",
                        "documentation": null,
                        "typeExposed": "Maybe RDSMetadata",
                        "type": "Maybe RDSMetadata"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsRoleARN",
                        "name": "_dsRoleARN",
                        "shape": "RoleARN",
                        "locationName": "RoleARN",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsComputeStatistics",
                        "name": "_dsComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The parameter is 'true' if statistics need to be generated from the\n-- observation data.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 18,
                "name": "DataSource",
                "locationPad": 18,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsDataSourceId",
                        "name": "_dsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID that is assigned to the 'DataSource' during creation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsDataLocationS3",
                        "name": "_dsDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "DataLocationS3",
                        "documentation": "-- | The location and name of the data in Amazon Simple Storage Service (Amazon\n-- S3) that is used by a 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsDataRearrangement",
                        "name": "_dsDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | A JSON string that represents the splitting requirement of a 'Datasource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsCreatedByIamUser",
                        "name": "_dsCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account from which the 'DataSource' was created. The account type\n-- can be either an AWS root account or an AWS Identity and Access Management\n-- (IAM) user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsCreatedAt",
                        "name": "_dsCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'DataSource' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsLastUpdatedAt",
                        "name": "_dsLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'BatchPrediction'. The time is\n-- expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsDataSizeInBytes",
                        "name": "_dsDataSizeInBytes",
                        "shape": "LongType",
                        "locationName": "DataSizeInBytes",
                        "documentation": "-- | The total number of observations contained in the data files that the 'DataSource' references.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsNumberOfFiles",
                        "name": "_dsNumberOfFiles",
                        "shape": "LongType",
                        "locationName": "NumberOfFiles",
                        "documentation": "-- | The number of data files referenced by the 'DataSource'.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsName",
                        "name": "_dsName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsStatus",
                        "name": "_dsStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The current status of the 'DataSource'. This element can have one of the\n-- following values:\n--\n-- PENDING - Amazon Machine Learning (Amazon ML) submitted a request to create\n-- a 'DataSource'. INPROGRESS - The creation process is underway. FAILED - The\n-- request to create a 'DataSource' did not run to completion. It is not usable. COMPLETED - The creation process completed successfully.\n-- DELETED - The 'DataSource' is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsMessage",
                        "name": "_dsMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about creating the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsRedshiftMetadata",
                        "name": "_dsRedshiftMetadata",
                        "shape": "RedshiftMetadata",
                        "locationName": "RedshiftMetadata",
                        "documentation": null,
                        "typeExposed": "Maybe RedshiftMetadata",
                        "type": "Maybe RedshiftMetadata"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsRDSMetadata",
                        "name": "_dsRDSMetadata",
                        "shape": "RDSMetadata",
                        "locationName": "RDSMetadata",
                        "documentation": null,
                        "typeExposed": "Maybe RDSMetadata",
                        "type": "Maybe RDSMetadata"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsRoleARN",
                        "name": "_dsRoleARN",
                        "shape": "RoleARN",
                        "locationName": "RoleARN",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsComputeStatistics",
                        "name": "_dsComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The parameter is 'true' if statistics need to be generated from the\n-- observation data.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsComputeStatistics",
                        "name": "_dsComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The parameter is 'true' if statistics need to be generated from the\n-- observation data.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsCreatedAt",
                        "name": "_dsCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'DataSource' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsCreatedByIamUser",
                        "name": "_dsCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account from which the 'DataSource' was created. The account type\n-- can be either an AWS root account or an AWS Identity and Access Management\n-- (IAM) user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsDataLocationS3",
                        "name": "_dsDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "DataLocationS3",
                        "documentation": "-- | The location and name of the data in Amazon Simple Storage Service (Amazon\n-- S3) that is used by a 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsDataRearrangement",
                        "name": "_dsDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | A JSON string that represents the splitting requirement of a 'Datasource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsDataSizeInBytes",
                        "name": "_dsDataSizeInBytes",
                        "shape": "LongType",
                        "locationName": "DataSizeInBytes",
                        "documentation": "-- | The total number of observations contained in the data files that the 'DataSource' references.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsDataSourceId",
                        "name": "_dsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID that is assigned to the 'DataSource' during creation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsLastUpdatedAt",
                        "name": "_dsLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'BatchPrediction'. The time is\n-- expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsMessage",
                        "name": "_dsMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about creating the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsName",
                        "name": "_dsName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsNumberOfFiles",
                        "name": "_dsNumberOfFiles",
                        "shape": "LongType",
                        "locationName": "NumberOfFiles",
                        "documentation": "-- | The number of data files referenced by the 'DataSource'.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsRDSMetadata",
                        "name": "_dsRDSMetadata",
                        "shape": "RDSMetadata",
                        "locationName": "RDSMetadata",
                        "documentation": null,
                        "typeExposed": "Maybe RDSMetadata",
                        "type": "Maybe RDSMetadata"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsRedshiftMetadata",
                        "name": "_dsRedshiftMetadata",
                        "shape": "RedshiftMetadata",
                        "locationName": "RedshiftMetadata",
                        "documentation": null,
                        "typeExposed": "Maybe RedshiftMetadata",
                        "type": "Maybe RedshiftMetadata"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsRoleARN",
                        "name": "_dsRoleARN",
                        "shape": "RoleARN",
                        "locationName": "RoleARN",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dsStatus",
                        "name": "_dsStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The current status of the 'DataSource'. This element can have one of the\n-- following values:\n--\n-- PENDING - Amazon Machine Learning (Amazon ML) submitted a request to create\n-- a 'DataSource'. INPROGRESS - The creation process is underway. FAILED - The\n-- request to create a 'DataSource' did not run to completion. It is not usable. COMPLETED - The creation process completed successfully.\n-- DELETED - The 'DataSource' is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 23,
                "ctor": "rdsdatabase",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdInstanceIdentifier",
                        "name": "_rdsdInstanceIdentifier",
                        "shape": "RDSInstanceIdentifier",
                        "locationName": "InstanceIdentifier",
                        "documentation": "-- | The ID of an RDS DB instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdDatabaseName",
                        "name": "_rdsdDatabaseName",
                        "shape": "RDSDatabaseName",
                        "locationName": "DatabaseName",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdInstanceIdentifier",
                        "name": "_rdsdInstanceIdentifier",
                        "shape": "RDSInstanceIdentifier",
                        "locationName": "InstanceIdentifier",
                        "documentation": "-- | The ID of an RDS DB instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdDatabaseName",
                        "name": "_rdsdDatabaseName",
                        "shape": "RDSDatabaseName",
                        "locationName": "DatabaseName",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 19,
                "name": "RDSDatabase",
                "locationPad": 19,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdDatabaseName",
                        "name": "_rdsdDatabaseName",
                        "shape": "RDSDatabaseName",
                        "locationName": "DatabaseName",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdInstanceIdentifier",
                        "name": "_rdsdInstanceIdentifier",
                        "shape": "RDSInstanceIdentifier",
                        "locationName": "InstanceIdentifier",
                        "documentation": "-- | The ID of an RDS DB instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "fieldPad": 14,
                "ctor": "rdsdatabaseCredentials",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdcUsername",
                        "name": "_rdsdcUsername",
                        "shape": "RDSDatabaseUsername",
                        "locationName": "Username",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdcPassword",
                        "name": "_rdsdcPassword",
                        "shape": "RDSDatabasePassword",
                        "locationName": "Password",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdcUsername",
                        "name": "_rdsdcUsername",
                        "shape": "RDSDatabaseUsername",
                        "locationName": "Username",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdcPassword",
                        "name": "_rdsdcPassword",
                        "shape": "RDSDatabasePassword",
                        "locationName": "Password",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 9,
                "name": "RDSDatabaseCredentials",
                "locationPad": 9,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdcPassword",
                        "name": "_rdsdcPassword",
                        "shape": "RDSDatabasePassword",
                        "locationName": "Password",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsdcUsername",
                        "name": "_rdsdcUsername",
                        "shape": "RDSDatabaseUsername",
                        "locationName": "Username",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "MLMFVRealtimeEndpointStatus": "RealtimeEndpointStatus",
                    "MLMFVMLModelType": "MLModelType",
                    "MLMFVTrainingDataURI": "TrainingDataURI",
                    "MLMFVStatus": "Status",
                    "MLMFVIAMUser": "IAMUser",
                    "MLMFVCreatedAt": "CreatedAt",
                    "MLMFVTrainingDataSourceId": "TrainingDataSourceId",
                    "MLMFVAlgorithm": "Algorithm",
                    "MLMFVName": "Name",
                    "MLMFVLastUpdatedAt": "LastUpdatedAt"
                },
                "valuePad": 23,
                "name": "MLModelFilterVariable",
                "type": "nullary",
                "branchPad": 27
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "DataStatus": "Status",
                    "DataIAMUser": "IAMUser",
                    "DataLastUpdatedAt": "LastUpdatedAt",
                    "DataCreatedAt": "CreatedAt",
                    "DataName": "Name",
                    "DataDataLocationS3": "DataLocationS3"
                },
                "valuePad": 15,
                "name": "DataSourceFilterVariable",
                "type": "nullary",
                "branchPad": 18
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 23,
                "ctor": "redshiftDataSpec",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsDatabaseInformation",
                        "name": "_rdsDatabaseInformation",
                        "shape": "RedshiftDatabase",
                        "locationName": "DatabaseInformation",
                        "documentation": "-- | Describes the 'DatabaseName' and 'ClusterIdentifier' for an Amazon Redshift 'DataSource'.",
                        "typeExposed": "RedshiftDatabase",
                        "type": "RedshiftDatabase"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsSelectSqlQuery",
                        "name": "_rdsSelectSqlQuery",
                        "shape": "RedshiftSelectSqlQuery",
                        "locationName": "SelectSqlQuery",
                        "documentation": "-- | Describes the SQL Query to execute on an Amazon Redshift database for an\n-- Amazon Redshift 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsDatabaseCredentials",
                        "name": "_rdsDatabaseCredentials",
                        "shape": "RedshiftDatabaseCredentials",
                        "locationName": "DatabaseCredentials",
                        "documentation": "-- | Describes AWS Identity and Access Management (IAM) credentials that are used\n-- connect to the Amazon Redshift database.",
                        "typeExposed": "RedshiftDatabaseCredentials",
                        "type": "RedshiftDatabaseCredentials"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsS3StagingLocation",
                        "name": "_rdsS3StagingLocation",
                        "shape": "S3Url",
                        "locationName": "S3StagingLocation",
                        "documentation": "-- | Describes an Amazon S3 location to store the result set of the 'SelectSqlQuery'\n-- query.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsDataRearrangement",
                        "name": "_rdsDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | Describes the splitting specifications for a 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsDataSchema",
                        "name": "_rdsDataSchema",
                        "shape": "DataSchema",
                        "locationName": "DataSchema",
                        "documentation": "-- | Describes the schema for an Amazon Redshift 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsDataSchemaUri",
                        "name": "_rdsDataSchemaUri",
                        "shape": "S3Url",
                        "locationName": "DataSchemaUri",
                        "documentation": "-- | Describes the schema location for an Amazon Redshift 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsDatabaseInformation",
                        "name": "_rdsDatabaseInformation",
                        "shape": "RedshiftDatabase",
                        "locationName": "DatabaseInformation",
                        "documentation": "-- | Describes the 'DatabaseName' and 'ClusterIdentifier' for an Amazon Redshift 'DataSource'.",
                        "typeExposed": "RedshiftDatabase",
                        "type": "RedshiftDatabase"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsSelectSqlQuery",
                        "name": "_rdsSelectSqlQuery",
                        "shape": "RedshiftSelectSqlQuery",
                        "locationName": "SelectSqlQuery",
                        "documentation": "-- | Describes the SQL Query to execute on an Amazon Redshift database for an\n-- Amazon Redshift 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsDatabaseCredentials",
                        "name": "_rdsDatabaseCredentials",
                        "shape": "RedshiftDatabaseCredentials",
                        "locationName": "DatabaseCredentials",
                        "documentation": "-- | Describes AWS Identity and Access Management (IAM) credentials that are used\n-- connect to the Amazon Redshift database.",
                        "typeExposed": "RedshiftDatabaseCredentials",
                        "type": "RedshiftDatabaseCredentials"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsS3StagingLocation",
                        "name": "_rdsS3StagingLocation",
                        "shape": "S3Url",
                        "locationName": "S3StagingLocation",
                        "documentation": "-- | Describes an Amazon S3 location to store the result set of the 'SelectSqlQuery'\n-- query.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 20,
                "name": "RedshiftDataSpec",
                "locationPad": 20,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsDataRearrangement",
                        "name": "_rdsDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | Describes the splitting specifications for a 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsDataSchema",
                        "name": "_rdsDataSchema",
                        "shape": "DataSchema",
                        "locationName": "DataSchema",
                        "documentation": "-- | Describes the schema for an Amazon Redshift 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsDataSchemaUri",
                        "name": "_rdsDataSchemaUri",
                        "shape": "S3Url",
                        "locationName": "DataSchemaUri",
                        "documentation": "-- | Describes the schema location for an Amazon Redshift 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsDataRearrangement",
                        "name": "_rdsDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | Describes the splitting specifications for a 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsDataSchema",
                        "name": "_rdsDataSchema",
                        "shape": "DataSchema",
                        "locationName": "DataSchema",
                        "documentation": "-- | Describes the schema for an Amazon Redshift 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rdsDataSchemaUri",
                        "name": "_rdsDataSchemaUri",
                        "shape": "S3Url",
                        "locationName": "DataSchemaUri",
                        "documentation": "-- | Describes the schema location for an Amazon Redshift 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsDatabaseCredentials",
                        "name": "_rdsDatabaseCredentials",
                        "shape": "RedshiftDatabaseCredentials",
                        "locationName": "DatabaseCredentials",
                        "documentation": "-- | Describes AWS Identity and Access Management (IAM) credentials that are used\n-- connect to the Amazon Redshift database.",
                        "typeExposed": "RedshiftDatabaseCredentials",
                        "type": "RedshiftDatabaseCredentials"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsDatabaseInformation",
                        "name": "_rdsDatabaseInformation",
                        "shape": "RedshiftDatabase",
                        "locationName": "DatabaseInformation",
                        "documentation": "-- | Describes the 'DatabaseName' and 'ClusterIdentifier' for an Amazon Redshift 'DataSource'.",
                        "typeExposed": "RedshiftDatabase",
                        "type": "RedshiftDatabase"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsS3StagingLocation",
                        "name": "_rdsS3StagingLocation",
                        "shape": "S3Url",
                        "locationName": "S3StagingLocation",
                        "documentation": "-- | Describes an Amazon S3 location to store the result set of the 'SelectSqlQuery'\n-- query.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "rdsSelectSqlQuery",
                        "name": "_rdsSelectSqlQuery",
                        "shape": "RedshiftSelectSqlQuery",
                        "locationName": "SelectSqlQuery",
                        "documentation": "-- | Describes the SQL Query to execute on an Amazon Redshift database for an\n-- Amazon Redshift 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "evaluation",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eEvaluationId",
                        "name": "_eEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The ID that is assigned to the 'Evaluation' at creation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eMLModelId",
                        "name": "_eMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that is the focus of the evaluation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eEvaluationDataSourceId",
                        "name": "_eEvaluationDataSourceId",
                        "shape": "EntityId",
                        "locationName": "EvaluationDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' that is used to evaluate the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eInputDataLocationS3",
                        "name": "_eInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location and name of the data in Amazon Simple Storage Server (Amazon S3)\n-- that is used in the evaluation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eCreatedByIamUser",
                        "name": "_eCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account that invoked the evaluation. The account type can be\n-- either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eCreatedAt",
                        "name": "_eCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'Evaluation' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eLastUpdatedAt",
                        "name": "_eLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'Evaluation'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eName",
                        "name": "_eName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'Evaluation'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eStatus",
                        "name": "_eStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The status of the evaluation. This element can have one of the following\n-- values:\n--\n-- 'PENDING' - Amazon Machine Learning (Amazon ML) submitted a request to\n-- evaluate an 'MLModel'.  'INPROGRESS' - The evaluation is underway.  'FAILED' - The\n-- request to evaluate an 'MLModel' did not run to completion. It is not usable.  'COMPLETED' - The evaluation process completed successfully.  'DELETED' - The 'Evaluation'\n-- is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ePerformanceMetrics",
                        "name": "_ePerformanceMetrics",
                        "shape": "PerformanceMetrics",
                        "locationName": "PerformanceMetrics",
                        "documentation": "-- | Measurements of how well the 'MLModel' performed, using observations referenced\n-- by the 'DataSource'. One of the following metrics is returned, based on the\n-- type of the MLModel:\n--\n-- BinaryAUC: A binary 'MLModel' uses the Area Under the Curve (AUC) technique\n-- to measure performance.\n--\n-- RegressionRMSE: A regression 'MLModel' uses the Root Mean Square Error\n-- (RMSE) technique to measure performance. RMSE measures the difference between\n-- predicted and actual values for a single variable.\n--\n-- MulticlassAvgFScore: A multiclass 'MLModel' uses the F1 score technique to\n-- measure performance.\n--\n-- For more information about performance metrics, please see the \u003chttp://docs.aws.amazon.com/machine-learning/latest/dg AmazonMachine Learning Developer Guide\u003e.",
                        "typeExposed": "Maybe PerformanceMetrics",
                        "type": "Maybe PerformanceMetrics"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eMessage",
                        "name": "_eMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about evaluating the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 23,
                "name": "Evaluation",
                "locationPad": 23,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eEvaluationId",
                        "name": "_eEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The ID that is assigned to the 'Evaluation' at creation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eMLModelId",
                        "name": "_eMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that is the focus of the evaluation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eEvaluationDataSourceId",
                        "name": "_eEvaluationDataSourceId",
                        "shape": "EntityId",
                        "locationName": "EvaluationDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' that is used to evaluate the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eInputDataLocationS3",
                        "name": "_eInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location and name of the data in Amazon Simple Storage Server (Amazon S3)\n-- that is used in the evaluation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eCreatedByIamUser",
                        "name": "_eCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account that invoked the evaluation. The account type can be\n-- either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eCreatedAt",
                        "name": "_eCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'Evaluation' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eLastUpdatedAt",
                        "name": "_eLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'Evaluation'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eName",
                        "name": "_eName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'Evaluation'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eStatus",
                        "name": "_eStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The status of the evaluation. This element can have one of the following\n-- values:\n--\n-- 'PENDING' - Amazon Machine Learning (Amazon ML) submitted a request to\n-- evaluate an 'MLModel'.  'INPROGRESS' - The evaluation is underway.  'FAILED' - The\n-- request to evaluate an 'MLModel' did not run to completion. It is not usable.  'COMPLETED' - The evaluation process completed successfully.  'DELETED' - The 'Evaluation'\n-- is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ePerformanceMetrics",
                        "name": "_ePerformanceMetrics",
                        "shape": "PerformanceMetrics",
                        "locationName": "PerformanceMetrics",
                        "documentation": "-- | Measurements of how well the 'MLModel' performed, using observations referenced\n-- by the 'DataSource'. One of the following metrics is returned, based on the\n-- type of the MLModel:\n--\n-- BinaryAUC: A binary 'MLModel' uses the Area Under the Curve (AUC) technique\n-- to measure performance.\n--\n-- RegressionRMSE: A regression 'MLModel' uses the Root Mean Square Error\n-- (RMSE) technique to measure performance. RMSE measures the difference between\n-- predicted and actual values for a single variable.\n--\n-- MulticlassAvgFScore: A multiclass 'MLModel' uses the F1 score technique to\n-- measure performance.\n--\n-- For more information about performance metrics, please see the \u003chttp://docs.aws.amazon.com/machine-learning/latest/dg AmazonMachine Learning Developer Guide\u003e.",
                        "typeExposed": "Maybe PerformanceMetrics",
                        "type": "Maybe PerformanceMetrics"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eMessage",
                        "name": "_eMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about evaluating the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eCreatedAt",
                        "name": "_eCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'Evaluation' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eCreatedByIamUser",
                        "name": "_eCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account that invoked the evaluation. The account type can be\n-- either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eEvaluationDataSourceId",
                        "name": "_eEvaluationDataSourceId",
                        "shape": "EntityId",
                        "locationName": "EvaluationDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' that is used to evaluate the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eEvaluationId",
                        "name": "_eEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The ID that is assigned to the 'Evaluation' at creation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eInputDataLocationS3",
                        "name": "_eInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location and name of the data in Amazon Simple Storage Server (Amazon S3)\n-- that is used in the evaluation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eLastUpdatedAt",
                        "name": "_eLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'Evaluation'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eMLModelId",
                        "name": "_eMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that is the focus of the evaluation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eMessage",
                        "name": "_eMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about evaluating the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eName",
                        "name": "_eName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'Evaluation'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ePerformanceMetrics",
                        "name": "_ePerformanceMetrics",
                        "shape": "PerformanceMetrics",
                        "locationName": "PerformanceMetrics",
                        "documentation": "-- | Measurements of how well the 'MLModel' performed, using observations referenced\n-- by the 'DataSource'. One of the following metrics is returned, based on the\n-- type of the MLModel:\n--\n-- BinaryAUC: A binary 'MLModel' uses the Area Under the Curve (AUC) technique\n-- to measure performance.\n--\n-- RegressionRMSE: A regression 'MLModel' uses the Root Mean Square Error\n-- (RMSE) technique to measure performance. RMSE measures the difference between\n-- predicted and actual values for a single variable.\n--\n-- MulticlassAvgFScore: A multiclass 'MLModel' uses the F1 score technique to\n-- measure performance.\n--\n-- For more information about performance metrics, please see the \u003chttp://docs.aws.amazon.com/machine-learning/latest/dg AmazonMachine Learning Developer Guide\u003e.",
                        "typeExposed": "Maybe PerformanceMetrics",
                        "type": "Maybe PerformanceMetrics"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "eStatus",
                        "name": "_eStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The status of the evaluation. This element can have one of the following\n-- values:\n--\n-- 'PENDING' - Amazon Machine Learning (Amazon ML) submitted a request to\n-- evaluate an 'MLModel'.  'INPROGRESS' - The evaluation is underway.  'FAILED' - The\n-- request to evaluate an 'MLModel' did not run to completion. It is not usable.  'COMPLETED' - The evaluation process completed successfully.  'DELETED' - The 'Evaluation'\n-- is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "fieldPad": 19,
                "ctor": "redshiftMetadata",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rmRedshiftDatabase",
                        "name": "_rmRedshiftDatabase",
                        "shape": "RedshiftDatabase",
                        "locationName": "RedshiftDatabase",
                        "documentation": null,
                        "typeExposed": "Maybe RedshiftDatabase",
                        "type": "Maybe RedshiftDatabase"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rmDatabaseUserName",
                        "name": "_rmDatabaseUserName",
                        "shape": "RedshiftDatabaseUsername",
                        "locationName": "DatabaseUserName",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rmSelectSqlQuery",
                        "name": "_rmSelectSqlQuery",
                        "shape": "RedshiftSelectSqlQuery",
                        "locationName": "SelectSqlQuery",
                        "documentation": "-- | The SQL query that is specified during 'CreateDataSourceFromRedshift'. Returns\n-- only if 'Verbose' is true in GetDataSourceInput.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 17,
                "name": "RedshiftMetadata",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rmRedshiftDatabase",
                        "name": "_rmRedshiftDatabase",
                        "shape": "RedshiftDatabase",
                        "locationName": "RedshiftDatabase",
                        "documentation": null,
                        "typeExposed": "Maybe RedshiftDatabase",
                        "type": "Maybe RedshiftDatabase"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rmDatabaseUserName",
                        "name": "_rmDatabaseUserName",
                        "shape": "RedshiftDatabaseUsername",
                        "locationName": "DatabaseUserName",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rmSelectSqlQuery",
                        "name": "_rmSelectSqlQuery",
                        "shape": "RedshiftSelectSqlQuery",
                        "locationName": "SelectSqlQuery",
                        "documentation": "-- | The SQL query that is specified during 'CreateDataSourceFromRedshift'. Returns\n-- only if 'Verbose' is true in GetDataSourceInput.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rmDatabaseUserName",
                        "name": "_rmDatabaseUserName",
                        "shape": "RedshiftDatabaseUsername",
                        "locationName": "DatabaseUserName",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rmRedshiftDatabase",
                        "name": "_rmRedshiftDatabase",
                        "shape": "RedshiftDatabase",
                        "locationName": "RedshiftDatabase",
                        "documentation": null,
                        "typeExposed": "Maybe RedshiftDatabase",
                        "type": "Maybe RedshiftDatabase"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "rmSelectSqlQuery",
                        "name": "_rmSelectSqlQuery",
                        "shape": "RedshiftSelectSqlQuery",
                        "locationName": "SelectSqlQuery",
                        "documentation": "-- | The SQL query that is specified during 'CreateDataSourceFromRedshift'. Returns\n-- only if 'Verbose' is true in GetDataSourceInput.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Multiclass": "MULTICLASS",
                    "Regression": "REGRESSION",
                    "Binary": "BINARY"
                },
                "valuePad": 11,
                "name": "MLModelType",
                "type": "nullary",
                "branchPad": 10
            }
        ],
        "imports": [],
        "shared": [
            "RealtimeEndpointInfo",
            "SortOrder",
            "EntityStatus",
            "MLModelType"
        ]
    },
    "operations": [
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "createBatchPredictionResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "cbprBatchPredictionId",
                    "name": "_cbprBatchPredictionId",
                    "shape": "EntityId",
                    "locationName": "BatchPredictionId",
                    "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'. This value\n-- is identical to the value of the 'BatchPredictionId' in the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cbprBatchPredictionId",
                        "name": "_cbprBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'. This value\n-- is identical to the value of the 'BatchPredictionId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateBatchPredictionResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cbprBatchPredictionId",
                        "name": "_cbprBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'. This value\n-- is identical to the value of the 'BatchPredictionId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cbprBatchPredictionId",
                        "name": "_cbprBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'. This value\n-- is identical to the value of the 'BatchPredictionId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_CreateBatchPrediction.html",
            "namespace": "Network.AWS.MachineLearning.CreateBatchPrediction",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "CreateBatchPrediction",
            "method": "post",
            "documentation": "-- | Generates predictions for a group of observations. The observations to\n-- process exist in one or more data files referenced by a 'DataSource'. This\n-- operation creates a new 'BatchPrediction', and uses an 'MLModel' and the data\n-- files referenced by the 'DataSource' as information sources.\n--\n-- 'CreateBatchPrediction' is an asynchronous operation. In response to 'CreateBatchPrediction', Amazon Machine Learning (Amazon ML) immediately returns and sets the 'BatchPrediction' status to 'PENDING'. After the 'BatchPrediction' completes, Amazon ML sets the\n-- status to 'COMPLETED'.\n--\n-- You can poll for status updates by using the 'GetBatchPrediction' operation\n-- and checking the 'Status' parameter of the result. After the 'COMPLETED' status\n-- appears, the results are available in the location specified by the 'OutputUri'\n-- parameter.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 31,
                "ctor": "createBatchPrediction",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cbpBatchPredictionId",
                        "name": "_cbpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cbpBatchPredictionName",
                        "name": "_cbpBatchPredictionName",
                        "shape": "EntityName",
                        "locationName": "BatchPredictionName",
                        "documentation": "-- | A user-supplied name or description of the 'BatchPrediction'. 'BatchPredictionName' can only use the UTF-8 character set.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cbpMLModelId",
                        "name": "_cbpMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that will generate predictions for the group of\n-- observations.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cbpBatchPredictionDataSourceId",
                        "name": "_cbpBatchPredictionDataSourceId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' that points to the group of observations to predict.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cbpOutputUri",
                        "name": "_cbpOutputUri",
                        "shape": "S3Url",
                        "locationName": "OutputUri",
                        "documentation": "-- | The location of an Amazon Simple Storage Service (Amazon S3) bucket or\n-- directory to store the batch prediction results. The following substrings are\n-- not allowed in the s3 key portion of the \"outputURI\" field: ':', '//', '/./',\n-- '/../'.\n--\n-- Amazon ML needs permissions to store and retrieve the logs on your behalf.\n-- For information about how to set permissions, see the \u003chttp://docs.aws.amazon.com/machine-learning/latest/dg Amazon Machine LearningDeveloper Guide\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cbpBatchPredictionId",
                        "name": "_cbpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cbpMLModelId",
                        "name": "_cbpMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that will generate predictions for the group of\n-- observations.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cbpBatchPredictionDataSourceId",
                        "name": "_cbpBatchPredictionDataSourceId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' that points to the group of observations to predict.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cbpOutputUri",
                        "name": "_cbpOutputUri",
                        "shape": "S3Url",
                        "locationName": "OutputUri",
                        "documentation": "-- | The location of an Amazon Simple Storage Service (Amazon S3) bucket or\n-- directory to store the batch prediction results. The following substrings are\n-- not allowed in the s3 key portion of the \"outputURI\" field: ':', '//', '/./',\n-- '/../'.\n--\n-- Amazon ML needs permissions to store and retrieve the logs on your behalf.\n-- For information about how to set permissions, see the \u003chttp://docs.aws.amazon.com/machine-learning/latest/dg Amazon Machine LearningDeveloper Guide\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 28,
                "queryPad": 0,
                "name": "CreateBatchPrediction",
                "query": [],
                "locationPad": 28,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cbpBatchPredictionName",
                        "name": "_cbpBatchPredictionName",
                        "shape": "EntityName",
                        "locationName": "BatchPredictionName",
                        "documentation": "-- | A user-supplied name or description of the 'BatchPrediction'. 'BatchPredictionName' can only use the UTF-8 character set.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cbpBatchPredictionDataSourceId",
                        "name": "_cbpBatchPredictionDataSourceId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' that points to the group of observations to predict.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cbpBatchPredictionId",
                        "name": "_cbpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cbpBatchPredictionName",
                        "name": "_cbpBatchPredictionName",
                        "shape": "EntityName",
                        "locationName": "BatchPredictionName",
                        "documentation": "-- | A user-supplied name or description of the 'BatchPrediction'. 'BatchPredictionName' can only use the UTF-8 character set.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cbpMLModelId",
                        "name": "_cbpMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that will generate predictions for the group of\n-- observations.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cbpOutputUri",
                        "name": "_cbpOutputUri",
                        "shape": "S3Url",
                        "locationName": "OutputUri",
                        "documentation": "-- | The location of an Amazon Simple Storage Service (Amazon S3) bucket or\n-- directory to store the batch prediction results. The following substrings are\n-- not allowed in the s3 key portion of the \"outputURI\" field: ':', '//', '/./',\n-- '/../'.\n--\n-- Amazon ML needs permissions to store and retrieve the logs on your behalf.\n-- For information about how to set permissions, see the \u003chttp://docs.aws.amazon.com/machine-learning/latest/dg Amazon Machine LearningDeveloper Guide\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "createDataSourceFromRDSResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "cdsfrdsrDataSourceId",
                    "name": "_cdsfrdsrDataSourceId",
                    "shape": "EntityId",
                    "locationName": "DataSourceId",
                    "documentation": "-- | A user-supplied ID that uniquely identifies the datasource. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrdsrDataSourceId",
                        "name": "_cdsfrdsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the datasource. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateDataSourceFromRDSResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrdsrDataSourceId",
                        "name": "_cdsfrdsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the datasource. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrdsrDataSourceId",
                        "name": "_cdsfrdsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the datasource. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_CreateDataSourceFromRDS.html",
            "namespace": "Network.AWS.MachineLearning.CreateDataSourceFromRDS",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "CreateDataSourceFromRDS",
            "method": "post",
            "documentation": "-- | Creates a 'DataSource' object from an \u003chttp://aws.amazon.com/rds/  Amazon Relational Database Service\u003e\n-- (Amazon RDS). A 'DataSource' references data that can be used to perform 'CreateMLModel', 'CreateEvaluation', or 'CreateBatchPrediction' operations.\n--\n-- 'CreateDataSourceFromRDS' is an asynchronous operation. In response to 'CreateDataSourceFromRDS', Amazon Machine Learning (Amazon ML) immediately returns and sets the 'DataSource' status to 'PENDING'. After the 'DataSource' is created and ready for use, Amazon\n-- ML sets the 'Status' parameter to 'COMPLETED'. 'DataSource' in 'COMPLETED' or 'PENDING'\n-- status can only be used to perform 'CreateMLModel', 'CreateEvaluation', or 'CreateBatchPrediction' operations.\n--\n-- If Amazon ML cannot accept the input source, it sets the 'Status' parameter\n-- to 'FAILED' and includes an error message in the 'Message' attribute of the 'GetDataSource' operation response.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 25,
                "ctor": "createDataSourceFromRDS",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrdsDataSourceId",
                        "name": "_cdsfrdsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'DataSource'. Typically, an\n-- Amazon Resource Number (ARN) becomes the ID for a 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrdsDataSourceName",
                        "name": "_cdsfrdsDataSourceName",
                        "shape": "EntityName",
                        "locationName": "DataSourceName",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrdsRDSData",
                        "name": "_cdsfrdsRDSData",
                        "shape": "RDSDataSpec",
                        "locationName": "RDSData",
                        "documentation": "-- | The data specification of an Amazon RDS 'DataSource':\n--\n-- DatabaseInformation -   'DatabaseName ' - Name of the Amazon RDS database.  'InstanceIdentifier ' - Unique identifier for the Amazon RDS database instance.\n--\n--\n-- DatabaseCredentials - AWS Identity and Access Management (IAM) credentials\n-- that are used to connect to the Amazon RDS database.\n--\n-- ResourceRole - Role (DataPipelineDefaultResourceRole) assumed by an Amazon\n-- Elastic Compute Cloud (EC2) instance to carry out the copy task from Amazon\n-- RDS to Amazon S3. For more information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for data pipelines.\n--\n-- ServiceRole - Role (DataPipelineDefaultRole) assumed by the AWS Data\n-- Pipeline service to monitor the progress of the copy task from Amazon RDS to\n-- Amazon Simple Storage Service (S3). For more information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e\n-- for data pipelines.\n--\n-- SecurityInfo - Security information to use to access an Amazon RDS instance.\n-- You need to set up appropriate ingress rules for the security entity IDs\n-- provided to allow access to the Amazon RDS instance. Specify a ['SubnetId', 'SecurityGroupIds'] pair for a VPC-based Amazon RDS instance.\n--\n-- SelectSqlQuery - Query that is used to retrieve the observation data for the 'Datasource'.\n--\n-- S3StagingLocation - Amazon S3 location for staging RDS data. The data\n-- retrieved from Amazon RDS using 'SelectSqlQuery' is stored in this location.\n--\n-- DataSchemaUri - Amazon S3 location of the 'DataSchema'.\n--\n-- DataSchema - A JSON string representing the schema. This is not required if 'DataSchemaUri' is specified.\n--\n-- DataRearrangement - A JSON string representing the splitting requirement of\n-- a 'Datasource'.\n--\n--\n-- Sample - ' \"{\\\"randomSeed\\\":\\\"some-random-seed\\\",\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"'\n--\n--",
                        "typeExposed": "RDSDataSpec",
                        "type": "RDSDataSpec"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrdsRoleARN",
                        "name": "_cdsfrdsRoleARN",
                        "shape": "RoleARN",
                        "locationName": "RoleARN",
                        "documentation": "-- | The role that Amazon ML assumes on behalf of the user to create and activate\n-- a data pipeline in the user’s account and copy data (using the 'SelectSqlQuery') query from Amazon RDS to Amazon S3.\n--\n--\n--",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrdsComputeStatistics",
                        "name": "_cdsfrdsComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The compute statistics for a 'DataSource'. The statistics are generated from\n-- the observation data referenced by a 'DataSource'. Amazon ML uses the\n-- statistics internally during an 'MLModel' training. This parameter must be set\n-- to 'true' if the ''DataSource'' needs to be used for 'MLModel' training.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrdsDataSourceId",
                        "name": "_cdsfrdsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'DataSource'. Typically, an\n-- Amazon Resource Number (ARN) becomes the ID for a 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrdsRDSData",
                        "name": "_cdsfrdsRDSData",
                        "shape": "RDSDataSpec",
                        "locationName": "RDSData",
                        "documentation": "-- | The data specification of an Amazon RDS 'DataSource':\n--\n-- DatabaseInformation -   'DatabaseName ' - Name of the Amazon RDS database.  'InstanceIdentifier ' - Unique identifier for the Amazon RDS database instance.\n--\n--\n-- DatabaseCredentials - AWS Identity and Access Management (IAM) credentials\n-- that are used to connect to the Amazon RDS database.\n--\n-- ResourceRole - Role (DataPipelineDefaultResourceRole) assumed by an Amazon\n-- Elastic Compute Cloud (EC2) instance to carry out the copy task from Amazon\n-- RDS to Amazon S3. For more information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for data pipelines.\n--\n-- ServiceRole - Role (DataPipelineDefaultRole) assumed by the AWS Data\n-- Pipeline service to monitor the progress of the copy task from Amazon RDS to\n-- Amazon Simple Storage Service (S3). For more information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e\n-- for data pipelines.\n--\n-- SecurityInfo - Security information to use to access an Amazon RDS instance.\n-- You need to set up appropriate ingress rules for the security entity IDs\n-- provided to allow access to the Amazon RDS instance. Specify a ['SubnetId', 'SecurityGroupIds'] pair for a VPC-based Amazon RDS instance.\n--\n-- SelectSqlQuery - Query that is used to retrieve the observation data for the 'Datasource'.\n--\n-- S3StagingLocation - Amazon S3 location for staging RDS data. The data\n-- retrieved from Amazon RDS using 'SelectSqlQuery' is stored in this location.\n--\n-- DataSchemaUri - Amazon S3 location of the 'DataSchema'.\n--\n-- DataSchema - A JSON string representing the schema. This is not required if 'DataSchemaUri' is specified.\n--\n-- DataRearrangement - A JSON string representing the splitting requirement of\n-- a 'Datasource'.\n--\n--\n-- Sample - ' \"{\\\"randomSeed\\\":\\\"some-random-seed\\\",\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"'\n--\n--",
                        "typeExposed": "RDSDataSpec",
                        "type": "RDSDataSpec"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrdsRoleARN",
                        "name": "_cdsfrdsRoleARN",
                        "shape": "RoleARN",
                        "locationName": "RoleARN",
                        "documentation": "-- | The role that Amazon ML assumes on behalf of the user to create and activate\n-- a data pipeline in the user’s account and copy data (using the 'SelectSqlQuery') query from Amazon RDS to Amazon S3.\n--\n--\n--",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 18,
                "queryPad": 0,
                "name": "CreateDataSourceFromRDS",
                "query": [],
                "locationPad": 18,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrdsDataSourceName",
                        "name": "_cdsfrdsDataSourceName",
                        "shape": "EntityName",
                        "locationName": "DataSourceName",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrdsComputeStatistics",
                        "name": "_cdsfrdsComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The compute statistics for a 'DataSource'. The statistics are generated from\n-- the observation data referenced by a 'DataSource'. Amazon ML uses the\n-- statistics internally during an 'MLModel' training. This parameter must be set\n-- to 'true' if the ''DataSource'' needs to be used for 'MLModel' training.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrdsComputeStatistics",
                        "name": "_cdsfrdsComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The compute statistics for a 'DataSource'. The statistics are generated from\n-- the observation data referenced by a 'DataSource'. Amazon ML uses the\n-- statistics internally during an 'MLModel' training. This parameter must be set\n-- to 'true' if the ''DataSource'' needs to be used for 'MLModel' training.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrdsDataSourceId",
                        "name": "_cdsfrdsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'DataSource'. Typically, an\n-- Amazon Resource Number (ARN) becomes the ID for a 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrdsDataSourceName",
                        "name": "_cdsfrdsDataSourceName",
                        "shape": "EntityName",
                        "locationName": "DataSourceName",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrdsRDSData",
                        "name": "_cdsfrdsRDSData",
                        "shape": "RDSDataSpec",
                        "locationName": "RDSData",
                        "documentation": "-- | The data specification of an Amazon RDS 'DataSource':\n--\n-- DatabaseInformation -   'DatabaseName ' - Name of the Amazon RDS database.  'InstanceIdentifier ' - Unique identifier for the Amazon RDS database instance.\n--\n--\n-- DatabaseCredentials - AWS Identity and Access Management (IAM) credentials\n-- that are used to connect to the Amazon RDS database.\n--\n-- ResourceRole - Role (DataPipelineDefaultResourceRole) assumed by an Amazon\n-- Elastic Compute Cloud (EC2) instance to carry out the copy task from Amazon\n-- RDS to Amazon S3. For more information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e for data pipelines.\n--\n-- ServiceRole - Role (DataPipelineDefaultRole) assumed by the AWS Data\n-- Pipeline service to monitor the progress of the copy task from Amazon RDS to\n-- Amazon Simple Storage Service (S3). For more information, see \u003chttp://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html Role templates\u003e\n-- for data pipelines.\n--\n-- SecurityInfo - Security information to use to access an Amazon RDS instance.\n-- You need to set up appropriate ingress rules for the security entity IDs\n-- provided to allow access to the Amazon RDS instance. Specify a ['SubnetId', 'SecurityGroupIds'] pair for a VPC-based Amazon RDS instance.\n--\n-- SelectSqlQuery - Query that is used to retrieve the observation data for the 'Datasource'.\n--\n-- S3StagingLocation - Amazon S3 location for staging RDS data. The data\n-- retrieved from Amazon RDS using 'SelectSqlQuery' is stored in this location.\n--\n-- DataSchemaUri - Amazon S3 location of the 'DataSchema'.\n--\n-- DataSchema - A JSON string representing the schema. This is not required if 'DataSchemaUri' is specified.\n--\n-- DataRearrangement - A JSON string representing the splitting requirement of\n-- a 'Datasource'.\n--\n--\n-- Sample - ' \"{\\\"randomSeed\\\":\\\"some-random-seed\\\",\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"'\n--\n--",
                        "typeExposed": "RDSDataSpec",
                        "type": "RDSDataSpec"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrdsRoleARN",
                        "name": "_cdsfrdsRoleARN",
                        "shape": "RoleARN",
                        "locationName": "RoleARN",
                        "documentation": "-- | The role that Amazon ML assumes on behalf of the user to create and activate\n-- a data pipeline in the user’s account and copy data (using the 'SelectSqlQuery') query from Amazon RDS to Amazon S3.\n--\n--\n--",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "createDataSourceFromRedshiftResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "cdsfrrDataSourceId",
                    "name": "_cdsfrrDataSourceId",
                    "shape": "EntityId",
                    "locationName": "DataSourceId",
                    "documentation": "-- | A user-supplied ID that uniquely identifies the datasource. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrrDataSourceId",
                        "name": "_cdsfrrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the datasource. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateDataSourceFromRedshiftResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrrDataSourceId",
                        "name": "_cdsfrrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the datasource. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrrDataSourceId",
                        "name": "_cdsfrrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the datasource. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_CreateDataSourceFromRedshift.html",
            "namespace": "Network.AWS.MachineLearning.CreateDataSourceFromRedshift",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "CreateDataSourceFromRedshift",
            "method": "post",
            "documentation": "-- | Creates a 'DataSource' from \u003chttp://aws.amazon.com/redshift/ Amazon Redshift\u003e. A 'DataSource' references data that\n-- can be used to perform either 'CreateMLModel', 'CreateEvaluation' or 'CreateBatchPrediction' operations.\n--\n-- 'CreateDataSourceFromRedshift' is an asynchronous operation. In response to 'CreateDataSourceFromRedshift', Amazon Machine Learning (Amazon ML) immediately returns and sets the 'DataSource' status to 'PENDING'. After the 'DataSource' is created and ready for use, Amazon\n-- ML sets the 'Status' parameter to 'COMPLETED'. 'DataSource' in 'COMPLETED' or 'PENDING'\n-- status can only be used to perform 'CreateMLModel', 'CreateEvaluation', or 'CreateBatchPrediction' operations.\n--\n-- If Amazon ML cannot accept the input source, it sets the 'Status' parameter\n-- to 'FAILED' and includes an error message in the 'Message' attribute of the 'GetDataSource' operation response.\n--\n-- The observations should exist in the database hosted on an Amazon Redshift\n-- cluster and should be specified by a 'SelectSqlQuery'. Amazon ML executes \u003chttp://docs.aws.amazon.com/redshift/latest/dg/t_Unloading_tables.html Unload\u003e command in Amazon Redshift to transfer the result set of 'SelectSqlQuery'\n-- to 'S3StagingLocation.'\n--\n-- After the 'DataSource' is created, it's ready for use in evaluations and batch\n-- predictions. If you plan to use the 'DataSource' to train an 'MLModel', the 'DataSource' requires another item -- a recipe. A recipe describes the observation\n-- variables that participate in training an 'MLModel'. A recipe describes how\n-- each input variable will be used in training. Will the variable be included\n-- or excluded from training? Will the variable be manipulated, for example,\n-- combined with another variable or split apart into word combinations? The\n-- recipe provides answers to these questions. For more information, see the\n-- Amazon Machine Learning Developer Guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 23,
                "ctor": "createDataSourceFromRedshift",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrDataSourceId",
                        "name": "_cdsfrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrDataSourceName",
                        "name": "_cdsfrDataSourceName",
                        "shape": "EntityName",
                        "locationName": "DataSourceName",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrDataSpec",
                        "name": "_cdsfrDataSpec",
                        "shape": "RedshiftDataSpec",
                        "locationName": "DataSpec",
                        "documentation": "-- | The data specification of an Amazon Redshift 'DataSource':\n--\n-- DatabaseInformation -   'DatabaseName ' - Name of the Amazon Redshift\n-- database.   ' ClusterIdentifier ' - Unique ID for the Amazon Redshift cluster.\n--\n-- DatabaseCredentials - AWS Identity abd Access Management (IAM) credentials\n-- that are used to connect to the Amazon Redshift database.\n--\n-- SelectSqlQuery - Query that is used to retrieve the observation data for the 'Datasource'.\n--\n-- S3StagingLocation - Amazon Simple Storage Service (Amazon S3) location for\n-- staging Amazon Redshift data. The data retrieved from Amazon Relational\n-- Database Service (Amazon RDS) using 'SelectSqlQuery' is stored in this location.\n--\n-- DataSchemaUri - Amazon S3 location of the 'DataSchema'.\n--\n-- DataSchema - A JSON string representing the schema. This is not required if 'DataSchemaUri' is specified.\n--\n-- DataRearrangement - A JSON string representing the splitting requirement of\n-- a 'Datasource'.\n--\n--\n-- Sample - ' \"{\\\"randomSeed\\\":\\\"some-random-seed\\\",\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"'\n--\n--",
                        "typeExposed": "RedshiftDataSpec",
                        "type": "RedshiftDataSpec"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrRoleARN",
                        "name": "_cdsfrRoleARN",
                        "shape": "RoleARN",
                        "locationName": "RoleARN",
                        "documentation": "-- | A fully specified role Amazon Resource Name (ARN). Amazon ML assumes the role\n-- on behalf of the user to create the following:\n--\n-- A security group to allow Amazon ML to execute the 'SelectSqlQuery' query on\n-- an Amazon Redshift cluster\n--\n-- An Amazon S3 bucket policy to grant Amazon ML read/write permissions on the 'S3StagingLocation'\n--\n--",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrComputeStatistics",
                        "name": "_cdsfrComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The compute statistics for a 'DataSource'. The statistics are generated from\n-- the observation data referenced by a 'DataSource'. Amazon ML uses the\n-- statistics internally during 'MLModel' training. This parameter must be set to 'true' if the ''DataSource'' needs to be used for 'MLModel' training",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrDataSourceId",
                        "name": "_cdsfrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrDataSpec",
                        "name": "_cdsfrDataSpec",
                        "shape": "RedshiftDataSpec",
                        "locationName": "DataSpec",
                        "documentation": "-- | The data specification of an Amazon Redshift 'DataSource':\n--\n-- DatabaseInformation -   'DatabaseName ' - Name of the Amazon Redshift\n-- database.   ' ClusterIdentifier ' - Unique ID for the Amazon Redshift cluster.\n--\n-- DatabaseCredentials - AWS Identity abd Access Management (IAM) credentials\n-- that are used to connect to the Amazon Redshift database.\n--\n-- SelectSqlQuery - Query that is used to retrieve the observation data for the 'Datasource'.\n--\n-- S3StagingLocation - Amazon Simple Storage Service (Amazon S3) location for\n-- staging Amazon Redshift data. The data retrieved from Amazon Relational\n-- Database Service (Amazon RDS) using 'SelectSqlQuery' is stored in this location.\n--\n-- DataSchemaUri - Amazon S3 location of the 'DataSchema'.\n--\n-- DataSchema - A JSON string representing the schema. This is not required if 'DataSchemaUri' is specified.\n--\n-- DataRearrangement - A JSON string representing the splitting requirement of\n-- a 'Datasource'.\n--\n--\n-- Sample - ' \"{\\\"randomSeed\\\":\\\"some-random-seed\\\",\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"'\n--\n--",
                        "typeExposed": "RedshiftDataSpec",
                        "type": "RedshiftDataSpec"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrRoleARN",
                        "name": "_cdsfrRoleARN",
                        "shape": "RoleARN",
                        "locationName": "RoleARN",
                        "documentation": "-- | A fully specified role Amazon Resource Name (ARN). Amazon ML assumes the role\n-- on behalf of the user to create the following:\n--\n-- A security group to allow Amazon ML to execute the 'SelectSqlQuery' query on\n-- an Amazon Redshift cluster\n--\n-- An Amazon S3 bucket policy to grant Amazon ML read/write permissions on the 'S3StagingLocation'\n--\n--",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 18,
                "queryPad": 0,
                "name": "CreateDataSourceFromRedshift",
                "query": [],
                "locationPad": 18,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrDataSourceName",
                        "name": "_cdsfrDataSourceName",
                        "shape": "EntityName",
                        "locationName": "DataSourceName",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrComputeStatistics",
                        "name": "_cdsfrComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The compute statistics for a 'DataSource'. The statistics are generated from\n-- the observation data referenced by a 'DataSource'. Amazon ML uses the\n-- statistics internally during 'MLModel' training. This parameter must be set to 'true' if the ''DataSource'' needs to be used for 'MLModel' training",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrComputeStatistics",
                        "name": "_cdsfrComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The compute statistics for a 'DataSource'. The statistics are generated from\n-- the observation data referenced by a 'DataSource'. Amazon ML uses the\n-- statistics internally during 'MLModel' training. This parameter must be set to 'true' if the ''DataSource'' needs to be used for 'MLModel' training",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrDataSourceId",
                        "name": "_cdsfrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfrDataSourceName",
                        "name": "_cdsfrDataSourceName",
                        "shape": "EntityName",
                        "locationName": "DataSourceName",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrDataSpec",
                        "name": "_cdsfrDataSpec",
                        "shape": "RedshiftDataSpec",
                        "locationName": "DataSpec",
                        "documentation": "-- | The data specification of an Amazon Redshift 'DataSource':\n--\n-- DatabaseInformation -   'DatabaseName ' - Name of the Amazon Redshift\n-- database.   ' ClusterIdentifier ' - Unique ID for the Amazon Redshift cluster.\n--\n-- DatabaseCredentials - AWS Identity abd Access Management (IAM) credentials\n-- that are used to connect to the Amazon Redshift database.\n--\n-- SelectSqlQuery - Query that is used to retrieve the observation data for the 'Datasource'.\n--\n-- S3StagingLocation - Amazon Simple Storage Service (Amazon S3) location for\n-- staging Amazon Redshift data. The data retrieved from Amazon Relational\n-- Database Service (Amazon RDS) using 'SelectSqlQuery' is stored in this location.\n--\n-- DataSchemaUri - Amazon S3 location of the 'DataSchema'.\n--\n-- DataSchema - A JSON string representing the schema. This is not required if 'DataSchemaUri' is specified.\n--\n-- DataRearrangement - A JSON string representing the splitting requirement of\n-- a 'Datasource'.\n--\n--\n-- Sample - ' \"{\\\"randomSeed\\\":\\\"some-random-seed\\\",\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"'\n--\n--",
                        "typeExposed": "RedshiftDataSpec",
                        "type": "RedshiftDataSpec"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfrRoleARN",
                        "name": "_cdsfrRoleARN",
                        "shape": "RoleARN",
                        "locationName": "RoleARN",
                        "documentation": "-- | A fully specified role Amazon Resource Name (ARN). Amazon ML assumes the role\n-- on behalf of the user to create the following:\n--\n-- A security group to allow Amazon ML to execute the 'SelectSqlQuery' query on\n-- an Amazon Redshift cluster\n--\n-- An Amazon S3 bucket policy to grant Amazon ML read/write permissions on the 'S3StagingLocation'\n--\n--",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "createDataSourceFromS3Response",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "cdsfsrDataSourceId",
                    "name": "_cdsfsrDataSourceId",
                    "shape": "EntityId",
                    "locationName": "DataSourceId",
                    "documentation": "-- | A user-supplied ID that uniquely identifies the datasource. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfsrDataSourceId",
                        "name": "_cdsfsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the datasource. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateDataSourceFromS3Response",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfsrDataSourceId",
                        "name": "_cdsfsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the datasource. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfsrDataSourceId",
                        "name": "_cdsfsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the datasource. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_CreateDataSourceFromS3.html",
            "namespace": "Network.AWS.MachineLearning.CreateDataSourceFromS",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "CreateDataSourceFromS3",
            "method": "post",
            "documentation": "-- | Creates a 'DataSource' object. A 'DataSource' references data that can be used to\n-- perform 'CreateMLModel', 'CreateEvaluation', or 'CreateBatchPrediction' operations.\n--\n-- 'CreateDataSourceFromS3' is an asynchronous operation. In response to 'CreateDataSourceFromS3', Amazon Machine Learning (Amazon ML) immediately returns and sets the 'DataSource' status to 'PENDING'. After the 'DataSource' is created and ready for use, Amazon\n-- ML sets the 'Status' parameter to 'COMPLETED'. 'DataSource' in 'COMPLETED' or 'PENDING'\n-- status can only be used to perform 'CreateMLModel', 'CreateEvaluation' or 'CreateBatchPrediction' operations.\n--\n-- If Amazon ML cannot accept the input source, it sets the 'Status' parameter\n-- to 'FAILED' and includes an error message in the 'Message' attribute of the 'GetDataSource' operation response.\n--\n-- The observation data used in a 'DataSource' should be ready to use; that is,\n-- it should have a consistent structure, and missing data values should be kept\n-- to a minimum. The observation data must reside in one or more CSV files in an\n-- Amazon Simple Storage Service (Amazon S3) bucket, along with a schema that\n-- describes the data items by name and type. The same schema must be used for\n-- all of the data files referenced by the 'DataSource'.\n--\n-- After the 'DataSource' has been created, it's ready to use in evaluations and\n-- batch predictions. If you plan to use the 'DataSource' to train an 'MLModel', the 'DataSource' requires another item: a recipe. A recipe describes the\n-- observation variables that participate in training an 'MLModel'. A recipe\n-- describes how each input variable will be used in training. Will the variable\n-- be included or excluded from training? Will the variable be manipulated, for\n-- example, combined with another variable, or split apart into word\n-- combinations? The recipe provides answers to these questions. For more\n-- information, see the \u003chttp://docs.aws.amazon.com/machine-learning/latest/dg Amazon Machine Learning Developer Guide\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 23,
                "ctor": "createDataSourceFromS3",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfsDataSourceId",
                        "name": "_cdsfsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied identifier that uniquely identifies the 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfsDataSourceName",
                        "name": "_cdsfsDataSourceName",
                        "shape": "EntityName",
                        "locationName": "DataSourceName",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfsDataSpec",
                        "name": "_cdsfsDataSpec",
                        "shape": "S3DataSpec",
                        "locationName": "DataSpec",
                        "documentation": "-- | The data specification of a 'DataSource':\n--\n-- DataLocationS3 - Amazon Simple Storage Service (Amazon S3) location of the\n-- observation data.\n--\n-- DataSchemaLocationS3 - Amazon S3 location of the 'DataSchema'.\n--\n-- DataSchema - A JSON string representing the schema. This is not required if 'DataSchemaUri' is specified.\n--\n-- DataRearrangement - A JSON string representing the splitting requirement of\n-- a 'Datasource'.\n--\n--\n-- Sample - ' \"{\\\"randomSeed\\\":\\\"some-random-seed\\\",\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"'\n--\n--",
                        "typeExposed": "S3DataSpec",
                        "type": "S3DataSpec"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfsComputeStatistics",
                        "name": "_cdsfsComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The compute statistics for a 'DataSource'. The statistics are generated from\n-- the observation data referenced by a 'DataSource'. Amazon ML uses the\n-- statistics internally during an 'MLModel' training. This parameter must be set\n-- to 'true' if the ''DataSource'' needs to be used for 'MLModel' training",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfsDataSourceId",
                        "name": "_cdsfsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied identifier that uniquely identifies the 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfsDataSpec",
                        "name": "_cdsfsDataSpec",
                        "shape": "S3DataSpec",
                        "locationName": "DataSpec",
                        "documentation": "-- | The data specification of a 'DataSource':\n--\n-- DataLocationS3 - Amazon Simple Storage Service (Amazon S3) location of the\n-- observation data.\n--\n-- DataSchemaLocationS3 - Amazon S3 location of the 'DataSchema'.\n--\n-- DataSchema - A JSON string representing the schema. This is not required if 'DataSchemaUri' is specified.\n--\n-- DataRearrangement - A JSON string representing the splitting requirement of\n-- a 'Datasource'.\n--\n--\n-- Sample - ' \"{\\\"randomSeed\\\":\\\"some-random-seed\\\",\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"'\n--\n--",
                        "typeExposed": "S3DataSpec",
                        "type": "S3DataSpec"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 18,
                "queryPad": 0,
                "name": "CreateDataSourceFromS3",
                "query": [],
                "locationPad": 18,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfsDataSourceName",
                        "name": "_cdsfsDataSourceName",
                        "shape": "EntityName",
                        "locationName": "DataSourceName",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfsComputeStatistics",
                        "name": "_cdsfsComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The compute statistics for a 'DataSource'. The statistics are generated from\n-- the observation data referenced by a 'DataSource'. Amazon ML uses the\n-- statistics internally during an 'MLModel' training. This parameter must be set\n-- to 'true' if the ''DataSource'' needs to be used for 'MLModel' training",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfsComputeStatistics",
                        "name": "_cdsfsComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The compute statistics for a 'DataSource'. The statistics are generated from\n-- the observation data referenced by a 'DataSource'. Amazon ML uses the\n-- statistics internally during an 'MLModel' training. This parameter must be set\n-- to 'true' if the ''DataSource'' needs to be used for 'MLModel' training",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfsDataSourceId",
                        "name": "_cdsfsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied identifier that uniquely identifies the 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cdsfsDataSourceName",
                        "name": "_cdsfsDataSourceName",
                        "shape": "EntityName",
                        "locationName": "DataSourceName",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cdsfsDataSpec",
                        "name": "_cdsfsDataSpec",
                        "shape": "S3DataSpec",
                        "locationName": "DataSpec",
                        "documentation": "-- | The data specification of a 'DataSource':\n--\n-- DataLocationS3 - Amazon Simple Storage Service (Amazon S3) location of the\n-- observation data.\n--\n-- DataSchemaLocationS3 - Amazon S3 location of the 'DataSchema'.\n--\n-- DataSchema - A JSON string representing the schema. This is not required if 'DataSchemaUri' is specified.\n--\n-- DataRearrangement - A JSON string representing the splitting requirement of\n-- a 'Datasource'.\n--\n--\n-- Sample - ' \"{\\\"randomSeed\\\":\\\"some-random-seed\\\",\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"'\n--\n--",
                        "typeExposed": "S3DataSpec",
                        "type": "S3DataSpec"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "createEvaluationResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "cerEvaluationId",
                    "name": "_cerEvaluationId",
                    "shape": "EntityId",
                    "locationName": "EvaluationId",
                    "documentation": "-- | The user-supplied ID that uniquely identifies the 'Evaluation'. This value\n-- should be identical to the value of the 'EvaluationId' in the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cerEvaluationId",
                        "name": "_cerEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The user-supplied ID that uniquely identifies the 'Evaluation'. This value\n-- should be identical to the value of the 'EvaluationId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateEvaluationResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cerEvaluationId",
                        "name": "_cerEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The user-supplied ID that uniquely identifies the 'Evaluation'. This value\n-- should be identical to the value of the 'EvaluationId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cerEvaluationId",
                        "name": "_cerEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The user-supplied ID that uniquely identifies the 'Evaluation'. This value\n-- should be identical to the value of the 'EvaluationId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_CreateEvaluation.html",
            "namespace": "Network.AWS.MachineLearning.CreateEvaluation",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "CreateEvaluation",
            "method": "post",
            "documentation": "-- | Creates a new 'Evaluation' of an 'MLModel'. An 'MLModel' is evaluated on a set of\n-- observations associated to a 'DataSource'. Like a 'DataSource' for an 'MLModel',\n-- the 'DataSource' for an 'Evaluation' contains values for the Target Variable. The 'Evaluation' compares the predicted result for each observation to the actual\n-- outcome and provides a summary so that you know how effective the 'MLModel'\n-- functions on the test data. Evaluation generates a relevant performance\n-- metric such as BinaryAUC, RegressionRMSE or MulticlassAvgFScore based on the\n-- corresponding 'MLModelType': 'BINARY', 'REGRESSION' or 'MULTICLASS'.\n--\n-- 'CreateEvaluation' is an asynchronous operation. In response to 'CreateEvaluation', Amazon Machine Learning (Amazon ML) immediately returns and sets the\n-- evaluation status to 'PENDING'. After the 'Evaluation' is created and ready for\n-- use, Amazon ML sets the status to 'COMPLETED'.\n--\n-- You can use the 'GetEvaluation' operation to check progress of the evaluation\n-- during the creation operation.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 25,
                "ctor": "createEvaluation",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ceEvaluationId",
                        "name": "_ceEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'Evaluation'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ceEvaluationName",
                        "name": "_ceEvaluationName",
                        "shape": "EntityName",
                        "locationName": "EvaluationName",
                        "documentation": "-- | A user-supplied name or description of the 'Evaluation'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ceMLModelId",
                        "name": "_ceMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' to evaluate.\n--\n-- The schema used in creating the 'MLModel' must match the schema of the 'DataSource' used in the 'Evaluation'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ceEvaluationDataSourceId",
                        "name": "_ceEvaluationDataSourceId",
                        "shape": "EntityId",
                        "locationName": "EvaluationDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' for the evaluation. The schema of the 'DataSource'\n-- must match the schema used to create the 'MLModel'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ceEvaluationId",
                        "name": "_ceEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'Evaluation'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ceMLModelId",
                        "name": "_ceMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' to evaluate.\n--\n-- The schema used in creating the 'MLModel' must match the schema of the 'DataSource' used in the 'Evaluation'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ceEvaluationDataSourceId",
                        "name": "_ceEvaluationDataSourceId",
                        "shape": "EntityId",
                        "locationName": "EvaluationDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' for the evaluation. The schema of the 'DataSource'\n-- must match the schema used to create the 'MLModel'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 23,
                "queryPad": 0,
                "name": "CreateEvaluation",
                "query": [],
                "locationPad": 23,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ceEvaluationName",
                        "name": "_ceEvaluationName",
                        "shape": "EntityName",
                        "locationName": "EvaluationName",
                        "documentation": "-- | A user-supplied name or description of the 'Evaluation'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ceEvaluationDataSourceId",
                        "name": "_ceEvaluationDataSourceId",
                        "shape": "EntityId",
                        "locationName": "EvaluationDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' for the evaluation. The schema of the 'DataSource'\n-- must match the schema used to create the 'MLModel'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ceEvaluationId",
                        "name": "_ceEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'Evaluation'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ceEvaluationName",
                        "name": "_ceEvaluationName",
                        "shape": "EntityName",
                        "locationName": "EvaluationName",
                        "documentation": "-- | A user-supplied name or description of the 'Evaluation'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ceMLModelId",
                        "name": "_ceMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' to evaluate.\n--\n-- The schema used in creating the 'MLModel' must match the schema of the 'DataSource' used in the 'Evaluation'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "createMLModelResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "cmlmrMLModelId",
                    "name": "_cmlmrMLModelId",
                    "shape": "EntityId",
                    "locationName": "MLModelId",
                    "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'. This value should be\n-- identical to the value of the 'MLModelId' in the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cmlmrMLModelId",
                        "name": "_cmlmrMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'. This value should be\n-- identical to the value of the 'MLModelId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateMLModelResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cmlmrMLModelId",
                        "name": "_cmlmrMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'. This value should be\n-- identical to the value of the 'MLModelId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cmlmrMLModelId",
                        "name": "_cmlmrMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'. This value should be\n-- identical to the value of the 'MLModelId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_CreateMLModel.html",
            "namespace": "Network.AWS.MachineLearning.CreateMLModel",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "CreateMLModel",
            "method": "post",
            "documentation": "-- | Creates a new 'MLModel' using the data files and the recipe as information\n-- sources.\n--\n-- An 'MLModel' is nearly immutable. Users can only update the 'MLModelName' and\n-- the 'ScoreThreshold' in an 'MLModel' without creating a new 'MLModel'.\n--\n-- 'CreateMLModel' is an asynchronous operation. In response to 'CreateMLModel',\n-- Amazon Machine Learning (Amazon ML) immediately returns and sets the 'MLModel'\n-- status to 'PENDING'. After the 'MLModel' is created and ready for use, Amazon ML\n-- sets the status to 'COMPLETED'.\n--\n-- You can use the 'GetMLModel' operation to check progress of the 'MLModel' during\n-- the creation operation.\n--\n-- 'CreateMLModel' requires a 'DataSource' with computed statistics, which can be\n-- created by setting 'ComputeStatistics' to 'true' in 'CreateDataSourceFromRDS', 'CreateDataSourceFromS3', or 'CreateDataSourceFromRedshift' operations.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 25,
                "ctor": "createMLModel",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cmlmMLModelId",
                        "name": "_cmlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cmlmMLModelName",
                        "name": "_cmlmMLModelName",
                        "shape": "EntityName",
                        "locationName": "MLModelName",
                        "documentation": "-- | A user-supplied name or description of the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cmlmMLModelType",
                        "name": "_cmlmMLModelType",
                        "shape": "MLModelType",
                        "locationName": "MLModelType",
                        "documentation": "-- | The category of supervised learning that this 'MLModel' will address. Choose\n-- from the following types:\n--\n-- Choose 'REGRESSION' if the 'MLModel' will be used to predict a numeric value. Choose\n-- 'BINARY' if the 'MLModel' result has two possible values. Choose 'MULTICLASS' if\n-- the 'MLModel' result has a limited number of values.    For more information,\n-- see the \u003chttp://docs.aws.amazon.com/machine-learning/latest/dg Amazon Machine Learning Developer Guide\u003e.",
                        "typeExposed": "MLModelType",
                        "type": "MLModelType"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cmlmParameters",
                        "name": "_cmlmParameters",
                        "shape": "TrainingParameters",
                        "locationName": "Parameters",
                        "documentation": "-- | A list of the training parameters in the 'MLModel'. The list is implemented as\n-- a map of key/value pairs.\n--\n-- The following is the current set of training parameters:\n--\n-- 'sgd.l1RegularizationAmount' - Coefficient regularization L1 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to zero, resulting in sparse feature set. If you use this\n-- parameter, start by specifying a small value such as 1.0E-08.\n--\n-- The value is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L1 normalization. The parameter cannot be used when 'L2' is specified.\n-- Use this parameter sparingly.\n--\n-- 'sgd.l2RegularizationAmount' - Coefficient regularization L2 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to small, nonzero values. If you use this parameter, start\n-- by specifying a small value such as 1.0E-08.\n--\n-- The valuseis a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L2 normalization. This cannot be used when 'L1' is specified. Use this\n-- parameter sparingly.\n--\n-- 'sgd.maxPasses' - Number of times that the training process traverses the\n-- observations to build the 'MLModel'. The value is an integer that ranges from 1\n-- to 10000. The default value is 10.\n--\n-- 'sgd.maxMLModelSizeInBytes' - Maximum allowed size of the model. Depending on\n-- the input data, the size of the model might affect its performance.\n--\n-- The value is an integer that ranges from 100000 to 2147483648. The default\n-- value is 33554432.\n--\n--",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cmlmTrainingDataSourceId",
                        "name": "_cmlmTrainingDataSourceId",
                        "shape": "EntityId",
                        "locationName": "TrainingDataSourceId",
                        "documentation": "-- | The 'DataSource' that points to the training data.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cmlmRecipe",
                        "name": "_cmlmRecipe",
                        "shape": "Recipe",
                        "locationName": "Recipe",
                        "documentation": "-- | The data recipe for creating 'MLModel'. You must specify either the recipe or\n-- its URI. If you don’t specify a recipe or its URI, Amazon ML creates a\n-- default.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cmlmRecipeUri",
                        "name": "_cmlmRecipeUri",
                        "shape": "S3Url",
                        "locationName": "RecipeUri",
                        "documentation": "-- | The Amazon Simple Storage Service (Amazon S3) location and file name that\n-- contains the 'MLModel' recipe. You must specify either the recipe or its URI.\n-- If you don’t specify a recipe or its URI, Amazon ML creates a default.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cmlmMLModelId",
                        "name": "_cmlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cmlmMLModelType",
                        "name": "_cmlmMLModelType",
                        "shape": "MLModelType",
                        "locationName": "MLModelType",
                        "documentation": "-- | The category of supervised learning that this 'MLModel' will address. Choose\n-- from the following types:\n--\n-- Choose 'REGRESSION' if the 'MLModel' will be used to predict a numeric value. Choose\n-- 'BINARY' if the 'MLModel' result has two possible values. Choose 'MULTICLASS' if\n-- the 'MLModel' result has a limited number of values.    For more information,\n-- see the \u003chttp://docs.aws.amazon.com/machine-learning/latest/dg Amazon Machine Learning Developer Guide\u003e.",
                        "typeExposed": "MLModelType",
                        "type": "MLModelType"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cmlmTrainingDataSourceId",
                        "name": "_cmlmTrainingDataSourceId",
                        "shape": "EntityId",
                        "locationName": "TrainingDataSourceId",
                        "documentation": "-- | The 'DataSource' that points to the training data.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 21,
                "queryPad": 0,
                "name": "CreateMLModel",
                "query": [],
                "locationPad": 21,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cmlmMLModelName",
                        "name": "_cmlmMLModelName",
                        "shape": "EntityName",
                        "locationName": "MLModelName",
                        "documentation": "-- | A user-supplied name or description of the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cmlmParameters",
                        "name": "_cmlmParameters",
                        "shape": "TrainingParameters",
                        "locationName": "Parameters",
                        "documentation": "-- | A list of the training parameters in the 'MLModel'. The list is implemented as\n-- a map of key/value pairs.\n--\n-- The following is the current set of training parameters:\n--\n-- 'sgd.l1RegularizationAmount' - Coefficient regularization L1 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to zero, resulting in sparse feature set. If you use this\n-- parameter, start by specifying a small value such as 1.0E-08.\n--\n-- The value is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L1 normalization. The parameter cannot be used when 'L2' is specified.\n-- Use this parameter sparingly.\n--\n-- 'sgd.l2RegularizationAmount' - Coefficient regularization L2 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to small, nonzero values. If you use this parameter, start\n-- by specifying a small value such as 1.0E-08.\n--\n-- The valuseis a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L2 normalization. This cannot be used when 'L1' is specified. Use this\n-- parameter sparingly.\n--\n-- 'sgd.maxPasses' - Number of times that the training process traverses the\n-- observations to build the 'MLModel'. The value is an integer that ranges from 1\n-- to 10000. The default value is 10.\n--\n-- 'sgd.maxMLModelSizeInBytes' - Maximum allowed size of the model. Depending on\n-- the input data, the size of the model might affect its performance.\n--\n-- The value is an integer that ranges from 100000 to 2147483648. The default\n-- value is 33554432.\n--\n--",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cmlmRecipe",
                        "name": "_cmlmRecipe",
                        "shape": "Recipe",
                        "locationName": "Recipe",
                        "documentation": "-- | The data recipe for creating 'MLModel'. You must specify either the recipe or\n-- its URI. If you don’t specify a recipe or its URI, Amazon ML creates a\n-- default.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cmlmRecipeUri",
                        "name": "_cmlmRecipeUri",
                        "shape": "S3Url",
                        "locationName": "RecipeUri",
                        "documentation": "-- | The Amazon Simple Storage Service (Amazon S3) location and file name that\n-- contains the 'MLModel' recipe. You must specify either the recipe or its URI.\n-- If you don’t specify a recipe or its URI, Amazon ML creates a default.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cmlmMLModelId",
                        "name": "_cmlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cmlmMLModelName",
                        "name": "_cmlmMLModelName",
                        "shape": "EntityName",
                        "locationName": "MLModelName",
                        "documentation": "-- | A user-supplied name or description of the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cmlmMLModelType",
                        "name": "_cmlmMLModelType",
                        "shape": "MLModelType",
                        "locationName": "MLModelType",
                        "documentation": "-- | The category of supervised learning that this 'MLModel' will address. Choose\n-- from the following types:\n--\n-- Choose 'REGRESSION' if the 'MLModel' will be used to predict a numeric value. Choose\n-- 'BINARY' if the 'MLModel' result has two possible values. Choose 'MULTICLASS' if\n-- the 'MLModel' result has a limited number of values.    For more information,\n-- see the \u003chttp://docs.aws.amazon.com/machine-learning/latest/dg Amazon Machine Learning Developer Guide\u003e.",
                        "typeExposed": "MLModelType",
                        "type": "MLModelType"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cmlmParameters",
                        "name": "_cmlmParameters",
                        "shape": "TrainingParameters",
                        "locationName": "Parameters",
                        "documentation": "-- | A list of the training parameters in the 'MLModel'. The list is implemented as\n-- a map of key/value pairs.\n--\n-- The following is the current set of training parameters:\n--\n-- 'sgd.l1RegularizationAmount' - Coefficient regularization L1 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to zero, resulting in sparse feature set. If you use this\n-- parameter, start by specifying a small value such as 1.0E-08.\n--\n-- The value is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L1 normalization. The parameter cannot be used when 'L2' is specified.\n-- Use this parameter sparingly.\n--\n-- 'sgd.l2RegularizationAmount' - Coefficient regularization L2 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to small, nonzero values. If you use this parameter, start\n-- by specifying a small value such as 1.0E-08.\n--\n-- The valuseis a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L2 normalization. This cannot be used when 'L1' is specified. Use this\n-- parameter sparingly.\n--\n-- 'sgd.maxPasses' - Number of times that the training process traverses the\n-- observations to build the 'MLModel'. The value is an integer that ranges from 1\n-- to 10000. The default value is 10.\n--\n-- 'sgd.maxMLModelSizeInBytes' - Maximum allowed size of the model. Depending on\n-- the input data, the size of the model might affect its performance.\n--\n-- The value is an integer that ranges from 100000 to 2147483648. The default\n-- value is 33554432.\n--\n--",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cmlmRecipe",
                        "name": "_cmlmRecipe",
                        "shape": "Recipe",
                        "locationName": "Recipe",
                        "documentation": "-- | The data recipe for creating 'MLModel'. You must specify either the recipe or\n-- its URI. If you don’t specify a recipe or its URI, Amazon ML creates a\n-- default.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "cmlmRecipeUri",
                        "name": "_cmlmRecipeUri",
                        "shape": "S3Url",
                        "locationName": "RecipeUri",
                        "documentation": "-- | The Amazon Simple Storage Service (Amazon S3) location and file name that\n-- contains the 'MLModel' recipe. You must specify either the recipe or its URI.\n-- If you don’t specify a recipe or its URI, Amazon ML creates a default.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "cmlmTrainingDataSourceId",
                        "name": "_cmlmTrainingDataSourceId",
                        "shape": "EntityId",
                        "locationName": "TrainingDataSourceId",
                        "documentation": "-- | The 'DataSource' that points to the training data.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 25,
                "ctor": "createRealtimeEndpointResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "crerMLModelId",
                        "name": "_crerMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'. This value should be\n-- identical to the value of the 'MLModelId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "crerRealtimeEndpointInfo",
                        "name": "_crerRealtimeEndpointInfo",
                        "shape": "RealtimeEndpointInfo",
                        "locationName": "RealtimeEndpointInfo",
                        "documentation": "-- | The endpoint information of the 'MLModel'",
                        "typeExposed": "Maybe RealtimeEndpointInfo",
                        "type": "Maybe RealtimeEndpointInfo"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 21,
                "name": "CreateRealtimeEndpointResponse",
                "resultWrapper": null,
                "locationPad": 21,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "crerMLModelId",
                        "name": "_crerMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'. This value should be\n-- identical to the value of the 'MLModelId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "crerRealtimeEndpointInfo",
                        "name": "_crerRealtimeEndpointInfo",
                        "shape": "RealtimeEndpointInfo",
                        "locationName": "RealtimeEndpointInfo",
                        "documentation": "-- | The endpoint information of the 'MLModel'",
                        "typeExposed": "Maybe RealtimeEndpointInfo",
                        "type": "Maybe RealtimeEndpointInfo"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "crerMLModelId",
                        "name": "_crerMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'. This value should be\n-- identical to the value of the 'MLModelId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "crerRealtimeEndpointInfo",
                        "name": "_crerRealtimeEndpointInfo",
                        "shape": "RealtimeEndpointInfo",
                        "locationName": "RealtimeEndpointInfo",
                        "documentation": "-- | The endpoint information of the 'MLModel'",
                        "typeExposed": "Maybe RealtimeEndpointInfo",
                        "type": "Maybe RealtimeEndpointInfo"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_CreateRealtimeEndpoint.html",
            "namespace": "Network.AWS.MachineLearning.CreateRealtimeEndpoint",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "CreateRealtimeEndpoint",
            "method": "post",
            "documentation": "-- | Creates a real-time endpoint for the 'MLModel'. The endpoint contains the URI\n-- of the 'MLModel'; that is, the location to send real-time prediction requests\n-- for the specified 'MLModel'.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "createRealtimeEndpoint",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "creMLModelId",
                    "name": "_creMLModelId",
                    "shape": "EntityId",
                    "locationName": "MLModelId",
                    "documentation": "-- | The ID assigned to the 'MLModel' during creation.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "creMLModelId",
                        "name": "_creMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "creMLModelId",
                        "name": "_creMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "CreateRealtimeEndpoint",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "creMLModelId",
                        "name": "_creMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "deleteBatchPredictionResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "dbprBatchPredictionId",
                    "name": "_dbprBatchPredictionId",
                    "shape": "EntityId",
                    "locationName": "BatchPredictionId",
                    "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'. This value\n-- should be identical to the value of the 'BatchPredictionID' in the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbprBatchPredictionId",
                        "name": "_dbprBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'. This value\n-- should be identical to the value of the 'BatchPredictionID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DeleteBatchPredictionResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbprBatchPredictionId",
                        "name": "_dbprBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'. This value\n-- should be identical to the value of the 'BatchPredictionID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbprBatchPredictionId",
                        "name": "_dbprBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'. This value\n-- should be identical to the value of the 'BatchPredictionID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_DeleteBatchPrediction.html",
            "namespace": "Network.AWS.MachineLearning.DeleteBatchPrediction",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "DeleteBatchPrediction",
            "method": "post",
            "documentation": "-- | Assigns the DELETED status to a 'BatchPrediction', rendering it unusable.\n--\n-- After using the 'DeleteBatchPrediction' operation, you can use the 'GetBatchPrediction' operation to verify that the status of the 'BatchPrediction' changed to\n-- DELETED.\n--\n-- Caution The result of the 'DeleteBatchPrediction' operation is irreversible.\n--",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "deleteBatchPrediction",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "dbpBatchPredictionId",
                    "name": "_dbpBatchPredictionId",
                    "shape": "EntityId",
                    "locationName": "BatchPredictionId",
                    "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dbpBatchPredictionId",
                        "name": "_dbpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dbpBatchPredictionId",
                        "name": "_dbpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteBatchPrediction",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dbpBatchPredictionId",
                        "name": "_dbpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'BatchPrediction'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "deleteDataSourceResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "ddsrDataSourceId",
                    "name": "_ddsrDataSourceId",
                    "shape": "EntityId",
                    "locationName": "DataSourceId",
                    "documentation": "-- | A user-supplied ID that uniquely identifies the 'DataSource'. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsrDataSourceId",
                        "name": "_ddsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'DataSource'. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DeleteDataSourceResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsrDataSourceId",
                        "name": "_ddsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'DataSource'. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsrDataSourceId",
                        "name": "_ddsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'DataSource'. This value should\n-- be identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_DeleteDataSource.html",
            "namespace": "Network.AWS.MachineLearning.DeleteDataSource",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "DeleteDataSource",
            "method": "post",
            "documentation": "-- | Assigns the DELETED status to a 'DataSource', rendering it unusable.\n--\n-- After using the 'DeleteDataSource' operation, you can use the 'GetDataSource'\n-- operation to verify that the status of the 'DataSource' changed to DELETED.\n--\n-- Caution The results of the 'DeleteDataSource' operation are irreversible.\n--",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "deleteDataSource",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "ddsDataSourceId",
                    "name": "_ddsDataSourceId",
                    "shape": "EntityId",
                    "locationName": "DataSourceId",
                    "documentation": "-- | A user-supplied ID that uniquely identifies the 'DataSource'.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ddsDataSourceId",
                        "name": "_ddsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ddsDataSourceId",
                        "name": "_ddsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteDataSource",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ddsDataSourceId",
                        "name": "_ddsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'DataSource'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "deleteEvaluationResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "derEvaluationId",
                    "name": "_derEvaluationId",
                    "shape": "EntityId",
                    "locationName": "EvaluationId",
                    "documentation": "-- | A user-supplied ID that uniquely identifies the 'Evaluation'. This value should\n-- be identical to the value of the 'EvaluationId' in the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "derEvaluationId",
                        "name": "_derEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'Evaluation'. This value should\n-- be identical to the value of the 'EvaluationId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DeleteEvaluationResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "derEvaluationId",
                        "name": "_derEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'Evaluation'. This value should\n-- be identical to the value of the 'EvaluationId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "derEvaluationId",
                        "name": "_derEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'Evaluation'. This value should\n-- be identical to the value of the 'EvaluationId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_DeleteEvaluation.html",
            "namespace": "Network.AWS.MachineLearning.DeleteEvaluation",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "DeleteEvaluation",
            "method": "post",
            "documentation": "-- | Assigns the 'DELETED' status to an 'Evaluation', rendering it unusable.\n--\n-- After invoking the 'DeleteEvaluation' operation, you can use the 'GetEvaluation'\n-- operation to verify that the status of the 'Evaluation' changed to 'DELETED'.\n--\n-- Caution The results of the 'DeleteEvaluation' operation are irreversible.\n--",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "deleteEvaluation",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "deEvaluationId",
                    "name": "_deEvaluationId",
                    "shape": "EntityId",
                    "locationName": "EvaluationId",
                    "documentation": "-- | A user-supplied ID that uniquely identifies the 'Evaluation' to delete.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "deEvaluationId",
                        "name": "_deEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'Evaluation' to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "deEvaluationId",
                        "name": "_deEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'Evaluation' to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteEvaluation",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "deEvaluationId",
                        "name": "_deEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'Evaluation' to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "deleteMLModelResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "dmlmrMLModelId",
                    "name": "_dmlmrMLModelId",
                    "shape": "EntityId",
                    "locationName": "MLModelId",
                    "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'. This value should be\n-- identical to the value of the 'MLModelID' in the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmrMLModelId",
                        "name": "_dmlmrMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'. This value should be\n-- identical to the value of the 'MLModelID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DeleteMLModelResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmrMLModelId",
                        "name": "_dmlmrMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'. This value should be\n-- identical to the value of the 'MLModelID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmrMLModelId",
                        "name": "_dmlmrMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'. This value should be\n-- identical to the value of the 'MLModelID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_DeleteMLModel.html",
            "namespace": "Network.AWS.MachineLearning.DeleteMLModel",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "DeleteMLModel",
            "method": "post",
            "documentation": "-- | Assigns the DELETED status to an 'MLModel', rendering it unusable.\n--\n-- After using the 'DeleteMLModel' operation, you can use the 'GetMLModel'\n-- operation to verify that the status of the 'MLModel' changed to DELETED.\n--\n-- Caution The result of the 'DeleteMLModel' operation is irreversible.\n--",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "deleteMLModel",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "dmlmMLModelId",
                    "name": "_dmlmMLModelId",
                    "shape": "EntityId",
                    "locationName": "MLModelId",
                    "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dmlmMLModelId",
                        "name": "_dmlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dmlmMLModelId",
                        "name": "_dmlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteMLModel",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dmlmMLModelId",
                        "name": "_dmlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 25,
                "ctor": "deleteRealtimeEndpointResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "drerMLModelId",
                        "name": "_drerMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'. This value should be\n-- identical to the value of the 'MLModelId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "drerRealtimeEndpointInfo",
                        "name": "_drerRealtimeEndpointInfo",
                        "shape": "RealtimeEndpointInfo",
                        "locationName": "RealtimeEndpointInfo",
                        "documentation": "-- | The endpoint information of the 'MLModel'",
                        "typeExposed": "Maybe RealtimeEndpointInfo",
                        "type": "Maybe RealtimeEndpointInfo"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 21,
                "name": "DeleteRealtimeEndpointResponse",
                "resultWrapper": null,
                "locationPad": 21,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "drerMLModelId",
                        "name": "_drerMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'. This value should be\n-- identical to the value of the 'MLModelId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "drerRealtimeEndpointInfo",
                        "name": "_drerRealtimeEndpointInfo",
                        "shape": "RealtimeEndpointInfo",
                        "locationName": "RealtimeEndpointInfo",
                        "documentation": "-- | The endpoint information of the 'MLModel'",
                        "typeExposed": "Maybe RealtimeEndpointInfo",
                        "type": "Maybe RealtimeEndpointInfo"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "drerMLModelId",
                        "name": "_drerMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A user-supplied ID that uniquely identifies the 'MLModel'. This value should be\n-- identical to the value of the 'MLModelId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "drerRealtimeEndpointInfo",
                        "name": "_drerRealtimeEndpointInfo",
                        "shape": "RealtimeEndpointInfo",
                        "locationName": "RealtimeEndpointInfo",
                        "documentation": "-- | The endpoint information of the 'MLModel'",
                        "typeExposed": "Maybe RealtimeEndpointInfo",
                        "type": "Maybe RealtimeEndpointInfo"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_DeleteRealtimeEndpoint.html",
            "namespace": "Network.AWS.MachineLearning.DeleteRealtimeEndpoint",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "DeleteRealtimeEndpoint",
            "method": "post",
            "documentation": "-- | Deletes a real time endpoint of an 'MLModel'.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "deleteRealtimeEndpoint",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "dreMLModelId",
                    "name": "_dreMLModelId",
                    "shape": "EntityId",
                    "locationName": "MLModelId",
                    "documentation": "-- | The ID assigned to the 'MLModel' during creation.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dreMLModelId",
                        "name": "_dreMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dreMLModelId",
                        "name": "_dreMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteRealtimeEndpoint",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dreMLModelId",
                        "name": "_dreMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "describeBatchPredictionsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dbprResults",
                        "name": "_dbprResults",
                        "shape": "BatchPredictions",
                        "locationName": "Results",
                        "documentation": "-- | A list of 'BatchPrediction' objects that meet the search criteria.",
                        "typeExposed": "[BatchPrediction]",
                        "type": "List \"Results\" BatchPrediction"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbprNextToken",
                        "name": "_dbprNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the next page in the paginated results that indicates at least one\n-- more page follows.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 10,
                "name": "DescribeBatchPredictionsResponse",
                "resultWrapper": null,
                "locationPad": 10,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dbprResults",
                        "name": "_dbprResults",
                        "shape": "BatchPredictions",
                        "locationName": "Results",
                        "documentation": "-- | A list of 'BatchPrediction' objects that meet the search criteria.",
                        "typeExposed": "[BatchPrediction]",
                        "type": "List \"Results\" BatchPrediction"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbprNextToken",
                        "name": "_dbprNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the next page in the paginated results that indicates at least one\n-- more page follows.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbprNextToken",
                        "name": "_dbprNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the next page in the paginated results that indicates at least one\n-- more page follows.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dbprResults",
                        "name": "_dbprResults",
                        "shape": "BatchPredictions",
                        "locationName": "Results",
                        "documentation": "-- | A list of 'BatchPrediction' objects that meet the search criteria.",
                        "typeExposed": "[BatchPrediction]",
                        "type": "List \"Results\" BatchPrediction"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_DescribeBatchPredictions.html",
            "namespace": "Network.AWS.MachineLearning.DescribeBatchPredictions",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": {
                "token": {
                    "input": "dbpNextToken",
                    "outputRequired": false,
                    "output": "dbprNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dbprResults"
            },
            "name": "DescribeBatchPredictions",
            "method": "post",
            "documentation": "-- | Returns a list of 'BatchPrediction' operations that match the search criteria\n-- in the request.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 18,
                "ctor": "describeBatchPredictions",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpFilterVariable",
                        "name": "_dbpFilterVariable",
                        "shape": "BatchPredictionFilterVariable",
                        "locationName": "FilterVariable",
                        "documentation": "-- | Use one of the following variables to filter a list of 'BatchPrediction':\n--\n-- 'CreatedAt' - Sets the search criteria to the 'BatchPrediction' creation date.\n-- 'Status' - Sets the search criteria to the 'BatchPrediction' status.  'Name' -\n-- Sets the search criteria to the contents of the 'BatchPrediction'  'Name'.  'IAMUser' - Sets the search criteria to the user account that invoked the 'BatchPrediction' creation.  'MLModelId' - Sets the search criteria to the 'MLModel' used in the 'BatchPrediction'.  'DataSourceId' - Sets the search criteria to the 'DataSource' used in the 'BatchPrediction'.  'DataURI' - Sets the search criteria to the data file(s) used in the 'BatchPrediction'. The URL can identify either a file or an Amazon Simple Storage Solution\n-- (Amazon S3) bucket or directory.",
                        "typeExposed": "Maybe BatchPredictionFilterVariable",
                        "type": "Maybe BatchPredictionFilterVariable"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpEQ",
                        "name": "_dbpEQ",
                        "shape": "ComparatorValue",
                        "locationName": "EQ",
                        "documentation": "-- | The equal to operator. The 'BatchPrediction' results will have 'FilterVariable'\n-- values that exactly match the value specified with 'EQ'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpGT",
                        "name": "_dbpGT",
                        "shape": "ComparatorValue",
                        "locationName": "GT",
                        "documentation": "-- | The greater than operator. The 'BatchPrediction' results will have 'FilterVariable' values that are greater than the value specified with 'GT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpLT",
                        "name": "_dbpLT",
                        "shape": "ComparatorValue",
                        "locationName": "LT",
                        "documentation": "-- | The less than operator. The 'BatchPrediction' results will have 'FilterVariable'\n-- values that are less than the value specified with 'LT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpGE",
                        "name": "_dbpGE",
                        "shape": "ComparatorValue",
                        "locationName": "GE",
                        "documentation": "-- | The greater than or equal to operator. The 'BatchPrediction' results will have 'FilterVariable' values that are greater than or equal to the value specified with 'GE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpLE",
                        "name": "_dbpLE",
                        "shape": "ComparatorValue",
                        "locationName": "LE",
                        "documentation": "-- | The less than or equal to operator. The 'BatchPrediction' results will have 'FilterVariable' values that are less than or equal to the value specified with 'LE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpNE",
                        "name": "_dbpNE",
                        "shape": "ComparatorValue",
                        "locationName": "NE",
                        "documentation": "-- | The not equal to operator. The 'BatchPrediction' results will have 'FilterVariable' values not equal to the value specified with 'NE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpPrefix",
                        "name": "_dbpPrefix",
                        "shape": "ComparatorValue",
                        "locationName": "Prefix",
                        "documentation": "-- | A string that is found at the beginning of a variable, such as 'Name' or 'Id'.\n--\n-- For example, a 'Batch Prediction' operation could have the 'Name' '2014-09-09-HolidayGiftMailer'. To search for this 'BatchPrediction', select 'Name' for the 'FilterVariable' and\n-- any of the following strings for the 'Prefix':\n--\n-- 2014-09\n--\n-- 2014-09-09\n--\n-- 2014-09-09-Holiday\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpSortOrder",
                        "name": "_dbpSortOrder",
                        "shape": "SortOrder",
                        "locationName": "SortOrder",
                        "documentation": "-- | A two-value parameter that determines the sequence of the resulting list of 'MLModel's.\n--\n-- 'asc' - Arranges the list in ascending order (A-Z, 0-9).  'dsc' - Arranges the\n-- list in descending order (Z-A, 9-0).  Results are sorted by 'FilterVariable'.",
                        "typeExposed": "Maybe SortOrder",
                        "type": "Maybe SortOrder"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpNextToken",
                        "name": "_dbpNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | An ID of the page in the paginated results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpLimit",
                        "name": "_dbpLimit",
                        "shape": "PageLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The number of pages of information to include in the result. The range of\n-- acceptable values is 1 through 100. The default value is 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "queryPad": 0,
                "name": "DescribeBatchPredictions",
                "query": [],
                "locationPad": 15,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpFilterVariable",
                        "name": "_dbpFilterVariable",
                        "shape": "BatchPredictionFilterVariable",
                        "locationName": "FilterVariable",
                        "documentation": "-- | Use one of the following variables to filter a list of 'BatchPrediction':\n--\n-- 'CreatedAt' - Sets the search criteria to the 'BatchPrediction' creation date.\n-- 'Status' - Sets the search criteria to the 'BatchPrediction' status.  'Name' -\n-- Sets the search criteria to the contents of the 'BatchPrediction'  'Name'.  'IAMUser' - Sets the search criteria to the user account that invoked the 'BatchPrediction' creation.  'MLModelId' - Sets the search criteria to the 'MLModel' used in the 'BatchPrediction'.  'DataSourceId' - Sets the search criteria to the 'DataSource' used in the 'BatchPrediction'.  'DataURI' - Sets the search criteria to the data file(s) used in the 'BatchPrediction'. The URL can identify either a file or an Amazon Simple Storage Solution\n-- (Amazon S3) bucket or directory.",
                        "typeExposed": "Maybe BatchPredictionFilterVariable",
                        "type": "Maybe BatchPredictionFilterVariable"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpEQ",
                        "name": "_dbpEQ",
                        "shape": "ComparatorValue",
                        "locationName": "EQ",
                        "documentation": "-- | The equal to operator. The 'BatchPrediction' results will have 'FilterVariable'\n-- values that exactly match the value specified with 'EQ'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpGT",
                        "name": "_dbpGT",
                        "shape": "ComparatorValue",
                        "locationName": "GT",
                        "documentation": "-- | The greater than operator. The 'BatchPrediction' results will have 'FilterVariable' values that are greater than the value specified with 'GT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpLT",
                        "name": "_dbpLT",
                        "shape": "ComparatorValue",
                        "locationName": "LT",
                        "documentation": "-- | The less than operator. The 'BatchPrediction' results will have 'FilterVariable'\n-- values that are less than the value specified with 'LT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpGE",
                        "name": "_dbpGE",
                        "shape": "ComparatorValue",
                        "locationName": "GE",
                        "documentation": "-- | The greater than or equal to operator. The 'BatchPrediction' results will have 'FilterVariable' values that are greater than or equal to the value specified with 'GE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpLE",
                        "name": "_dbpLE",
                        "shape": "ComparatorValue",
                        "locationName": "LE",
                        "documentation": "-- | The less than or equal to operator. The 'BatchPrediction' results will have 'FilterVariable' values that are less than or equal to the value specified with 'LE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpNE",
                        "name": "_dbpNE",
                        "shape": "ComparatorValue",
                        "locationName": "NE",
                        "documentation": "-- | The not equal to operator. The 'BatchPrediction' results will have 'FilterVariable' values not equal to the value specified with 'NE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpPrefix",
                        "name": "_dbpPrefix",
                        "shape": "ComparatorValue",
                        "locationName": "Prefix",
                        "documentation": "-- | A string that is found at the beginning of a variable, such as 'Name' or 'Id'.\n--\n-- For example, a 'Batch Prediction' operation could have the 'Name' '2014-09-09-HolidayGiftMailer'. To search for this 'BatchPrediction', select 'Name' for the 'FilterVariable' and\n-- any of the following strings for the 'Prefix':\n--\n-- 2014-09\n--\n-- 2014-09-09\n--\n-- 2014-09-09-Holiday\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpSortOrder",
                        "name": "_dbpSortOrder",
                        "shape": "SortOrder",
                        "locationName": "SortOrder",
                        "documentation": "-- | A two-value parameter that determines the sequence of the resulting list of 'MLModel's.\n--\n-- 'asc' - Arranges the list in ascending order (A-Z, 0-9).  'dsc' - Arranges the\n-- list in descending order (Z-A, 9-0).  Results are sorted by 'FilterVariable'.",
                        "typeExposed": "Maybe SortOrder",
                        "type": "Maybe SortOrder"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpNextToken",
                        "name": "_dbpNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | An ID of the page in the paginated results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpLimit",
                        "name": "_dbpLimit",
                        "shape": "PageLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The number of pages of information to include in the result. The range of\n-- acceptable values is 1 through 100. The default value is 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpEQ",
                        "name": "_dbpEQ",
                        "shape": "ComparatorValue",
                        "locationName": "EQ",
                        "documentation": "-- | The equal to operator. The 'BatchPrediction' results will have 'FilterVariable'\n-- values that exactly match the value specified with 'EQ'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpFilterVariable",
                        "name": "_dbpFilterVariable",
                        "shape": "BatchPredictionFilterVariable",
                        "locationName": "FilterVariable",
                        "documentation": "-- | Use one of the following variables to filter a list of 'BatchPrediction':\n--\n-- 'CreatedAt' - Sets the search criteria to the 'BatchPrediction' creation date.\n-- 'Status' - Sets the search criteria to the 'BatchPrediction' status.  'Name' -\n-- Sets the search criteria to the contents of the 'BatchPrediction'  'Name'.  'IAMUser' - Sets the search criteria to the user account that invoked the 'BatchPrediction' creation.  'MLModelId' - Sets the search criteria to the 'MLModel' used in the 'BatchPrediction'.  'DataSourceId' - Sets the search criteria to the 'DataSource' used in the 'BatchPrediction'.  'DataURI' - Sets the search criteria to the data file(s) used in the 'BatchPrediction'. The URL can identify either a file or an Amazon Simple Storage Solution\n-- (Amazon S3) bucket or directory.",
                        "typeExposed": "Maybe BatchPredictionFilterVariable",
                        "type": "Maybe BatchPredictionFilterVariable"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpGE",
                        "name": "_dbpGE",
                        "shape": "ComparatorValue",
                        "locationName": "GE",
                        "documentation": "-- | The greater than or equal to operator. The 'BatchPrediction' results will have 'FilterVariable' values that are greater than or equal to the value specified with 'GE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpGT",
                        "name": "_dbpGT",
                        "shape": "ComparatorValue",
                        "locationName": "GT",
                        "documentation": "-- | The greater than operator. The 'BatchPrediction' results will have 'FilterVariable' values that are greater than the value specified with 'GT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpLE",
                        "name": "_dbpLE",
                        "shape": "ComparatorValue",
                        "locationName": "LE",
                        "documentation": "-- | The less than or equal to operator. The 'BatchPrediction' results will have 'FilterVariable' values that are less than or equal to the value specified with 'LE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpLT",
                        "name": "_dbpLT",
                        "shape": "ComparatorValue",
                        "locationName": "LT",
                        "documentation": "-- | The less than operator. The 'BatchPrediction' results will have 'FilterVariable'\n-- values that are less than the value specified with 'LT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpLimit",
                        "name": "_dbpLimit",
                        "shape": "PageLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The number of pages of information to include in the result. The range of\n-- acceptable values is 1 through 100. The default value is 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpNE",
                        "name": "_dbpNE",
                        "shape": "ComparatorValue",
                        "locationName": "NE",
                        "documentation": "-- | The not equal to operator. The 'BatchPrediction' results will have 'FilterVariable' values not equal to the value specified with 'NE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpNextToken",
                        "name": "_dbpNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | An ID of the page in the paginated results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpPrefix",
                        "name": "_dbpPrefix",
                        "shape": "ComparatorValue",
                        "locationName": "Prefix",
                        "documentation": "-- | A string that is found at the beginning of a variable, such as 'Name' or 'Id'.\n--\n-- For example, a 'Batch Prediction' operation could have the 'Name' '2014-09-09-HolidayGiftMailer'. To search for this 'BatchPrediction', select 'Name' for the 'FilterVariable' and\n-- any of the following strings for the 'Prefix':\n--\n-- 2014-09\n--\n-- 2014-09-09\n--\n-- 2014-09-09-Holiday\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dbpSortOrder",
                        "name": "_dbpSortOrder",
                        "shape": "SortOrder",
                        "locationName": "SortOrder",
                        "documentation": "-- | A two-value parameter that determines the sequence of the resulting list of 'MLModel's.\n--\n-- 'asc' - Arranges the list in ascending order (A-Z, 0-9).  'dsc' - Arranges the\n-- list in descending order (Z-A, 9-0).  Results are sorted by 'FilterVariable'.",
                        "typeExposed": "Maybe SortOrder",
                        "type": "Maybe SortOrder"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "describeDataSourcesResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ddsrResults",
                        "name": "_ddsrResults",
                        "shape": "DataSources",
                        "locationName": "Results",
                        "documentation": "-- | A list of 'DataSource' that meet the search criteria.",
                        "typeExposed": "[DataSource]",
                        "type": "List \"Results\" DataSource"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsrNextToken",
                        "name": "_ddsrNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | An ID of the next page in the paginated results that indicates at least one\n-- more page follows.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 10,
                "name": "DescribeDataSourcesResponse",
                "resultWrapper": null,
                "locationPad": 10,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ddsrResults",
                        "name": "_ddsrResults",
                        "shape": "DataSources",
                        "locationName": "Results",
                        "documentation": "-- | A list of 'DataSource' that meet the search criteria.",
                        "typeExposed": "[DataSource]",
                        "type": "List \"Results\" DataSource"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsrNextToken",
                        "name": "_ddsrNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | An ID of the next page in the paginated results that indicates at least one\n-- more page follows.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsrNextToken",
                        "name": "_ddsrNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | An ID of the next page in the paginated results that indicates at least one\n-- more page follows.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ddsrResults",
                        "name": "_ddsrResults",
                        "shape": "DataSources",
                        "locationName": "Results",
                        "documentation": "-- | A list of 'DataSource' that meet the search criteria.",
                        "typeExposed": "[DataSource]",
                        "type": "List \"Results\" DataSource"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_DescribeDataSources.html",
            "namespace": "Network.AWS.MachineLearning.DescribeDataSources",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": {
                "token": {
                    "input": "ddsNextToken",
                    "outputRequired": false,
                    "output": "ddsrNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "ddsrResults"
            },
            "name": "DescribeDataSources",
            "method": "post",
            "documentation": "-- | Returns a list of 'DataSource' that match the search criteria in the request.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 18,
                "ctor": "describeDataSources",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsFilterVariable",
                        "name": "_ddsFilterVariable",
                        "shape": "DataSourceFilterVariable",
                        "locationName": "FilterVariable",
                        "documentation": "-- | Use one of the following variables to filter a list of 'DataSource':\n--\n-- 'CreatedAt' - Sets the search criteria to 'DataSource' creation dates.  'Status'\n-- - Sets the search criteria to 'DataSource' statuses.  'Name' - Sets the search\n-- criteria to the contents of 'DataSource'   'Name'.  'DataUri' - Sets the search\n-- criteria to the URI of data files used to create the 'DataSource'. The URI can\n-- identify either a file or an Amazon Simple Storage Service (Amazon S3) bucket\n-- or directory.  'IAMUser' - Sets the search criteria to the user account that\n-- invoked the 'DataSource' creation.",
                        "typeExposed": "Maybe DataSourceFilterVariable",
                        "type": "Maybe DataSourceFilterVariable"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsEQ",
                        "name": "_ddsEQ",
                        "shape": "ComparatorValue",
                        "locationName": "EQ",
                        "documentation": "-- | The equal to operator. The 'DataSource' results will have 'FilterVariable' values\n-- that exactly match the value specified with 'EQ'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsGT",
                        "name": "_ddsGT",
                        "shape": "ComparatorValue",
                        "locationName": "GT",
                        "documentation": "-- | The greater than operator. The 'DataSource' results will have 'FilterVariable'\n-- values that are greater than the value specified with 'GT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsLT",
                        "name": "_ddsLT",
                        "shape": "ComparatorValue",
                        "locationName": "LT",
                        "documentation": "-- | The less than operator. The 'DataSource' results will have 'FilterVariable'\n-- values that are less than the value specified with 'LT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsGE",
                        "name": "_ddsGE",
                        "shape": "ComparatorValue",
                        "locationName": "GE",
                        "documentation": "-- | The greater than or equal to operator. The 'DataSource' results will have 'FilterVariable' values that are greater than or equal to the value specified with 'GE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsLE",
                        "name": "_ddsLE",
                        "shape": "ComparatorValue",
                        "locationName": "LE",
                        "documentation": "-- | The less than or equal to operator. The 'DataSource' results will have 'FilterVariable' values that are less than or equal to the value specified with 'LE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsNE",
                        "name": "_ddsNE",
                        "shape": "ComparatorValue",
                        "locationName": "NE",
                        "documentation": "-- | The not equal to operator. The 'DataSource' results will have 'FilterVariable'\n-- values not equal to the value specified with 'NE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsPrefix",
                        "name": "_ddsPrefix",
                        "shape": "ComparatorValue",
                        "locationName": "Prefix",
                        "documentation": "-- | A string that is found at the beginning of a variable, such as 'Name' or 'Id'.\n--\n-- For example, a 'DataSource' could have the 'Name' '2014-09-09-HolidayGiftMailer'.\n-- To search for this 'DataSource', select 'Name' for the 'FilterVariable' and any of\n-- the following strings for the 'Prefix':\n--\n-- 2014-09\n--\n-- 2014-09-09\n--\n-- 2014-09-09-Holiday\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsSortOrder",
                        "name": "_ddsSortOrder",
                        "shape": "SortOrder",
                        "locationName": "SortOrder",
                        "documentation": "-- | A two-value parameter that determines the sequence of the resulting list of 'DataSource'.\n--\n-- 'asc' - Arranges the list in ascending order (A-Z, 0-9).  'dsc' - Arranges the\n-- list in descending order (Z-A, 9-0).  Results are sorted by 'FilterVariable'.",
                        "typeExposed": "Maybe SortOrder",
                        "type": "Maybe SortOrder"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsNextToken",
                        "name": "_ddsNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the page in the paginated results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsLimit",
                        "name": "_ddsLimit",
                        "shape": "PageLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of 'DataSource' to include in the result.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "queryPad": 0,
                "name": "DescribeDataSources",
                "query": [],
                "locationPad": 15,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsFilterVariable",
                        "name": "_ddsFilterVariable",
                        "shape": "DataSourceFilterVariable",
                        "locationName": "FilterVariable",
                        "documentation": "-- | Use one of the following variables to filter a list of 'DataSource':\n--\n-- 'CreatedAt' - Sets the search criteria to 'DataSource' creation dates.  'Status'\n-- - Sets the search criteria to 'DataSource' statuses.  'Name' - Sets the search\n-- criteria to the contents of 'DataSource'   'Name'.  'DataUri' - Sets the search\n-- criteria to the URI of data files used to create the 'DataSource'. The URI can\n-- identify either a file or an Amazon Simple Storage Service (Amazon S3) bucket\n-- or directory.  'IAMUser' - Sets the search criteria to the user account that\n-- invoked the 'DataSource' creation.",
                        "typeExposed": "Maybe DataSourceFilterVariable",
                        "type": "Maybe DataSourceFilterVariable"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsEQ",
                        "name": "_ddsEQ",
                        "shape": "ComparatorValue",
                        "locationName": "EQ",
                        "documentation": "-- | The equal to operator. The 'DataSource' results will have 'FilterVariable' values\n-- that exactly match the value specified with 'EQ'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsGT",
                        "name": "_ddsGT",
                        "shape": "ComparatorValue",
                        "locationName": "GT",
                        "documentation": "-- | The greater than operator. The 'DataSource' results will have 'FilterVariable'\n-- values that are greater than the value specified with 'GT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsLT",
                        "name": "_ddsLT",
                        "shape": "ComparatorValue",
                        "locationName": "LT",
                        "documentation": "-- | The less than operator. The 'DataSource' results will have 'FilterVariable'\n-- values that are less than the value specified with 'LT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsGE",
                        "name": "_ddsGE",
                        "shape": "ComparatorValue",
                        "locationName": "GE",
                        "documentation": "-- | The greater than or equal to operator. The 'DataSource' results will have 'FilterVariable' values that are greater than or equal to the value specified with 'GE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsLE",
                        "name": "_ddsLE",
                        "shape": "ComparatorValue",
                        "locationName": "LE",
                        "documentation": "-- | The less than or equal to operator. The 'DataSource' results will have 'FilterVariable' values that are less than or equal to the value specified with 'LE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsNE",
                        "name": "_ddsNE",
                        "shape": "ComparatorValue",
                        "locationName": "NE",
                        "documentation": "-- | The not equal to operator. The 'DataSource' results will have 'FilterVariable'\n-- values not equal to the value specified with 'NE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsPrefix",
                        "name": "_ddsPrefix",
                        "shape": "ComparatorValue",
                        "locationName": "Prefix",
                        "documentation": "-- | A string that is found at the beginning of a variable, such as 'Name' or 'Id'.\n--\n-- For example, a 'DataSource' could have the 'Name' '2014-09-09-HolidayGiftMailer'.\n-- To search for this 'DataSource', select 'Name' for the 'FilterVariable' and any of\n-- the following strings for the 'Prefix':\n--\n-- 2014-09\n--\n-- 2014-09-09\n--\n-- 2014-09-09-Holiday\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsSortOrder",
                        "name": "_ddsSortOrder",
                        "shape": "SortOrder",
                        "locationName": "SortOrder",
                        "documentation": "-- | A two-value parameter that determines the sequence of the resulting list of 'DataSource'.\n--\n-- 'asc' - Arranges the list in ascending order (A-Z, 0-9).  'dsc' - Arranges the\n-- list in descending order (Z-A, 9-0).  Results are sorted by 'FilterVariable'.",
                        "typeExposed": "Maybe SortOrder",
                        "type": "Maybe SortOrder"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsNextToken",
                        "name": "_ddsNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the page in the paginated results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsLimit",
                        "name": "_ddsLimit",
                        "shape": "PageLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of 'DataSource' to include in the result.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsEQ",
                        "name": "_ddsEQ",
                        "shape": "ComparatorValue",
                        "locationName": "EQ",
                        "documentation": "-- | The equal to operator. The 'DataSource' results will have 'FilterVariable' values\n-- that exactly match the value specified with 'EQ'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsFilterVariable",
                        "name": "_ddsFilterVariable",
                        "shape": "DataSourceFilterVariable",
                        "locationName": "FilterVariable",
                        "documentation": "-- | Use one of the following variables to filter a list of 'DataSource':\n--\n-- 'CreatedAt' - Sets the search criteria to 'DataSource' creation dates.  'Status'\n-- - Sets the search criteria to 'DataSource' statuses.  'Name' - Sets the search\n-- criteria to the contents of 'DataSource'   'Name'.  'DataUri' - Sets the search\n-- criteria to the URI of data files used to create the 'DataSource'. The URI can\n-- identify either a file or an Amazon Simple Storage Service (Amazon S3) bucket\n-- or directory.  'IAMUser' - Sets the search criteria to the user account that\n-- invoked the 'DataSource' creation.",
                        "typeExposed": "Maybe DataSourceFilterVariable",
                        "type": "Maybe DataSourceFilterVariable"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsGE",
                        "name": "_ddsGE",
                        "shape": "ComparatorValue",
                        "locationName": "GE",
                        "documentation": "-- | The greater than or equal to operator. The 'DataSource' results will have 'FilterVariable' values that are greater than or equal to the value specified with 'GE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsGT",
                        "name": "_ddsGT",
                        "shape": "ComparatorValue",
                        "locationName": "GT",
                        "documentation": "-- | The greater than operator. The 'DataSource' results will have 'FilterVariable'\n-- values that are greater than the value specified with 'GT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsLE",
                        "name": "_ddsLE",
                        "shape": "ComparatorValue",
                        "locationName": "LE",
                        "documentation": "-- | The less than or equal to operator. The 'DataSource' results will have 'FilterVariable' values that are less than or equal to the value specified with 'LE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsLT",
                        "name": "_ddsLT",
                        "shape": "ComparatorValue",
                        "locationName": "LT",
                        "documentation": "-- | The less than operator. The 'DataSource' results will have 'FilterVariable'\n-- values that are less than the value specified with 'LT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsLimit",
                        "name": "_ddsLimit",
                        "shape": "PageLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of 'DataSource' to include in the result.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsNE",
                        "name": "_ddsNE",
                        "shape": "ComparatorValue",
                        "locationName": "NE",
                        "documentation": "-- | The not equal to operator. The 'DataSource' results will have 'FilterVariable'\n-- values not equal to the value specified with 'NE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsNextToken",
                        "name": "_ddsNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the page in the paginated results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsPrefix",
                        "name": "_ddsPrefix",
                        "shape": "ComparatorValue",
                        "locationName": "Prefix",
                        "documentation": "-- | A string that is found at the beginning of a variable, such as 'Name' or 'Id'.\n--\n-- For example, a 'DataSource' could have the 'Name' '2014-09-09-HolidayGiftMailer'.\n-- To search for this 'DataSource', select 'Name' for the 'FilterVariable' and any of\n-- the following strings for the 'Prefix':\n--\n-- 2014-09\n--\n-- 2014-09-09\n--\n-- 2014-09-09-Holiday\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ddsSortOrder",
                        "name": "_ddsSortOrder",
                        "shape": "SortOrder",
                        "locationName": "SortOrder",
                        "documentation": "-- | A two-value parameter that determines the sequence of the resulting list of 'DataSource'.\n--\n-- 'asc' - Arranges the list in ascending order (A-Z, 0-9).  'dsc' - Arranges the\n-- list in descending order (Z-A, 9-0).  Results are sorted by 'FilterVariable'.",
                        "typeExposed": "Maybe SortOrder",
                        "type": "Maybe SortOrder"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 13,
                "ctor": "describeEvaluationsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "derResults",
                        "name": "_derResults",
                        "shape": "Evaluations",
                        "locationName": "Results",
                        "documentation": "-- | A list of 'Evaluation' that meet the search criteria.",
                        "typeExposed": "[Evaluation]",
                        "type": "List \"Results\" Evaluation"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "derNextToken",
                        "name": "_derNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the next page in the paginated results that indicates at least one\n-- more page follows.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 10,
                "name": "DescribeEvaluationsResponse",
                "resultWrapper": null,
                "locationPad": 10,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "derResults",
                        "name": "_derResults",
                        "shape": "Evaluations",
                        "locationName": "Results",
                        "documentation": "-- | A list of 'Evaluation' that meet the search criteria.",
                        "typeExposed": "[Evaluation]",
                        "type": "List \"Results\" Evaluation"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "derNextToken",
                        "name": "_derNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the next page in the paginated results that indicates at least one\n-- more page follows.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "derNextToken",
                        "name": "_derNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the next page in the paginated results that indicates at least one\n-- more page follows.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "derResults",
                        "name": "_derResults",
                        "shape": "Evaluations",
                        "locationName": "Results",
                        "documentation": "-- | A list of 'Evaluation' that meet the search criteria.",
                        "typeExposed": "[Evaluation]",
                        "type": "List \"Results\" Evaluation"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_DescribeEvaluations.html",
            "namespace": "Network.AWS.MachineLearning.DescribeEvaluations",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": {
                "token": {
                    "input": "deNextToken",
                    "outputRequired": false,
                    "output": "derNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "derResults"
            },
            "name": "DescribeEvaluations",
            "method": "post",
            "documentation": "-- | Returns a list of 'DescribeEvaluations' that match the search criteria in the\n-- request.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 17,
                "ctor": "describeEvaluations",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deFilterVariable",
                        "name": "_deFilterVariable",
                        "shape": "EvaluationFilterVariable",
                        "locationName": "FilterVariable",
                        "documentation": "-- | Use one of the following variable to filter a list of 'Evaluation' objects:\n--\n-- 'CreatedAt' - Sets the search criteria to the 'Evaluation' creation date.  'Status' - Sets the search criteria to the 'Evaluation' status.  'Name' - Sets the search\n-- criteria to the contents of 'Evaluation'   'Name'.  'IAMUser' - Sets the search\n-- criteria to the user account that invoked an 'Evaluation'.  'MLModelId' - Sets\n-- the search criteria to the 'MLModel' that was evaluated.  'DataSourceId' - Sets\n-- the search criteria to the 'DataSource' used in 'Evaluation'.  'DataUri' - Sets the\n-- search criteria to the data file(s) used in 'Evaluation'. The URL can identify\n-- either a file or an Amazon Simple Storage Solution (Amazon S3) bucket or\n-- directory.",
                        "typeExposed": "Maybe EvaluationFilterVariable",
                        "type": "Maybe EvaluationFilterVariable"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deEQ",
                        "name": "_deEQ",
                        "shape": "ComparatorValue",
                        "locationName": "EQ",
                        "documentation": "-- | The equal to operator. The 'Evaluation' results will have 'FilterVariable' values\n-- that exactly match the value specified with 'EQ'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deGT",
                        "name": "_deGT",
                        "shape": "ComparatorValue",
                        "locationName": "GT",
                        "documentation": "-- | The greater than operator. The 'Evaluation' results will have 'FilterVariable'\n-- values that are greater than the value specified with 'GT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deLT",
                        "name": "_deLT",
                        "shape": "ComparatorValue",
                        "locationName": "LT",
                        "documentation": "-- | The less than operator. The 'Evaluation' results will have 'FilterVariable'\n-- values that are less than the value specified with 'LT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deGE",
                        "name": "_deGE",
                        "shape": "ComparatorValue",
                        "locationName": "GE",
                        "documentation": "-- | The greater than or equal to operator. The 'Evaluation' results will have 'FilterVariable' values that are greater than or equal to the value specified with 'GE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deLE",
                        "name": "_deLE",
                        "shape": "ComparatorValue",
                        "locationName": "LE",
                        "documentation": "-- | The less than or equal to operator. The 'Evaluation' results will have 'FilterVariable' values that are less than or equal to the value specified with 'LE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deNE",
                        "name": "_deNE",
                        "shape": "ComparatorValue",
                        "locationName": "NE",
                        "documentation": "-- | The not equal to operator. The 'Evaluation' results will have 'FilterVariable'\n-- values not equal to the value specified with 'NE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dePrefix",
                        "name": "_dePrefix",
                        "shape": "ComparatorValue",
                        "locationName": "Prefix",
                        "documentation": "-- | A string that is found at the beginning of a variable, such as 'Name' or 'Id'.\n--\n-- For example, an 'Evaluation' could have the 'Name' '2014-09-09-HolidayGiftMailer'.\n-- To search for this 'Evaluation', select 'Name' for the 'FilterVariable' and any of\n-- the following strings for the 'Prefix':\n--\n-- 2014-09\n--\n-- 2014-09-09\n--\n-- 2014-09-09-Holiday\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deSortOrder",
                        "name": "_deSortOrder",
                        "shape": "SortOrder",
                        "locationName": "SortOrder",
                        "documentation": "-- | A two-value parameter that determines the sequence of the resulting list of 'Evaluation'.\n--\n-- 'asc' - Arranges the list in ascending order (A-Z, 0-9).  'dsc' - Arranges the\n-- list in descending order (Z-A, 9-0).  Results are sorted by 'FilterVariable'.",
                        "typeExposed": "Maybe SortOrder",
                        "type": "Maybe SortOrder"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deNextToken",
                        "name": "_deNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the page in the paginated results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deLimit",
                        "name": "_deLimit",
                        "shape": "PageLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of 'Evaluation' to include in the result.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "queryPad": 0,
                "name": "DescribeEvaluations",
                "query": [],
                "locationPad": 15,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deFilterVariable",
                        "name": "_deFilterVariable",
                        "shape": "EvaluationFilterVariable",
                        "locationName": "FilterVariable",
                        "documentation": "-- | Use one of the following variable to filter a list of 'Evaluation' objects:\n--\n-- 'CreatedAt' - Sets the search criteria to the 'Evaluation' creation date.  'Status' - Sets the search criteria to the 'Evaluation' status.  'Name' - Sets the search\n-- criteria to the contents of 'Evaluation'   'Name'.  'IAMUser' - Sets the search\n-- criteria to the user account that invoked an 'Evaluation'.  'MLModelId' - Sets\n-- the search criteria to the 'MLModel' that was evaluated.  'DataSourceId' - Sets\n-- the search criteria to the 'DataSource' used in 'Evaluation'.  'DataUri' - Sets the\n-- search criteria to the data file(s) used in 'Evaluation'. The URL can identify\n-- either a file or an Amazon Simple Storage Solution (Amazon S3) bucket or\n-- directory.",
                        "typeExposed": "Maybe EvaluationFilterVariable",
                        "type": "Maybe EvaluationFilterVariable"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deEQ",
                        "name": "_deEQ",
                        "shape": "ComparatorValue",
                        "locationName": "EQ",
                        "documentation": "-- | The equal to operator. The 'Evaluation' results will have 'FilterVariable' values\n-- that exactly match the value specified with 'EQ'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deGT",
                        "name": "_deGT",
                        "shape": "ComparatorValue",
                        "locationName": "GT",
                        "documentation": "-- | The greater than operator. The 'Evaluation' results will have 'FilterVariable'\n-- values that are greater than the value specified with 'GT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deLT",
                        "name": "_deLT",
                        "shape": "ComparatorValue",
                        "locationName": "LT",
                        "documentation": "-- | The less than operator. The 'Evaluation' results will have 'FilterVariable'\n-- values that are less than the value specified with 'LT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deGE",
                        "name": "_deGE",
                        "shape": "ComparatorValue",
                        "locationName": "GE",
                        "documentation": "-- | The greater than or equal to operator. The 'Evaluation' results will have 'FilterVariable' values that are greater than or equal to the value specified with 'GE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deLE",
                        "name": "_deLE",
                        "shape": "ComparatorValue",
                        "locationName": "LE",
                        "documentation": "-- | The less than or equal to operator. The 'Evaluation' results will have 'FilterVariable' values that are less than or equal to the value specified with 'LE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deNE",
                        "name": "_deNE",
                        "shape": "ComparatorValue",
                        "locationName": "NE",
                        "documentation": "-- | The not equal to operator. The 'Evaluation' results will have 'FilterVariable'\n-- values not equal to the value specified with 'NE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dePrefix",
                        "name": "_dePrefix",
                        "shape": "ComparatorValue",
                        "locationName": "Prefix",
                        "documentation": "-- | A string that is found at the beginning of a variable, such as 'Name' or 'Id'.\n--\n-- For example, an 'Evaluation' could have the 'Name' '2014-09-09-HolidayGiftMailer'.\n-- To search for this 'Evaluation', select 'Name' for the 'FilterVariable' and any of\n-- the following strings for the 'Prefix':\n--\n-- 2014-09\n--\n-- 2014-09-09\n--\n-- 2014-09-09-Holiday\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deSortOrder",
                        "name": "_deSortOrder",
                        "shape": "SortOrder",
                        "locationName": "SortOrder",
                        "documentation": "-- | A two-value parameter that determines the sequence of the resulting list of 'Evaluation'.\n--\n-- 'asc' - Arranges the list in ascending order (A-Z, 0-9).  'dsc' - Arranges the\n-- list in descending order (Z-A, 9-0).  Results are sorted by 'FilterVariable'.",
                        "typeExposed": "Maybe SortOrder",
                        "type": "Maybe SortOrder"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deNextToken",
                        "name": "_deNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the page in the paginated results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deLimit",
                        "name": "_deLimit",
                        "shape": "PageLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of 'Evaluation' to include in the result.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deEQ",
                        "name": "_deEQ",
                        "shape": "ComparatorValue",
                        "locationName": "EQ",
                        "documentation": "-- | The equal to operator. The 'Evaluation' results will have 'FilterVariable' values\n-- that exactly match the value specified with 'EQ'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deFilterVariable",
                        "name": "_deFilterVariable",
                        "shape": "EvaluationFilterVariable",
                        "locationName": "FilterVariable",
                        "documentation": "-- | Use one of the following variable to filter a list of 'Evaluation' objects:\n--\n-- 'CreatedAt' - Sets the search criteria to the 'Evaluation' creation date.  'Status' - Sets the search criteria to the 'Evaluation' status.  'Name' - Sets the search\n-- criteria to the contents of 'Evaluation'   'Name'.  'IAMUser' - Sets the search\n-- criteria to the user account that invoked an 'Evaluation'.  'MLModelId' - Sets\n-- the search criteria to the 'MLModel' that was evaluated.  'DataSourceId' - Sets\n-- the search criteria to the 'DataSource' used in 'Evaluation'.  'DataUri' - Sets the\n-- search criteria to the data file(s) used in 'Evaluation'. The URL can identify\n-- either a file or an Amazon Simple Storage Solution (Amazon S3) bucket or\n-- directory.",
                        "typeExposed": "Maybe EvaluationFilterVariable",
                        "type": "Maybe EvaluationFilterVariable"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deGE",
                        "name": "_deGE",
                        "shape": "ComparatorValue",
                        "locationName": "GE",
                        "documentation": "-- | The greater than or equal to operator. The 'Evaluation' results will have 'FilterVariable' values that are greater than or equal to the value specified with 'GE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deGT",
                        "name": "_deGT",
                        "shape": "ComparatorValue",
                        "locationName": "GT",
                        "documentation": "-- | The greater than operator. The 'Evaluation' results will have 'FilterVariable'\n-- values that are greater than the value specified with 'GT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deLE",
                        "name": "_deLE",
                        "shape": "ComparatorValue",
                        "locationName": "LE",
                        "documentation": "-- | The less than or equal to operator. The 'Evaluation' results will have 'FilterVariable' values that are less than or equal to the value specified with 'LE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deLT",
                        "name": "_deLT",
                        "shape": "ComparatorValue",
                        "locationName": "LT",
                        "documentation": "-- | The less than operator. The 'Evaluation' results will have 'FilterVariable'\n-- values that are less than the value specified with 'LT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deLimit",
                        "name": "_deLimit",
                        "shape": "PageLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of 'Evaluation' to include in the result.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deNE",
                        "name": "_deNE",
                        "shape": "ComparatorValue",
                        "locationName": "NE",
                        "documentation": "-- | The not equal to operator. The 'Evaluation' results will have 'FilterVariable'\n-- values not equal to the value specified with 'NE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deNextToken",
                        "name": "_deNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the page in the paginated results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dePrefix",
                        "name": "_dePrefix",
                        "shape": "ComparatorValue",
                        "locationName": "Prefix",
                        "documentation": "-- | A string that is found at the beginning of a variable, such as 'Name' or 'Id'.\n--\n-- For example, an 'Evaluation' could have the 'Name' '2014-09-09-HolidayGiftMailer'.\n-- To search for this 'Evaluation', select 'Name' for the 'FilterVariable' and any of\n-- the following strings for the 'Prefix':\n--\n-- 2014-09\n--\n-- 2014-09-09\n--\n-- 2014-09-09-Holiday\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "deSortOrder",
                        "name": "_deSortOrder",
                        "shape": "SortOrder",
                        "locationName": "SortOrder",
                        "documentation": "-- | A two-value parameter that determines the sequence of the resulting list of 'Evaluation'.\n--\n-- 'asc' - Arranges the list in ascending order (A-Z, 0-9).  'dsc' - Arranges the\n-- list in descending order (Z-A, 9-0).  Results are sorted by 'FilterVariable'.",
                        "typeExposed": "Maybe SortOrder",
                        "type": "Maybe SortOrder"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 15,
                "ctor": "describeMLModelsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dmlmrResults",
                        "name": "_dmlmrResults",
                        "shape": "MLModels",
                        "locationName": "Results",
                        "documentation": "-- | A list of 'MLModel' that meet the search criteria.",
                        "typeExposed": "[MLModel]",
                        "type": "List \"Results\" MLModel"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmrNextToken",
                        "name": "_dmlmrNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the next page in the paginated results that indicates at least one\n-- more page follows.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 10,
                "name": "DescribeMLModelsResponse",
                "resultWrapper": null,
                "locationPad": 10,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dmlmrResults",
                        "name": "_dmlmrResults",
                        "shape": "MLModels",
                        "locationName": "Results",
                        "documentation": "-- | A list of 'MLModel' that meet the search criteria.",
                        "typeExposed": "[MLModel]",
                        "type": "List \"Results\" MLModel"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmrNextToken",
                        "name": "_dmlmrNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the next page in the paginated results that indicates at least one\n-- more page follows.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmrNextToken",
                        "name": "_dmlmrNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the next page in the paginated results that indicates at least one\n-- more page follows.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "dmlmrResults",
                        "name": "_dmlmrResults",
                        "shape": "MLModels",
                        "locationName": "Results",
                        "documentation": "-- | A list of 'MLModel' that meet the search criteria.",
                        "typeExposed": "[MLModel]",
                        "type": "List \"Results\" MLModel"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_DescribeMLModels.html",
            "namespace": "Network.AWS.MachineLearning.DescribeMLModels",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": {
                "token": {
                    "input": "dmlmNextToken",
                    "outputRequired": false,
                    "output": "dmlmrNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dmlmrResults"
            },
            "name": "DescribeMLModels",
            "method": "post",
            "documentation": "-- | Returns a list of 'MLModel' that match the search criteria in the request.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 19,
                "ctor": "describeMLModels",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmFilterVariable",
                        "name": "_dmlmFilterVariable",
                        "shape": "MLModelFilterVariable",
                        "locationName": "FilterVariable",
                        "documentation": "-- | Use one of the following variables to filter a list of 'MLModel':\n--\n-- 'CreatedAt' - Sets the search criteria to 'MLModel' creation date.  'Status' -\n-- Sets the search criteria to 'MLModel' status.  'Name' - Sets the search criteria\n-- to the contents of 'MLModel'  'Name'.  'IAMUser' - Sets the search criteria to the\n-- user account that invoked the 'MLModel' creation.  'TrainingDataSourceId' - Sets\n-- the search criteria to the 'DataSource' used to train one or more 'MLModel'.  'RealtimeEndpointStatus' - Sets the search criteria to the 'MLModel' real-time endpoint status.  'MLModelType' - Sets the search criteria to 'MLModel' type: binary, regression, or\n-- multi-class.  'Algorithm' - Sets the search criteria to the algorithm that the 'MLModel' uses.  'TrainingDataURI' - Sets the search criteria to the data file(s) used\n-- in training a 'MLModel'. The URL can identify either a file or an Amazon Simple\n-- Storage Service (Amazon S3) bucket or directory.",
                        "typeExposed": "Maybe MLModelFilterVariable",
                        "type": "Maybe MLModelFilterVariable"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmEQ",
                        "name": "_dmlmEQ",
                        "shape": "ComparatorValue",
                        "locationName": "EQ",
                        "documentation": "-- | The equal to operator. The 'MLModel' results will have 'FilterVariable' values\n-- that exactly match the value specified with 'EQ'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmGT",
                        "name": "_dmlmGT",
                        "shape": "ComparatorValue",
                        "locationName": "GT",
                        "documentation": "-- | The greater than operator. The 'MLModel' results will have 'FilterVariable'\n-- values that are greater than the value specified with 'GT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmLT",
                        "name": "_dmlmLT",
                        "shape": "ComparatorValue",
                        "locationName": "LT",
                        "documentation": "-- | The less than operator. The 'MLModel' results will have 'FilterVariable' values\n-- that are less than the value specified with 'LT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmGE",
                        "name": "_dmlmGE",
                        "shape": "ComparatorValue",
                        "locationName": "GE",
                        "documentation": "-- | The greater than or equal to operator. The 'MLModel' results will have 'FilterVariable' values that are greater than or equal to the value specified with 'GE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmLE",
                        "name": "_dmlmLE",
                        "shape": "ComparatorValue",
                        "locationName": "LE",
                        "documentation": "-- | The less than or equal to operator. The 'MLModel' results will have 'FilterVariable' values that are less than or equal to the value specified with 'LE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmNE",
                        "name": "_dmlmNE",
                        "shape": "ComparatorValue",
                        "locationName": "NE",
                        "documentation": "-- | The not equal to operator. The 'MLModel' results will have 'FilterVariable'\n-- values not equal to the value specified with 'NE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmPrefix",
                        "name": "_dmlmPrefix",
                        "shape": "ComparatorValue",
                        "locationName": "Prefix",
                        "documentation": "-- | A string that is found at the beginning of a variable, such as 'Name' or 'Id'.\n--\n-- For example, an 'MLModel' could have the 'Name' '2014-09-09-HolidayGiftMailer'. To\n-- search for this 'MLModel', select 'Name' for the 'FilterVariable' and any of the\n-- following strings for the 'Prefix':\n--\n-- 2014-09\n--\n-- 2014-09-09\n--\n-- 2014-09-09-Holiday\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmSortOrder",
                        "name": "_dmlmSortOrder",
                        "shape": "SortOrder",
                        "locationName": "SortOrder",
                        "documentation": "-- | A two-value parameter that determines the sequence of the resulting list of 'MLModel'.\n--\n-- 'asc' - Arranges the list in ascending order (A-Z, 0-9).  'dsc' - Arranges the\n-- list in descending order (Z-A, 9-0).  Results are sorted by 'FilterVariable'.",
                        "typeExposed": "Maybe SortOrder",
                        "type": "Maybe SortOrder"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmNextToken",
                        "name": "_dmlmNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the page in the paginated results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmLimit",
                        "name": "_dmlmLimit",
                        "shape": "PageLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The number of pages of information to include in the result. The range of\n-- acceptable values is 1 through 100. The default value is 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "queryPad": 0,
                "name": "DescribeMLModels",
                "query": [],
                "locationPad": 15,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmFilterVariable",
                        "name": "_dmlmFilterVariable",
                        "shape": "MLModelFilterVariable",
                        "locationName": "FilterVariable",
                        "documentation": "-- | Use one of the following variables to filter a list of 'MLModel':\n--\n-- 'CreatedAt' - Sets the search criteria to 'MLModel' creation date.  'Status' -\n-- Sets the search criteria to 'MLModel' status.  'Name' - Sets the search criteria\n-- to the contents of 'MLModel'  'Name'.  'IAMUser' - Sets the search criteria to the\n-- user account that invoked the 'MLModel' creation.  'TrainingDataSourceId' - Sets\n-- the search criteria to the 'DataSource' used to train one or more 'MLModel'.  'RealtimeEndpointStatus' - Sets the search criteria to the 'MLModel' real-time endpoint status.  'MLModelType' - Sets the search criteria to 'MLModel' type: binary, regression, or\n-- multi-class.  'Algorithm' - Sets the search criteria to the algorithm that the 'MLModel' uses.  'TrainingDataURI' - Sets the search criteria to the data file(s) used\n-- in training a 'MLModel'. The URL can identify either a file or an Amazon Simple\n-- Storage Service (Amazon S3) bucket or directory.",
                        "typeExposed": "Maybe MLModelFilterVariable",
                        "type": "Maybe MLModelFilterVariable"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmEQ",
                        "name": "_dmlmEQ",
                        "shape": "ComparatorValue",
                        "locationName": "EQ",
                        "documentation": "-- | The equal to operator. The 'MLModel' results will have 'FilterVariable' values\n-- that exactly match the value specified with 'EQ'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmGT",
                        "name": "_dmlmGT",
                        "shape": "ComparatorValue",
                        "locationName": "GT",
                        "documentation": "-- | The greater than operator. The 'MLModel' results will have 'FilterVariable'\n-- values that are greater than the value specified with 'GT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmLT",
                        "name": "_dmlmLT",
                        "shape": "ComparatorValue",
                        "locationName": "LT",
                        "documentation": "-- | The less than operator. The 'MLModel' results will have 'FilterVariable' values\n-- that are less than the value specified with 'LT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmGE",
                        "name": "_dmlmGE",
                        "shape": "ComparatorValue",
                        "locationName": "GE",
                        "documentation": "-- | The greater than or equal to operator. The 'MLModel' results will have 'FilterVariable' values that are greater than or equal to the value specified with 'GE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmLE",
                        "name": "_dmlmLE",
                        "shape": "ComparatorValue",
                        "locationName": "LE",
                        "documentation": "-- | The less than or equal to operator. The 'MLModel' results will have 'FilterVariable' values that are less than or equal to the value specified with 'LE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmNE",
                        "name": "_dmlmNE",
                        "shape": "ComparatorValue",
                        "locationName": "NE",
                        "documentation": "-- | The not equal to operator. The 'MLModel' results will have 'FilterVariable'\n-- values not equal to the value specified with 'NE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmPrefix",
                        "name": "_dmlmPrefix",
                        "shape": "ComparatorValue",
                        "locationName": "Prefix",
                        "documentation": "-- | A string that is found at the beginning of a variable, such as 'Name' or 'Id'.\n--\n-- For example, an 'MLModel' could have the 'Name' '2014-09-09-HolidayGiftMailer'. To\n-- search for this 'MLModel', select 'Name' for the 'FilterVariable' and any of the\n-- following strings for the 'Prefix':\n--\n-- 2014-09\n--\n-- 2014-09-09\n--\n-- 2014-09-09-Holiday\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmSortOrder",
                        "name": "_dmlmSortOrder",
                        "shape": "SortOrder",
                        "locationName": "SortOrder",
                        "documentation": "-- | A two-value parameter that determines the sequence of the resulting list of 'MLModel'.\n--\n-- 'asc' - Arranges the list in ascending order (A-Z, 0-9).  'dsc' - Arranges the\n-- list in descending order (Z-A, 9-0).  Results are sorted by 'FilterVariable'.",
                        "typeExposed": "Maybe SortOrder",
                        "type": "Maybe SortOrder"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmNextToken",
                        "name": "_dmlmNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the page in the paginated results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmLimit",
                        "name": "_dmlmLimit",
                        "shape": "PageLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The number of pages of information to include in the result. The range of\n-- acceptable values is 1 through 100. The default value is 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmEQ",
                        "name": "_dmlmEQ",
                        "shape": "ComparatorValue",
                        "locationName": "EQ",
                        "documentation": "-- | The equal to operator. The 'MLModel' results will have 'FilterVariable' values\n-- that exactly match the value specified with 'EQ'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmFilterVariable",
                        "name": "_dmlmFilterVariable",
                        "shape": "MLModelFilterVariable",
                        "locationName": "FilterVariable",
                        "documentation": "-- | Use one of the following variables to filter a list of 'MLModel':\n--\n-- 'CreatedAt' - Sets the search criteria to 'MLModel' creation date.  'Status' -\n-- Sets the search criteria to 'MLModel' status.  'Name' - Sets the search criteria\n-- to the contents of 'MLModel'  'Name'.  'IAMUser' - Sets the search criteria to the\n-- user account that invoked the 'MLModel' creation.  'TrainingDataSourceId' - Sets\n-- the search criteria to the 'DataSource' used to train one or more 'MLModel'.  'RealtimeEndpointStatus' - Sets the search criteria to the 'MLModel' real-time endpoint status.  'MLModelType' - Sets the search criteria to 'MLModel' type: binary, regression, or\n-- multi-class.  'Algorithm' - Sets the search criteria to the algorithm that the 'MLModel' uses.  'TrainingDataURI' - Sets the search criteria to the data file(s) used\n-- in training a 'MLModel'. The URL can identify either a file or an Amazon Simple\n-- Storage Service (Amazon S3) bucket or directory.",
                        "typeExposed": "Maybe MLModelFilterVariable",
                        "type": "Maybe MLModelFilterVariable"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmGE",
                        "name": "_dmlmGE",
                        "shape": "ComparatorValue",
                        "locationName": "GE",
                        "documentation": "-- | The greater than or equal to operator. The 'MLModel' results will have 'FilterVariable' values that are greater than or equal to the value specified with 'GE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmGT",
                        "name": "_dmlmGT",
                        "shape": "ComparatorValue",
                        "locationName": "GT",
                        "documentation": "-- | The greater than operator. The 'MLModel' results will have 'FilterVariable'\n-- values that are greater than the value specified with 'GT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmLE",
                        "name": "_dmlmLE",
                        "shape": "ComparatorValue",
                        "locationName": "LE",
                        "documentation": "-- | The less than or equal to operator. The 'MLModel' results will have 'FilterVariable' values that are less than or equal to the value specified with 'LE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmLT",
                        "name": "_dmlmLT",
                        "shape": "ComparatorValue",
                        "locationName": "LT",
                        "documentation": "-- | The less than operator. The 'MLModel' results will have 'FilterVariable' values\n-- that are less than the value specified with 'LT'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmLimit",
                        "name": "_dmlmLimit",
                        "shape": "PageLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The number of pages of information to include in the result. The range of\n-- acceptable values is 1 through 100. The default value is 100.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmNE",
                        "name": "_dmlmNE",
                        "shape": "ComparatorValue",
                        "locationName": "NE",
                        "documentation": "-- | The not equal to operator. The 'MLModel' results will have 'FilterVariable'\n-- values not equal to the value specified with 'NE'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmNextToken",
                        "name": "_dmlmNextToken",
                        "shape": "StringType",
                        "locationName": "NextToken",
                        "documentation": "-- | The ID of the page in the paginated results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmPrefix",
                        "name": "_dmlmPrefix",
                        "shape": "ComparatorValue",
                        "locationName": "Prefix",
                        "documentation": "-- | A string that is found at the beginning of a variable, such as 'Name' or 'Id'.\n--\n-- For example, an 'MLModel' could have the 'Name' '2014-09-09-HolidayGiftMailer'. To\n-- search for this 'MLModel', select 'Name' for the 'FilterVariable' and any of the\n-- following strings for the 'Prefix':\n--\n-- 2014-09\n--\n-- 2014-09-09\n--\n-- 2014-09-09-Holiday\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "dmlmSortOrder",
                        "name": "_dmlmSortOrder",
                        "shape": "SortOrder",
                        "locationName": "SortOrder",
                        "documentation": "-- | A two-value parameter that determines the sequence of the resulting list of 'MLModel'.\n--\n-- 'asc' - Arranges the list in ascending order (A-Z, 0-9).  'dsc' - Arranges the\n-- list in descending order (Z-A, 9-0).  Results are sorted by 'FilterVariable'.",
                        "typeExposed": "Maybe SortOrder",
                        "type": "Maybe SortOrder"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 32,
                "ctor": "getBatchPredictionResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprBatchPredictionId",
                        "name": "_gbprBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | An ID assigned to the 'BatchPrediction' at creation. This value should be\n-- identical to the value of the 'BatchPredictionID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprMLModelId",
                        "name": "_gbprMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that generated predictions for the 'BatchPrediction'\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprBatchPredictionDataSourceId",
                        "name": "_gbprBatchPredictionDataSourceId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' that was used to create the 'BatchPrediction'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprInputDataLocationS3",
                        "name": "_gbprInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprCreatedByIamUser",
                        "name": "_gbprCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account that invoked the 'BatchPrediction'. The account type can\n-- be either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprCreatedAt",
                        "name": "_gbprCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time when the 'BatchPrediction' was created. The time is expressed in epoch\n-- time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprLastUpdatedAt",
                        "name": "_gbprLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to 'BatchPrediction'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprName",
                        "name": "_gbprName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'BatchPrediction'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprStatus",
                        "name": "_gbprStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The status of the 'BatchPrediction', which can be one of the following values:\n--\n-- 'PENDING' - Amazon Machine Learning (Amazon ML) submitted a request to\n-- generate batch predictions.  'INPROGRESS' - The batch predictions are in\n-- progress.  'FAILED' - The request to perform a batch prediction did not run to\n-- completion. It is not usable.  'COMPLETED' - The batch prediction process\n-- completed successfully.  'DELETED' - The 'BatchPrediction' is marked as deleted.\n-- It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprOutputUri",
                        "name": "_gbprOutputUri",
                        "shape": "S3Url",
                        "locationName": "OutputUri",
                        "documentation": "-- | The location of an Amazon S3 bucket or directory to receive the operation\n-- results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprLogUri",
                        "name": "_gbprLogUri",
                        "shape": "PresignedS3Url",
                        "locationName": "LogUri",
                        "documentation": "-- | A link to the file that contains logs of the 'CreateBatchPrediction' operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprMessage",
                        "name": "_gbprMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about processing the batch\n-- prediction request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 28,
                "name": "GetBatchPredictionResponse",
                "resultWrapper": null,
                "locationPad": 28,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprBatchPredictionId",
                        "name": "_gbprBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | An ID assigned to the 'BatchPrediction' at creation. This value should be\n-- identical to the value of the 'BatchPredictionID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprMLModelId",
                        "name": "_gbprMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that generated predictions for the 'BatchPrediction'\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprBatchPredictionDataSourceId",
                        "name": "_gbprBatchPredictionDataSourceId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' that was used to create the 'BatchPrediction'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprInputDataLocationS3",
                        "name": "_gbprInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprCreatedByIamUser",
                        "name": "_gbprCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account that invoked the 'BatchPrediction'. The account type can\n-- be either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprCreatedAt",
                        "name": "_gbprCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time when the 'BatchPrediction' was created. The time is expressed in epoch\n-- time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprLastUpdatedAt",
                        "name": "_gbprLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to 'BatchPrediction'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprName",
                        "name": "_gbprName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'BatchPrediction'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprStatus",
                        "name": "_gbprStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The status of the 'BatchPrediction', which can be one of the following values:\n--\n-- 'PENDING' - Amazon Machine Learning (Amazon ML) submitted a request to\n-- generate batch predictions.  'INPROGRESS' - The batch predictions are in\n-- progress.  'FAILED' - The request to perform a batch prediction did not run to\n-- completion. It is not usable.  'COMPLETED' - The batch prediction process\n-- completed successfully.  'DELETED' - The 'BatchPrediction' is marked as deleted.\n-- It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprOutputUri",
                        "name": "_gbprOutputUri",
                        "shape": "S3Url",
                        "locationName": "OutputUri",
                        "documentation": "-- | The location of an Amazon S3 bucket or directory to receive the operation\n-- results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprLogUri",
                        "name": "_gbprLogUri",
                        "shape": "PresignedS3Url",
                        "locationName": "LogUri",
                        "documentation": "-- | A link to the file that contains logs of the 'CreateBatchPrediction' operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprMessage",
                        "name": "_gbprMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about processing the batch\n-- prediction request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprBatchPredictionDataSourceId",
                        "name": "_gbprBatchPredictionDataSourceId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionDataSourceId",
                        "documentation": "-- | The ID of the 'DataSource' that was used to create the 'BatchPrediction'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprBatchPredictionId",
                        "name": "_gbprBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | An ID assigned to the 'BatchPrediction' at creation. This value should be\n-- identical to the value of the 'BatchPredictionID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprCreatedAt",
                        "name": "_gbprCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time when the 'BatchPrediction' was created. The time is expressed in epoch\n-- time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprCreatedByIamUser",
                        "name": "_gbprCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account that invoked the 'BatchPrediction'. The account type can\n-- be either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprInputDataLocationS3",
                        "name": "_gbprInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprLastUpdatedAt",
                        "name": "_gbprLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to 'BatchPrediction'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprLogUri",
                        "name": "_gbprLogUri",
                        "shape": "PresignedS3Url",
                        "locationName": "LogUri",
                        "documentation": "-- | A link to the file that contains logs of the 'CreateBatchPrediction' operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprMLModelId",
                        "name": "_gbprMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that generated predictions for the 'BatchPrediction'\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprMessage",
                        "name": "_gbprMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about processing the batch\n-- prediction request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprName",
                        "name": "_gbprName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'BatchPrediction'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprOutputUri",
                        "name": "_gbprOutputUri",
                        "shape": "S3Url",
                        "locationName": "OutputUri",
                        "documentation": "-- | The location of an Amazon S3 bucket or directory to receive the operation\n-- results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gbprStatus",
                        "name": "_gbprStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The status of the 'BatchPrediction', which can be one of the following values:\n--\n-- 'PENDING' - Amazon Machine Learning (Amazon ML) submitted a request to\n-- generate batch predictions.  'INPROGRESS' - The batch predictions are in\n-- progress.  'FAILED' - The request to perform a batch prediction did not run to\n-- completion. It is not usable.  'COMPLETED' - The batch prediction process\n-- completed successfully.  'DELETED' - The 'BatchPrediction' is marked as deleted.\n-- It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_GetBatchPrediction.html",
            "namespace": "Network.AWS.MachineLearning.GetBatchPrediction",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "GetBatchPrediction",
            "method": "post",
            "documentation": "-- | Returns a 'BatchPrediction' that includes detailed metadata, status, and data\n-- file information for a 'Batch Prediction' request.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "getBatchPrediction",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "gbpBatchPredictionId",
                    "name": "_gbpBatchPredictionId",
                    "shape": "EntityId",
                    "locationName": "BatchPredictionId",
                    "documentation": "-- | An ID assigned to the 'BatchPrediction' at creation.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gbpBatchPredictionId",
                        "name": "_gbpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | An ID assigned to the 'BatchPrediction' at creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gbpBatchPredictionId",
                        "name": "_gbpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | An ID assigned to the 'BatchPrediction' at creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetBatchPrediction",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gbpBatchPredictionId",
                        "name": "_gbpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | An ID assigned to the 'BatchPrediction' at creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 22,
                "ctor": "getDataSourceResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataSourceId",
                        "name": "_gdsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID assigned to the 'DataSource' at creation. This value should be identical\n-- to the value of the 'DataSourceId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataLocationS3",
                        "name": "_gdsrDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "DataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataRearrangement",
                        "name": "_gdsrDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | A JSON string that captures the splitting rearrangement requirement of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrCreatedByIamUser",
                        "name": "_gdsrCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account from which the 'DataSource' was created. The account type\n-- can be either an AWS root account or an AWS Identity and Access Management\n-- (IAM) user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrCreatedAt",
                        "name": "_gdsrCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'DataSource' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrLastUpdatedAt",
                        "name": "_gdsrLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'DataSource'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataSizeInBytes",
                        "name": "_gdsrDataSizeInBytes",
                        "shape": "LongType",
                        "locationName": "DataSizeInBytes",
                        "documentation": "-- | The total size of observations in the data files.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrNumberOfFiles",
                        "name": "_gdsrNumberOfFiles",
                        "shape": "LongType",
                        "locationName": "NumberOfFiles",
                        "documentation": "-- | The number of data files referenced by the 'DataSource'.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrName",
                        "name": "_gdsrName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrStatus",
                        "name": "_gdsrStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The current status of the 'DataSource'. This element can have one of the\n-- following values:\n--\n-- 'PENDING' - Amazon Machine Language (Amazon ML) submitted a request to\n-- create a 'DataSource'.  'INPROGRESS' - The creation process is underway.  'FAILED'\n-- - The request to create a 'DataSource' did not run to completion. It is not\n-- usable.  'COMPLETED' - The creation process completed successfully.  'DELETED' -\n-- The 'DataSource' is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrLogUri",
                        "name": "_gdsrLogUri",
                        "shape": "PresignedS3Url",
                        "locationName": "LogUri",
                        "documentation": "-- | A link to the file containining logs of either create 'DataSource' operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrMessage",
                        "name": "_gdsrMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | The description of the most recent details about creating the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrRedshiftMetadata",
                        "name": "_gdsrRedshiftMetadata",
                        "shape": "RedshiftMetadata",
                        "locationName": "RedshiftMetadata",
                        "documentation": null,
                        "typeExposed": "Maybe RedshiftMetadata",
                        "type": "Maybe RedshiftMetadata"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrRDSMetadata",
                        "name": "_gdsrRDSMetadata",
                        "shape": "RDSMetadata",
                        "locationName": "RDSMetadata",
                        "documentation": null,
                        "typeExposed": "Maybe RDSMetadata",
                        "type": "Maybe RDSMetadata"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrRoleARN",
                        "name": "_gdsrRoleARN",
                        "shape": "RoleARN",
                        "locationName": "RoleARN",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrComputeStatistics",
                        "name": "_gdsrComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The parameter is 'true' if statistics need to be generated from the\n-- observation data.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataSourceSchema",
                        "name": "_gdsrDataSourceSchema",
                        "shape": "DataSchema",
                        "locationName": "DataSourceSchema",
                        "documentation": "-- | The schema used by all of the data files of this 'DataSource'.\n--\n-- Note This parameter is provided as part of the verbose format.\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 18,
                "name": "GetDataSourceResponse",
                "resultWrapper": null,
                "locationPad": 18,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataSourceId",
                        "name": "_gdsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID assigned to the 'DataSource' at creation. This value should be identical\n-- to the value of the 'DataSourceId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataLocationS3",
                        "name": "_gdsrDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "DataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataRearrangement",
                        "name": "_gdsrDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | A JSON string that captures the splitting rearrangement requirement of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrCreatedByIamUser",
                        "name": "_gdsrCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account from which the 'DataSource' was created. The account type\n-- can be either an AWS root account or an AWS Identity and Access Management\n-- (IAM) user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrCreatedAt",
                        "name": "_gdsrCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'DataSource' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrLastUpdatedAt",
                        "name": "_gdsrLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'DataSource'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataSizeInBytes",
                        "name": "_gdsrDataSizeInBytes",
                        "shape": "LongType",
                        "locationName": "DataSizeInBytes",
                        "documentation": "-- | The total size of observations in the data files.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrNumberOfFiles",
                        "name": "_gdsrNumberOfFiles",
                        "shape": "LongType",
                        "locationName": "NumberOfFiles",
                        "documentation": "-- | The number of data files referenced by the 'DataSource'.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrName",
                        "name": "_gdsrName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrStatus",
                        "name": "_gdsrStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The current status of the 'DataSource'. This element can have one of the\n-- following values:\n--\n-- 'PENDING' - Amazon Machine Language (Amazon ML) submitted a request to\n-- create a 'DataSource'.  'INPROGRESS' - The creation process is underway.  'FAILED'\n-- - The request to create a 'DataSource' did not run to completion. It is not\n-- usable.  'COMPLETED' - The creation process completed successfully.  'DELETED' -\n-- The 'DataSource' is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrLogUri",
                        "name": "_gdsrLogUri",
                        "shape": "PresignedS3Url",
                        "locationName": "LogUri",
                        "documentation": "-- | A link to the file containining logs of either create 'DataSource' operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrMessage",
                        "name": "_gdsrMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | The description of the most recent details about creating the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrRedshiftMetadata",
                        "name": "_gdsrRedshiftMetadata",
                        "shape": "RedshiftMetadata",
                        "locationName": "RedshiftMetadata",
                        "documentation": null,
                        "typeExposed": "Maybe RedshiftMetadata",
                        "type": "Maybe RedshiftMetadata"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrRDSMetadata",
                        "name": "_gdsrRDSMetadata",
                        "shape": "RDSMetadata",
                        "locationName": "RDSMetadata",
                        "documentation": null,
                        "typeExposed": "Maybe RDSMetadata",
                        "type": "Maybe RDSMetadata"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrRoleARN",
                        "name": "_gdsrRoleARN",
                        "shape": "RoleARN",
                        "locationName": "RoleARN",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrComputeStatistics",
                        "name": "_gdsrComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The parameter is 'true' if statistics need to be generated from the\n-- observation data.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataSourceSchema",
                        "name": "_gdsrDataSourceSchema",
                        "shape": "DataSchema",
                        "locationName": "DataSourceSchema",
                        "documentation": "-- | The schema used by all of the data files of this 'DataSource'.\n--\n-- Note This parameter is provided as part of the verbose format.\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrComputeStatistics",
                        "name": "_gdsrComputeStatistics",
                        "shape": "ComputeStatistics",
                        "locationName": "ComputeStatistics",
                        "documentation": "-- | The parameter is 'true' if statistics need to be generated from the\n-- observation data.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrCreatedAt",
                        "name": "_gdsrCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'DataSource' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrCreatedByIamUser",
                        "name": "_gdsrCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account from which the 'DataSource' was created. The account type\n-- can be either an AWS root account or an AWS Identity and Access Management\n-- (IAM) user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataLocationS3",
                        "name": "_gdsrDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "DataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataRearrangement",
                        "name": "_gdsrDataRearrangement",
                        "shape": "DataRearrangement",
                        "locationName": "DataRearrangement",
                        "documentation": "-- | A JSON string that captures the splitting rearrangement requirement of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataSizeInBytes",
                        "name": "_gdsrDataSizeInBytes",
                        "shape": "LongType",
                        "locationName": "DataSizeInBytes",
                        "documentation": "-- | The total size of observations in the data files.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataSourceId",
                        "name": "_gdsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID assigned to the 'DataSource' at creation. This value should be identical\n-- to the value of the 'DataSourceId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrDataSourceSchema",
                        "name": "_gdsrDataSourceSchema",
                        "shape": "DataSchema",
                        "locationName": "DataSourceSchema",
                        "documentation": "-- | The schema used by all of the data files of this 'DataSource'.\n--\n-- Note This parameter is provided as part of the verbose format.\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrLastUpdatedAt",
                        "name": "_gdsrLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'DataSource'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrLogUri",
                        "name": "_gdsrLogUri",
                        "shape": "PresignedS3Url",
                        "locationName": "LogUri",
                        "documentation": "-- | A link to the file containining logs of either create 'DataSource' operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrMessage",
                        "name": "_gdsrMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | The description of the most recent details about creating the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrName",
                        "name": "_gdsrName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrNumberOfFiles",
                        "name": "_gdsrNumberOfFiles",
                        "shape": "LongType",
                        "locationName": "NumberOfFiles",
                        "documentation": "-- | The number of data files referenced by the 'DataSource'.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrRDSMetadata",
                        "name": "_gdsrRDSMetadata",
                        "shape": "RDSMetadata",
                        "locationName": "RDSMetadata",
                        "documentation": null,
                        "typeExposed": "Maybe RDSMetadata",
                        "type": "Maybe RDSMetadata"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrRedshiftMetadata",
                        "name": "_gdsrRedshiftMetadata",
                        "shape": "RedshiftMetadata",
                        "locationName": "RedshiftMetadata",
                        "documentation": null,
                        "typeExposed": "Maybe RedshiftMetadata",
                        "type": "Maybe RedshiftMetadata"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrRoleARN",
                        "name": "_gdsrRoleARN",
                        "shape": "RoleARN",
                        "locationName": "RoleARN",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsrStatus",
                        "name": "_gdsrStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The current status of the 'DataSource'. This element can have one of the\n-- following values:\n--\n-- 'PENDING' - Amazon Machine Language (Amazon ML) submitted a request to\n-- create a 'DataSource'.  'INPROGRESS' - The creation process is underway.  'FAILED'\n-- - The request to create a 'DataSource' did not run to completion. It is not\n-- usable.  'COMPLETED' - The creation process completed successfully.  'DELETED' -\n-- The 'DataSource' is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_GetDataSource.html",
            "namespace": "Network.AWS.MachineLearning.GetDataSource",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "GetDataSource",
            "method": "post",
            "documentation": "-- | Returns a 'DataSource' that includes metadata and data file information, as\n-- well as the current status of the 'DataSource'.\n--\n-- 'GetDataSource' provides results in normal or verbose format. The verbose\n-- format adds the schema description and the list of files pointed to by the\n-- DataSource to the normal format.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 16,
                "ctor": "getDataSource",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gdsDataSourceId",
                        "name": "_gdsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID assigned to the 'DataSource' at creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsVerbose",
                        "name": "_gdsVerbose",
                        "shape": "Verbose",
                        "locationName": "Verbose",
                        "documentation": "-- | Specifies whether the 'GetDataSource' operation should return 'DataSourceSchema'.\n--\n-- If true, 'DataSourceSchema' is returned.\n--\n-- If false, 'DataSourceSchema' is not returned.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gdsDataSourceId",
                        "name": "_gdsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID assigned to the 'DataSource' at creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 13,
                "queryPad": 0,
                "name": "GetDataSource",
                "query": [],
                "locationPad": 13,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsVerbose",
                        "name": "_gdsVerbose",
                        "shape": "Verbose",
                        "locationName": "Verbose",
                        "documentation": "-- | Specifies whether the 'GetDataSource' operation should return 'DataSourceSchema'.\n--\n-- If true, 'DataSourceSchema' is returned.\n--\n-- If false, 'DataSourceSchema' is not returned.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gdsDataSourceId",
                        "name": "_gdsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID assigned to the 'DataSource' at creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gdsVerbose",
                        "name": "_gdsVerbose",
                        "shape": "Verbose",
                        "locationName": "Verbose",
                        "documentation": "-- | Specifies whether the 'GetDataSource' operation should return 'DataSourceSchema'.\n--\n-- If true, 'DataSourceSchema' is returned.\n--\n-- If false, 'DataSourceSchema' is not returned.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 26,
                "ctor": "getEvaluationResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerEvaluationId",
                        "name": "_gerEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The evaluation ID which is same as the 'EvaluationId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerMLModelId",
                        "name": "_gerMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that was the focus of the evaluation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerEvaluationDataSourceId",
                        "name": "_gerEvaluationDataSourceId",
                        "shape": "EntityId",
                        "locationName": "EvaluationDataSourceId",
                        "documentation": "-- | The 'DataSource' used for this evaluation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerInputDataLocationS3",
                        "name": "_gerInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerCreatedByIamUser",
                        "name": "_gerCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account that invoked the evaluation. The account type can be\n-- either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerCreatedAt",
                        "name": "_gerCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'Evaluation' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerLastUpdatedAt",
                        "name": "_gerLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'BatchPrediction'. The time is\n-- expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerName",
                        "name": "_gerName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'Evaluation'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerStatus",
                        "name": "_gerStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The status of the evaluation. This element can have one of the following\n-- values:\n--\n-- 'PENDING' - Amazon Machine Language (Amazon ML) submitted a request to\n-- evaluate an 'MLModel'.  'INPROGRESS' - The evaluation is underway.  'FAILED' - The\n-- request to evaluate an 'MLModel' did not run to completion. It is not usable.  'COMPLETED' - The evaluation process completed successfully.  'DELETED' - The 'Evaluation'\n-- is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerPerformanceMetrics",
                        "name": "_gerPerformanceMetrics",
                        "shape": "PerformanceMetrics",
                        "locationName": "PerformanceMetrics",
                        "documentation": "-- | Measurements of how well the 'MLModel' performed using observations referenced\n-- by the 'DataSource'. One of the following metric is returned based on the type\n-- of the 'MLModel':\n--\n-- BinaryAUC: A binary 'MLModel' uses the Area Under the Curve (AUC) technique\n-- to measure performance.\n--\n-- RegressionRMSE: A regression 'MLModel' uses the Root Mean Square Error\n-- (RMSE) technique to measure performance. RMSE measures the difference between\n-- predicted and actual values for a single variable.\n--\n-- MulticlassAvgFScore: A multiclass 'MLModel' uses the F1 score technique to\n-- measure performance.\n--\n-- For more information about performance metrics, please see the \u003chttp://docs.aws.amazon.com/machine-learning/latest/dg AmazonMachine Learning Developer Guide\u003e.",
                        "typeExposed": "Maybe PerformanceMetrics",
                        "type": "Maybe PerformanceMetrics"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerLogUri",
                        "name": "_gerLogUri",
                        "shape": "PresignedS3Url",
                        "locationName": "LogUri",
                        "documentation": "-- | A link to the file that contains logs of the 'CreateEvaluation' operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerMessage",
                        "name": "_gerMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about evaluating the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 23,
                "name": "GetEvaluationResponse",
                "resultWrapper": null,
                "locationPad": 23,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerEvaluationId",
                        "name": "_gerEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The evaluation ID which is same as the 'EvaluationId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerMLModelId",
                        "name": "_gerMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that was the focus of the evaluation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerEvaluationDataSourceId",
                        "name": "_gerEvaluationDataSourceId",
                        "shape": "EntityId",
                        "locationName": "EvaluationDataSourceId",
                        "documentation": "-- | The 'DataSource' used for this evaluation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerInputDataLocationS3",
                        "name": "_gerInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerCreatedByIamUser",
                        "name": "_gerCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account that invoked the evaluation. The account type can be\n-- either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerCreatedAt",
                        "name": "_gerCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'Evaluation' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerLastUpdatedAt",
                        "name": "_gerLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'BatchPrediction'. The time is\n-- expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerName",
                        "name": "_gerName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'Evaluation'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerStatus",
                        "name": "_gerStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The status of the evaluation. This element can have one of the following\n-- values:\n--\n-- 'PENDING' - Amazon Machine Language (Amazon ML) submitted a request to\n-- evaluate an 'MLModel'.  'INPROGRESS' - The evaluation is underway.  'FAILED' - The\n-- request to evaluate an 'MLModel' did not run to completion. It is not usable.  'COMPLETED' - The evaluation process completed successfully.  'DELETED' - The 'Evaluation'\n-- is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerPerformanceMetrics",
                        "name": "_gerPerformanceMetrics",
                        "shape": "PerformanceMetrics",
                        "locationName": "PerformanceMetrics",
                        "documentation": "-- | Measurements of how well the 'MLModel' performed using observations referenced\n-- by the 'DataSource'. One of the following metric is returned based on the type\n-- of the 'MLModel':\n--\n-- BinaryAUC: A binary 'MLModel' uses the Area Under the Curve (AUC) technique\n-- to measure performance.\n--\n-- RegressionRMSE: A regression 'MLModel' uses the Root Mean Square Error\n-- (RMSE) technique to measure performance. RMSE measures the difference between\n-- predicted and actual values for a single variable.\n--\n-- MulticlassAvgFScore: A multiclass 'MLModel' uses the F1 score technique to\n-- measure performance.\n--\n-- For more information about performance metrics, please see the \u003chttp://docs.aws.amazon.com/machine-learning/latest/dg AmazonMachine Learning Developer Guide\u003e.",
                        "typeExposed": "Maybe PerformanceMetrics",
                        "type": "Maybe PerformanceMetrics"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerLogUri",
                        "name": "_gerLogUri",
                        "shape": "PresignedS3Url",
                        "locationName": "LogUri",
                        "documentation": "-- | A link to the file that contains logs of the 'CreateEvaluation' operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerMessage",
                        "name": "_gerMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about evaluating the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerCreatedAt",
                        "name": "_gerCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'Evaluation' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerCreatedByIamUser",
                        "name": "_gerCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account that invoked the evaluation. The account type can be\n-- either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerEvaluationDataSourceId",
                        "name": "_gerEvaluationDataSourceId",
                        "shape": "EntityId",
                        "locationName": "EvaluationDataSourceId",
                        "documentation": "-- | The 'DataSource' used for this evaluation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerEvaluationId",
                        "name": "_gerEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The evaluation ID which is same as the 'EvaluationId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerInputDataLocationS3",
                        "name": "_gerInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerLastUpdatedAt",
                        "name": "_gerLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'BatchPrediction'. The time is\n-- expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerLogUri",
                        "name": "_gerLogUri",
                        "shape": "PresignedS3Url",
                        "locationName": "LogUri",
                        "documentation": "-- | A link to the file that contains logs of the 'CreateEvaluation' operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerMLModelId",
                        "name": "_gerMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID of the 'MLModel' that was the focus of the evaluation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerMessage",
                        "name": "_gerMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | A description of the most recent details about evaluating the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerName",
                        "name": "_gerName",
                        "shape": "EntityName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'Evaluation'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerPerformanceMetrics",
                        "name": "_gerPerformanceMetrics",
                        "shape": "PerformanceMetrics",
                        "locationName": "PerformanceMetrics",
                        "documentation": "-- | Measurements of how well the 'MLModel' performed using observations referenced\n-- by the 'DataSource'. One of the following metric is returned based on the type\n-- of the 'MLModel':\n--\n-- BinaryAUC: A binary 'MLModel' uses the Area Under the Curve (AUC) technique\n-- to measure performance.\n--\n-- RegressionRMSE: A regression 'MLModel' uses the Root Mean Square Error\n-- (RMSE) technique to measure performance. RMSE measures the difference between\n-- predicted and actual values for a single variable.\n--\n-- MulticlassAvgFScore: A multiclass 'MLModel' uses the F1 score technique to\n-- measure performance.\n--\n-- For more information about performance metrics, please see the \u003chttp://docs.aws.amazon.com/machine-learning/latest/dg AmazonMachine Learning Developer Guide\u003e.",
                        "typeExposed": "Maybe PerformanceMetrics",
                        "type": "Maybe PerformanceMetrics"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gerStatus",
                        "name": "_gerStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The status of the evaluation. This element can have one of the following\n-- values:\n--\n-- 'PENDING' - Amazon Machine Language (Amazon ML) submitted a request to\n-- evaluate an 'MLModel'.  'INPROGRESS' - The evaluation is underway.  'FAILED' - The\n-- request to evaluate an 'MLModel' did not run to completion. It is not usable.  'COMPLETED' - The evaluation process completed successfully.  'DELETED' - The 'Evaluation'\n-- is marked as deleted. It is not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_GetEvaluation.html",
            "namespace": "Network.AWS.MachineLearning.GetEvaluation",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "GetEvaluation",
            "method": "post",
            "documentation": "-- | Returns an 'Evaluation' that includes metadata as well as the current status of\n-- the 'Evaluation'.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "getEvaluation",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": true,
                    "lens": "geEvaluationId",
                    "name": "_geEvaluationId",
                    "shape": "EntityId",
                    "locationName": "EvaluationId",
                    "documentation": "-- | The ID of the 'Evaluation' to retrieve. The evaluation of each 'MLModel' is\n-- recorded and cataloged. The ID provides the means to access the information.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "geEvaluationId",
                        "name": "_geEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The ID of the 'Evaluation' to retrieve. The evaluation of each 'MLModel' is\n-- recorded and cataloged. The ID provides the means to access the information.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "geEvaluationId",
                        "name": "_geEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The ID of the 'Evaluation' to retrieve. The evaluation of each 'MLModel' is\n-- recorded and cataloged. The ID provides the means to access the information.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetEvaluation",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "geEvaluationId",
                        "name": "_geEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The ID of the 'Evaluation' to retrieve. The evaluation of each 'MLModel' is\n-- recorded and cataloged. The ID provides the means to access the information.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 33,
                "ctor": "getMLModelResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrMLModelId",
                        "name": "_gmlmrMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The MLModel ID which is same as the 'MLModelId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrTrainingDataSourceId",
                        "name": "_gmlmrTrainingDataSourceId",
                        "shape": "EntityId",
                        "locationName": "TrainingDataSourceId",
                        "documentation": "-- | The ID of the training 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrCreatedByIamUser",
                        "name": "_gmlmrCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account from which the 'MLModel' was created. The account type can\n-- be either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrCreatedAt",
                        "name": "_gmlmrCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'MLModel' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrLastUpdatedAt",
                        "name": "_gmlmrLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'MLModel'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrName",
                        "name": "_gmlmrName",
                        "shape": "MLModelName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrStatus",
                        "name": "_gmlmrStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The current status of the 'MLModel'. This element can have one of the following\n-- values:\n--\n-- 'PENDING' - Amazon Machine Learning (Amazon ML) submitted a request to\n-- describe a 'MLModel'.  'INPROGRESS' - The request is processing.  'FAILED' - The\n-- request did not run to completion. It is not usable.  'COMPLETED' - The request\n-- completed successfully.  'DELETED' - The 'MLModel' is marked as deleted. It is\n-- not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrSizeInBytes",
                        "name": "_gmlmrSizeInBytes",
                        "shape": "LongType",
                        "locationName": "SizeInBytes",
                        "documentation": null,
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrEndpointInfo",
                        "name": "_gmlmrEndpointInfo",
                        "shape": "RealtimeEndpointInfo",
                        "locationName": "EndpointInfo",
                        "documentation": "-- | The current endpoint of the 'MLModel'",
                        "typeExposed": "Maybe RealtimeEndpointInfo",
                        "type": "Maybe RealtimeEndpointInfo"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gmlmrTrainingParameters",
                        "name": "_gmlmrTrainingParameters",
                        "shape": "TrainingParameters",
                        "locationName": "TrainingParameters",
                        "documentation": "-- | A list of the training parameters in the 'MLModel'. The list is implemented as\n-- a map of key/value pairs.\n--\n-- The following is the current set of training parameters:\n--\n-- 'sgd.l1RegularizationAmount' - Coefficient regularization L1 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to zero, resulting in a sparse feature set. If you use\n-- this parameter, specify a small value, such as 1.0E-04 or 1.0E-08.\n--\n-- The value is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L1 normalization. The parameter cannot be used when 'L2' is specified.\n-- Use this parameter sparingly.\n--\n-- 'sgd.l2RegularizationAmount' - Coefficient regularization L2 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to small, nonzero values. If you use this parameter,\n-- specify a small value, such as 1.0E-04 or 1.0E-08.\n--\n-- The value is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L2 normalization. This parameter cannot be used when 'L1' is specified.\n-- Use this parameter sparingly.\n--\n-- 'sgd.maxPasses' - The number of times that the training process traverses the\n-- observations to build the 'MLModel'. The value is an integer that ranges from 1\n-- to 10000. The default value is 10.\n--\n-- 'sgd.maxMLModelSizeInBytes' - The maximum allowed size of the model.\n-- Depending on the input data, the model size might affect performance.\n--\n-- The value is an integer that ranges from 100000 to 2147483648. The default\n-- value is 33554432.\n--\n--",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrInputDataLocationS3",
                        "name": "_gmlmrInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrMLModelType",
                        "name": "_gmlmrMLModelType",
                        "shape": "MLModelType",
                        "locationName": "MLModelType",
                        "documentation": "-- | Identifies the 'MLModel' category. The following are the available types:\n--\n-- REGRESSION -- Produces a numeric result. For example, \"What listing price\n-- should a house have?\" BINARY -- Produces one of two possible results. For\n-- example, \"Is this an e-commerce website?\" MULTICLASS -- Produces more than\n-- two possible results. For example, \"Is this a HIGH, LOW or MEDIUM risk trade?\"\n--",
                        "typeExposed": "Maybe MLModelType",
                        "type": "Maybe MLModelType"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrScoreThreshold",
                        "name": "_gmlmrScoreThreshold",
                        "shape": "ScoreThreshold",
                        "locationName": "ScoreThreshold",
                        "documentation": "-- | The scoring threshold is used in binary classification 'MLModel's, and marks\n-- the boundary between a positive prediction and a negative prediction.\n--\n-- Output values greater than or equal to the threshold receive a positive\n-- result from the MLModel, such as 'true'. Output values less than the threshold\n-- receive a negative response from the MLModel, such as 'false'.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrScoreThresholdLastUpdatedAt",
                        "name": "_gmlmrScoreThresholdLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "ScoreThresholdLastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'ScoreThreshold'. The time is expressed\n-- in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrLogUri",
                        "name": "_gmlmrLogUri",
                        "shape": "PresignedS3Url",
                        "locationName": "LogUri",
                        "documentation": "-- | A link to the file that contains logs of the 'CreateMLModel' operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrMessage",
                        "name": "_gmlmrMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | Description of the most recent details about accessing the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrRecipe",
                        "name": "_gmlmrRecipe",
                        "shape": "Recipe",
                        "locationName": "Recipe",
                        "documentation": "-- | The recipe to use when training the 'MLModel'. The 'Recipe' provides detailed\n-- information about the observation data to use during training, as well as\n-- manipulations to perform on the observation data during training.\n--\n-- Note This parameter is provided as part of the verbose format.\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrSchema",
                        "name": "_gmlmrSchema",
                        "shape": "DataSchema",
                        "locationName": "Schema",
                        "documentation": "-- | The schema used by all of the data files referenced by the 'DataSource'.\n--\n-- Note This parameter is provided as part of the verbose format.\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 28,
                "name": "GetMLModelResponse",
                "resultWrapper": null,
                "locationPad": 28,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrMLModelId",
                        "name": "_gmlmrMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The MLModel ID which is same as the 'MLModelId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrTrainingDataSourceId",
                        "name": "_gmlmrTrainingDataSourceId",
                        "shape": "EntityId",
                        "locationName": "TrainingDataSourceId",
                        "documentation": "-- | The ID of the training 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrCreatedByIamUser",
                        "name": "_gmlmrCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account from which the 'MLModel' was created. The account type can\n-- be either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrCreatedAt",
                        "name": "_gmlmrCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'MLModel' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrLastUpdatedAt",
                        "name": "_gmlmrLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'MLModel'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrName",
                        "name": "_gmlmrName",
                        "shape": "MLModelName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrStatus",
                        "name": "_gmlmrStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The current status of the 'MLModel'. This element can have one of the following\n-- values:\n--\n-- 'PENDING' - Amazon Machine Learning (Amazon ML) submitted a request to\n-- describe a 'MLModel'.  'INPROGRESS' - The request is processing.  'FAILED' - The\n-- request did not run to completion. It is not usable.  'COMPLETED' - The request\n-- completed successfully.  'DELETED' - The 'MLModel' is marked as deleted. It is\n-- not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrSizeInBytes",
                        "name": "_gmlmrSizeInBytes",
                        "shape": "LongType",
                        "locationName": "SizeInBytes",
                        "documentation": null,
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrEndpointInfo",
                        "name": "_gmlmrEndpointInfo",
                        "shape": "RealtimeEndpointInfo",
                        "locationName": "EndpointInfo",
                        "documentation": "-- | The current endpoint of the 'MLModel'",
                        "typeExposed": "Maybe RealtimeEndpointInfo",
                        "type": "Maybe RealtimeEndpointInfo"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gmlmrTrainingParameters",
                        "name": "_gmlmrTrainingParameters",
                        "shape": "TrainingParameters",
                        "locationName": "TrainingParameters",
                        "documentation": "-- | A list of the training parameters in the 'MLModel'. The list is implemented as\n-- a map of key/value pairs.\n--\n-- The following is the current set of training parameters:\n--\n-- 'sgd.l1RegularizationAmount' - Coefficient regularization L1 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to zero, resulting in a sparse feature set. If you use\n-- this parameter, specify a small value, such as 1.0E-04 or 1.0E-08.\n--\n-- The value is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L1 normalization. The parameter cannot be used when 'L2' is specified.\n-- Use this parameter sparingly.\n--\n-- 'sgd.l2RegularizationAmount' - Coefficient regularization L2 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to small, nonzero values. If you use this parameter,\n-- specify a small value, such as 1.0E-04 or 1.0E-08.\n--\n-- The value is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L2 normalization. This parameter cannot be used when 'L1' is specified.\n-- Use this parameter sparingly.\n--\n-- 'sgd.maxPasses' - The number of times that the training process traverses the\n-- observations to build the 'MLModel'. The value is an integer that ranges from 1\n-- to 10000. The default value is 10.\n--\n-- 'sgd.maxMLModelSizeInBytes' - The maximum allowed size of the model.\n-- Depending on the input data, the model size might affect performance.\n--\n-- The value is an integer that ranges from 100000 to 2147483648. The default\n-- value is 33554432.\n--\n--",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrInputDataLocationS3",
                        "name": "_gmlmrInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrMLModelType",
                        "name": "_gmlmrMLModelType",
                        "shape": "MLModelType",
                        "locationName": "MLModelType",
                        "documentation": "-- | Identifies the 'MLModel' category. The following are the available types:\n--\n-- REGRESSION -- Produces a numeric result. For example, \"What listing price\n-- should a house have?\" BINARY -- Produces one of two possible results. For\n-- example, \"Is this an e-commerce website?\" MULTICLASS -- Produces more than\n-- two possible results. For example, \"Is this a HIGH, LOW or MEDIUM risk trade?\"\n--",
                        "typeExposed": "Maybe MLModelType",
                        "type": "Maybe MLModelType"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrScoreThreshold",
                        "name": "_gmlmrScoreThreshold",
                        "shape": "ScoreThreshold",
                        "locationName": "ScoreThreshold",
                        "documentation": "-- | The scoring threshold is used in binary classification 'MLModel's, and marks\n-- the boundary between a positive prediction and a negative prediction.\n--\n-- Output values greater than or equal to the threshold receive a positive\n-- result from the MLModel, such as 'true'. Output values less than the threshold\n-- receive a negative response from the MLModel, such as 'false'.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrScoreThresholdLastUpdatedAt",
                        "name": "_gmlmrScoreThresholdLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "ScoreThresholdLastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'ScoreThreshold'. The time is expressed\n-- in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrLogUri",
                        "name": "_gmlmrLogUri",
                        "shape": "PresignedS3Url",
                        "locationName": "LogUri",
                        "documentation": "-- | A link to the file that contains logs of the 'CreateMLModel' operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrMessage",
                        "name": "_gmlmrMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | Description of the most recent details about accessing the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrRecipe",
                        "name": "_gmlmrRecipe",
                        "shape": "Recipe",
                        "locationName": "Recipe",
                        "documentation": "-- | The recipe to use when training the 'MLModel'. The 'Recipe' provides detailed\n-- information about the observation data to use during training, as well as\n-- manipulations to perform on the observation data during training.\n--\n-- Note This parameter is provided as part of the verbose format.\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrSchema",
                        "name": "_gmlmrSchema",
                        "shape": "DataSchema",
                        "locationName": "Schema",
                        "documentation": "-- | The schema used by all of the data files referenced by the 'DataSource'.\n--\n-- Note This parameter is provided as part of the verbose format.\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrCreatedAt",
                        "name": "_gmlmrCreatedAt",
                        "shape": "EpochTime",
                        "locationName": "CreatedAt",
                        "documentation": "-- | The time that the 'MLModel' was created. The time is expressed in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrCreatedByIamUser",
                        "name": "_gmlmrCreatedByIamUser",
                        "shape": "AwsUserArn",
                        "locationName": "CreatedByIamUser",
                        "documentation": "-- | The AWS user account from which the 'MLModel' was created. The account type can\n-- be either an AWS root account or an AWS Identity and Access Management (IAM)\n-- user account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrEndpointInfo",
                        "name": "_gmlmrEndpointInfo",
                        "shape": "RealtimeEndpointInfo",
                        "locationName": "EndpointInfo",
                        "documentation": "-- | The current endpoint of the 'MLModel'",
                        "typeExposed": "Maybe RealtimeEndpointInfo",
                        "type": "Maybe RealtimeEndpointInfo"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrInputDataLocationS3",
                        "name": "_gmlmrInputDataLocationS3",
                        "shape": "S3Url",
                        "locationName": "InputDataLocationS3",
                        "documentation": "-- | The location of the data file or directory in Amazon Simple Storage Service\n-- (Amazon S3).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrLastUpdatedAt",
                        "name": "_gmlmrLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "LastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'MLModel'. The time is expressed in\n-- epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrLogUri",
                        "name": "_gmlmrLogUri",
                        "shape": "PresignedS3Url",
                        "locationName": "LogUri",
                        "documentation": "-- | A link to the file that contains logs of the 'CreateMLModel' operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrMLModelId",
                        "name": "_gmlmrMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The MLModel ID which is same as the 'MLModelId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrMLModelType",
                        "name": "_gmlmrMLModelType",
                        "shape": "MLModelType",
                        "locationName": "MLModelType",
                        "documentation": "-- | Identifies the 'MLModel' category. The following are the available types:\n--\n-- REGRESSION -- Produces a numeric result. For example, \"What listing price\n-- should a house have?\" BINARY -- Produces one of two possible results. For\n-- example, \"Is this an e-commerce website?\" MULTICLASS -- Produces more than\n-- two possible results. For example, \"Is this a HIGH, LOW or MEDIUM risk trade?\"\n--",
                        "typeExposed": "Maybe MLModelType",
                        "type": "Maybe MLModelType"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrMessage",
                        "name": "_gmlmrMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | Description of the most recent details about accessing the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrName",
                        "name": "_gmlmrName",
                        "shape": "MLModelName",
                        "locationName": "Name",
                        "documentation": "-- | A user-supplied name or description of the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrRecipe",
                        "name": "_gmlmrRecipe",
                        "shape": "Recipe",
                        "locationName": "Recipe",
                        "documentation": "-- | The recipe to use when training the 'MLModel'. The 'Recipe' provides detailed\n-- information about the observation data to use during training, as well as\n-- manipulations to perform on the observation data during training.\n--\n-- Note This parameter is provided as part of the verbose format.\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrSchema",
                        "name": "_gmlmrSchema",
                        "shape": "DataSchema",
                        "locationName": "Schema",
                        "documentation": "-- | The schema used by all of the data files referenced by the 'DataSource'.\n--\n-- Note This parameter is provided as part of the verbose format.\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrScoreThreshold",
                        "name": "_gmlmrScoreThreshold",
                        "shape": "ScoreThreshold",
                        "locationName": "ScoreThreshold",
                        "documentation": "-- | The scoring threshold is used in binary classification 'MLModel's, and marks\n-- the boundary between a positive prediction and a negative prediction.\n--\n-- Output values greater than or equal to the threshold receive a positive\n-- result from the MLModel, such as 'true'. Output values less than the threshold\n-- receive a negative response from the MLModel, such as 'false'.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrScoreThresholdLastUpdatedAt",
                        "name": "_gmlmrScoreThresholdLastUpdatedAt",
                        "shape": "EpochTime",
                        "locationName": "ScoreThresholdLastUpdatedAt",
                        "documentation": "-- | The time of the most recent edit to the 'ScoreThreshold'. The time is expressed\n-- in epoch time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe POSIX"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrSizeInBytes",
                        "name": "_gmlmrSizeInBytes",
                        "shape": "LongType",
                        "locationName": "SizeInBytes",
                        "documentation": null,
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrStatus",
                        "name": "_gmlmrStatus",
                        "shape": "EntityStatus",
                        "locationName": "Status",
                        "documentation": "-- | The current status of the 'MLModel'. This element can have one of the following\n-- values:\n--\n-- 'PENDING' - Amazon Machine Learning (Amazon ML) submitted a request to\n-- describe a 'MLModel'.  'INPROGRESS' - The request is processing.  'FAILED' - The\n-- request did not run to completion. It is not usable.  'COMPLETED' - The request\n-- completed successfully.  'DELETED' - The 'MLModel' is marked as deleted. It is\n-- not usable.",
                        "typeExposed": "Maybe EntityStatus",
                        "type": "Maybe EntityStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmrTrainingDataSourceId",
                        "name": "_gmlmrTrainingDataSourceId",
                        "shape": "EntityId",
                        "locationName": "TrainingDataSourceId",
                        "documentation": "-- | The ID of the training 'DataSource'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gmlmrTrainingParameters",
                        "name": "_gmlmrTrainingParameters",
                        "shape": "TrainingParameters",
                        "locationName": "TrainingParameters",
                        "documentation": "-- | A list of the training parameters in the 'MLModel'. The list is implemented as\n-- a map of key/value pairs.\n--\n-- The following is the current set of training parameters:\n--\n-- 'sgd.l1RegularizationAmount' - Coefficient regularization L1 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to zero, resulting in a sparse feature set. If you use\n-- this parameter, specify a small value, such as 1.0E-04 or 1.0E-08.\n--\n-- The value is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L1 normalization. The parameter cannot be used when 'L2' is specified.\n-- Use this parameter sparingly.\n--\n-- 'sgd.l2RegularizationAmount' - Coefficient regularization L2 norm. It\n-- controls overfitting the data by penalizing large coefficients. This tends to\n-- drive coefficients to small, nonzero values. If you use this parameter,\n-- specify a small value, such as 1.0E-04 or 1.0E-08.\n--\n-- The value is a double that ranges from 0 to MAX_DOUBLE. The default is not\n-- to use L2 normalization. This parameter cannot be used when 'L1' is specified.\n-- Use this parameter sparingly.\n--\n-- 'sgd.maxPasses' - The number of times that the training process traverses the\n-- observations to build the 'MLModel'. The value is an integer that ranges from 1\n-- to 10000. The default value is 10.\n--\n-- 'sgd.maxMLModelSizeInBytes' - The maximum allowed size of the model.\n-- Depending on the input data, the model size might affect performance.\n--\n-- The value is an integer that ranges from 100000 to 2147483648. The default\n-- value is 33554432.\n--\n--",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_GetMLModel.html",
            "namespace": "Network.AWS.MachineLearning.GetMLModel",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "GetMLModel",
            "method": "post",
            "documentation": "-- | Returns an 'MLModel' that includes detailed metadata, and data source\n-- information as well as the current status of the 'MLModel'.\n--\n-- 'GetMLModel' provides results in normal or verbose format.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "getMLModel",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gmlmMLModelId",
                        "name": "_gmlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' at creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmVerbose",
                        "name": "_gmlmVerbose",
                        "shape": "Verbose",
                        "locationName": "Verbose",
                        "documentation": "-- | Specifies whether the 'GetMLModel' operation should return 'Recipe'.\n--\n-- If true, 'Recipe' is returned.\n--\n-- If false, 'Recipe' is not returned.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gmlmMLModelId",
                        "name": "_gmlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' at creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 10,
                "queryPad": 0,
                "name": "GetMLModel",
                "query": [],
                "locationPad": 10,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmVerbose",
                        "name": "_gmlmVerbose",
                        "shape": "Verbose",
                        "locationName": "Verbose",
                        "documentation": "-- | Specifies whether the 'GetMLModel' operation should return 'Recipe'.\n--\n-- If true, 'Recipe' is returned.\n--\n-- If false, 'Recipe' is not returned.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "gmlmMLModelId",
                        "name": "_gmlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' at creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "gmlmVerbose",
                        "name": "_gmlmVerbose",
                        "shape": "Verbose",
                        "locationName": "Verbose",
                        "documentation": "-- | Specifies whether the 'GetMLModel' operation should return 'Recipe'.\n--\n-- If true, 'Recipe' is returned.\n--\n-- If false, 'Recipe' is not returned.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "predictResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "prPrediction",
                    "name": "_prPrediction",
                    "shape": "Prediction",
                    "locationName": "Prediction",
                    "documentation": null,
                    "typeExposed": "Maybe Prediction",
                    "type": "Maybe Prediction"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "prPrediction",
                        "name": "_prPrediction",
                        "shape": "Prediction",
                        "locationName": "Prediction",
                        "documentation": null,
                        "typeExposed": "Maybe Prediction",
                        "type": "Maybe Prediction"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "PredictResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "prPrediction",
                        "name": "_prPrediction",
                        "shape": "Prediction",
                        "locationName": "Prediction",
                        "documentation": null,
                        "typeExposed": "Maybe Prediction",
                        "type": "Maybe Prediction"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "prPrediction",
                        "name": "_prPrediction",
                        "shape": "Prediction",
                        "locationName": "Prediction",
                        "documentation": null,
                        "typeExposed": "Maybe Prediction",
                        "type": "Maybe Prediction"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_Predict.html",
            "namespace": "Network.AWS.MachineLearning.Predict",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "Predict",
            "method": "post",
            "documentation": "-- | Generates a prediction for the observation using the specified 'MLModel'.\n--\n-- Note Not all response parameters will be populated because this is dependent\n-- on the type of requested model.\n--",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 17,
                "ctor": "predict",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pMLModelId",
                        "name": "_pMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A unique identifier of the 'MLModel'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pRecord",
                        "name": "_pRecord",
                        "shape": "Record",
                        "locationName": "Record",
                        "documentation": null,
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pPredictEndpoint",
                        "name": "_pPredictEndpoint",
                        "shape": "VipURL",
                        "locationName": "PredictEndpoint",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pMLModelId",
                        "name": "_pMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A unique identifier of the 'MLModel'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pPredictEndpoint",
                        "name": "_pPredictEndpoint",
                        "shape": "VipURL",
                        "locationName": "PredictEndpoint",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 16,
                "queryPad": 0,
                "name": "Predict",
                "query": [],
                "locationPad": 16,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pRecord",
                        "name": "_pRecord",
                        "shape": "Record",
                        "locationName": "Record",
                        "documentation": null,
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pMLModelId",
                        "name": "_pMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | A unique identifier of the 'MLModel'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pPredictEndpoint",
                        "name": "_pPredictEndpoint",
                        "shape": "VipURL",
                        "locationName": "PredictEndpoint",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "pRecord",
                        "name": "_pRecord",
                        "shape": "Record",
                        "locationName": "Record",
                        "documentation": null,
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "updateBatchPredictionResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "ubprBatchPredictionId",
                    "name": "_ubprBatchPredictionId",
                    "shape": "EntityId",
                    "locationName": "BatchPredictionId",
                    "documentation": "-- | The ID assigned to the 'BatchPrediction' during creation. This value should be\n-- identical to the value of the 'BatchPredictionId' in the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ubprBatchPredictionId",
                        "name": "_ubprBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | The ID assigned to the 'BatchPrediction' during creation. This value should be\n-- identical to the value of the 'BatchPredictionId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "UpdateBatchPredictionResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ubprBatchPredictionId",
                        "name": "_ubprBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | The ID assigned to the 'BatchPrediction' during creation. This value should be\n-- identical to the value of the 'BatchPredictionId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "ubprBatchPredictionId",
                        "name": "_ubprBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | The ID assigned to the 'BatchPrediction' during creation. This value should be\n-- identical to the value of the 'BatchPredictionId' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_UpdateBatchPrediction.html",
            "namespace": "Network.AWS.MachineLearning.UpdateBatchPrediction",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "UpdateBatchPrediction",
            "method": "post",
            "documentation": "-- | Updates the 'BatchPredictionName' of a 'BatchPrediction'.\n--\n-- You can use the 'GetBatchPrediction' operation to view the contents of the\n-- updated data element.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 23,
                "ctor": "updateBatchPrediction",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ubpBatchPredictionId",
                        "name": "_ubpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | The ID assigned to the 'BatchPrediction' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ubpBatchPredictionName",
                        "name": "_ubpBatchPredictionName",
                        "shape": "EntityName",
                        "locationName": "BatchPredictionName",
                        "documentation": "-- | A new user-supplied name or description of the 'BatchPrediction'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ubpBatchPredictionId",
                        "name": "_ubpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | The ID assigned to the 'BatchPrediction' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ubpBatchPredictionName",
                        "name": "_ubpBatchPredictionName",
                        "shape": "EntityName",
                        "locationName": "BatchPredictionName",
                        "documentation": "-- | A new user-supplied name or description of the 'BatchPrediction'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 20,
                "queryPad": 0,
                "name": "UpdateBatchPrediction",
                "query": [],
                "locationPad": 20,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ubpBatchPredictionId",
                        "name": "_ubpBatchPredictionId",
                        "shape": "EntityId",
                        "locationName": "BatchPredictionId",
                        "documentation": "-- | The ID assigned to the 'BatchPrediction' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ubpBatchPredictionName",
                        "name": "_ubpBatchPredictionName",
                        "shape": "EntityName",
                        "locationName": "BatchPredictionName",
                        "documentation": "-- | A new user-supplied name or description of the 'BatchPrediction'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "updateDataSourceResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "udsrDataSourceId",
                    "name": "_udsrDataSourceId",
                    "shape": "EntityId",
                    "locationName": "DataSourceId",
                    "documentation": "-- | The ID assigned to the 'DataSource' during creation. This value should be\n-- identical to the value of the 'DataSourceID' in the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "udsrDataSourceId",
                        "name": "_udsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID assigned to the 'DataSource' during creation. This value should be\n-- identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "UpdateDataSourceResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "udsrDataSourceId",
                        "name": "_udsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID assigned to the 'DataSource' during creation. This value should be\n-- identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "udsrDataSourceId",
                        "name": "_udsrDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID assigned to the 'DataSource' during creation. This value should be\n-- identical to the value of the 'DataSourceID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_UpdateDataSource.html",
            "namespace": "Network.AWS.MachineLearning.UpdateDataSource",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "UpdateDataSource",
            "method": "post",
            "documentation": "-- | Updates the 'DataSourceName' of a 'DataSource'.\n--\n-- You can use the 'GetDataSource' operation to view the contents of the updated\n-- data element.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 18,
                "ctor": "updateDataSource",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "udsDataSourceId",
                        "name": "_udsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID assigned to the 'DataSource' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "udsDataSourceName",
                        "name": "_udsDataSourceName",
                        "shape": "EntityName",
                        "locationName": "DataSourceName",
                        "documentation": "-- | A new user-supplied name or description of the 'DataSource' that will replace\n-- the current description.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "udsDataSourceId",
                        "name": "_udsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID assigned to the 'DataSource' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "udsDataSourceName",
                        "name": "_udsDataSourceName",
                        "shape": "EntityName",
                        "locationName": "DataSourceName",
                        "documentation": "-- | A new user-supplied name or description of the 'DataSource' that will replace\n-- the current description.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "queryPad": 0,
                "name": "UpdateDataSource",
                "query": [],
                "locationPad": 15,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "udsDataSourceId",
                        "name": "_udsDataSourceId",
                        "shape": "EntityId",
                        "locationName": "DataSourceId",
                        "documentation": "-- | The ID assigned to the 'DataSource' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "udsDataSourceName",
                        "name": "_udsDataSourceName",
                        "shape": "EntityName",
                        "locationName": "DataSourceName",
                        "documentation": "-- | A new user-supplied name or description of the 'DataSource' that will replace\n-- the current description.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "updateEvaluationResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "uerEvaluationId",
                    "name": "_uerEvaluationId",
                    "shape": "EntityId",
                    "locationName": "EvaluationId",
                    "documentation": "-- | The ID assigned to the 'Evaluation' during creation. This value should be\n-- identical to the value of the 'Evaluation' in the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "uerEvaluationId",
                        "name": "_uerEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The ID assigned to the 'Evaluation' during creation. This value should be\n-- identical to the value of the 'Evaluation' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "UpdateEvaluationResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "uerEvaluationId",
                        "name": "_uerEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The ID assigned to the 'Evaluation' during creation. This value should be\n-- identical to the value of the 'Evaluation' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "uerEvaluationId",
                        "name": "_uerEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The ID assigned to the 'Evaluation' during creation. This value should be\n-- identical to the value of the 'Evaluation' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_UpdateEvaluation.html",
            "namespace": "Network.AWS.MachineLearning.UpdateEvaluation",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "UpdateEvaluation",
            "method": "post",
            "documentation": "-- | Updates the 'EvaluationName' of an 'Evaluation'.\n--\n-- You can use the 'GetEvaluation' operation to view the contents of the updated\n-- data element.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 17,
                "ctor": "updateEvaluation",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ueEvaluationId",
                        "name": "_ueEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The ID assigned to the 'Evaluation' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ueEvaluationName",
                        "name": "_ueEvaluationName",
                        "shape": "EntityName",
                        "locationName": "EvaluationName",
                        "documentation": "-- | A new user-supplied name or description of the 'Evaluation' that will replace\n-- the current content.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ueEvaluationId",
                        "name": "_ueEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The ID assigned to the 'Evaluation' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ueEvaluationName",
                        "name": "_ueEvaluationName",
                        "shape": "EntityName",
                        "locationName": "EvaluationName",
                        "documentation": "-- | A new user-supplied name or description of the 'Evaluation' that will replace\n-- the current content.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "queryPad": 0,
                "name": "UpdateEvaluation",
                "query": [],
                "locationPad": 15,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ueEvaluationId",
                        "name": "_ueEvaluationId",
                        "shape": "EntityId",
                        "locationName": "EvaluationId",
                        "documentation": "-- | The ID assigned to the 'Evaluation' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "ueEvaluationName",
                        "name": "_ueEvaluationName",
                        "shape": "EntityName",
                        "locationName": "EvaluationName",
                        "documentation": "-- | A new user-supplied name or description of the 'Evaluation' that will replace\n-- the current content.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "MachineLearning",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "updateMLModelResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "payload": false,
                    "flattened": false,
                    "required": false,
                    "lens": "umlmrMLModelId",
                    "name": "_umlmrMLModelId",
                    "shape": "EntityId",
                    "locationName": "MLModelId",
                    "documentation": "-- | The ID assigned to the 'MLModel' during creation. This value should be\n-- identical to the value of the 'MLModelID' in the request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "umlmrMLModelId",
                        "name": "_umlmrMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' during creation. This value should be\n-- identical to the value of the 'MLModelID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "UpdateMLModelResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "umlmrMLModelId",
                        "name": "_umlmrMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' during creation. This value should be\n-- identical to the value of the 'MLModelID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "umlmrMLModelId",
                        "name": "_umlmrMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' during creation. This value should be\n-- identical to the value of the 'MLModelID' in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://http://docs.aws.amazon.com/machine-learning/latest/APIReference/API_UpdateMLModel.html",
            "namespace": "Network.AWS.MachineLearning.UpdateMLModel",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.MachineLearning.Types"
            ],
            "pager": null,
            "name": "UpdateMLModel",
            "method": "post",
            "documentation": "-- | Updates the 'MLModelName' and the 'ScoreThreshold' of an 'MLModel'.\n--\n-- You can use the 'GetMLModel' operation to view the contents of the updated\n-- data element.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Read",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 19,
                "ctor": "updateMLModel",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "umlmMLModelId",
                        "name": "_umlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "umlmMLModelName",
                        "name": "_umlmMLModelName",
                        "shape": "EntityName",
                        "locationName": "MLModelName",
                        "documentation": "-- | A user-supplied name or description of the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "umlmScoreThreshold",
                        "name": "_umlmScoreThreshold",
                        "shape": "ScoreThreshold",
                        "locationName": "ScoreThreshold",
                        "documentation": "-- | The 'ScoreThreshold' used in binary classification 'MLModel' that marks the\n-- boundary between a positive prediction and a negative prediction.\n--\n-- Output values greater than or equal to the 'ScoreThreshold' receive a positive\n-- result from the 'MLModel', such as 'true'. Output values less than the 'ScoreThreshold' receive a negative response from the 'MLModel', such as 'false'.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "umlmMLModelId",
                        "name": "_umlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "queryPad": 0,
                "name": "UpdateMLModel",
                "query": [],
                "locationPad": 15,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "umlmMLModelName",
                        "name": "_umlmMLModelName",
                        "shape": "EntityName",
                        "locationName": "MLModelName",
                        "documentation": "-- | A user-supplied name or description of the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "umlmScoreThreshold",
                        "name": "_umlmScoreThreshold",
                        "shape": "ScoreThreshold",
                        "locationName": "ScoreThreshold",
                        "documentation": "-- | The 'ScoreThreshold' used in binary classification 'MLModel' that marks the\n-- boundary between a positive prediction and a negative prediction.\n--\n-- Output values greater than or equal to the 'ScoreThreshold' receive a positive\n-- result from the 'MLModel', such as 'true'. Output values less than the 'ScoreThreshold' receive a negative response from the 'MLModel', such as 'false'.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": true,
                        "lens": "umlmMLModelId",
                        "name": "_umlmMLModelId",
                        "shape": "EntityId",
                        "locationName": "MLModelId",
                        "documentation": "-- | The ID assigned to the 'MLModel' during creation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "umlmMLModelName",
                        "name": "_umlmMLModelName",
                        "shape": "EntityName",
                        "locationName": "MLModelName",
                        "documentation": "-- | A user-supplied name or description of the 'MLModel'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "payload": false,
                        "flattened": false,
                        "required": false,
                        "lens": "umlmScoreThreshold",
                        "name": "_umlmScoreThreshold",
                        "shape": "ScoreThreshold",
                        "locationName": "ScoreThreshold",
                        "documentation": "-- | The 'ScoreThreshold' used in binary classification 'MLModel' that marks the\n-- boundary between a positive prediction and a negative prediction.\n--\n-- Output values greater than or equal to the 'ScoreThreshold' receive a positive\n-- result from the 'MLModel', such as 'true'. Output values less than the 'ScoreThreshold' receive a negative response from the 'MLModel', such as 'false'.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ]
            }
        }
    ]
}