{
    "waiters": {
        "waiters": {
            "StreamExists": {
                "operation": "DescribeStream",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "dsrStreamDescription . sdStreamStatus",
                        "expected": "Active"
                    }
                ],
                "maxAttempts": 18,
                "delay": 10
            }
        },
        "namespace": "Network.AWS.Kinesis.Waiters",
        "imports": [
            "Network.AWS.Kinesis.DescribeStream",
            "Network.AWS.Kinesis.Types"
        ]
    },
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "Kinesis",
        "error": "JSONError",
        "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/Welcome.html",
        "namespace": "Network.AWS.Kinesis",
        "protocol": "json",
        "imports": [
            "Network.AWS.Kinesis.AddTagsToStream",
            "Network.AWS.Kinesis.CreateStream",
            "Network.AWS.Kinesis.DeleteStream",
            "Network.AWS.Kinesis.DescribeStream",
            "Network.AWS.Kinesis.GetRecords",
            "Network.AWS.Kinesis.GetShardIterator",
            "Network.AWS.Kinesis.ListStreams",
            "Network.AWS.Kinesis.ListTagsForStream",
            "Network.AWS.Kinesis.MergeShards",
            "Network.AWS.Kinesis.PutRecord",
            "Network.AWS.Kinesis.PutRecords",
            "Network.AWS.Kinesis.RemoveTagsFromStream",
            "Network.AWS.Kinesis.SplitShard",
            "Network.AWS.Kinesis.Types",
            "Network.AWS.Kinesis.Waiters"
        ],
        "name": "Amazon Kinesis",
        "version": "2013-12-02",
        "documentation": "-- | Amazon Kinesis is a managed service that scales elastically for real-time\n-- processing of streaming big data. The service takes in large streams of data\n-- records that can then be consumed in real time by multiple data-processing\n-- applications that can be run on Amazon EC2 instances.",
        "xmlNamespace": null,
        "jsonVersion": "1.1",
        "retryDelay": {
            "base": 5.0e-2,
            "attempts": 5,
            "growth": 2
        },
        "endpointPrefix": "kinesis",
        "retryPolicies": {
            "service_unavailable": {
                "error": null,
                "code": 503
            },
            "general_server_error": {
                "error": null,
                "code": 500
            },
            "limit_exceeded": {
                "error": null,
                "code": 509
            }
        },
        "targetPrefix": "Kinesis_20131202"
    },
    "cabal": {
        "other": [],
        "library": "amazonka-kinesis",
        "abbrev": "Kinesis",
        "exposed": [
            "Network.AWS.Kinesis",
            "Network.AWS.Kinesis.AddTagsToStream",
            "Network.AWS.Kinesis.CreateStream",
            "Network.AWS.Kinesis.DeleteStream",
            "Network.AWS.Kinesis.DescribeStream",
            "Network.AWS.Kinesis.GetRecords",
            "Network.AWS.Kinesis.GetShardIterator",
            "Network.AWS.Kinesis.ListStreams",
            "Network.AWS.Kinesis.ListTagsForStream",
            "Network.AWS.Kinesis.MergeShards",
            "Network.AWS.Kinesis.PutRecord",
            "Network.AWS.Kinesis.PutRecords",
            "Network.AWS.Kinesis.RemoveTagsFromStream",
            "Network.AWS.Kinesis.SplitShard",
            "Network.AWS.Kinesis.Types",
            "Network.AWS.Kinesis.Waiters"
        ],
        "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/Welcome.html",
        "protocol": "json",
        "name": "Amazon Kinesis",
        "version": "0.1.4",
        "description": "Amazon Kinesis is a managed service that scales elastically for real-time\nprocessing of streaming big data. The service takes in large streams of data\nrecords that can then be consumed in real time by multiple data-processing\napplications that can be run on Amazon EC2 instances."
    },
    "types": {
        "namespace": "Network.AWS.Kinesis.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 23,
                "ctor": "shard",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sShardId",
                        "name": "_sShardId",
                        "shape": "ShardId",
                        "locationName": "ShardId",
                        "documentation": "-- | The unique identifier of the shard within the Amazon Kinesis stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "sParentShardId",
                        "name": "_sParentShardId",
                        "shape": "ShardId",
                        "locationName": "ParentShardId",
                        "documentation": "-- | The shard Id of the shard's parent.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "sAdjacentParentShardId",
                        "name": "_sAdjacentParentShardId",
                        "shape": "ShardId",
                        "locationName": "AdjacentParentShardId",
                        "documentation": "-- | The shard Id of the shard adjacent to the shard's parent.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sHashKeyRange",
                        "name": "_sHashKeyRange",
                        "shape": "HashKeyRange",
                        "locationName": "HashKeyRange",
                        "documentation": "-- | The range of possible hash key values for the shard, which is a set of\n-- ordered contiguous positive integers.",
                        "typeExposed": "HashKeyRange",
                        "type": "HashKeyRange"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sSequenceNumberRange",
                        "name": "_sSequenceNumberRange",
                        "shape": "SequenceNumberRange",
                        "locationName": "SequenceNumberRange",
                        "documentation": "-- | The range of possible sequence numbers for the shard.",
                        "typeExposed": "SequenceNumberRange",
                        "type": "SequenceNumberRange"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sShardId",
                        "name": "_sShardId",
                        "shape": "ShardId",
                        "locationName": "ShardId",
                        "documentation": "-- | The unique identifier of the shard within the Amazon Kinesis stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sHashKeyRange",
                        "name": "_sHashKeyRange",
                        "shape": "HashKeyRange",
                        "locationName": "HashKeyRange",
                        "documentation": "-- | The range of possible hash key values for the shard, which is a set of\n-- ordered contiguous positive integers.",
                        "typeExposed": "HashKeyRange",
                        "type": "HashKeyRange"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sSequenceNumberRange",
                        "name": "_sSequenceNumberRange",
                        "shape": "SequenceNumberRange",
                        "locationName": "SequenceNumberRange",
                        "documentation": "-- | The range of possible sequence numbers for the shard.",
                        "typeExposed": "SequenceNumberRange",
                        "type": "SequenceNumberRange"
                    }
                ],
                "contentPad": 22,
                "name": "Shard",
                "locationPad": 22,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "sParentShardId",
                        "name": "_sParentShardId",
                        "shape": "ShardId",
                        "locationName": "ParentShardId",
                        "documentation": "-- | The shard Id of the shard's parent.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "sAdjacentParentShardId",
                        "name": "_sAdjacentParentShardId",
                        "shape": "ShardId",
                        "locationName": "AdjacentParentShardId",
                        "documentation": "-- | The shard Id of the shard adjacent to the shard's parent.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "sAdjacentParentShardId",
                        "name": "_sAdjacentParentShardId",
                        "shape": "ShardId",
                        "locationName": "AdjacentParentShardId",
                        "documentation": "-- | The shard Id of the shard adjacent to the shard's parent.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sHashKeyRange",
                        "name": "_sHashKeyRange",
                        "shape": "HashKeyRange",
                        "locationName": "HashKeyRange",
                        "documentation": "-- | The range of possible hash key values for the shard, which is a set of\n-- ordered contiguous positive integers.",
                        "typeExposed": "HashKeyRange",
                        "type": "HashKeyRange"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "sParentShardId",
                        "name": "_sParentShardId",
                        "shape": "ShardId",
                        "locationName": "ParentShardId",
                        "documentation": "-- | The shard Id of the shard's parent.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sSequenceNumberRange",
                        "name": "_sSequenceNumberRange",
                        "shape": "SequenceNumberRange",
                        "locationName": "SequenceNumberRange",
                        "documentation": "-- | The range of possible sequence numbers for the shard.",
                        "typeExposed": "SequenceNumberRange",
                        "type": "SequenceNumberRange"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sShardId",
                        "name": "_sShardId",
                        "shape": "ShardId",
                        "locationName": "ShardId",
                        "documentation": "-- | The unique identifier of the shard within the Amazon Kinesis stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 9,
                "ctor": "tag",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "tagKey",
                        "name": "_tagKey",
                        "shape": "TagKey",
                        "locationName": "Key",
                        "documentation": "-- | A unique identifier for the tag. Maximum length: 128 characters. Valid\n-- characters: Unicode letters, digits, white space, _ . / = + - % @",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "tagValue",
                        "name": "_tagValue",
                        "shape": "TagValue",
                        "locationName": "Value",
                        "documentation": "-- | An optional string, typically used to describe or define the tag. Maximum\n-- length: 256 characters. Valid characters: Unicode letters, digits, white\n-- space, _ . / = + - % @",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "tagKey",
                        "name": "_tagKey",
                        "shape": "TagKey",
                        "locationName": "Key",
                        "documentation": "-- | A unique identifier for the tag. Maximum length: 128 characters. Valid\n-- characters: Unicode letters, digits, white space, _ . / = + - % @",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 6,
                "name": "Tag",
                "locationPad": 6,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "tagValue",
                        "name": "_tagValue",
                        "shape": "TagValue",
                        "locationName": "Value",
                        "documentation": "-- | An optional string, typically used to describe or define the tag. Maximum\n-- length: 256 characters. Valid characters: Unicode letters, digits, white\n-- space, _ . / = + - % @",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "tagKey",
                        "name": "_tagKey",
                        "shape": "TagKey",
                        "locationName": "Key",
                        "documentation": "-- | A unique identifier for the tag. Maximum length: 128 characters. Valid\n-- characters: Unicode letters, digits, white space, _ . / = + - % @",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "tagValue",
                        "name": "_tagValue",
                        "shape": "TagValue",
                        "locationName": "Value",
                        "documentation": "-- | An optional string, typically used to describe or define the tag. Maximum\n-- length: 256 characters. Valid characters: Unicode letters, digits, white\n-- space, _ . / = + - % @",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 16,
                "ctor": "streamDescription",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStreamName",
                        "name": "_sdStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream being described.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStreamARN",
                        "name": "_sdStreamARN",
                        "shape": "StreamARN",
                        "locationName": "StreamARN",
                        "documentation": "-- | The Amazon Resource Name (ARN) for the stream being described.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStreamStatus",
                        "name": "_sdStreamStatus",
                        "shape": "StreamStatus",
                        "locationName": "StreamStatus",
                        "documentation": "-- | The current status of the stream being described.\n--\n-- The stream status is one of the following states:\n--\n-- 'CREATING' - The stream is being created. Amazon Kinesis immediately returns\n-- and sets 'StreamStatus' to 'CREATING'.  'DELETING' - The stream is being deleted.\n-- The specified stream is in the 'DELETING' state until Amazon Kinesis completes\n-- the deletion.  'ACTIVE' - The stream exists and is ready for read and write\n-- operations or deletion. You should perform read and write operations only on\n-- an 'ACTIVE' stream.  'UPDATING' - Shards in the stream are being merged or split.\n-- Read and write operations continue to work while the stream is in the 'UPDATING'\n-- state.",
                        "typeExposed": "StreamStatus",
                        "type": "StreamStatus"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdShards",
                        "name": "_sdShards",
                        "shape": "ShardList",
                        "locationName": "Shards",
                        "documentation": "-- | The shards that comprise the stream.",
                        "typeExposed": "[Shard]",
                        "type": "List \"Shards\" Shard"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdHasMoreShards",
                        "name": "_sdHasMoreShards",
                        "shape": "BooleanObject",
                        "locationName": "HasMoreShards",
                        "documentation": "-- | If set to 'true', more shards in the stream are available to describe.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStreamName",
                        "name": "_sdStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream being described.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStreamARN",
                        "name": "_sdStreamARN",
                        "shape": "StreamARN",
                        "locationName": "StreamARN",
                        "documentation": "-- | The Amazon Resource Name (ARN) for the stream being described.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStreamStatus",
                        "name": "_sdStreamStatus",
                        "shape": "StreamStatus",
                        "locationName": "StreamStatus",
                        "documentation": "-- | The current status of the stream being described.\n--\n-- The stream status is one of the following states:\n--\n-- 'CREATING' - The stream is being created. Amazon Kinesis immediately returns\n-- and sets 'StreamStatus' to 'CREATING'.  'DELETING' - The stream is being deleted.\n-- The specified stream is in the 'DELETING' state until Amazon Kinesis completes\n-- the deletion.  'ACTIVE' - The stream exists and is ready for read and write\n-- operations or deletion. You should perform read and write operations only on\n-- an 'ACTIVE' stream.  'UPDATING' - Shards in the stream are being merged or split.\n-- Read and write operations continue to work while the stream is in the 'UPDATING'\n-- state.",
                        "typeExposed": "StreamStatus",
                        "type": "StreamStatus"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdHasMoreShards",
                        "name": "_sdHasMoreShards",
                        "shape": "BooleanObject",
                        "locationName": "HasMoreShards",
                        "documentation": "-- | If set to 'true', more shards in the stream are available to describe.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "contentPad": 14,
                "name": "StreamDescription",
                "locationPad": 14,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdShards",
                        "name": "_sdShards",
                        "shape": "ShardList",
                        "locationName": "Shards",
                        "documentation": "-- | The shards that comprise the stream.",
                        "typeExposed": "[Shard]",
                        "type": "List \"Shards\" Shard"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdHasMoreShards",
                        "name": "_sdHasMoreShards",
                        "shape": "BooleanObject",
                        "locationName": "HasMoreShards",
                        "documentation": "-- | If set to 'true', more shards in the stream are available to describe.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdShards",
                        "name": "_sdShards",
                        "shape": "ShardList",
                        "locationName": "Shards",
                        "documentation": "-- | The shards that comprise the stream.",
                        "typeExposed": "[Shard]",
                        "type": "List \"Shards\" Shard"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStreamARN",
                        "name": "_sdStreamARN",
                        "shape": "StreamARN",
                        "locationName": "StreamARN",
                        "documentation": "-- | The Amazon Resource Name (ARN) for the stream being described.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStreamName",
                        "name": "_sdStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream being described.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStreamStatus",
                        "name": "_sdStreamStatus",
                        "shape": "StreamStatus",
                        "locationName": "StreamStatus",
                        "documentation": "-- | The current status of the stream being described.\n--\n-- The stream status is one of the following states:\n--\n-- 'CREATING' - The stream is being created. Amazon Kinesis immediately returns\n-- and sets 'StreamStatus' to 'CREATING'.  'DELETING' - The stream is being deleted.\n-- The specified stream is in the 'DELETING' state until Amazon Kinesis completes\n-- the deletion.  'ACTIVE' - The stream exists and is ready for read and write\n-- operations or deletion. You should perform read and write operations only on\n-- an 'ACTIVE' stream.  'UPDATING' - Shards in the stream are being merged or split.\n-- Read and write operations continue to work while the stream is in the 'UPDATING'\n-- state.",
                        "typeExposed": "StreamStatus",
                        "type": "StreamStatus"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 19,
                "ctor": "putRecordsResultEntry",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreSequenceNumber",
                        "name": "_prreSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "SequenceNumber",
                        "documentation": "-- | The sequence number for an individual record result.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreShardId",
                        "name": "_prreShardId",
                        "shape": "ShardId",
                        "locationName": "ShardId",
                        "documentation": "-- | The shard ID for an individual record result.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreErrorCode",
                        "name": "_prreErrorCode",
                        "shape": "ErrorCode",
                        "locationName": "ErrorCode",
                        "documentation": "-- | The error code for an individual record result. 'ErrorCodes' can be either 'ProvisionedThroughputExceededException' or 'InternalFailure'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreErrorMessage",
                        "name": "_prreErrorMessage",
                        "shape": "ErrorMessage",
                        "locationName": "ErrorMessage",
                        "documentation": "-- | The error message for an individual record result. An 'ErrorCode' value of 'ProvisionedThroughputExceededException' has an error message that includes the account ID, stream name, and shard\n-- ID. An 'ErrorCode' value of 'InternalFailure' has the error message '\"InternalService Failure\"'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 15,
                "name": "PutRecordsResultEntry",
                "locationPad": 15,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreSequenceNumber",
                        "name": "_prreSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "SequenceNumber",
                        "documentation": "-- | The sequence number for an individual record result.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreShardId",
                        "name": "_prreShardId",
                        "shape": "ShardId",
                        "locationName": "ShardId",
                        "documentation": "-- | The shard ID for an individual record result.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreErrorCode",
                        "name": "_prreErrorCode",
                        "shape": "ErrorCode",
                        "locationName": "ErrorCode",
                        "documentation": "-- | The error code for an individual record result. 'ErrorCodes' can be either 'ProvisionedThroughputExceededException' or 'InternalFailure'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreErrorMessage",
                        "name": "_prreErrorMessage",
                        "shape": "ErrorMessage",
                        "locationName": "ErrorMessage",
                        "documentation": "-- | The error message for an individual record result. An 'ErrorCode' value of 'ProvisionedThroughputExceededException' has an error message that includes the account ID, stream name, and shard\n-- ID. An 'ErrorCode' value of 'InternalFailure' has the error message '\"InternalService Failure\"'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreErrorCode",
                        "name": "_prreErrorCode",
                        "shape": "ErrorCode",
                        "locationName": "ErrorCode",
                        "documentation": "-- | The error code for an individual record result. 'ErrorCodes' can be either 'ProvisionedThroughputExceededException' or 'InternalFailure'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreErrorMessage",
                        "name": "_prreErrorMessage",
                        "shape": "ErrorMessage",
                        "locationName": "ErrorMessage",
                        "documentation": "-- | The error message for an individual record result. An 'ErrorCode' value of 'ProvisionedThroughputExceededException' has an error message that includes the account ID, stream name, and shard\n-- ID. An 'ErrorCode' value of 'InternalFailure' has the error message '\"InternalService Failure\"'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreSequenceNumber",
                        "name": "_prreSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "SequenceNumber",
                        "documentation": "-- | The sequence number for an individual record result.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreShardId",
                        "name": "_prreShardId",
                        "shape": "ShardId",
                        "locationName": "ShardId",
                        "documentation": "-- | The shard ID for an individual record result.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 20,
                "ctor": "putRecordsRequestEntry",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prreData",
                        "name": "_prreData",
                        "shape": "Data",
                        "locationName": "Data",
                        "documentation": "-- | The data blob to put into the record, which is base64-encoded when the blob\n-- is serialized. The maximum size of the data blob (the payload before\n-- base64-encoding) is 50 kilobytes (KB)",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreExplicitHashKey",
                        "name": "_prreExplicitHashKey",
                        "shape": "HashKey",
                        "locationName": "ExplicitHashKey",
                        "documentation": "-- | The hash value used to determine explicitly the shard that the data record is\n-- assigned to by overriding the partition key hash.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prrePartitionKey",
                        "name": "_prrePartitionKey",
                        "shape": "PartitionKey",
                        "locationName": "PartitionKey",
                        "documentation": "-- | Determines which shard in the stream the data record is assigned to.\n-- Partition keys are Unicode strings with a maximum length limit of 256 bytes.\n-- Amazon Kinesis uses the partition key as input to a hash function that maps\n-- the partition key and associated data to a specific shard. Specifically, an\n-- MD5 hash function is used to map partition keys to 128-bit integer values and\n-- to map associated data records to shards. As a result of this hashing\n-- mechanism, all data records with the same partition key map to the same shard\n-- within the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prreData",
                        "name": "_prreData",
                        "shape": "Data",
                        "locationName": "Data",
                        "documentation": "-- | The data blob to put into the record, which is base64-encoded when the blob\n-- is serialized. The maximum size of the data blob (the payload before\n-- base64-encoding) is 50 kilobytes (KB)",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prrePartitionKey",
                        "name": "_prrePartitionKey",
                        "shape": "PartitionKey",
                        "locationName": "PartitionKey",
                        "documentation": "-- | Determines which shard in the stream the data record is assigned to.\n-- Partition keys are Unicode strings with a maximum length limit of 256 bytes.\n-- Amazon Kinesis uses the partition key as input to a hash function that maps\n-- the partition key and associated data to a specific shard. Specifically, an\n-- MD5 hash function is used to map partition keys to 128-bit integer values and\n-- to map associated data records to shards. As a result of this hashing\n-- mechanism, all data records with the same partition key map to the same shard\n-- within the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 16,
                "name": "PutRecordsRequestEntry",
                "locationPad": 16,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreExplicitHashKey",
                        "name": "_prreExplicitHashKey",
                        "shape": "HashKey",
                        "locationName": "ExplicitHashKey",
                        "documentation": "-- | The hash value used to determine explicitly the shard that the data record is\n-- assigned to by overriding the partition key hash.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prreData",
                        "name": "_prreData",
                        "shape": "Data",
                        "locationName": "Data",
                        "documentation": "-- | The data blob to put into the record, which is base64-encoded when the blob\n-- is serialized. The maximum size of the data blob (the payload before\n-- base64-encoding) is 50 kilobytes (KB)",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prreExplicitHashKey",
                        "name": "_prreExplicitHashKey",
                        "shape": "HashKey",
                        "locationName": "ExplicitHashKey",
                        "documentation": "-- | The hash value used to determine explicitly the shard that the data record is\n-- assigned to by overriding the partition key hash.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prrePartitionKey",
                        "name": "_prrePartitionKey",
                        "shape": "PartitionKey",
                        "locationName": "PartitionKey",
                        "documentation": "-- | Determines which shard in the stream the data record is assigned to.\n-- Partition keys are Unicode strings with a maximum length limit of 256 bytes.\n-- Amazon Kinesis uses the partition key as input to a hash function that maps\n-- the partition key and associated data to a specific shard. Specifically, an\n-- MD5 hash function is used to map partition keys to 128-bit integer values and\n-- to map associated data records to shards. As a result of this hashing\n-- mechanism, all data records with the same partition key map to the same shard\n-- within the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Deleting": "DELETING",
                    "Updating": "UPDATING",
                    "Creating": "CREATING",
                    "Active": "ACTIVE"
                },
                "valuePad": 9,
                "name": "StreamStatus",
                "type": "nullary",
                "branchPad": 8
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 19,
                "ctor": "hashKeyRange",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "hkrStartingHashKey",
                        "name": "_hkrStartingHashKey",
                        "shape": "HashKey",
                        "locationName": "StartingHashKey",
                        "documentation": "-- | The starting hash key of the hash key range.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "hkrEndingHashKey",
                        "name": "_hkrEndingHashKey",
                        "shape": "HashKey",
                        "locationName": "EndingHashKey",
                        "documentation": "-- | The ending hash key of the hash key range.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "hkrStartingHashKey",
                        "name": "_hkrStartingHashKey",
                        "shape": "HashKey",
                        "locationName": "StartingHashKey",
                        "documentation": "-- | The starting hash key of the hash key range.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "hkrEndingHashKey",
                        "name": "_hkrEndingHashKey",
                        "shape": "HashKey",
                        "locationName": "EndingHashKey",
                        "documentation": "-- | The ending hash key of the hash key range.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 16,
                "name": "HashKeyRange",
                "locationPad": 16,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "hkrEndingHashKey",
                        "name": "_hkrEndingHashKey",
                        "shape": "HashKey",
                        "locationName": "EndingHashKey",
                        "documentation": "-- | The ending hash key of the hash key range.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "hkrStartingHashKey",
                        "name": "_hkrStartingHashKey",
                        "shape": "HashKey",
                        "locationName": "StartingHashKey",
                        "documentation": "-- | The starting hash key of the hash key range.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 16,
                "ctor": "record",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rSequenceNumber",
                        "name": "_rSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "SequenceNumber",
                        "documentation": "-- | The unique identifier for the record in the Amazon Kinesis stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rData",
                        "name": "_rData",
                        "shape": "Data",
                        "locationName": "Data",
                        "documentation": "-- | The data blob. The data in the blob is both opaque and immutable to the\n-- Amazon Kinesis service, which does not inspect, interpret, or change the data\n-- in the blob in any way. The maximum size of the data blob (the payload before\n-- base64-encoding) is 50 kilobytes (KB)",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rPartitionKey",
                        "name": "_rPartitionKey",
                        "shape": "PartitionKey",
                        "locationName": "PartitionKey",
                        "documentation": "-- | Identifies which shard in the stream the data record is assigned to.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rSequenceNumber",
                        "name": "_rSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "SequenceNumber",
                        "documentation": "-- | The unique identifier for the record in the Amazon Kinesis stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rData",
                        "name": "_rData",
                        "shape": "Data",
                        "locationName": "Data",
                        "documentation": "-- | The data blob. The data in the blob is both opaque and immutable to the\n-- Amazon Kinesis service, which does not inspect, interpret, or change the data\n-- in the blob in any way. The maximum size of the data blob (the payload before\n-- base64-encoding) is 50 kilobytes (KB)",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rPartitionKey",
                        "name": "_rPartitionKey",
                        "shape": "PartitionKey",
                        "locationName": "PartitionKey",
                        "documentation": "-- | Identifies which shard in the stream the data record is assigned to.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 15,
                "name": "Record",
                "locationPad": 15,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rData",
                        "name": "_rData",
                        "shape": "Data",
                        "locationName": "Data",
                        "documentation": "-- | The data blob. The data in the blob is both opaque and immutable to the\n-- Amazon Kinesis service, which does not inspect, interpret, or change the data\n-- in the blob in any way. The maximum size of the data blob (the payload before\n-- base64-encoding) is 50 kilobytes (KB)",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rPartitionKey",
                        "name": "_rPartitionKey",
                        "shape": "PartitionKey",
                        "locationName": "PartitionKey",
                        "documentation": "-- | Identifies which shard in the stream the data record is assigned to.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rSequenceNumber",
                        "name": "_rSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "SequenceNumber",
                        "documentation": "-- | The unique identifier for the record in the Amazon Kinesis stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 26,
                "ctor": "sequenceNumberRange",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "snrStartingSequenceNumber",
                        "name": "_snrStartingSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "StartingSequenceNumber",
                        "documentation": "-- | The starting sequence number for the range.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "snrEndingSequenceNumber",
                        "name": "_snrEndingSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "EndingSequenceNumber",
                        "documentation": "-- | The ending sequence number for the range. Shards that are in the OPEN state\n-- have an ending sequence number of 'null'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "snrStartingSequenceNumber",
                        "name": "_snrStartingSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "StartingSequenceNumber",
                        "documentation": "-- | The starting sequence number for the range.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 23,
                "name": "SequenceNumberRange",
                "locationPad": 23,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "snrEndingSequenceNumber",
                        "name": "_snrEndingSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "EndingSequenceNumber",
                        "documentation": "-- | The ending sequence number for the range. Shards that are in the OPEN state\n-- have an ending sequence number of 'null'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "snrEndingSequenceNumber",
                        "name": "_snrEndingSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "EndingSequenceNumber",
                        "documentation": "-- | The ending sequence number for the range. Shards that are in the OPEN state\n-- have an ending sequence number of 'null'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "snrStartingSequenceNumber",
                        "name": "_snrStartingSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "StartingSequenceNumber",
                        "documentation": "-- | The starting sequence number for the range.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "AfterSequenceNumber": "AFTER_SEQUENCE_NUMBER",
                    "AtSequenceNumber": "AT_SEQUENCE_NUMBER",
                    "TrimHorizon": "TRIM_HORIZON",
                    "Latest": "LATEST"
                },
                "valuePad": 22,
                "name": "ShardIteratorType",
                "type": "nullary",
                "branchPad": 19
            }
        ],
        "imports": [],
        "shared": []
    },
    "operations": [
        {
            "service": "Kinesis",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "addTagsToStreamResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AddTagsToStreamResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/API_AddTagsToStream.html",
            "namespace": "Network.AWS.Kinesis.AddTagsToStream",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Kinesis.Types"
            ],
            "pager": null,
            "name": "AddTagsToStream",
            "method": "post",
            "documentation": "-- | Adds or updates tags for the specified Amazon Kinesis stream. Each stream can\n-- have up to 10 tags.\n--\n-- If tags have already been assigned to the stream, 'AddTagsToStream' overwrites\n-- any existing tags that correspond to the specified tag keys.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 15,
                "ctor": "addTagsToStream",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "attsStreamName",
                        "name": "_attsStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "attsTags",
                        "name": "_attsTags",
                        "shape": "TagMap",
                        "locationName": "Tags",
                        "documentation": "-- | The set of key-value pairs to use to create the tags.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "attsStreamName",
                        "name": "_attsStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 11,
                "queryPad": 0,
                "name": "AddTagsToStream",
                "query": [],
                "locationPad": 11,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "attsTags",
                        "name": "_attsTags",
                        "shape": "TagMap",
                        "locationName": "Tags",
                        "documentation": "-- | The set of key-value pairs to use to create the tags.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "attsStreamName",
                        "name": "_attsStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "attsTags",
                        "name": "_attsTags",
                        "shape": "TagMap",
                        "locationName": "Tags",
                        "documentation": "-- | The set of key-value pairs to use to create the tags.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ]
            }
        },
        {
            "service": "Kinesis",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "createStreamResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CreateStreamResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/API_CreateStream.html",
            "namespace": "Network.AWS.Kinesis.CreateStream",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Kinesis.Types"
            ],
            "pager": null,
            "name": "CreateStream",
            "method": "post",
            "documentation": "-- | Creates a Amazon Kinesis stream. A stream captures and transports data\n-- records that are continuously emitted from different data sources or /producers/\n-- . Scale-out within an Amazon Kinesis stream is explicitly supported by means\n-- of shards, which are uniquely identified groups of data records in an Amazon\n-- Kinesis stream.\n--\n-- You specify and control the number of shards that a stream is composed of.\n-- Each open shard can support up to 5 read transactions per second, up to a\n-- maximum total of 2 MB of data read per second. Each shard can support up to\n-- 1000 records written per second, up to a maximum total of 1 MB data written\n-- per second. You can add shards to a stream if the amount of data input\n-- increases and you can remove shards if the amount of data input decreases.\n--\n-- The stream name identifies the stream. The name is scoped to the AWS account\n-- used by the application. It is also scoped by region. That is, two streams in\n-- two different accounts can have the same name, and two streams in the same\n-- account, but in two different regions, can have the same name.\n--\n-- 'CreateStream' is an asynchronous operation. Upon receiving a 'CreateStream'\n-- request, Amazon Kinesis immediately returns and sets the stream status to 'CREATING'. After the stream is created, Amazon Kinesis sets the stream status to 'ACTIVE'\n-- . You should perform read and write operations only on an 'ACTIVE' stream.\n--\n-- You receive a 'LimitExceededException' when making a 'CreateStream' request if\n-- you try to do one of the following:\n--\n-- Have more than five streams in the 'CREATING' state at any point in time. Create more shards than are authorized for your account.\n-- The default limit for an AWS account is 10 shards per stream. If you need\n-- to create a stream with more than 10 shards, \u003chttp://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html contact AWS Support\u003e to increase\n-- the limit on your account.\n--\n-- You can use 'DescribeStream' to check the stream status, which is returned in 'StreamStatus'.\n--\n-- 'CreateStream' has a limit of 5 transactions per second per account.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 13,
                "ctor": "createStream",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "csStreamName",
                        "name": "_csStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | A name to identify the stream. The stream name is scoped to the AWS account\n-- used by the application that creates the stream. It is also scoped by region.\n-- That is, two streams in two different AWS accounts can have the same name,\n-- and two streams in the same AWS account, but in two different regions, can\n-- have the same name.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Nat",
                        "lensMapping": "_Nat",
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "csShardCount",
                        "name": "_csShardCount",
                        "shape": "PositiveIntegerObject",
                        "locationName": "ShardCount",
                        "documentation": "-- | The number of shards that the stream will use. The throughput of the stream\n-- is a function of the number of shards; more shards are required for greater\n-- provisioned throughput.\n--\n-- Note: The default limit for an AWS account is 10 shards per stream. If you\n-- need to create a stream with more than 10 shards, \u003chttp://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html contact AWS Support\u003e to\n-- increase the limit on your account.",
                        "typeExposed": "Natural",
                        "type": "Nat"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "csStreamName",
                        "name": "_csStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | A name to identify the stream. The stream name is scoped to the AWS account\n-- used by the application that creates the stream. It is also scoped by region.\n-- That is, two streams in two different AWS accounts can have the same name,\n-- and two streams in the same AWS account, but in two different regions, can\n-- have the same name.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Nat",
                        "lensMapping": "_Nat",
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "csShardCount",
                        "name": "_csShardCount",
                        "shape": "PositiveIntegerObject",
                        "locationName": "ShardCount",
                        "documentation": "-- | The number of shards that the stream will use. The throughput of the stream\n-- is a function of the number of shards; more shards are required for greater\n-- provisioned throughput.\n--\n-- Note: The default limit for an AWS account is 10 shards per stream. If you\n-- need to create a stream with more than 10 shards, \u003chttp://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html contact AWS Support\u003e to\n-- increase the limit on your account.",
                        "typeExposed": "Natural",
                        "type": "Nat"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 11,
                "queryPad": 0,
                "name": "CreateStream",
                "query": [],
                "locationPad": 11,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": "_Nat",
                        "lensMapping": "_Nat",
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "csShardCount",
                        "name": "_csShardCount",
                        "shape": "PositiveIntegerObject",
                        "locationName": "ShardCount",
                        "documentation": "-- | The number of shards that the stream will use. The throughput of the stream\n-- is a function of the number of shards; more shards are required for greater\n-- provisioned throughput.\n--\n-- Note: The default limit for an AWS account is 10 shards per stream. If you\n-- need to create a stream with more than 10 shards, \u003chttp://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html contact AWS Support\u003e to\n-- increase the limit on your account.",
                        "typeExposed": "Natural",
                        "type": "Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "csStreamName",
                        "name": "_csStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | A name to identify the stream. The stream name is scoped to the AWS account\n-- used by the application that creates the stream. It is also scoped by region.\n-- That is, two streams in two different AWS accounts can have the same name,\n-- and two streams in the same AWS account, but in two different regions, can\n-- have the same name.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Kinesis",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteStreamResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteStreamResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/API_DeleteStream.html",
            "namespace": "Network.AWS.Kinesis.DeleteStream",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Kinesis.Types"
            ],
            "pager": null,
            "name": "DeleteStream",
            "method": "post",
            "documentation": "-- | Deletes a stream and all its shards and data. You must shut down any\n-- applications that are operating on the stream before you delete the stream.\n-- If an application attempts to operate on a deleted stream, it will receive\n-- the exception 'ResourceNotFoundException'.\n--\n-- If the stream is in the 'ACTIVE' state, you can delete it. After a 'DeleteStream'\n-- request, the specified stream is in the 'DELETING' state until Amazon Kinesis\n-- completes the deletion.\n--\n-- Note: Amazon Kinesis might continue to accept data read and write\n-- operations, such as 'PutRecord', 'PutRecords', and 'GetRecords', on a stream in the 'DELETING' state until the stream deletion is complete.\n--\n-- When you delete a stream, any shards in that stream are also deleted, and\n-- any tags are dissociated from the stream.\n--\n-- You can use the 'DescribeStream' operation to check the state of the stream,\n-- which is returned in 'StreamStatus'.\n--\n-- 'DeleteStream' has a limit of 5 transactions per second per account.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "deleteStream",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": true,
                    "lens": "dsStreamName",
                    "name": "_dsStreamName",
                    "shape": "StreamName",
                    "locationName": "StreamName",
                    "documentation": "-- | The name of the stream to delete.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dsStreamName",
                        "name": "_dsStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dsStreamName",
                        "name": "_dsStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteStream",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dsStreamName",
                        "name": "_dsStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Kinesis",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "describeStreamResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": true,
                    "lens": "dsrStreamDescription",
                    "name": "_dsrStreamDescription",
                    "shape": "StreamDescription",
                    "locationName": "StreamDescription",
                    "documentation": "-- | The current status of the stream, the stream ARN, an array of shard objects\n-- that comprise the stream, and states whether there are more shards available.",
                    "typeExposed": "StreamDescription",
                    "type": "StreamDescription"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dsrStreamDescription",
                        "name": "_dsrStreamDescription",
                        "shape": "StreamDescription",
                        "locationName": "StreamDescription",
                        "documentation": "-- | The current status of the stream, the stream ARN, an array of shard objects\n-- that comprise the stream, and states whether there are more shards available.",
                        "typeExposed": "StreamDescription",
                        "type": "StreamDescription"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dsrStreamDescription",
                        "name": "_dsrStreamDescription",
                        "shape": "StreamDescription",
                        "locationName": "StreamDescription",
                        "documentation": "-- | The current status of the stream, the stream ARN, an array of shard objects\n-- that comprise the stream, and states whether there are more shards available.",
                        "typeExposed": "StreamDescription",
                        "type": "StreamDescription"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeStreamResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "dsrStreamDescription",
                        "name": "_dsrStreamDescription",
                        "shape": "StreamDescription",
                        "locationName": "StreamDescription",
                        "documentation": "-- | The current status of the stream, the stream ARN, an array of shard objects\n-- that comprise the stream, and states whether there are more shards available.",
                        "typeExposed": "StreamDescription",
                        "type": "StreamDescription"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/API_DescribeStream.html",
            "namespace": "Network.AWS.Kinesis.DescribeStream",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Kinesis.Types"
            ],
            "pager": {
                "more": "dsrStreamDescription . sdHasMoreShards",
                "token": {
                    "input": "ds1ExclusiveStartShardId",
                    "outputRequired": false,
                    "output": "index (dsrStreamDescription . sdShards) sShardId",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "DescribeStream",
            "method": "post",
            "documentation": "-- | Describes the specified stream.\n--\n-- The information about the stream includes its current status, its Amazon\n-- Resource Name (ARN), and an array of shard objects. For each shard object,\n-- there is information about the hash key and sequence number ranges that the\n-- shard spans, and the IDs of any earlier shards that played in a role in\n-- creating the shard. A sequence number is the identifier associated with every\n-- record ingested in the Amazon Kinesis stream. The sequence number is assigned\n-- when a record is put into the stream.\n--\n-- You can limit the number of returned shards using the 'Limit' parameter. The\n-- number of shards in a stream may be too large to return from a single call to 'DescribeStream'. You can detect this by using the 'HasMoreShards' flag in the\n-- returned output. 'HasMoreShards' is set to 'true' when there is more data\n-- available.\n--\n-- 'DescribeStream' is a paginated operation. If there are more shards available,\n-- you can request them using the shard ID of the last shard returned. Specify\n-- this ID in the 'ExclusiveStartShardId' parameter in a subsequent request to 'DescribeStream'.\n--\n-- 'DescribeStream' has a limit of 10 transactions per second per account.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 25,
                "ctor": "describeStream",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ds1StreamName",
                        "name": "_ds1StreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream to describe.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ds1Limit",
                        "name": "_ds1Limit",
                        "shape": "DescribeStreamInputLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of shards to return.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ds1ExclusiveStartShardId",
                        "name": "_ds1ExclusiveStartShardId",
                        "shape": "ShardId",
                        "locationName": "ExclusiveStartShardId",
                        "documentation": "-- | The shard ID of the shard to start with.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ds1StreamName",
                        "name": "_ds1StreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream to describe.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 22,
                "queryPad": 0,
                "name": "DescribeStream",
                "query": [],
                "locationPad": 22,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ds1Limit",
                        "name": "_ds1Limit",
                        "shape": "DescribeStreamInputLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of shards to return.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ds1ExclusiveStartShardId",
                        "name": "_ds1ExclusiveStartShardId",
                        "shape": "ShardId",
                        "locationName": "ExclusiveStartShardId",
                        "documentation": "-- | The shard ID of the shard to start with.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ds1ExclusiveStartShardId",
                        "name": "_ds1ExclusiveStartShardId",
                        "shape": "ShardId",
                        "locationName": "ExclusiveStartShardId",
                        "documentation": "-- | The shard ID of the shard to start with.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ds1Limit",
                        "name": "_ds1Limit",
                        "shape": "DescribeStreamInputLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of shards to return.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ds1StreamName",
                        "name": "_ds1StreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream to describe.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Kinesis",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 21,
                "ctor": "getRecordsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "grrRecords",
                        "name": "_grrRecords",
                        "shape": "RecordList",
                        "locationName": "Records",
                        "documentation": "-- | The data records retrieved from the shard.",
                        "typeExposed": "[Record]",
                        "type": "List \"Records\" Record"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "grrNextShardIterator",
                        "name": "_grrNextShardIterator",
                        "shape": "ShardIterator",
                        "locationName": "NextShardIterator",
                        "documentation": "-- | The next position in the shard from which to start sequentially reading data\n-- records. If set to 'null', the shard has been closed and the requested iterator\n-- will not return any more data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 18,
                "name": "GetRecordsResponse",
                "resultWrapper": null,
                "locationPad": 18,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "grrRecords",
                        "name": "_grrRecords",
                        "shape": "RecordList",
                        "locationName": "Records",
                        "documentation": "-- | The data records retrieved from the shard.",
                        "typeExposed": "[Record]",
                        "type": "List \"Records\" Record"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "grrNextShardIterator",
                        "name": "_grrNextShardIterator",
                        "shape": "ShardIterator",
                        "locationName": "NextShardIterator",
                        "documentation": "-- | The next position in the shard from which to start sequentially reading data\n-- records. If set to 'null', the shard has been closed and the requested iterator\n-- will not return any more data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "grrNextShardIterator",
                        "name": "_grrNextShardIterator",
                        "shape": "ShardIterator",
                        "locationName": "NextShardIterator",
                        "documentation": "-- | The next position in the shard from which to start sequentially reading data\n-- records. If set to 'null', the shard has been closed and the requested iterator\n-- will not return any more data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "grrRecords",
                        "name": "_grrRecords",
                        "shape": "RecordList",
                        "locationName": "Records",
                        "documentation": "-- | The data records retrieved from the shard.",
                        "typeExposed": "[Record]",
                        "type": "List \"Records\" Record"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetRecords.html",
            "namespace": "Network.AWS.Kinesis.GetRecords",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Kinesis.Types"
            ],
            "pager": null,
            "name": "GetRecords",
            "method": "post",
            "documentation": "-- | Gets data records from a shard.\n--\n-- Specify a shard iterator using the 'ShardIterator' parameter. The shard\n-- iterator specifies the position in the shard from which you want to start\n-- reading data records sequentially. If there are no records available in the\n-- portion of the shard that the iterator points to, 'GetRecords' returns an empty\n-- list. Note that it might take multiple calls to get to a portion of the shard\n-- that contains records.\n--\n-- You can scale by provisioning multiple shards. Your application should have\n-- one thread per shard, each reading continuously from its stream. To read from\n-- a stream continually, call 'GetRecords' in a loop. Use 'GetShardIterator' to get\n-- the shard iterator to specify in the first 'GetRecords' call. 'GetRecords'\n-- returns a new shard iterator in 'NextShardIterator'. Specify the shard iterator\n-- returned in 'NextShardIterator' in subsequent calls to 'GetRecords'. Note that if\n-- the shard has been closed, the shard iterator can't return more data and 'GetRecords' returns 'null' in 'NextShardIterator'. You can terminate the loop when the shard\n-- is closed, or when the shard iterator reaches the record with the sequence\n-- number or other attribute that marks it as the last record to process.\n--\n-- Each data record can be up to 50 KB in size, and each shard can read up to 2\n-- MB per second. You can ensure that your calls don't exceed the maximum\n-- supported size or throughput by using the 'Limit' parameter to specify the\n-- maximum number of records that 'GetRecords' can return. Consider your average\n-- record size when determining this limit. For example, if your average record\n-- size is 40 KB, you can limit the data returned to about 1 MB per call by\n-- specifying 25 as the limit.\n--\n-- The size of the data returned by 'GetRecords' will vary depending on the\n-- utilization of the shard. The maximum size of data that 'GetRecords' can return\n-- is 10 MB. If a call returns 10 MB of data, subsequent calls made within the\n-- next 5 seconds throw 'ProvisionedThroughputExceededException'. If there is\n-- insufficient provisioned throughput on the shard, subsequent calls made\n-- within the next 1 second throw 'ProvisionedThroughputExceededException'. Note\n-- that 'GetRecords' won't return any data when it throws an exception. For this\n-- reason, we recommend that you wait one second between calls to 'GetRecords';\n-- however, it's possible that the application will get exceptions for longer\n-- than 1 second.\n--\n-- To detect whether the application is falling behind in processing, add a\n-- timestamp to your records and note how long it takes to process them. You can\n-- also monitor how much data is in a stream using the CloudWatch metrics for\n-- write operations ('PutRecord' and 'PutRecords'). For more information, see \u003chttp://docs.aws.amazon.com/kinesis/latest/dev/monitoring_with_cloudwatch.html Monitoring Amazon Kinesis with Amazon CloudWatch\u003e in the /Amazon Kinesis Developer Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 16,
                "ctor": "getRecords",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "grShardIterator",
                        "name": "_grShardIterator",
                        "shape": "ShardIterator",
                        "locationName": "ShardIterator",
                        "documentation": "-- | The position in the shard from which you want to start sequentially reading\n-- data records. A shard iterator specifies this position using the sequence\n-- number of a data record in the shard.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "grLimit",
                        "name": "_grLimit",
                        "shape": "GetRecordsInputLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of records to return. Specify a value of up to 10,000. If\n-- you specify a value that is greater than 10,000, 'GetRecords' throws 'InvalidArgumentException'.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "grShardIterator",
                        "name": "_grShardIterator",
                        "shape": "ShardIterator",
                        "locationName": "ShardIterator",
                        "documentation": "-- | The position in the shard from which you want to start sequentially reading\n-- data records. A shard iterator specifies this position using the sequence\n-- number of a data record in the shard.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 14,
                "queryPad": 0,
                "name": "GetRecords",
                "query": [],
                "locationPad": 14,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "grLimit",
                        "name": "_grLimit",
                        "shape": "GetRecordsInputLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of records to return. Specify a value of up to 10,000. If\n-- you specify a value that is greater than 10,000, 'GetRecords' throws 'InvalidArgumentException'.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "grLimit",
                        "name": "_grLimit",
                        "shape": "GetRecordsInputLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of records to return. Specify a value of up to 10,000. If\n-- you specify a value that is greater than 10,000, 'GetRecords' throws 'InvalidArgumentException'.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "grShardIterator",
                        "name": "_grShardIterator",
                        "shape": "ShardIterator",
                        "locationName": "ShardIterator",
                        "documentation": "-- | The position in the shard from which you want to start sequentially reading\n-- data records. A shard iterator specifies this position using the sequence\n-- number of a data record in the shard.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Kinesis",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "getShardIteratorResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "json",
                    "flattened": false,
                    "required": false,
                    "lens": "gsirShardIterator",
                    "name": "_gsirShardIterator",
                    "shape": "ShardIterator",
                    "locationName": "ShardIterator",
                    "documentation": "-- | The position in the shard from which to start reading data records\n-- sequentially. A shard iterator specifies this position using the sequence\n-- number of a data record in a shard.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gsirShardIterator",
                        "name": "_gsirShardIterator",
                        "shape": "ShardIterator",
                        "locationName": "ShardIterator",
                        "documentation": "-- | The position in the shard from which to start reading data records\n-- sequentially. A shard iterator specifies this position using the sequence\n-- number of a data record in a shard.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetShardIteratorResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gsirShardIterator",
                        "name": "_gsirShardIterator",
                        "shape": "ShardIterator",
                        "locationName": "ShardIterator",
                        "documentation": "-- | The position in the shard from which to start reading data records\n-- sequentially. A shard iterator specifies this position using the sequence\n-- number of a data record in a shard.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gsirShardIterator",
                        "name": "_gsirShardIterator",
                        "shape": "ShardIterator",
                        "locationName": "ShardIterator",
                        "documentation": "-- | The position in the shard from which to start reading data records\n-- sequentially. A shard iterator specifies this position using the sequence\n-- number of a data record in a shard.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetShardIterator.html",
            "namespace": "Network.AWS.Kinesis.GetShardIterator",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Kinesis.Types"
            ],
            "pager": null,
            "name": "GetShardIterator",
            "method": "post",
            "documentation": "-- | Gets a shard iterator. A shard iterator expires five minutes after it is\n-- returned to the requester.\n--\n-- A shard iterator specifies the position in the shard from which to start\n-- reading data records sequentially. A shard iterator specifies this position\n-- using the sequence number of a data record in a shard. A sequence number is\n-- the identifier associated with every record ingested in the Amazon Kinesis\n-- stream. The sequence number is assigned when a record is put into the stream.\n--\n-- You must specify the shard iterator type. For example, you can set the 'ShardIteratorType' parameter to read exactly from the position denoted by a specific sequence\n-- number by using the 'AT_SEQUENCE_NUMBER' shard iterator type, or right after\n-- the sequence number by using the 'AFTER_SEQUENCE_NUMBER' shard iterator type,\n-- using sequence numbers returned by earlier calls to 'PutRecord', 'PutRecords', 'GetRecords', or 'DescribeStream'. You can specify the shard iterator type 'TRIM_HORIZON' in\n-- the request to cause 'ShardIterator' to point to the last untrimmed record in\n-- the shard in the system, which is the oldest data record in the shard. Or you\n-- can point to just after the most recent record in the shard, by using the\n-- shard iterator type 'LATEST', so that you always read the most recent data in\n-- the shard.\n--\n-- When you repeatedly read from an Amazon Kinesis stream use a 'GetShardIterator'\n-- request to get the first shard iterator to to use in your first 'GetRecords'\n-- request and then use the shard iterator returned by the 'GetRecords' request in 'NextShardIterator' for subsequent reads. A new shard iterator is returned by\n-- every 'GetRecords' request in 'NextShardIterator', which you use in the 'ShardIterator' parameter of the next 'GetRecords' request.\n--\n-- If a 'GetShardIterator' request is made too often, you receive a 'ProvisionedThroughputExceededException'. For more information about throughput limits, see 'GetRecords'.\n--\n-- If the shard is closed, the iterator can't return more data, and 'GetShardIterator' returns 'null' for its 'ShardIterator'. A shard can be closed using 'SplitShard'\n-- or 'MergeShards'.\n--\n-- 'GetShardIterator' has a limit of 5 transactions per second per account per\n-- open shard.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 26,
                "ctor": "getShardIterator",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gsiStreamName",
                        "name": "_gsiStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gsiShardId",
                        "name": "_gsiShardId",
                        "shape": "ShardId",
                        "locationName": "ShardId",
                        "documentation": "-- | The shard ID of the shard to get the iterator for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gsiShardIteratorType",
                        "name": "_gsiShardIteratorType",
                        "shape": "ShardIteratorType",
                        "locationName": "ShardIteratorType",
                        "documentation": "-- | Determines how the shard iterator is used to start reading data records from\n-- the shard.\n--\n-- The following are the valid shard iterator types:\n--\n-- AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a\n-- specific sequence number. AFTER_SEQUENCE_NUMBER - Start reading right after\n-- the position denoted by a specific sequence number. TRIM_HORIZON - Start\n-- reading at the last untrimmed record in the shard in the system, which is the\n-- oldest data record in the shard. LATEST - Start reading just after the most\n-- recent record in the shard, so that you always read the most recent data in\n-- the shard.",
                        "typeExposed": "ShardIteratorType",
                        "type": "ShardIteratorType"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gsiStartingSequenceNumber",
                        "name": "_gsiStartingSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "StartingSequenceNumber",
                        "documentation": "-- | The sequence number of the data record in the shard from which to start\n-- reading from.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gsiStreamName",
                        "name": "_gsiStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gsiShardId",
                        "name": "_gsiShardId",
                        "shape": "ShardId",
                        "locationName": "ShardId",
                        "documentation": "-- | The shard ID of the shard to get the iterator for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gsiShardIteratorType",
                        "name": "_gsiShardIteratorType",
                        "shape": "ShardIteratorType",
                        "locationName": "ShardIteratorType",
                        "documentation": "-- | Determines how the shard iterator is used to start reading data records from\n-- the shard.\n--\n-- The following are the valid shard iterator types:\n--\n-- AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a\n-- specific sequence number. AFTER_SEQUENCE_NUMBER - Start reading right after\n-- the position denoted by a specific sequence number. TRIM_HORIZON - Start\n-- reading at the last untrimmed record in the shard in the system, which is the\n-- oldest data record in the shard. LATEST - Start reading just after the most\n-- recent record in the shard, so that you always read the most recent data in\n-- the shard.",
                        "typeExposed": "ShardIteratorType",
                        "type": "ShardIteratorType"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 23,
                "queryPad": 0,
                "name": "GetShardIterator",
                "query": [],
                "locationPad": 23,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gsiStartingSequenceNumber",
                        "name": "_gsiStartingSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "StartingSequenceNumber",
                        "documentation": "-- | The sequence number of the data record in the shard from which to start\n-- reading from.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gsiShardId",
                        "name": "_gsiShardId",
                        "shape": "ShardId",
                        "locationName": "ShardId",
                        "documentation": "-- | The shard ID of the shard to get the iterator for.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gsiShardIteratorType",
                        "name": "_gsiShardIteratorType",
                        "shape": "ShardIteratorType",
                        "locationName": "ShardIteratorType",
                        "documentation": "-- | Determines how the shard iterator is used to start reading data records from\n-- the shard.\n--\n-- The following are the valid shard iterator types:\n--\n-- AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a\n-- specific sequence number. AFTER_SEQUENCE_NUMBER - Start reading right after\n-- the position denoted by a specific sequence number. TRIM_HORIZON - Start\n-- reading at the last untrimmed record in the shard in the system, which is the\n-- oldest data record in the shard. LATEST - Start reading just after the most\n-- recent record in the shard, so that you always read the most recent data in\n-- the shard.",
                        "typeExposed": "ShardIteratorType",
                        "type": "ShardIteratorType"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "gsiStartingSequenceNumber",
                        "name": "_gsiStartingSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "StartingSequenceNumber",
                        "documentation": "-- | The sequence number of the data record in the shard from which to start\n-- reading from.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "gsiStreamName",
                        "name": "_gsiStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Kinesis",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 18,
                "ctor": "listStreamsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lsrStreamNames",
                        "name": "_lsrStreamNames",
                        "shape": "StreamNameList",
                        "locationName": "StreamNames",
                        "documentation": "-- | The names of the streams that are associated with the AWS account making the 'ListStreams' request.",
                        "typeExposed": "[Text]",
                        "type": "List \"StreamNames\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lsrHasMoreStreams",
                        "name": "_lsrHasMoreStreams",
                        "shape": "BooleanObject",
                        "locationName": "HasMoreStreams",
                        "documentation": "-- | If set to 'true', there are more streams available to list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lsrHasMoreStreams",
                        "name": "_lsrHasMoreStreams",
                        "shape": "BooleanObject",
                        "locationName": "HasMoreStreams",
                        "documentation": "-- | If set to 'true', there are more streams available to list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "name": "ListStreamsResponse",
                "resultWrapper": null,
                "locationPad": 15,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lsrStreamNames",
                        "name": "_lsrStreamNames",
                        "shape": "StreamNameList",
                        "locationName": "StreamNames",
                        "documentation": "-- | The names of the streams that are associated with the AWS account making the 'ListStreams' request.",
                        "typeExposed": "[Text]",
                        "type": "List \"StreamNames\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lsrHasMoreStreams",
                        "name": "_lsrHasMoreStreams",
                        "shape": "BooleanObject",
                        "locationName": "HasMoreStreams",
                        "documentation": "-- | If set to 'true', there are more streams available to list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "lsrStreamNames",
                        "name": "_lsrStreamNames",
                        "shape": "StreamNameList",
                        "locationName": "StreamNames",
                        "documentation": "-- | The names of the streams that are associated with the AWS account making the 'ListStreams' request.",
                        "typeExposed": "[Text]",
                        "type": "List \"StreamNames\" Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/API_ListStreams.html",
            "namespace": "Network.AWS.Kinesis.ListStreams",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Kinesis.Types"
            ],
            "pager": {
                "more": "lsrHasMoreStreams",
                "token": {
                    "input": "lsExclusiveStartStreamName",
                    "outputRequired": false,
                    "output": "index lsrStreamNames (to id)",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListStreams",
            "method": "post",
            "documentation": "-- | Lists your streams.\n--\n-- The number of streams may be too large to return from a single call to 'ListStreams'. You can limit the number of returned streams using the 'Limit' parameter. If\n-- you do not specify a value for the 'Limit' parameter, Amazon Kinesis uses the\n-- default limit, which is currently 10.\n--\n-- You can detect if there are more streams available to list by using the 'HasMoreStreams' flag from the returned output. If there are more streams available, you can\n-- request more streams by using the name of the last stream returned by the 'ListStreams' request in the 'ExclusiveStartStreamName' parameter in a subsequent request to 'ListStreams'. The group of stream names returned by the subsequent request is\n-- then added to the list. You can continue this process until all the stream\n-- names have been collected in the list.\n--\n-- 'ListStreams' has a limit of 5 transactions per second per account.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 27,
                "ctor": "listStreams",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lsLimit",
                        "name": "_lsLimit",
                        "shape": "ListStreamsInputLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of streams to list.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lsExclusiveStartStreamName",
                        "name": "_lsExclusiveStartStreamName",
                        "shape": "StreamName",
                        "locationName": "ExclusiveStartStreamName",
                        "documentation": "-- | The name of the stream to start the list with.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 25,
                "queryPad": 0,
                "name": "ListStreams",
                "query": [],
                "locationPad": 25,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lsLimit",
                        "name": "_lsLimit",
                        "shape": "ListStreamsInputLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of streams to list.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lsExclusiveStartStreamName",
                        "name": "_lsExclusiveStartStreamName",
                        "shape": "StreamName",
                        "locationName": "ExclusiveStartStreamName",
                        "documentation": "-- | The name of the stream to start the list with.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lsExclusiveStartStreamName",
                        "name": "_lsExclusiveStartStreamName",
                        "shape": "StreamName",
                        "locationName": "ExclusiveStartStreamName",
                        "documentation": "-- | The name of the stream to start the list with.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "lsLimit",
                        "name": "_lsLimit",
                        "shape": "ListStreamsInputLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The maximum number of streams to list.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            }
        },
        {
            "service": "Kinesis",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 17,
                "ctor": "listTagsForStreamResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ltfsrTags",
                        "name": "_ltfsrTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tags associated with 'StreamName', starting with the first tag after 'ExclusiveStartTagKey' and up to the specified 'Limit'.",
                        "typeExposed": "[Tag]",
                        "type": "List \"Tags\" Tag"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ltfsrHasMoreTags",
                        "name": "_ltfsrHasMoreTags",
                        "shape": "BooleanObject",
                        "locationName": "HasMoreTags",
                        "documentation": "-- | If set to 'true', more tags are available. To request additional tags, set 'ExclusiveStartTagKey' to the key of the last tag returned.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ltfsrHasMoreTags",
                        "name": "_ltfsrHasMoreTags",
                        "shape": "BooleanObject",
                        "locationName": "HasMoreTags",
                        "documentation": "-- | If set to 'true', more tags are available. To request additional tags, set 'ExclusiveStartTagKey' to the key of the last tag returned.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 12,
                "name": "ListTagsForStreamResponse",
                "resultWrapper": null,
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ltfsrTags",
                        "name": "_ltfsrTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tags associated with 'StreamName', starting with the first tag after 'ExclusiveStartTagKey' and up to the specified 'Limit'.",
                        "typeExposed": "[Tag]",
                        "type": "List \"Tags\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ltfsrHasMoreTags",
                        "name": "_ltfsrHasMoreTags",
                        "shape": "BooleanObject",
                        "locationName": "HasMoreTags",
                        "documentation": "-- | If set to 'true', more tags are available. To request additional tags, set 'ExclusiveStartTagKey' to the key of the last tag returned.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ltfsrTags",
                        "name": "_ltfsrTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "-- | A list of tags associated with 'StreamName', starting with the first tag after 'ExclusiveStartTagKey' and up to the specified 'Limit'.",
                        "typeExposed": "[Tag]",
                        "type": "List \"Tags\" Tag"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/API_ListTagsForStream.html",
            "namespace": "Network.AWS.Kinesis.ListTagsForStream",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Kinesis.Types"
            ],
            "pager": null,
            "name": "ListTagsForStream",
            "method": "post",
            "documentation": "-- | Lists the tags for the specified Amazon Kinesis stream.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 25,
                "ctor": "listTagsForStream",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ltfsStreamName",
                        "name": "_ltfsStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ltfsExclusiveStartTagKey",
                        "name": "_ltfsExclusiveStartTagKey",
                        "shape": "TagKey",
                        "locationName": "ExclusiveStartTagKey",
                        "documentation": "-- | The key to use as the starting point for the list of tags. If this parameter\n-- is set, 'ListTagsForStream' gets all tags that occur after 'ExclusiveStartTagKey'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ltfsLimit",
                        "name": "_ltfsLimit",
                        "shape": "ListTagsForStreamInputLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The number of tags to return. If this number is less than the total number of\n-- tags associated with the stream, 'HasMoreTags' is set to 'true'. To list\n-- additional tags, set 'ExclusiveStartTagKey' to the last key in the response.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ltfsStreamName",
                        "name": "_ltfsStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 21,
                "queryPad": 0,
                "name": "ListTagsForStream",
                "query": [],
                "locationPad": 21,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ltfsExclusiveStartTagKey",
                        "name": "_ltfsExclusiveStartTagKey",
                        "shape": "TagKey",
                        "locationName": "ExclusiveStartTagKey",
                        "documentation": "-- | The key to use as the starting point for the list of tags. If this parameter\n-- is set, 'ListTagsForStream' gets all tags that occur after 'ExclusiveStartTagKey'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ltfsLimit",
                        "name": "_ltfsLimit",
                        "shape": "ListTagsForStreamInputLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The number of tags to return. If this number is less than the total number of\n-- tags associated with the stream, 'HasMoreTags' is set to 'true'. To list\n-- additional tags, set 'ExclusiveStartTagKey' to the last key in the response.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ltfsExclusiveStartTagKey",
                        "name": "_ltfsExclusiveStartTagKey",
                        "shape": "TagKey",
                        "locationName": "ExclusiveStartTagKey",
                        "documentation": "-- | The key to use as the starting point for the list of tags. If this parameter\n-- is set, 'ListTagsForStream' gets all tags that occur after 'ExclusiveStartTagKey'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "ltfsLimit",
                        "name": "_ltfsLimit",
                        "shape": "ListTagsForStreamInputLimit",
                        "locationName": "Limit",
                        "documentation": "-- | The number of tags to return. If this number is less than the total number of\n-- tags associated with the stream, 'HasMoreTags' is set to 'true'. To list\n-- additional tags, set 'ExclusiveStartTagKey' to the last key in the response.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ltfsStreamName",
                        "name": "_ltfsStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Kinesis",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "mergeShardsResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "MergeShardsResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/API_MergeShards.html",
            "namespace": "Network.AWS.Kinesis.MergeShards",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Kinesis.Types"
            ],
            "pager": null,
            "name": "MergeShards",
            "method": "post",
            "documentation": "-- | Merges two adjacent shards in a stream and combines them into a single shard\n-- to reduce the stream's capacity to ingest and transport data. Two shards are\n-- considered adjacent if the union of the hash key ranges for the two shards\n-- form a contiguous set with no gaps. For example, if you have two shards, one\n-- with a hash key range of 276...381 and the other with a hash key range of\n-- 382...454, then you could merge these two shards into a single shard that\n-- would have a hash key range of 276...454. After the merge, the single child\n-- shard receives data for all hash key values covered by the two parent shards.\n--\n-- 'MergeShards' is called when there is a need to reduce the overall capacity of\n-- a stream because of excess capacity that is not being used. You must specify\n-- the shard to be merged and the adjacent shard for a stream. For more\n-- information about merging shards, see \u003chttp://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-api-java.html#kinesis-using-api-java-resharding-merge Merge Two Shards\u003e in the /Amazon KinesisDeveloper Guide/.\n--\n-- If the stream is in the 'ACTIVE' state, you can call 'MergeShards'. If a stream\n-- is in the 'CREATING', 'UPDATING', or 'DELETING' state, 'MergeShards' returns a 'ResourceInUseException'. If the specified stream does not exist, 'MergeShards' returns a 'ResourceNotFoundException'.\n--\n-- You can use 'DescribeStream' to check the state of the stream, which is\n-- returned in 'StreamStatus'.\n--\n-- 'MergeShards' is an asynchronous operation. Upon receiving a 'MergeShards'\n-- request, Amazon Kinesis immediately returns a response and sets the 'StreamStatus' to 'UPDATING'. After the operation is completed, Amazon Kinesis sets the 'StreamStatus' to 'ACTIVE'. Read and write operations continue to work while the stream is in\n-- the 'UPDATING' state.\n--\n-- You use 'DescribeStream' to determine the shard IDs that are specified in the 'MergeShards' request.\n--\n-- If you try to operate on too many streams in parallel using 'CreateStream', 'DeleteStream', 'MergeShards' or 'SplitShard', you will receive a 'LimitExceededException'.\n--\n-- 'MergeShards' has limit of 5 transactions per second per account.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 23,
                "ctor": "mergeShards",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "msStreamName",
                        "name": "_msStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream for the merge.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "msShardToMerge",
                        "name": "_msShardToMerge",
                        "shape": "ShardId",
                        "locationName": "ShardToMerge",
                        "documentation": "-- | The shard ID of the shard to combine with the adjacent shard for the merge.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "msAdjacentShardToMerge",
                        "name": "_msAdjacentShardToMerge",
                        "shape": "ShardId",
                        "locationName": "AdjacentShardToMerge",
                        "documentation": "-- | The shard ID of the adjacent shard for the merge.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "msStreamName",
                        "name": "_msStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream for the merge.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "msShardToMerge",
                        "name": "_msShardToMerge",
                        "shape": "ShardId",
                        "locationName": "ShardToMerge",
                        "documentation": "-- | The shard ID of the shard to combine with the adjacent shard for the merge.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "msAdjacentShardToMerge",
                        "name": "_msAdjacentShardToMerge",
                        "shape": "ShardId",
                        "locationName": "AdjacentShardToMerge",
                        "documentation": "-- | The shard ID of the adjacent shard for the merge.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 21,
                "queryPad": 0,
                "name": "MergeShards",
                "query": [],
                "locationPad": 21,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "msAdjacentShardToMerge",
                        "name": "_msAdjacentShardToMerge",
                        "shape": "ShardId",
                        "locationName": "AdjacentShardToMerge",
                        "documentation": "-- | The shard ID of the adjacent shard for the merge.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "msShardToMerge",
                        "name": "_msShardToMerge",
                        "shape": "ShardId",
                        "locationName": "ShardToMerge",
                        "documentation": "-- | The shard ID of the shard to combine with the adjacent shard for the merge.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "msStreamName",
                        "name": "_msStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream for the merge.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Kinesis",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 18,
                "ctor": "putRecordResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prrShardId",
                        "name": "_prrShardId",
                        "shape": "ShardId",
                        "locationName": "ShardId",
                        "documentation": "-- | The shard ID of the shard where the data record was placed.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prrSequenceNumber",
                        "name": "_prrSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "SequenceNumber",
                        "documentation": "-- | The sequence number identifier that was assigned to the put data record. The\n-- sequence number for the record is unique across all records in the stream. A\n-- sequence number is the identifier associated with every record put into the\n-- stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prrShardId",
                        "name": "_prrShardId",
                        "shape": "ShardId",
                        "locationName": "ShardId",
                        "documentation": "-- | The shard ID of the shard where the data record was placed.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prrSequenceNumber",
                        "name": "_prrSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "SequenceNumber",
                        "documentation": "-- | The sequence number identifier that was assigned to the put data record. The\n-- sequence number for the record is unique across all records in the stream. A\n-- sequence number is the identifier associated with every record put into the\n-- stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "name": "PutRecordResponse",
                "resultWrapper": null,
                "locationPad": 15,
                "type": "record",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prrSequenceNumber",
                        "name": "_prrSequenceNumber",
                        "shape": "SequenceNumber",
                        "locationName": "SequenceNumber",
                        "documentation": "-- | The sequence number identifier that was assigned to the put data record. The\n-- sequence number for the record is unique across all records in the stream. A\n-- sequence number is the identifier associated with every record put into the\n-- stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prrShardId",
                        "name": "_prrShardId",
                        "shape": "ShardId",
                        "locationName": "ShardId",
                        "documentation": "-- | The shard ID of the shard where the data record was placed.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecord.html",
            "namespace": "Network.AWS.Kinesis.PutRecord",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Kinesis.Types"
            ],
            "pager": null,
            "name": "PutRecord",
            "method": "post",
            "documentation": "-- | Puts (writes) a single data record from a producer into an Amazon Kinesis\n-- stream. Call 'PutRecord' to send data from the producer into the Amazon Kinesis\n-- stream for real-time ingestion and subsequent processing, one record at a\n-- time. Each shard can support up to 1000 records written per second, up to a\n-- maximum total of 1 MB data written per second.\n--\n-- You must specify the name of the stream that captures, stores, and\n-- transports the data; a partition key; and the data blob itself.\n--\n-- The data blob can be any type of data; for example, a segment from a log\n-- file, geographic/location data, website clickstream data, and so on.\n--\n-- The partition key is used by Amazon Kinesis to distribute data across\n-- shards. Amazon Kinesis segregates the data records that belong to a data\n-- stream into multiple shards, using the partition key associated with each\n-- data record to determine which shard a given data record belongs to.\n--\n-- Partition keys are Unicode strings, with a maximum length limit of 256\n-- bytes. An MD5 hash function is used to map partition keys to 128-bit integer\n-- values and to map associated data records to shards using the hash key ranges\n-- of the shards. You can override hashing the partition key to determine the\n-- shard by explicitly specifying a hash value using the 'ExplicitHashKey'\n-- parameter. For more information, see \u003chttp://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-api-java.html#kinesis-using-api-defn-partition-key Partition Key\u003e in the /Amazon KinesisDeveloper Guide/.\n--\n-- 'PutRecord' returns the shard ID of where the data record was placed and the\n-- sequence number that was assigned to the data record.\n--\n-- Sequence numbers generally increase over time. To guarantee strictly\n-- increasing ordering, use the 'SequenceNumberForOrdering' parameter. For more\n-- information, see \u003chttp://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-api-java.html#kinesis-using-api-defn-sequence-number Sequence Number\u003e in the /Amazon Kinesis Developer Guide/.\n--\n-- If a 'PutRecord' request cannot be processed because of insufficient\n-- provisioned throughput on the shard involved in the request, 'PutRecord' throws 'ProvisionedThroughputExceededException'.\n--\n-- Data records are accessible for only 24 hours from the time that they are\n-- added to an Amazon Kinesis stream.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 28,
                "ctor": "putRecord",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prStreamName",
                        "name": "_prStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream to put the data record into.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prData",
                        "name": "_prData",
                        "shape": "Data",
                        "locationName": "Data",
                        "documentation": "-- | The data blob to put into the record, which is base64-encoded when the blob\n-- is serialized. The maximum size of the data blob (the payload before\n-- base64-encoding) is 50 kilobytes (KB)",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prPartitionKey",
                        "name": "_prPartitionKey",
                        "shape": "PartitionKey",
                        "locationName": "PartitionKey",
                        "documentation": "-- | Determines which shard in the stream the data record is assigned to.\n-- Partition keys are Unicode strings with a maximum length limit of 256 bytes.\n-- Amazon Kinesis uses the partition key as input to a hash function that maps\n-- the partition key and associated data to a specific shard. Specifically, an\n-- MD5 hash function is used to map partition keys to 128-bit integer values and\n-- to map associated data records to shards. As a result of this hashing\n-- mechanism, all data records with the same partition key will map to the same\n-- shard within the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prExplicitHashKey",
                        "name": "_prExplicitHashKey",
                        "shape": "HashKey",
                        "locationName": "ExplicitHashKey",
                        "documentation": "-- | The hash value used to explicitly determine the shard the data record is\n-- assigned to by overriding the partition key hash.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prSequenceNumberForOrdering",
                        "name": "_prSequenceNumberForOrdering",
                        "shape": "SequenceNumber",
                        "locationName": "SequenceNumberForOrdering",
                        "documentation": "-- | Guarantees strictly increasing sequence numbers, for puts from the same\n-- client and to the same partition key. Usage: set the 'SequenceNumberForOrdering'\n-- of record /n/ to the sequence number of record /n-1/ (as returned in the 'PutRecordResult' when putting record /n-1/). If this parameter is not set, records will be\n-- coarsely ordered based on arrival time.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prStreamName",
                        "name": "_prStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream to put the data record into.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prData",
                        "name": "_prData",
                        "shape": "Data",
                        "locationName": "Data",
                        "documentation": "-- | The data blob to put into the record, which is base64-encoded when the blob\n-- is serialized. The maximum size of the data blob (the payload before\n-- base64-encoding) is 50 kilobytes (KB)",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prPartitionKey",
                        "name": "_prPartitionKey",
                        "shape": "PartitionKey",
                        "locationName": "PartitionKey",
                        "documentation": "-- | Determines which shard in the stream the data record is assigned to.\n-- Partition keys are Unicode strings with a maximum length limit of 256 bytes.\n-- Amazon Kinesis uses the partition key as input to a hash function that maps\n-- the partition key and associated data to a specific shard. Specifically, an\n-- MD5 hash function is used to map partition keys to 128-bit integer values and\n-- to map associated data records to shards. As a result of this hashing\n-- mechanism, all data records with the same partition key will map to the same\n-- shard within the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 26,
                "queryPad": 0,
                "name": "PutRecord",
                "query": [],
                "locationPad": 26,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prExplicitHashKey",
                        "name": "_prExplicitHashKey",
                        "shape": "HashKey",
                        "locationName": "ExplicitHashKey",
                        "documentation": "-- | The hash value used to explicitly determine the shard the data record is\n-- assigned to by overriding the partition key hash.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prSequenceNumberForOrdering",
                        "name": "_prSequenceNumberForOrdering",
                        "shape": "SequenceNumber",
                        "locationName": "SequenceNumberForOrdering",
                        "documentation": "-- | Guarantees strictly increasing sequence numbers, for puts from the same\n-- client and to the same partition key. Usage: set the 'SequenceNumberForOrdering'\n-- of record /n/ to the sequence number of record /n-1/ (as returned in the 'PutRecordResult' when putting record /n-1/). If this parameter is not set, records will be\n-- coarsely ordered based on arrival time.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prData",
                        "name": "_prData",
                        "shape": "Data",
                        "locationName": "Data",
                        "documentation": "-- | The data blob to put into the record, which is base64-encoded when the blob\n-- is serialized. The maximum size of the data blob (the payload before\n-- base64-encoding) is 50 kilobytes (KB)",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prExplicitHashKey",
                        "name": "_prExplicitHashKey",
                        "shape": "HashKey",
                        "locationName": "ExplicitHashKey",
                        "documentation": "-- | The hash value used to explicitly determine the shard the data record is\n-- assigned to by overriding the partition key hash.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prPartitionKey",
                        "name": "_prPartitionKey",
                        "shape": "PartitionKey",
                        "locationName": "PartitionKey",
                        "documentation": "-- | Determines which shard in the stream the data record is assigned to.\n-- Partition keys are Unicode strings with a maximum length limit of 256 bytes.\n-- Amazon Kinesis uses the partition key as input to a hash function that maps\n-- the partition key and associated data to a specific shard. Specifically, an\n-- MD5 hash function is used to map partition keys to 128-bit integer values and\n-- to map associated data records to shards. As a result of this hashing\n-- mechanism, all data records with the same partition key will map to the same\n-- shard within the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prSequenceNumberForOrdering",
                        "name": "_prSequenceNumberForOrdering",
                        "shape": "SequenceNumber",
                        "locationName": "SequenceNumberForOrdering",
                        "documentation": "-- | Guarantees strictly increasing sequence numbers, for puts from the same\n-- client and to the same partition key. Usage: set the 'SequenceNumberForOrdering'\n-- of record /n/ to the sequence number of record /n-1/ (as returned in the 'PutRecordResult' when putting record /n-1/). If this parameter is not set, records will be\n-- coarsely ordered based on arrival time.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prStreamName",
                        "name": "_prStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream to put the data record into.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Kinesis",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 21,
                "ctor": "putRecordsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prrFailedRecordCount",
                        "name": "_prrFailedRecordCount",
                        "shape": "PositiveIntegerObject",
                        "locationName": "FailedRecordCount",
                        "documentation": "-- | The number of unsuccessfully processed records in a 'PutRecords' request.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prrRecords",
                        "name": "_prrRecords",
                        "shape": "PutRecordsResultEntryList",
                        "locationName": "Records",
                        "documentation": "-- | An array of successfully and unsuccessfully processed record results,\n-- correlated with the request by natural ordering. A record that is\n-- successfully added to your Amazon Kinesis stream includes 'SequenceNumber' and 'ShardId' in the result. A record that fails to be added to your Amazon Kinesis stream\n-- includes 'ErrorCode' and 'ErrorMessage' in the result.",
                        "typeExposed": "NonEmpty PutRecordsResultEntry",
                        "type": "List1 \"Records\" PutRecordsResultEntry"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prrRecords",
                        "name": "_prrRecords",
                        "shape": "PutRecordsResultEntryList",
                        "locationName": "Records",
                        "documentation": "-- | An array of successfully and unsuccessfully processed record results,\n-- correlated with the request by natural ordering. A record that is\n-- successfully added to your Amazon Kinesis stream includes 'SequenceNumber' and 'ShardId' in the result. A record that fails to be added to your Amazon Kinesis stream\n-- includes 'ErrorCode' and 'ErrorMessage' in the result.",
                        "typeExposed": "NonEmpty PutRecordsResultEntry",
                        "type": "List1 \"Records\" PutRecordsResultEntry"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 18,
                "name": "PutRecordsResponse",
                "resultWrapper": null,
                "locationPad": 18,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prrFailedRecordCount",
                        "name": "_prrFailedRecordCount",
                        "shape": "PositiveIntegerObject",
                        "locationName": "FailedRecordCount",
                        "documentation": "-- | The number of unsuccessfully processed records in a 'PutRecords' request.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": false,
                        "lens": "prrFailedRecordCount",
                        "name": "_prrFailedRecordCount",
                        "shape": "PositiveIntegerObject",
                        "locationName": "FailedRecordCount",
                        "documentation": "-- | The number of unsuccessfully processed records in a 'PutRecords' request.",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": null,
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "prrRecords",
                        "name": "_prrRecords",
                        "shape": "PutRecordsResultEntryList",
                        "locationName": "Records",
                        "documentation": "-- | An array of successfully and unsuccessfully processed record results,\n-- correlated with the request by natural ordering. A record that is\n-- successfully added to your Amazon Kinesis stream includes 'SequenceNumber' and 'ShardId' in the result. A record that fails to be added to your Amazon Kinesis stream\n-- includes 'ErrorCode' and 'ErrorMessage' in the result.",
                        "typeExposed": "NonEmpty PutRecordsResultEntry",
                        "type": "List1 \"Records\" PutRecordsResultEntry"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecords.html",
            "namespace": "Network.AWS.Kinesis.PutRecords",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Kinesis.Types"
            ],
            "pager": null,
            "name": "PutRecords",
            "method": "post",
            "documentation": "-- | Puts (writes) multiple data records from a producer into an Amazon Kinesis\n-- stream in a single call (also referred to as a 'PutRecords' request). Use this\n-- operation to send data from a data producer into the Amazon Kinesis stream\n-- for real-time ingestion and processing. Each shard can support up to 1000\n-- records written per second, up to a maximum total of 1 MB data written per\n-- second.\n--\n-- You must specify the name of the stream that captures, stores, and\n-- transports the data; and an array of request 'Records', with each record in the\n-- array requiring a partition key and data blob.\n--\n-- The data blob can be any type of data; for example, a segment from a log\n-- file, geographic/location data, website clickstream data, and so on.\n--\n-- The partition key is used by Amazon Kinesis as input to a hash function that\n-- maps the partition key and associated data to a specific shard. An MD5 hash\n-- function is used to map partition keys to 128-bit integer values and to map\n-- associated data records to shards. As a result of this hashing mechanism, all\n-- data records with the same partition key map to the same shard within the\n-- stream. For more information, see \u003chttp://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-api-java.html#kinesis-using-api-defn-partition-key Partition Key\u003e in the /Amazon KinesisDeveloper Guide/.\n--\n-- Each record in the 'Records' array may include an optional parameter, 'ExplicitHashKey', which overrides the partition key to shard mapping. This parameter allows a\n-- data producer to determine explicitly the shard where the record is stored.\n-- For more information, see \u003chttp://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-api-java.html#kinesis-using-api-putrecords Adding Multiple Records with PutRecords\u003e in the /Amazon Kinesis Developer Guide/.\n--\n-- The 'PutRecords' response includes an array of response 'Records'. Each record\n-- in the response array directly correlates with a record in the request array\n-- using natural ordering, from the top to the bottom of the request and\n-- response. The response 'Records' array always includes the same number of\n-- records as the request array.\n--\n-- The response 'Records' array includes both successfully and unsuccessfully\n-- processed records. Amazon Kinesis attempts to process all records in each 'PutRecords' request. A single record failure does not stop the processing of subsequent\n-- records.\n--\n-- A successfully-processed record includes 'ShardId' and 'SequenceNumber' values.\n-- The 'ShardId' parameter identifies the shard in the stream where the record is\n-- stored. The 'SequenceNumber' parameter is an identifier assigned to the put\n-- record, unique to all records in the stream.\n--\n-- An unsuccessfully-processed record includes 'ErrorCode' and 'ErrorMessage'\n-- values. 'ErrorCode' reflects the type of error and can be one of the following\n-- values: 'ProvisionedThroughputExceededException' or 'InternalFailure'. 'ErrorMessage' provides more detailed information about the 'ProvisionedThroughputExceededException' exception including the account ID, stream name, and shard ID of the record\n-- that was throttled.\n--\n-- Data records are accessible for only 24 hours from the time that they are\n-- added to an Amazon Kinesis stream.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "putRecords",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pr1Records",
                        "name": "_pr1Records",
                        "shape": "PutRecordsRequestEntryList",
                        "locationName": "Records",
                        "documentation": "-- | The records associated with the request.",
                        "typeExposed": "NonEmpty PutRecordsRequestEntry",
                        "type": "List1 \"Records\" PutRecordsRequestEntry"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pr1StreamName",
                        "name": "_pr1StreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The stream name associated with the request.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pr1Records",
                        "name": "_pr1Records",
                        "shape": "PutRecordsRequestEntryList",
                        "locationName": "Records",
                        "documentation": "-- | The records associated with the request.",
                        "typeExposed": "NonEmpty PutRecordsRequestEntry",
                        "type": "List1 \"Records\" PutRecordsRequestEntry"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pr1StreamName",
                        "name": "_pr1StreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The stream name associated with the request.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 11,
                "queryPad": 0,
                "name": "PutRecords",
                "query": [],
                "locationPad": 11,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pr1Records",
                        "name": "_pr1Records",
                        "shape": "PutRecordsRequestEntryList",
                        "locationName": "Records",
                        "documentation": "-- | The records associated with the request.",
                        "typeExposed": "NonEmpty PutRecordsRequestEntry",
                        "type": "List1 \"Records\" PutRecordsRequestEntry"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "pr1StreamName",
                        "name": "_pr1StreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The stream name associated with the request.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Kinesis",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "removeTagsFromStreamResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "RemoveTagsFromStreamResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/API_RemoveTagsFromStream.html",
            "namespace": "Network.AWS.Kinesis.RemoveTagsFromStream",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Kinesis.Types"
            ],
            "pager": null,
            "name": "RemoveTagsFromStream",
            "method": "post",
            "documentation": "-- | Deletes tags from the specified Amazon Kinesis stream.\n--\n-- If you specify a tag that does not exist, it is ignored.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 15,
                "ctor": "removeTagsFromStream",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rtfsStreamName",
                        "name": "_rtfsStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rtfsTagKeys",
                        "name": "_rtfsTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A list of tag keys. Each corresponding tag is removed from the stream.",
                        "typeExposed": "NonEmpty Text",
                        "type": "List1 \"TagKeys\" Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rtfsStreamName",
                        "name": "_rtfsStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rtfsTagKeys",
                        "name": "_rtfsTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A list of tag keys. Each corresponding tag is removed from the stream.",
                        "typeExposed": "NonEmpty Text",
                        "type": "List1 \"TagKeys\" Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 11,
                "queryPad": 0,
                "name": "RemoveTagsFromStream",
                "query": [],
                "locationPad": 11,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rtfsStreamName",
                        "name": "_rtfsStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "rtfsTagKeys",
                        "name": "_rtfsTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "TagKeys",
                        "documentation": "-- | A list of tag keys. Each corresponding tag is removed from the stream.",
                        "typeExposed": "NonEmpty Text",
                        "type": "List1 \"TagKeys\" Text"
                    }
                ]
            }
        },
        {
            "service": "Kinesis",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "splitShardResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "SplitShardResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/kinesis/latest/APIReference/API_SplitShard.html",
            "namespace": "Network.AWS.Kinesis.SplitShard",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Kinesis.Types"
            ],
            "pager": null,
            "name": "SplitShard",
            "method": "post",
            "documentation": "-- | Splits a shard into two new shards in the stream, to increase the stream's\n-- capacity to ingest and transport data. 'SplitShard' is called when there is a\n-- need to increase the overall capacity of stream because of an expected\n-- increase in the volume of data records being ingested.\n--\n-- You can also use 'SplitShard' when a shard appears to be approaching its\n-- maximum utilization, for example, when the set of producers sending data into\n-- the specific shard are suddenly sending more than previously anticipated. You\n-- can also call 'SplitShard' to increase stream capacity, so that more Amazon\n-- Kinesis applications can simultaneously read data from the stream for\n-- real-time processing.\n--\n-- You must specify the shard to be split and the new hash key, which is the\n-- position in the shard where the shard gets split in two. In many cases, the\n-- new hash key might simply be the average of the beginning and ending hash\n-- key, but it can be any hash key value in the range being mapped into the\n-- shard. For more information about splitting shards, see \u003chttp://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-api-java.html#kinesis-using-api-java-resharding-split Split a Shard\u003e in the /Amazon Kinesis Developer Guide/.\n--\n-- You can use 'DescribeStream' to determine the shard ID and hash key values for\n-- the 'ShardToSplit' and 'NewStartingHashKey' parameters that are specified in the 'SplitShard' request.\n--\n-- 'SplitShard' is an asynchronous operation. Upon receiving a 'SplitShard'\n-- request, Amazon Kinesis immediately returns a response and sets the stream\n-- status to 'UPDATING'. After the operation is completed, Amazon Kinesis sets the\n-- stream status to 'ACTIVE'. Read and write operations continue to work while the\n-- stream is in the 'UPDATING' state.\n--\n-- You can use 'DescribeStream' to check the status of the stream, which is\n-- returned in 'StreamStatus'. If the stream is in the 'ACTIVE' state, you can call 'SplitShard'. If a stream is in 'CREATING' or 'UPDATING' or 'DELETING' states, 'DescribeStream'\n-- returns a 'ResourceInUseException'.\n--\n-- If the specified stream does not exist, 'DescribeStream' returns a 'ResourceNotFoundException'. If you try to create more shards than are authorized for your account, you\n-- receive a 'LimitExceededException'.\n--\n-- The default limit for an AWS account is 10 shards per stream. If you need to\n-- create a stream with more than 10 shards, \u003chttp://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html contact AWS Support\u003e to increase the\n-- limit on your account.\n--\n-- If you try to operate on too many streams in parallel using 'CreateStream', 'DeleteStream', 'MergeShards' or 'SplitShard', you receive a 'LimitExceededException'.\n--\n-- 'SplitShard' has limit of 5 transactions per second per account.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 21,
                "ctor": "splitShard",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ssStreamName",
                        "name": "_ssStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream for the shard split.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ssShardToSplit",
                        "name": "_ssShardToSplit",
                        "shape": "ShardId",
                        "locationName": "ShardToSplit",
                        "documentation": "-- | The shard ID of the shard to split.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ssNewStartingHashKey",
                        "name": "_ssNewStartingHashKey",
                        "shape": "HashKey",
                        "locationName": "NewStartingHashKey",
                        "documentation": "-- | A hash key value for the starting hash key of one of the child shards created\n-- by the split. The hash key range for a given shard constitutes a set of\n-- ordered contiguous positive integers. The value for 'NewStartingHashKey' must\n-- be in the range of hash keys being mapped into the shard. The 'NewStartingHashKey' hash key value and all higher hash key values in hash key range are\n-- distributed to one of the child shards. All the lower hash key values in the\n-- range are distributed to the other child shard.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ssStreamName",
                        "name": "_ssStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream for the shard split.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ssShardToSplit",
                        "name": "_ssShardToSplit",
                        "shape": "ShardId",
                        "locationName": "ShardToSplit",
                        "documentation": "-- | The shard ID of the shard to split.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ssNewStartingHashKey",
                        "name": "_ssNewStartingHashKey",
                        "shape": "HashKey",
                        "locationName": "NewStartingHashKey",
                        "documentation": "-- | A hash key value for the starting hash key of one of the child shards created\n-- by the split. The hash key range for a given shard constitutes a set of\n-- ordered contiguous positive integers. The value for 'NewStartingHashKey' must\n-- be in the range of hash keys being mapped into the shard. The 'NewStartingHashKey' hash key value and all higher hash key values in hash key range are\n-- distributed to one of the child shards. All the lower hash key values in the\n-- range are distributed to the other child shard.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 19,
                "queryPad": 0,
                "name": "SplitShard",
                "query": [],
                "locationPad": 19,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ssNewStartingHashKey",
                        "name": "_ssNewStartingHashKey",
                        "shape": "HashKey",
                        "locationName": "NewStartingHashKey",
                        "documentation": "-- | A hash key value for the starting hash key of one of the child shards created\n-- by the split. The hash key range for a given shard constitutes a set of\n-- ordered contiguous positive integers. The value for 'NewStartingHashKey' must\n-- be in the range of hash keys being mapped into the shard. The 'NewStartingHashKey' hash key value and all higher hash key values in hash key range are\n-- distributed to one of the child shards. All the lower hash key values in the\n-- range are distributed to the other child shard.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ssShardToSplit",
                        "name": "_ssShardToSplit",
                        "shape": "ShardId",
                        "locationName": "ShardToSplit",
                        "documentation": "-- | The shard ID of the shard to split.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "json",
                        "flattened": false,
                        "required": true,
                        "lens": "ssStreamName",
                        "name": "_ssStreamName",
                        "shape": "StreamName",
                        "locationName": "StreamName",
                        "documentation": "-- | The name of the stream for the shard split.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        }
    ]
}