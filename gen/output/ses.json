{
    "waiters": {
        "waiters": {
            "IdentityExists": {
                "operation": "GetIdentityVerificationAttributes",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "givarVerificationAttributes . traverse . ivaVerificationStatus",
                        "expected": "Success"
                    }
                ],
                "maxAttempts": 20,
                "delay": 3
            }
        },
        "namespace": "Network.AWS.SES.Waiters",
        "imports": [
            "Network.AWS.SES.GetIdentityVerificationAttributes",
            "Network.AWS.SES.Types"
        ]
    },
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "SES",
        "error": "RESTError",
        "url": "http://docs.aws.amazon.com/ses/latest/APIReference/Welcome.html",
        "namespace": "Network.AWS.SES",
        "protocol": "query",
        "imports": [
            "Network.AWS.SES.DeleteIdentity",
            "Network.AWS.SES.DeleteVerifiedEmailAddress",
            "Network.AWS.SES.GetIdentityDkimAttributes",
            "Network.AWS.SES.GetIdentityNotificationAttributes",
            "Network.AWS.SES.GetIdentityVerificationAttributes",
            "Network.AWS.SES.GetSendQuota",
            "Network.AWS.SES.GetSendStatistics",
            "Network.AWS.SES.ListIdentities",
            "Network.AWS.SES.ListVerifiedEmailAddresses",
            "Network.AWS.SES.SendEmail",
            "Network.AWS.SES.SendRawEmail",
            "Network.AWS.SES.SetIdentityDkimEnabled",
            "Network.AWS.SES.SetIdentityFeedbackForwardingEnabled",
            "Network.AWS.SES.SetIdentityNotificationTopic",
            "Network.AWS.SES.Types",
            "Network.AWS.SES.VerifyDomainDkim",
            "Network.AWS.SES.VerifyDomainIdentity",
            "Network.AWS.SES.VerifyEmailAddress",
            "Network.AWS.SES.VerifyEmailIdentity",
            "Network.AWS.SES.Waiters"
        ],
        "name": "Amazon Simple Email Service",
        "version": "2010-12-01",
        "documentation": "-- | Amazon Simple Email Service (Amazon SES) is a cost-effective outbound-only\n-- email-sending service built on the reliable and scalable infrastructure that\n-- Amazon.com has developed to serve its own customer base. With Amazon SES, you\n-- can send transactional email, marketing messages, or any other type of\n-- high-quality content and you only pay for what you use. Along with high\n-- deliverability, Amazon SES provides easy, real-time access to your sending\n-- statistics and built-in notifications for bounces, complaints, and deliveries\n-- to help you fine-tune your email-sending strategy.",
        "xmlNamespace": "http://ses.amazonaws.com/doc/2010-12-01/",
        "jsonVersion": null,
        "retryDelay": {
            "base": 5.0e-2,
            "attempts": 5,
            "growth": 2
        },
        "endpointPrefix": "email",
        "retryPolicies": {
            "throttling": {
                "error": "Throttling",
                "code": 400
            },
            "service_unavailable": {
                "error": null,
                "code": 503
            },
            "general_server_error": {
                "error": null,
                "code": 500
            },
            "limit_exceeded": {
                "error": null,
                "code": 509
            }
        },
        "targetPrefix": null
    },
    "cabal": {
        "other": [],
        "library": "amazonka-ses",
        "abbrev": "SES",
        "exposed": [
            "Network.AWS.SES",
            "Network.AWS.SES.DeleteIdentity",
            "Network.AWS.SES.DeleteVerifiedEmailAddress",
            "Network.AWS.SES.GetIdentityDkimAttributes",
            "Network.AWS.SES.GetIdentityNotificationAttributes",
            "Network.AWS.SES.GetIdentityVerificationAttributes",
            "Network.AWS.SES.GetSendQuota",
            "Network.AWS.SES.GetSendStatistics",
            "Network.AWS.SES.ListIdentities",
            "Network.AWS.SES.ListVerifiedEmailAddresses",
            "Network.AWS.SES.SendEmail",
            "Network.AWS.SES.SendRawEmail",
            "Network.AWS.SES.SetIdentityDkimEnabled",
            "Network.AWS.SES.SetIdentityFeedbackForwardingEnabled",
            "Network.AWS.SES.SetIdentityNotificationTopic",
            "Network.AWS.SES.Types",
            "Network.AWS.SES.VerifyDomainDkim",
            "Network.AWS.SES.VerifyDomainIdentity",
            "Network.AWS.SES.VerifyEmailAddress",
            "Network.AWS.SES.VerifyEmailIdentity",
            "Network.AWS.SES.Waiters"
        ],
        "url": "http://docs.aws.amazon.com/ses/latest/APIReference/Welcome.html",
        "protocol": "query",
        "name": "Amazon Simple Email Service",
        "version": "0.2.1",
        "description": "Amazon Simple Email Service (Amazon SES) is a cost-effective outbound-only\nemail-sending service built on the reliable and scalable infrastructure that\nAmazon.com has developed to serve its own customer base. With Amazon SES, you\ncan send transactional email, marketing messages, or any other type of\nhigh-quality content and you only pay for what you use. Along with high\ndeliverability, Amazon SES provides easy, real-time access to your sending\nstatistics and built-in notifications for bounces, complaints, and deliveries\nto help you fine-tune your email-sending strategy."
    },
    "types": {
        "namespace": "Network.AWS.SES.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 14,
                "ctor": "destination",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Destination",
                "locationPad": 13,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dToAddresses",
                        "name": "_dToAddresses",
                        "shape": "AddressList",
                        "locationName": "ToAddresses",
                        "documentation": "-- | The To: field(s) of the message.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dCcAddresses",
                        "name": "_dCcAddresses",
                        "shape": "AddressList",
                        "locationName": "CcAddresses",
                        "documentation": "-- | The CC: field(s) of the message.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dBccAddresses",
                        "name": "_dBccAddresses",
                        "shape": "AddressList",
                        "locationName": "BccAddresses",
                        "documentation": "-- | The BCC: field(s) of the message.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dBccAddresses",
                        "name": "_dBccAddresses",
                        "shape": "AddressList",
                        "locationName": "BccAddresses",
                        "documentation": "-- | The BCC: field(s) of the message.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dCcAddresses",
                        "name": "_dCcAddresses",
                        "shape": "AddressList",
                        "locationName": "CcAddresses",
                        "documentation": "-- | The CC: field(s) of the message.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dToAddresses",
                        "name": "_dToAddresses",
                        "shape": "AddressList",
                        "locationName": "ToAddresses",
                        "documentation": "-- | The To: field(s) of the message.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 26,
                "ctor": "identityDkimAttributes",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "idaDkimEnabled",
                        "name": "_idaDkimEnabled",
                        "shape": "Enabled",
                        "locationName": "DkimEnabled",
                        "documentation": "-- | True if DKIM signing is enabled for email sent from the identity; false\n-- otherwise.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "idaDkimVerificationStatus",
                        "name": "_idaDkimVerificationStatus",
                        "shape": "VerificationStatus",
                        "locationName": "DkimVerificationStatus",
                        "documentation": "-- | Describes whether Amazon SES has successfully verified the DKIM DNS records\n-- (tokens) published in the domain name's DNS. (This only applies to domain\n-- identities, not email address identities.)",
                        "typeExposed": "VerificationStatus",
                        "type": "VerificationStatus"
                    }
                ],
                "contentPad": 0,
                "name": "IdentityDkimAttributes",
                "locationPad": 23,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "idaDkimTokens",
                        "name": "_idaDkimTokens",
                        "shape": "VerificationTokenList",
                        "locationName": "DkimTokens",
                        "documentation": "-- | A set of character strings that represent the domain's identity. Using these\n-- tokens, you will need to create DNS CNAME records that point to DKIM public\n-- keys hosted by Amazon SES. Amazon Web Services will eventually detect that\n-- you have updated your DNS records; this detection process may take up to 72\n-- hours. Upon successful detection, Amazon SES will be able to DKIM-sign email\n-- originating from that domain. (This only applies to domain identities, not\n-- email address identities.)\n--\n-- For more information about creating DNS records using DKIM tokens, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html Amazon SES Developer Guide\u003e.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "idaDkimEnabled",
                        "name": "_idaDkimEnabled",
                        "shape": "Enabled",
                        "locationName": "DkimEnabled",
                        "documentation": "-- | True if DKIM signing is enabled for email sent from the identity; false\n-- otherwise.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "idaDkimTokens",
                        "name": "_idaDkimTokens",
                        "shape": "VerificationTokenList",
                        "locationName": "DkimTokens",
                        "documentation": "-- | A set of character strings that represent the domain's identity. Using these\n-- tokens, you will need to create DNS CNAME records that point to DKIM public\n-- keys hosted by Amazon SES. Amazon Web Services will eventually detect that\n-- you have updated your DNS records; this detection process may take up to 72\n-- hours. Upon successful detection, Amazon SES will be able to DKIM-sign email\n-- originating from that domain. (This only applies to domain identities, not\n-- email address identities.)\n--\n-- For more information about creating DNS records using DKIM tokens, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html Amazon SES Developer Guide\u003e.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "idaDkimVerificationStatus",
                        "name": "_idaDkimVerificationStatus",
                        "shape": "VerificationStatus",
                        "locationName": "DkimVerificationStatus",
                        "documentation": "-- | Describes whether Amazon SES has successfully verified the DKIM DNS records\n-- (tokens) published in the domain name's DNS. (This only applies to domain\n-- identities, not email address identities.)",
                        "typeExposed": "VerificationStatus",
                        "type": "VerificationStatus"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 6,
                "ctor": "body",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Body",
                "locationPad": 5,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "bText",
                        "name": "_bText",
                        "shape": "Content",
                        "locationName": "Text",
                        "documentation": "-- | The content of the message, in text format. Use this for text-based email\n-- clients, or clients on high-latency networks (such as mobile devices).",
                        "typeExposed": "Maybe Content",
                        "type": "Maybe Content"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "bHtml",
                        "name": "_bHtml",
                        "shape": "Content",
                        "locationName": "Html",
                        "documentation": "-- | The content of the message, in HTML format. Use this for email clients that\n-- can process HTML. You can include clickable links, formatted text, and much\n-- more in an HTML message.",
                        "typeExposed": "Maybe Content",
                        "type": "Maybe Content"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "bHtml",
                        "name": "_bHtml",
                        "shape": "Content",
                        "locationName": "Html",
                        "documentation": "-- | The content of the message, in HTML format. Use this for email clients that\n-- can process HTML. You can include clickable links, formatted text, and much\n-- more in an HTML message.",
                        "typeExposed": "Maybe Content",
                        "type": "Maybe Content"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "bText",
                        "name": "_bText",
                        "shape": "Content",
                        "locationName": "Text",
                        "documentation": "-- | The content of the message, in text format. Use this for text-based email\n-- clients, or clients on high-latency networks (such as mobile devices).",
                        "typeExposed": "Maybe Content",
                        "type": "Maybe Content"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 22,
                "ctor": "identityVerificationAttributes",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ivaVerificationStatus",
                        "name": "_ivaVerificationStatus",
                        "shape": "VerificationStatus",
                        "locationName": "VerificationStatus",
                        "documentation": "-- | The verification status of the identity: \"Pending\", \"Success\", \"Failed\", or\n-- \"TemporaryFailure\".",
                        "typeExposed": "VerificationStatus",
                        "type": "VerificationStatus"
                    }
                ],
                "contentPad": 0,
                "name": "IdentityVerificationAttributes",
                "locationPad": 19,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ivaVerificationToken",
                        "name": "_ivaVerificationToken",
                        "shape": "VerificationToken",
                        "locationName": "VerificationToken",
                        "documentation": "-- | The verification token for a domain identity. Null for email address\n-- identities.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ivaVerificationStatus",
                        "name": "_ivaVerificationStatus",
                        "shape": "VerificationStatus",
                        "locationName": "VerificationStatus",
                        "documentation": "-- | The verification status of the identity: \"Pending\", \"Success\", \"Failed\", or\n-- \"TemporaryFailure\".",
                        "typeExposed": "VerificationStatus",
                        "type": "VerificationStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "ivaVerificationToken",
                        "name": "_ivaVerificationToken",
                        "shape": "VerificationToken",
                        "locationName": "VerificationToken",
                        "documentation": "-- | The verification token for a domain identity. Null for email address\n-- identities.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 20,
                "ctor": "sendDataPoint",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "SendDataPoint",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sdpTimestamp",
                        "name": "_sdpTimestamp",
                        "shape": "Timestamp",
                        "locationName": "Timestamp",
                        "documentation": "-- | Time of the data point.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sdpDeliveryAttempts",
                        "name": "_sdpDeliveryAttempts",
                        "shape": "Counter",
                        "locationName": "DeliveryAttempts",
                        "documentation": "-- | Number of emails that have been enqueued for sending.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sdpBounces",
                        "name": "_sdpBounces",
                        "shape": "Counter",
                        "locationName": "Bounces",
                        "documentation": "-- | Number of emails that have bounced.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sdpComplaints",
                        "name": "_sdpComplaints",
                        "shape": "Counter",
                        "locationName": "Complaints",
                        "documentation": "-- | Number of unwanted emails that were rejected by recipients.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sdpRejects",
                        "name": "_sdpRejects",
                        "shape": "Counter",
                        "locationName": "Rejects",
                        "documentation": "-- | Number of emails rejected by Amazon SES.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sdpBounces",
                        "name": "_sdpBounces",
                        "shape": "Counter",
                        "locationName": "Bounces",
                        "documentation": "-- | Number of emails that have bounced.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sdpComplaints",
                        "name": "_sdpComplaints",
                        "shape": "Counter",
                        "locationName": "Complaints",
                        "documentation": "-- | Number of unwanted emails that were rejected by recipients.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sdpDeliveryAttempts",
                        "name": "_sdpDeliveryAttempts",
                        "shape": "Counter",
                        "locationName": "DeliveryAttempts",
                        "documentation": "-- | Number of emails that have been enqueued for sending.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sdpRejects",
                        "name": "_sdpRejects",
                        "shape": "Counter",
                        "locationName": "Rejects",
                        "documentation": "-- | Number of emails rejected by Amazon SES.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sdpTimestamp",
                        "name": "_sdpTimestamp",
                        "shape": "Timestamp",
                        "locationName": "Timestamp",
                        "documentation": "-- | Time of the data point.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "ITEmailAddress": "EmailAddress",
                    "ITDomain": "Domain"
                },
                "valuePad": 13,
                "name": "IdentityType",
                "type": "nullary",
                "branchPad": 14
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 9,
                "ctor": "content",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cData",
                        "name": "_cData",
                        "shape": "MessageData",
                        "locationName": "Data",
                        "documentation": "-- | The textual data of the content.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "Content",
                "locationPad": 8,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cCharset",
                        "name": "_cCharset",
                        "shape": "Charset",
                        "locationName": "Charset",
                        "documentation": "-- | The character set of the content.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "cCharset",
                        "name": "_cCharset",
                        "shape": "Charset",
                        "locationName": "Charset",
                        "documentation": "-- | The character set of the content.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "cData",
                        "name": "_cData",
                        "shape": "MessageData",
                        "locationName": "Data",
                        "documentation": "-- | The textual data of the content.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "identityNotificationAttributes",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "inaBounceTopic",
                        "name": "_inaBounceTopic",
                        "shape": "NotificationTopic",
                        "locationName": "BounceTopic",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will\n-- publish bounce notifications.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "inaComplaintTopic",
                        "name": "_inaComplaintTopic",
                        "shape": "NotificationTopic",
                        "locationName": "ComplaintTopic",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will\n-- publish complaint notifications.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "inaDeliveryTopic",
                        "name": "_inaDeliveryTopic",
                        "shape": "NotificationTopic",
                        "locationName": "DeliveryTopic",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will\n-- publish delivery notifications.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "inaForwardingEnabled",
                        "name": "_inaForwardingEnabled",
                        "shape": "Enabled",
                        "locationName": "ForwardingEnabled",
                        "documentation": "-- | Describes whether Amazon SES will forward bounce and complaint notifications\n-- as email. 'true' indicates that Amazon SES will forward bounce and complaint\n-- notifications as email, while 'false' indicates that bounce and complaint\n-- notifications will be published only to the specified bounce and complaint\n-- Amazon SNS topics.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "contentPad": 0,
                "name": "IdentityNotificationAttributes",
                "locationPad": 18,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "inaBounceTopic",
                        "name": "_inaBounceTopic",
                        "shape": "NotificationTopic",
                        "locationName": "BounceTopic",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will\n-- publish bounce notifications.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "inaComplaintTopic",
                        "name": "_inaComplaintTopic",
                        "shape": "NotificationTopic",
                        "locationName": "ComplaintTopic",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will\n-- publish complaint notifications.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "inaDeliveryTopic",
                        "name": "_inaDeliveryTopic",
                        "shape": "NotificationTopic",
                        "locationName": "DeliveryTopic",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will\n-- publish delivery notifications.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "inaForwardingEnabled",
                        "name": "_inaForwardingEnabled",
                        "shape": "Enabled",
                        "locationName": "ForwardingEnabled",
                        "documentation": "-- | Describes whether Amazon SES will forward bounce and complaint notifications\n-- as email. 'true' indicates that Amazon SES will forward bounce and complaint\n-- notifications as email, while 'false' indicates that bounce and complaint\n-- notifications will be published only to the specified bounce and complaint\n-- Amazon SNS topics.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "rawMessage",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "rmData",
                    "name": "_rmData",
                    "shape": "RawMessageData",
                    "locationName": "Data",
                    "documentation": "-- | The raw data of the message. The client must ensure that the message format\n-- complies with Internet email standards regarding email header fields, MIME\n-- types, MIME encoding, and base64 encoding (if necessary).\n--\n-- The To:, CC:, and BCC: headers in the raw message can contain a group list.\n--\n-- For more information, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html Amazon SES Developer Guide\u003e.",
                    "typeExposed": "Base64",
                    "type": "Base64"
                },
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rmData",
                        "name": "_rmData",
                        "shape": "RawMessageData",
                        "locationName": "Data",
                        "documentation": "-- | The raw data of the message. The client must ensure that the message format\n-- complies with Internet email standards regarding email header fields, MIME\n-- types, MIME encoding, and base64 encoding (if necessary).\n--\n-- The To:, CC:, and BCC: headers in the raw message can contain a group list.\n--\n-- For more information, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html Amazon SES Developer Guide\u003e.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    }
                ],
                "contentPad": 0,
                "name": "RawMessage",
                "locationPad": 0,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "rmData",
                        "name": "_rmData",
                        "shape": "RawMessageData",
                        "locationName": "Data",
                        "documentation": "-- | The raw data of the message. The client must ensure that the message format\n-- complies with Internet email standards regarding email header fields, MIME\n-- types, MIME encoding, and base64 encoding (if necessary).\n--\n-- The To:, CC:, and BCC: headers in the raw message can contain a group list.\n--\n-- For more information, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html Amazon SES Developer Guide\u003e.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Delivery": "Delivery",
                    "Bounce": "Bounce",
                    "Complaint": "Complaint"
                },
                "valuePad": 10,
                "name": "NotificationType",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "NotStarted": "NotStarted",
                    "Pending": "Pending",
                    "Success": "Success",
                    "TemporaryFailure": "TemporaryFailure",
                    "Failed": "Failed"
                },
                "valuePad": 17,
                "name": "VerificationStatus",
                "type": "nullary",
                "branchPad": 16
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 9,
                "ctor": "message",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mSubject",
                        "name": "_mSubject",
                        "shape": "Content",
                        "locationName": "Subject",
                        "documentation": "-- | The subject of the message: A short summary of the content, which will appear\n-- in the recipient's inbox.",
                        "typeExposed": "Content",
                        "type": "Content"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mBody",
                        "name": "_mBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": "-- | The message body.",
                        "typeExposed": "Body",
                        "type": "Body"
                    }
                ],
                "contentPad": 0,
                "name": "Message",
                "locationPad": 8,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mBody",
                        "name": "_mBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": "-- | The message body.",
                        "typeExposed": "Body",
                        "type": "Body"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "mSubject",
                        "name": "_mSubject",
                        "shape": "Content",
                        "locationName": "Subject",
                        "documentation": "-- | The subject of the message: A short summary of the content, which will appear\n-- in the recipient's inbox.",
                        "typeExposed": "Content",
                        "type": "Content"
                    }
                ]
            }
        ],
        "imports": [],
        "shared": []
    },
    "operations": [
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteIdentityResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteIdentityResponse",
                "resultWrapper": "DeleteIdentityResult",
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_DeleteIdentity.html",
            "namespace": "Network.AWS.SES.DeleteIdentity",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "DeleteIdentity",
            "method": "post",
            "documentation": "-- | Deletes the specified identity (email address or domain) from the list of\n-- verified identities.\n--\n-- This action is throttled at one request per second.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteIdentity",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "diIdentity",
                    "name": "_diIdentity",
                    "shape": "Identity",
                    "locationName": "Identity",
                    "documentation": "-- | The identity to be removed from the list of identities for the AWS Account.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "diIdentity",
                        "name": "_diIdentity",
                        "shape": "Identity",
                        "locationName": "Identity",
                        "documentation": "-- | The identity to be removed from the list of identities for the AWS Account.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "DeleteIdentity",
                "query": [
                    {
                        "field": "_diIdentity",
                        "locationName": "Identity",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "diIdentity",
                        "name": "_diIdentity",
                        "shape": "Identity",
                        "locationName": "Identity",
                        "documentation": "-- | The identity to be removed from the list of identities for the AWS Account.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteVerifiedEmailAddressResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteVerifiedEmailAddressResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_DeleteVerifiedEmailAddress.html",
            "namespace": "Network.AWS.SES.DeleteVerifiedEmailAddress",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "DeleteVerifiedEmailAddress",
            "method": "post",
            "documentation": "-- | Deletes the specified email address from the list of verified addresses.\n--\n-- The DeleteVerifiedEmailAddress action is deprecated as of the May 15, 2012\n-- release of Domain Verification. The DeleteIdentity action is now preferred. This action is throttled at one request per second.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteVerifiedEmailAddress",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "dveaEmailAddress",
                    "name": "_dveaEmailAddress",
                    "shape": "Address",
                    "locationName": "EmailAddress",
                    "documentation": "-- | An email address to be removed from the list of verified addresses.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dveaEmailAddress",
                        "name": "_dveaEmailAddress",
                        "shape": "Address",
                        "locationName": "EmailAddress",
                        "documentation": "-- | An email address to be removed from the list of verified addresses.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DeleteVerifiedEmailAddress",
                "query": [
                    {
                        "field": "_dveaEmailAddress",
                        "locationName": "EmailAddress",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "dveaEmailAddress",
                        "name": "_dveaEmailAddress",
                        "shape": "Address",
                        "locationName": "EmailAddress",
                        "documentation": "-- | An email address to be removed from the list of verified addresses.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getIdentityDkimAttributesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_EMap",
                    "lensMapping": "_EMap",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "gidarDkimAttributes",
                    "name": "_gidarDkimAttributes",
                    "shape": "DkimAttributes",
                    "locationName": "DkimAttributes",
                    "documentation": "-- | The DKIM attributes for an email address or a domain.",
                    "typeExposed": "HashMap Text IdentityDkimAttributes",
                    "type": "EMap \"entry\" \"key\" \"value\" Text IdentityDkimAttributes"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetIdentityDkimAttributesResponse",
                "resultWrapper": "GetIdentityDkimAttributesResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gidarDkimAttributes",
                        "name": "_gidarDkimAttributes",
                        "shape": "DkimAttributes",
                        "locationName": "DkimAttributes",
                        "documentation": "-- | The DKIM attributes for an email address or a domain.",
                        "typeExposed": "HashMap Text IdentityDkimAttributes",
                        "type": "EMap \"entry\" \"key\" \"value\" Text IdentityDkimAttributes"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gidarDkimAttributes",
                        "name": "_gidarDkimAttributes",
                        "shape": "DkimAttributes",
                        "locationName": "DkimAttributes",
                        "documentation": "-- | The DKIM attributes for an email address or a domain.",
                        "typeExposed": "HashMap Text IdentityDkimAttributes",
                        "type": "EMap \"entry\" \"key\" \"value\" Text IdentityDkimAttributes"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_GetIdentityDkimAttributes.html",
            "namespace": "Network.AWS.SES.GetIdentityDkimAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "GetIdentityDkimAttributes",
            "method": "post",
            "documentation": "-- | Returns the current status of Easy DKIM signing for an entity. For domain\n-- name identities, this action also returns the DKIM tokens that are required\n-- for Easy DKIM signing, and whether Amazon SES has successfully verified that\n-- these tokens have been published.\n--\n-- This action takes a list of identities as input and returns the following\n-- information for each:\n--\n-- Whether Easy DKIM signing is enabled or disabled. A set of DKIM tokens that\n-- represent the identity. If the identity is an email address, the tokens\n-- represent the domain of that address. Whether Amazon SES has successfully\n-- verified the DKIM tokens published in the domain's DNS. This information is\n-- only returned for domain name identities, not for email addresses.  This\n-- action is throttled at one request per second.\n--\n-- For more information about creating DNS records using DKIM tokens, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html Amazon SES Developer Guide\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "Text",
                "style": "query",
                "fieldPad": 0,
                "ctor": "getIdentityDkimAttributes",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "gidaIdentities",
                    "name": "_gidaIdentities",
                    "shape": "IdentityList",
                    "locationName": "Identities",
                    "documentation": "-- | A list of one or more verified identities - email addresses, domains, or both.",
                    "typeExposed": "[Text]",
                    "type": "List \"member\" Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "GetIdentityDkimAttributes",
                "query": [
                    {
                        "field": "_gidaIdentities",
                        "locationName": "Identities",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gidaIdentities",
                        "name": "_gidaIdentities",
                        "shape": "IdentityList",
                        "locationName": "Identities",
                        "documentation": "-- | A list of one or more verified identities - email addresses, domains, or both.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gidaIdentities",
                        "name": "_gidaIdentities",
                        "shape": "IdentityList",
                        "locationName": "Identities",
                        "documentation": "-- | A list of one or more verified identities - email addresses, domains, or both.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getIdentityNotificationAttributesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_EMap",
                    "lensMapping": "_EMap",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "ginarNotificationAttributes",
                    "name": "_ginarNotificationAttributes",
                    "shape": "NotificationAttributes",
                    "locationName": "NotificationAttributes",
                    "documentation": "-- | A map of Identity to IdentityNotificationAttributes.",
                    "typeExposed": "HashMap Text IdentityNotificationAttributes",
                    "type": "EMap \"entry\" \"key\" \"value\" Text IdentityNotificationAttributes"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetIdentityNotificationAttributesResponse",
                "resultWrapper": "GetIdentityNotificationAttributesResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ginarNotificationAttributes",
                        "name": "_ginarNotificationAttributes",
                        "shape": "NotificationAttributes",
                        "locationName": "NotificationAttributes",
                        "documentation": "-- | A map of Identity to IdentityNotificationAttributes.",
                        "typeExposed": "HashMap Text IdentityNotificationAttributes",
                        "type": "EMap \"entry\" \"key\" \"value\" Text IdentityNotificationAttributes"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ginarNotificationAttributes",
                        "name": "_ginarNotificationAttributes",
                        "shape": "NotificationAttributes",
                        "locationName": "NotificationAttributes",
                        "documentation": "-- | A map of Identity to IdentityNotificationAttributes.",
                        "typeExposed": "HashMap Text IdentityNotificationAttributes",
                        "type": "EMap \"entry\" \"key\" \"value\" Text IdentityNotificationAttributes"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_GetIdentityNotificationAttributes.html",
            "namespace": "Network.AWS.SES.GetIdentityNotificationAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "GetIdentityNotificationAttributes",
            "method": "post",
            "documentation": "-- | Given a list of verified identities (email addresses and/or domains), returns\n-- a structure describing identity notification attributes.\n--\n-- This action is throttled at one request per second.\n--\n-- For more information about using notifications with Amazon SES, see the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html Amazon SES Developer Guide\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "Text",
                "style": "query",
                "fieldPad": 0,
                "ctor": "getIdentityNotificationAttributes",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "ginaIdentities",
                    "name": "_ginaIdentities",
                    "shape": "IdentityList",
                    "locationName": "Identities",
                    "documentation": "-- | A list of one or more identities.",
                    "typeExposed": "[Text]",
                    "type": "List \"member\" Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "GetIdentityNotificationAttributes",
                "query": [
                    {
                        "field": "_ginaIdentities",
                        "locationName": "Identities",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ginaIdentities",
                        "name": "_ginaIdentities",
                        "shape": "IdentityList",
                        "locationName": "Identities",
                        "documentation": "-- | A list of one or more identities.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "ginaIdentities",
                        "name": "_ginaIdentities",
                        "shape": "IdentityList",
                        "locationName": "Identities",
                        "documentation": "-- | A list of one or more identities.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getIdentityVerificationAttributesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_EMap",
                    "lensMapping": "_EMap",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "givarVerificationAttributes",
                    "name": "_givarVerificationAttributes",
                    "shape": "VerificationAttributes",
                    "locationName": "VerificationAttributes",
                    "documentation": "-- | A map of Identities to IdentityVerificationAttributes objects.",
                    "typeExposed": "HashMap Text IdentityVerificationAttributes",
                    "type": "EMap \"entry\" \"key\" \"value\" Text IdentityVerificationAttributes"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetIdentityVerificationAttributesResponse",
                "resultWrapper": "GetIdentityVerificationAttributesResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "givarVerificationAttributes",
                        "name": "_givarVerificationAttributes",
                        "shape": "VerificationAttributes",
                        "locationName": "VerificationAttributes",
                        "documentation": "-- | A map of Identities to IdentityVerificationAttributes objects.",
                        "typeExposed": "HashMap Text IdentityVerificationAttributes",
                        "type": "EMap \"entry\" \"key\" \"value\" Text IdentityVerificationAttributes"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_EMap",
                        "lensMapping": "_EMap",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "givarVerificationAttributes",
                        "name": "_givarVerificationAttributes",
                        "shape": "VerificationAttributes",
                        "locationName": "VerificationAttributes",
                        "documentation": "-- | A map of Identities to IdentityVerificationAttributes objects.",
                        "typeExposed": "HashMap Text IdentityVerificationAttributes",
                        "type": "EMap \"entry\" \"key\" \"value\" Text IdentityVerificationAttributes"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_GetIdentityVerificationAttributes.html",
            "namespace": "Network.AWS.SES.GetIdentityVerificationAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "GetIdentityVerificationAttributes",
            "method": "post",
            "documentation": "-- | Given a list of identities (email addresses and/or domains), returns the\n-- verification status and (for domain identities) the verification token for\n-- each identity.\n--\n-- This action is throttled at one request per second.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "Text",
                "style": "query",
                "fieldPad": 0,
                "ctor": "getIdentityVerificationAttributes",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "givaIdentities",
                    "name": "_givaIdentities",
                    "shape": "IdentityList",
                    "locationName": "Identities",
                    "documentation": "-- | A list of identities.",
                    "typeExposed": "[Text]",
                    "type": "List \"member\" Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "GetIdentityVerificationAttributes",
                "query": [
                    {
                        "field": "_givaIdentities",
                        "locationName": "Identities",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "givaIdentities",
                        "name": "_givaIdentities",
                        "shape": "IdentityList",
                        "locationName": "Identities",
                        "documentation": "-- | A list of identities.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "givaIdentities",
                        "name": "_givaIdentities",
                        "shape": "IdentityList",
                        "locationName": "Identities",
                        "documentation": "-- | A list of identities.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 20,
                "ctor": "getSendQuotaResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetSendQuotaResponse",
                "resultWrapper": "GetSendQuotaResult",
                "locationPad": 16,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gsqrMax24HourSend",
                        "name": "_gsqrMax24HourSend",
                        "shape": "Max24HourSend",
                        "locationName": "Max24HourSend",
                        "documentation": "-- | The maximum number of emails the user is allowed to send in a 24-hour\n-- interval.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gsqrMaxSendRate",
                        "name": "_gsqrMaxSendRate",
                        "shape": "MaxSendRate",
                        "locationName": "MaxSendRate",
                        "documentation": "-- | The maximum number of emails the user is allowed to send per second.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gsqrSentLast24Hours",
                        "name": "_gsqrSentLast24Hours",
                        "shape": "SentLast24Hours",
                        "locationName": "SentLast24Hours",
                        "documentation": "-- | The number of emails sent during the previous 24 hours.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gsqrMax24HourSend",
                        "name": "_gsqrMax24HourSend",
                        "shape": "Max24HourSend",
                        "locationName": "Max24HourSend",
                        "documentation": "-- | The maximum number of emails the user is allowed to send in a 24-hour\n-- interval.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gsqrMaxSendRate",
                        "name": "_gsqrMaxSendRate",
                        "shape": "MaxSendRate",
                        "locationName": "MaxSendRate",
                        "documentation": "-- | The maximum number of emails the user is allowed to send per second.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "gsqrSentLast24Hours",
                        "name": "_gsqrSentLast24Hours",
                        "shape": "SentLast24Hours",
                        "locationName": "SentLast24Hours",
                        "documentation": "-- | The number of emails sent during the previous 24 hours.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_GetSendQuota.html",
            "namespace": "Network.AWS.SES.GetSendQuota",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "GetSendQuota",
            "method": "post",
            "documentation": "-- | Returns the user's current sending limits.\n--\n-- This action is throttled at one request per second.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getSendQuota",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetSendQuota",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "SendDataPoint",
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getSendStatisticsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "gssrSendDataPoints",
                    "name": "_gssrSendDataPoints",
                    "shape": "SendDataPointList",
                    "locationName": "SendDataPoints",
                    "documentation": "-- | A list of data points, each of which represents 15 minutes of activity.",
                    "typeExposed": "[SendDataPoint]",
                    "type": "List \"member\" SendDataPoint"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetSendStatisticsResponse",
                "resultWrapper": "GetSendStatisticsResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gssrSendDataPoints",
                        "name": "_gssrSendDataPoints",
                        "shape": "SendDataPointList",
                        "locationName": "SendDataPoints",
                        "documentation": "-- | A list of data points, each of which represents 15 minutes of activity.",
                        "typeExposed": "[SendDataPoint]",
                        "type": "List \"member\" SendDataPoint"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "gssrSendDataPoints",
                        "name": "_gssrSendDataPoints",
                        "shape": "SendDataPointList",
                        "locationName": "SendDataPoints",
                        "documentation": "-- | A list of data points, each of which represents 15 minutes of activity.",
                        "typeExposed": "[SendDataPoint]",
                        "type": "List \"member\" SendDataPoint"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_GetSendStatistics.html",
            "namespace": "Network.AWS.SES.GetSendStatistics",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "GetSendStatistics",
            "method": "post",
            "documentation": "-- | Returns the user's sending statistics. The result is a list of data points,\n-- representing the last two weeks of sending activity.\n--\n-- Each data point in the list contains statistics for a 15-minute interval.\n--\n-- This action is throttled at one request per second.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getSendStatistics",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetSendStatistics",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 14,
                "ctor": "listIdentitiesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListIdentitiesResponse",
                "resultWrapper": "ListIdentitiesResult",
                "locationPad": 11,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lirIdentities",
                        "name": "_lirIdentities",
                        "shape": "IdentityList",
                        "locationName": "Identities",
                        "documentation": "-- | A list of identities.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lirNextToken",
                        "name": "_lirNextToken",
                        "shape": "NextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | The token used for pagination.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lirIdentities",
                        "name": "_lirIdentities",
                        "shape": "IdentityList",
                        "locationName": "Identities",
                        "documentation": "-- | A list of identities.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "lirNextToken",
                        "name": "_lirNextToken",
                        "shape": "NextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | The token used for pagination.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_ListIdentities.html",
            "namespace": "Network.AWS.SES.ListIdentities",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": {
                "token": {
                    "input": "liNextToken",
                    "outputRequired": false,
                    "output": "lirNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "lirIdentities"
            },
            "name": "ListIdentities",
            "method": "post",
            "documentation": "-- | Returns a list containing all of the identities (email addresses and domains)\n-- for a specific AWS Account, regardless of verification status.\n--\n-- This action is throttled at one request per second.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "listIdentities",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "ListIdentities",
                "query": [
                    {
                        "field": "_liIdentityType",
                        "locationName": "IdentityType",
                        "type": "field"
                    },
                    {
                        "field": "_liNextToken",
                        "locationName": "NextToken",
                        "type": "field"
                    },
                    {
                        "field": "_liMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "liIdentityType",
                        "name": "_liIdentityType",
                        "shape": "IdentityType",
                        "locationName": "IdentityType",
                        "documentation": "-- | The type of the identities to list. Possible values are \"EmailAddress\" and\n-- \"Domain\". If this parameter is omitted, then all identities will be listed.",
                        "typeExposed": "Maybe IdentityType",
                        "type": "Maybe IdentityType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "liNextToken",
                        "name": "_liNextToken",
                        "shape": "NextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | The token to use for pagination.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "liMaxItems",
                        "name": "_liMaxItems",
                        "shape": "MaxItems",
                        "locationName": "MaxItems",
                        "documentation": "-- | The maximum number of identities per page. Possible values are 1-100\n-- inclusive.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "liIdentityType",
                        "name": "_liIdentityType",
                        "shape": "IdentityType",
                        "locationName": "IdentityType",
                        "documentation": "-- | The type of the identities to list. Possible values are \"EmailAddress\" and\n-- \"Domain\". If this parameter is omitted, then all identities will be listed.",
                        "typeExposed": "Maybe IdentityType",
                        "type": "Maybe IdentityType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "liMaxItems",
                        "name": "_liMaxItems",
                        "shape": "MaxItems",
                        "locationName": "MaxItems",
                        "documentation": "-- | The maximum number of identities per page. Possible values are 1-100\n-- inclusive.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "liNextToken",
                        "name": "_liNextToken",
                        "shape": "NextToken",
                        "locationName": "NextToken",
                        "documentation": "-- | The token to use for pagination.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "Text",
                "style": "xml",
                "fieldPad": 0,
                "ctor": "listVerifiedEmailAddressesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "lvearVerifiedEmailAddresses",
                    "name": "_lvearVerifiedEmailAddresses",
                    "shape": "AddressList",
                    "locationName": "VerifiedEmailAddresses",
                    "documentation": "-- | A list of email addresses that have been verified.",
                    "typeExposed": "[Text]",
                    "type": "List \"member\" Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListVerifiedEmailAddressesResponse",
                "resultWrapper": "ListVerifiedEmailAddressesResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lvearVerifiedEmailAddresses",
                        "name": "_lvearVerifiedEmailAddresses",
                        "shape": "AddressList",
                        "locationName": "VerifiedEmailAddresses",
                        "documentation": "-- | A list of email addresses that have been verified.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "lvearVerifiedEmailAddresses",
                        "name": "_lvearVerifiedEmailAddresses",
                        "shape": "AddressList",
                        "locationName": "VerifiedEmailAddresses",
                        "documentation": "-- | A list of email addresses that have been verified.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_ListVerifiedEmailAddresses.html",
            "namespace": "Network.AWS.SES.ListVerifiedEmailAddresses",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "ListVerifiedEmailAddresses",
            "method": "post",
            "documentation": "-- | Returns a list containing all of the email addresses that have been verified.\n--\n-- The ListVerifiedEmailAddresses action is deprecated as of the May 15, 2012\n-- release of Domain Verification. The ListIdentities action is now preferred. This action is throttled at one request per second.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "listVerifiedEmailAddresses",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "ListVerifiedEmailAddresses",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "sendEmailResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "serMessageId",
                    "name": "_serMessageId",
                    "shape": "MessageId",
                    "locationName": "MessageId",
                    "documentation": "-- | The unique message identifier returned from the 'SendEmail' action.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "serMessageId",
                        "name": "_serMessageId",
                        "shape": "MessageId",
                        "locationName": "MessageId",
                        "documentation": "-- | The unique message identifier returned from the 'SendEmail' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "SendEmailResponse",
                "resultWrapper": "SendEmailResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "serMessageId",
                        "name": "_serMessageId",
                        "shape": "MessageId",
                        "locationName": "MessageId",
                        "documentation": "-- | The unique message identifier returned from the 'SendEmail' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_SendEmail.html",
            "namespace": "Network.AWS.SES.SendEmail",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "SendEmail",
            "method": "post",
            "documentation": "-- | Composes an email message based on input data, and then immediately queues\n-- the message for sending.\n--\n-- You can only send email from verified email addresses and domains. If you\n-- have not requested production access to Amazon SES, you must also verify\n-- every recipient email address except for the recipients provided by the\n-- Amazon SES mailbox simulator. For more information, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html Amazon SESDeveloper Guide\u003e.  The total size of the message cannot exceed 10 MB.\n--\n-- Amazon SES has a limit on the total number of recipients per message: The\n-- combined number of To:, CC: and BCC: email addresses cannot exceed 50. If you\n-- need to send an email message to a larger audience, you can divide your\n-- recipient list into groups of 50 or fewer, and then call Amazon SES\n-- repeatedly to send the message to each group.\n--\n-- For every message that you send, the total number of recipients (To:, CC:\n-- and BCC:) is counted against your /sending quota/ - the maximum number of\n-- emails you can send in a 24-hour period. For information about your sending\n-- quota, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html Amazon SES Developer Guide\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 19,
                "ctor": "sendEmail",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "seSource",
                        "name": "_seSource",
                        "shape": "Address",
                        "locationName": "Source",
                        "documentation": "-- | The identity's email address.\n--\n-- By default, the string must be 7-bit ASCII. If the text must contain any\n-- other characters, then you must use MIME encoded-word syntax (RFC 2047)\n-- instead of a literal string. MIME encoded-word syntax uses the following\n-- form: '=?charset?encoding?encoded-text?='. For more information, see \u003chttp://tools.ietf.org/html/rfc2047 RFC 2047\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "seDestination",
                        "name": "_seDestination",
                        "shape": "Destination",
                        "locationName": "Destination",
                        "documentation": "-- | The destination for this email, composed of To:, CC:, and BCC: fields.",
                        "typeExposed": "Destination",
                        "type": "Destination"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "seMessage",
                        "name": "_seMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | The message to be sent.",
                        "typeExposed": "Message",
                        "type": "Message"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "SendEmail",
                "query": [
                    {
                        "field": "_seSource",
                        "locationName": "Source",
                        "type": "field"
                    },
                    {
                        "field": "_seDestination",
                        "locationName": "Destination",
                        "type": "field"
                    },
                    {
                        "field": "_seMessage",
                        "locationName": "Message",
                        "type": "field"
                    },
                    {
                        "field": "_seReplyToAddresses",
                        "locationName": "ReplyToAddresses",
                        "type": "field"
                    },
                    {
                        "field": "_seReturnPath",
                        "locationName": "ReturnPath",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "seReplyToAddresses",
                        "name": "_seReplyToAddresses",
                        "shape": "AddressList",
                        "locationName": "ReplyToAddresses",
                        "documentation": "-- | The reply-to email address(es) for the message. If the recipient replies to\n-- the message, each reply-to address will receive the reply.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "seReturnPath",
                        "name": "_seReturnPath",
                        "shape": "Address",
                        "locationName": "ReturnPath",
                        "documentation": "-- | The email address to which bounces and complaints are to be forwarded when\n-- feedback forwarding is enabled. If the message cannot be delivered to the\n-- recipient, then an error message will be returned from the recipient's ISP;\n-- this message will then be forwarded to the email address specified by the 'ReturnPath' parameter.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "seDestination",
                        "name": "_seDestination",
                        "shape": "Destination",
                        "locationName": "Destination",
                        "documentation": "-- | The destination for this email, composed of To:, CC:, and BCC: fields.",
                        "typeExposed": "Destination",
                        "type": "Destination"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "seMessage",
                        "name": "_seMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": "-- | The message to be sent.",
                        "typeExposed": "Message",
                        "type": "Message"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "seReplyToAddresses",
                        "name": "_seReplyToAddresses",
                        "shape": "AddressList",
                        "locationName": "ReplyToAddresses",
                        "documentation": "-- | The reply-to email address(es) for the message. If the recipient replies to\n-- the message, each reply-to address will receive the reply.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "seReturnPath",
                        "name": "_seReturnPath",
                        "shape": "Address",
                        "locationName": "ReturnPath",
                        "documentation": "-- | The email address to which bounces and complaints are to be forwarded when\n-- feedback forwarding is enabled. If the message cannot be delivered to the\n-- recipient, then an error message will be returned from the recipient's ISP;\n-- this message will then be forwarded to the email address specified by the 'ReturnPath' parameter.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "seSource",
                        "name": "_seSource",
                        "shape": "Address",
                        "locationName": "Source",
                        "documentation": "-- | The identity's email address.\n--\n-- By default, the string must be 7-bit ASCII. If the text must contain any\n-- other characters, then you must use MIME encoded-word syntax (RFC 2047)\n-- instead of a literal string. MIME encoded-word syntax uses the following\n-- form: '=?charset?encoding?encoded-text?='. For more information, see \u003chttp://tools.ietf.org/html/rfc2047 RFC 2047\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "sendRawEmailResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "srerMessageId",
                    "name": "_srerMessageId",
                    "shape": "MessageId",
                    "locationName": "MessageId",
                    "documentation": "-- | The unique message identifier returned from the 'SendRawEmail' action.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "srerMessageId",
                        "name": "_srerMessageId",
                        "shape": "MessageId",
                        "locationName": "MessageId",
                        "documentation": "-- | The unique message identifier returned from the 'SendRawEmail' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "SendRawEmailResponse",
                "resultWrapper": "SendRawEmailResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "srerMessageId",
                        "name": "_srerMessageId",
                        "shape": "MessageId",
                        "locationName": "MessageId",
                        "documentation": "-- | The unique message identifier returned from the 'SendRawEmail' action.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_SendRawEmail.html",
            "namespace": "Network.AWS.SES.SendRawEmail",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "SendRawEmail",
            "method": "post",
            "documentation": "-- | Sends an email message, with header and content specified by the client. The 'SendRawEmail' action is useful for sending multipart MIME emails. The raw text of the\n-- message must comply with Internet email standards; otherwise, the message\n-- cannot be sent.\n--\n-- You can only send email from verified email addresses and domains. If you\n-- have not requested production access to Amazon SES, you must also verify\n-- every recipient email address except for the recipients provided by the\n-- Amazon SES mailbox simulator. For more information, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html Amazon SESDeveloper Guide\u003e.  The total size of the message cannot exceed 10 MB. This\n-- includes any attachments that are part of the message.\n--\n-- Amazon SES has a limit on the total number of recipients per message: The\n-- combined number of To:, CC: and BCC: email addresses cannot exceed 50. If you\n-- need to send an email message to a larger audience, you can divide your\n-- recipient list into groups of 50 or fewer, and then call Amazon SES\n-- repeatedly to send the message to each group.\n--\n-- The To:, CC:, and BCC: headers in the raw message can contain a group list.\n-- Note that each recipient in a group list counts towards the 50-recipient\n-- limit.\n--\n-- For every message that you send, the total number of recipients (To:, CC:\n-- and BCC:) is counted against your /sending quota/ - the maximum number of\n-- emails you can send in a 24-hour period. For information about your sending\n-- quota, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html Amazon SES Developer Guide\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 16,
                "ctor": "sendRawEmail",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sreRawMessage",
                        "name": "_sreRawMessage",
                        "shape": "RawMessage",
                        "locationName": "RawMessage",
                        "documentation": "-- | The raw text of the message. The client is responsible for ensuring the\n-- following:\n--\n-- Message must contain a header and a body, separated by a blank line. All\n-- required header fields must be present. Each part of a multipart MIME message\n-- must be formatted properly. MIME content types must be among those supported\n-- by Amazon SES. For more information, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/mime-types.html Amazon SES Developer Guide\u003e.  Content must be base64-encoded, if MIME requires it.\n--",
                        "typeExposed": "RawMessage",
                        "type": "RawMessage"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "SendRawEmail",
                "query": [
                    {
                        "field": "_sreSource",
                        "locationName": "Source",
                        "type": "field"
                    },
                    {
                        "field": "_sreDestinations",
                        "locationName": "Destinations",
                        "type": "field"
                    },
                    {
                        "field": "_sreRawMessage",
                        "locationName": "RawMessage",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sreSource",
                        "name": "_sreSource",
                        "shape": "Address",
                        "locationName": "Source",
                        "documentation": "-- | The identity's email address.\n--\n-- By default, the string must be 7-bit ASCII. If the text must contain any\n-- other characters, then you must use MIME encoded-word syntax (RFC 2047)\n-- instead of a literal string. MIME encoded-word syntax uses the following\n-- form: '=?charset?encoding?encoded-text?='. For more information, see \u003chttp://tools.ietf.org/html/rfc2047 RFC 2047\u003e.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sreDestinations",
                        "name": "_sreDestinations",
                        "shape": "AddressList",
                        "locationName": "Destinations",
                        "documentation": "-- | A list of destinations for the message, consisting of To:, CC:, and BCC:\n-- addresses.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sreDestinations",
                        "name": "_sreDestinations",
                        "shape": "AddressList",
                        "locationName": "Destinations",
                        "documentation": "-- | A list of destinations for the message, consisting of To:, CC:, and BCC:\n-- addresses.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sreRawMessage",
                        "name": "_sreRawMessage",
                        "shape": "RawMessage",
                        "locationName": "RawMessage",
                        "documentation": "-- | The raw text of the message. The client is responsible for ensuring the\n-- following:\n--\n-- Message must contain a header and a body, separated by a blank line. All\n-- required header fields must be present. Each part of a multipart MIME message\n-- must be formatted properly. MIME content types must be among those supported\n-- by Amazon SES. For more information, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/mime-types.html Amazon SES Developer Guide\u003e.  Content must be base64-encoded, if MIME requires it.\n--",
                        "typeExposed": "RawMessage",
                        "type": "RawMessage"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sreSource",
                        "name": "_sreSource",
                        "shape": "Address",
                        "locationName": "Source",
                        "documentation": "-- | The identity's email address.\n--\n-- By default, the string must be 7-bit ASCII. If the text must contain any\n-- other characters, then you must use MIME encoded-word syntax (RFC 2047)\n-- instead of a literal string. MIME encoded-word syntax uses the following\n-- form: '=?charset?encoding?encoded-text?='. For more information, see \u003chttp://tools.ietf.org/html/rfc2047 RFC 2047\u003e.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "setIdentityDkimEnabledResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "SetIdentityDkimEnabledResponse",
                "resultWrapper": "SetIdentityDkimEnabledResult",
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityDkimEnabled.html",
            "namespace": "Network.AWS.SES.SetIdentityDkimEnabled",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "SetIdentityDkimEnabled",
            "method": "post",
            "documentation": "-- | Enables or disables Easy DKIM signing of email sent from an identity:\n--\n-- If Easy DKIM signing is enabled for a domain name identity (e.g., 'example.com'), then Amazon SES will DKIM-sign all email sent by addresses under that\n-- domain name (e.g., 'user@example.com'). If Easy DKIM signing is enabled for an\n-- email address, then Amazon SES will DKIM-sign all email sent by that email\n-- address.  For email addresses (e.g., 'user@example.com'), you can only enable\n-- Easy DKIM signing if the corresponding domain (e.g., 'example.com') has been\n-- set up for Easy DKIM using the AWS Console or the 'VerifyDomainDkim' action.\n--\n-- This action is throttled at one request per second.\n--\n-- For more information about Easy DKIM signing, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html Amazon SES DeveloperGuide\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 16,
                "ctor": "setIdentityDkimEnabled",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sideIdentity",
                        "name": "_sideIdentity",
                        "shape": "Identity",
                        "locationName": "Identity",
                        "documentation": "-- | The identity for which DKIM signing should be enabled or disabled.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sideDkimEnabled",
                        "name": "_sideDkimEnabled",
                        "shape": "Enabled",
                        "locationName": "DkimEnabled",
                        "documentation": "-- | Sets whether DKIM signing is enabled for an identity. Set to 'true' to enable\n-- DKIM signing for this identity; 'false' to disable it.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "SetIdentityDkimEnabled",
                "query": [
                    {
                        "field": "_sideIdentity",
                        "locationName": "Identity",
                        "type": "field"
                    },
                    {
                        "field": "_sideDkimEnabled",
                        "locationName": "DkimEnabled",
                        "type": "field"
                    }
                ],
                "locationPad": 12,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sideDkimEnabled",
                        "name": "_sideDkimEnabled",
                        "shape": "Enabled",
                        "locationName": "DkimEnabled",
                        "documentation": "-- | Sets whether DKIM signing is enabled for an identity. Set to 'true' to enable\n-- DKIM signing for this identity; 'false' to disable it.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sideIdentity",
                        "name": "_sideIdentity",
                        "shape": "Identity",
                        "locationName": "Identity",
                        "documentation": "-- | The identity for which DKIM signing should be enabled or disabled.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "setIdentityFeedbackForwardingEnabledResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "SetIdentityFeedbackForwardingEnabledResponse",
                "resultWrapper": "SetIdentityFeedbackForwardingEnabledResult",
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityFeedbackForwardingEnabled.html",
            "namespace": "Network.AWS.SES.SetIdentityFeedbackForwardingEnabled",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "SetIdentityFeedbackForwardingEnabled",
            "method": "post",
            "documentation": "-- | Given an identity (email address or domain), enables or disables whether\n-- Amazon SES forwards bounce and complaint notifications as email. Feedback\n-- forwarding can only be disabled when Amazon Simple Notification Service\n-- (Amazon SNS) topics are specified for both bounces and complaints.\n--\n-- This action is throttled at one request per second.\n--\n-- For more information about using notifications with Amazon SES, see the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html Amazon SES Developer Guide\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "setIdentityFeedbackForwardingEnabled",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "siffeIdentity",
                        "name": "_siffeIdentity",
                        "shape": "Identity",
                        "locationName": "Identity",
                        "documentation": "-- | The identity for which to set bounce and complaint notification forwarding.\n-- Examples: 'user@example.com', 'example.com'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "siffeForwardingEnabled",
                        "name": "_siffeForwardingEnabled",
                        "shape": "Enabled",
                        "locationName": "ForwardingEnabled",
                        "documentation": "-- | Sets whether Amazon SES will forward bounce and complaint notifications as\n-- email. 'true' specifies that Amazon SES will forward bounce and complaint\n-- notifications as email, in addition to any Amazon SNS topic publishing\n-- otherwise specified. 'false' specifies that Amazon SES will publish bounce and\n-- complaint notifications only through Amazon SNS. This value can only be set\n-- to 'false' when Amazon SNS topics are set for both 'Bounce' and 'Complaint'\n-- notification types.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "SetIdentityFeedbackForwardingEnabled",
                "query": [
                    {
                        "field": "_siffeIdentity",
                        "locationName": "Identity",
                        "type": "field"
                    },
                    {
                        "field": "_siffeForwardingEnabled",
                        "locationName": "ForwardingEnabled",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "siffeForwardingEnabled",
                        "name": "_siffeForwardingEnabled",
                        "shape": "Enabled",
                        "locationName": "ForwardingEnabled",
                        "documentation": "-- | Sets whether Amazon SES will forward bounce and complaint notifications as\n-- email. 'true' specifies that Amazon SES will forward bounce and complaint\n-- notifications as email, in addition to any Amazon SNS topic publishing\n-- otherwise specified. 'false' specifies that Amazon SES will publish bounce and\n-- complaint notifications only through Amazon SNS. This value can only be set\n-- to 'false' when Amazon SNS topics are set for both 'Bounce' and 'Complaint'\n-- notification types.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "siffeIdentity",
                        "name": "_siffeIdentity",
                        "shape": "Identity",
                        "locationName": "Identity",
                        "documentation": "-- | The identity for which to set bounce and complaint notification forwarding.\n-- Examples: 'user@example.com', 'example.com'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "setIdentityNotificationTopicResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "SetIdentityNotificationTopicResponse",
                "resultWrapper": "SetIdentityNotificationTopicResult",
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityNotificationTopic.html",
            "namespace": "Network.AWS.SES.SetIdentityNotificationTopic",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "SetIdentityNotificationTopic",
            "method": "post",
            "documentation": "-- | Given an identity (email address or domain), sets the Amazon Simple\n-- Notification Service (Amazon SNS) topic to which Amazon SES will publish\n-- bounce, complaint, and/or delivery notifications for emails sent with that\n-- identity as the 'Source'.\n--\n-- This action is throttled at one request per second.\n--\n-- For more information about feedback notification, see the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html Amazon SESDeveloper Guide\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 21,
                "ctor": "setIdentityNotificationTopic",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sintIdentity",
                        "name": "_sintIdentity",
                        "shape": "Identity",
                        "locationName": "Identity",
                        "documentation": "-- | The identity for which the Amazon SNS topic will be set. Examples: 'user@example.com', 'example.com'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sintNotificationType",
                        "name": "_sintNotificationType",
                        "shape": "NotificationType",
                        "locationName": "NotificationType",
                        "documentation": "-- | The type of notifications that will be published to the specified Amazon SNS\n-- topic.",
                        "typeExposed": "NotificationType",
                        "type": "NotificationType"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "SetIdentityNotificationTopic",
                "query": [
                    {
                        "field": "_sintIdentity",
                        "locationName": "Identity",
                        "type": "field"
                    },
                    {
                        "field": "_sintNotificationType",
                        "locationName": "NotificationType",
                        "type": "field"
                    },
                    {
                        "field": "_sintSnsTopic",
                        "locationName": "SnsTopic",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sintSnsTopic",
                        "name": "_sintSnsTopic",
                        "shape": "NotificationTopic",
                        "locationName": "SnsTopic",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the Amazon SNS topic. If the parameter is\n-- omitted from the request or a null value is passed, 'SnsTopic' is cleared and\n-- publishing is disabled.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sintIdentity",
                        "name": "_sintIdentity",
                        "shape": "Identity",
                        "locationName": "Identity",
                        "documentation": "-- | The identity for which the Amazon SNS topic will be set. Examples: 'user@example.com', 'example.com'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "sintNotificationType",
                        "name": "_sintNotificationType",
                        "shape": "NotificationType",
                        "locationName": "NotificationType",
                        "documentation": "-- | The type of notifications that will be published to the specified Amazon SNS\n-- topic.",
                        "typeExposed": "NotificationType",
                        "type": "NotificationType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": false,
                        "lens": "sintSnsTopic",
                        "name": "_sintSnsTopic",
                        "shape": "NotificationTopic",
                        "locationName": "SnsTopic",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the Amazon SNS topic. If the parameter is\n-- omitted from the request or a null value is passed, 'SnsTopic' is cleared and\n-- publishing is disabled.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "Text",
                "style": "xml",
                "fieldPad": 0,
                "ctor": "verifyDomainDkimResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "vddrDkimTokens",
                    "name": "_vddrDkimTokens",
                    "shape": "VerificationTokenList",
                    "locationName": "DkimTokens",
                    "documentation": "-- | A set of character strings that represent the domain's identity. If the\n-- identity is an email address, the tokens represent the domain of that address.\n--\n-- Using these tokens, you will need to create DNS CNAME records that point to\n-- DKIM public keys hosted by Amazon SES. Amazon Web Services will eventually\n-- detect that you have updated your DNS records; this detection process may\n-- take up to 72 hours. Upon successful detection, Amazon SES will be able to\n-- DKIM-sign emails originating from that domain.\n--\n-- For more information about creating DNS records using DKIM tokens, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html Amazon SES Developer Guide\u003e.",
                    "typeExposed": "[Text]",
                    "type": "List \"member\" Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "VerifyDomainDkimResponse",
                "resultWrapper": "VerifyDomainDkimResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "vddrDkimTokens",
                        "name": "_vddrDkimTokens",
                        "shape": "VerificationTokenList",
                        "locationName": "DkimTokens",
                        "documentation": "-- | A set of character strings that represent the domain's identity. If the\n-- identity is an email address, the tokens represent the domain of that address.\n--\n-- Using these tokens, you will need to create DNS CNAME records that point to\n-- DKIM public keys hosted by Amazon SES. Amazon Web Services will eventually\n-- detect that you have updated your DNS records; this detection process may\n-- take up to 72 hours. Upon successful detection, Amazon SES will be able to\n-- DKIM-sign emails originating from that domain.\n--\n-- For more information about creating DNS records using DKIM tokens, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html Amazon SES Developer Guide\u003e.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "vddrDkimTokens",
                        "name": "_vddrDkimTokens",
                        "shape": "VerificationTokenList",
                        "locationName": "DkimTokens",
                        "documentation": "-- | A set of character strings that represent the domain's identity. If the\n-- identity is an email address, the tokens represent the domain of that address.\n--\n-- Using these tokens, you will need to create DNS CNAME records that point to\n-- DKIM public keys hosted by Amazon SES. Amazon Web Services will eventually\n-- detect that you have updated your DNS records; this detection process may\n-- take up to 72 hours. Upon successful detection, Amazon SES will be able to\n-- DKIM-sign emails originating from that domain.\n--\n-- For more information about creating DNS records using DKIM tokens, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html Amazon SES Developer Guide\u003e.",
                        "typeExposed": "[Text]",
                        "type": "List \"member\" Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_VerifyDomainDkim.html",
            "namespace": "Network.AWS.SES.VerifyDomainDkim",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "VerifyDomainDkim",
            "method": "post",
            "documentation": "-- | Returns a set of DKIM tokens for a domain. DKIM /tokens/ are character strings\n-- that represent your domain's identity. Using these tokens, you will need to\n-- create DNS CNAME records that point to DKIM public keys hosted by Amazon SES.\n-- Amazon Web Services will eventually detect that you have updated your DNS\n-- records; this detection process may take up to 72 hours. Upon successful\n-- detection, Amazon SES will be able to DKIM-sign email originating from that\n-- domain.\n--\n-- This action is throttled at one request per second.\n--\n-- To enable or disable Easy DKIM signing for a domain, use the 'SetIdentityDkimEnabled' action.\n--\n-- For more information about creating DNS records using DKIM tokens, go to the \u003chttp://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html Amazon SES Developer Guide\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "verifyDomainDkim",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "vddDomain",
                    "name": "_vddDomain",
                    "shape": "Domain",
                    "locationName": "Domain",
                    "documentation": "-- | The name of the domain to be verified for Easy DKIM signing.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "vddDomain",
                        "name": "_vddDomain",
                        "shape": "Domain",
                        "locationName": "Domain",
                        "documentation": "-- | The name of the domain to be verified for Easy DKIM signing.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 7,
                "name": "VerifyDomainDkim",
                "query": [
                    {
                        "field": "_vddDomain",
                        "locationName": "Domain",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "vddDomain",
                        "name": "_vddDomain",
                        "shape": "Domain",
                        "locationName": "Domain",
                        "documentation": "-- | The name of the domain to be verified for Easy DKIM signing.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "verifyDomainIdentityResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "vdirVerificationToken",
                    "name": "_vdirVerificationToken",
                    "shape": "VerificationToken",
                    "locationName": "VerificationToken",
                    "documentation": "-- | A TXT record that must be placed in the DNS settings for the domain, in order\n-- to complete domain verification.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "vdirVerificationToken",
                        "name": "_vdirVerificationToken",
                        "shape": "VerificationToken",
                        "locationName": "VerificationToken",
                        "documentation": "-- | A TXT record that must be placed in the DNS settings for the domain, in order\n-- to complete domain verification.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "VerifyDomainIdentityResponse",
                "resultWrapper": "VerifyDomainIdentityResult",
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "vdirVerificationToken",
                        "name": "_vdirVerificationToken",
                        "shape": "VerificationToken",
                        "locationName": "VerificationToken",
                        "documentation": "-- | A TXT record that must be placed in the DNS settings for the domain, in order\n-- to complete domain verification.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_VerifyDomainIdentity.html",
            "namespace": "Network.AWS.SES.VerifyDomainIdentity",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "VerifyDomainIdentity",
            "method": "post",
            "documentation": "-- | Verifies a domain.\n--\n-- This action is throttled at one request per second.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "verifyDomainIdentity",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "vdiDomain",
                    "name": "_vdiDomain",
                    "shape": "Domain",
                    "locationName": "Domain",
                    "documentation": "-- | The domain to be verified.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "vdiDomain",
                        "name": "_vdiDomain",
                        "shape": "Domain",
                        "locationName": "Domain",
                        "documentation": "-- | The domain to be verified.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 7,
                "name": "VerifyDomainIdentity",
                "query": [
                    {
                        "field": "_vdiDomain",
                        "locationName": "Domain",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "vdiDomain",
                        "name": "_vdiDomain",
                        "shape": "Domain",
                        "locationName": "Domain",
                        "documentation": "-- | The domain to be verified.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "verifyEmailAddressResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "VerifyEmailAddressResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_VerifyEmailAddress.html",
            "namespace": "Network.AWS.SES.VerifyEmailAddress",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "VerifyEmailAddress",
            "method": "post",
            "documentation": "-- | Verifies an email address. This action causes a confirmation email message to\n-- be sent to the specified address.\n--\n-- The VerifyEmailAddress action is deprecated as of the May 15, 2012 release\n-- of Domain Verification. The VerifyEmailIdentity action is now preferred. This\n-- action is throttled at one request per second.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "verifyEmailAddress",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "veaEmailAddress",
                    "name": "_veaEmailAddress",
                    "shape": "Address",
                    "locationName": "EmailAddress",
                    "documentation": "-- | The email address to be verified.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "veaEmailAddress",
                        "name": "_veaEmailAddress",
                        "shape": "Address",
                        "locationName": "EmailAddress",
                        "documentation": "-- | The email address to be verified.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "VerifyEmailAddress",
                "query": [
                    {
                        "field": "_veaEmailAddress",
                        "locationName": "EmailAddress",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "veaEmailAddress",
                        "name": "_veaEmailAddress",
                        "shape": "Address",
                        "locationName": "EmailAddress",
                        "documentation": "-- | The email address to be verified.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SES",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "verifyEmailIdentityResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "VerifyEmailIdentityResponse",
                "resultWrapper": "VerifyEmailIdentityResult",
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_VerifyEmailIdentity.html",
            "namespace": "Network.AWS.SES.VerifyEmailIdentity",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SES.Types"
            ],
            "pager": null,
            "name": "VerifyEmailIdentity",
            "method": "post",
            "documentation": "-- | Verifies an email address. This action causes a confirmation email message to\n-- be sent to the specified address.\n--\n-- This action is throttled at one request per second.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "verifyEmailIdentity",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "query",
                    "flattened": false,
                    "required": true,
                    "lens": "veiEmailAddress",
                    "name": "_veiEmailAddress",
                    "shape": "Address",
                    "locationName": "EmailAddress",
                    "documentation": "-- | The email address to be verified.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "veiEmailAddress",
                        "name": "_veiEmailAddress",
                        "shape": "Address",
                        "locationName": "EmailAddress",
                        "documentation": "-- | The email address to be verified.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "VerifyEmailIdentity",
                "query": [
                    {
                        "field": "_veiEmailAddress",
                        "locationName": "EmailAddress",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "query",
                        "flattened": false,
                        "required": true,
                        "lens": "veiEmailAddress",
                        "name": "_veiEmailAddress",
                        "shape": "Address",
                        "locationName": "EmailAddress",
                        "documentation": "-- | The email address to be verified.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        }
    ]
}