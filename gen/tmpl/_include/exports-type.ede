{-# LANGUAGE DeriveDataTypeable          #-}
{-# LANGUAGE DeriveGeneric               #-}
{-# LANGUAGE FlexibleInstances           #-}
{-# LANGUAGE NoImplicitPrelude           #-}
{-# LANGUAGE OverloadedStrings           #-}
{-# LANGUAGE StandaloneDeriving          #-}
{-# LANGUAGE TypeFamilies                #-}

{-# OPTIONS_GHC -fno-warn-unused-imports #-}

{% include "license.ede" with scope.ns.types %}

{% if scope.documentation %}
{{ scope.documentation | above76 }}
{% endif %}
module {{ scope.ns.types }}
    (
    -- * Service
      {{ scope.name }}
{% case scope.type %}
{% when "json" %}
{% when "restjson" %}
{% else %}
    -- ** XML
    , xmlOptions

{% endcase %}
{% for data in scope.types %}
    -- * {{ data.value.name }}
  {% case data.value.ctor %}
  {% when "sum" %}
    , {{ data.value.name }} (..)
  {% when "newtype" %}
    , {{ data.value.name }}
    , {{ data.value.smart_ctor }}
    {% for field in data.value.fields %}
    , {{ field.value.prefixed | lens }}
    {% endfor %}
  {% when "data" %}
    , {{ data.value.name }}
    , {{ data.value.smart_ctor }}
    {% for field in data.value.fields %}
    , {{ field.value.prefixed | lens }}
    {% endfor %}
  {% else %}
    , {{ data.value.name }}
  {% endcase %}
  {% if !data.last %}

  {% endif %}
{% endfor %}
{% for module in scope.static %}
  {% if module.first %}

    -- * Common
    , module {{ module.value }}
  {% else %}
    , module {{ module.value }}
  {% endif %}
{% endfor %}
    ) where
