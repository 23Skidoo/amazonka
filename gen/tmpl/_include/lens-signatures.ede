{% for field in scope.fields %}
  {% if field.first %}

  {% endif %}
  {% if field.value.documentation %}
{{ field.value.documentation | above76 }}
  {% endif %}
  {% if field.value.required %}
{{ field.value.prefixed | lens }} :: Functor f => LensLike' f {{ scope.name }} {{ field.value.type }}
  {% else %}
    {% if field.value.monoid %}
{{ field.value.prefixed | lens }} :: Functor f => LensLike' f {{ scope.name }} {{ field.value.type }}
    {% else %}
{{ field.value.prefixed | lens }} :: Functor f => LensLike' f {{ scope.name }} ({{ field.value.type }})
    {% endif %}
  {% endif %}
{{ field.value.prefixed | lens }} f x =
    (\y -> x { {{ field.value.prefixed }} = y })
       <$> f ({{ field.value.prefixed }} x)
{-# INLINE {{ field.value.prefixed | lens }} #-}
  {% if !field.last %}

  {% endif %}
{% endfor %}
