
{{ scope.request.function }}Catch :: ( MonadCatch m
{{ scope.request.function_pad }}         , MonadResource m
{{ scope.request.function_pad }}         , MonadReader Env m
{{ scope.request.function_pad }}         )
{% for param in scope.request.params %}
  {% if param.first %}
    => {{ param.value.type }} -- ^ '{{ param.value.prefixed | lens }}'
  {% else %}
    -> {{ param.value.type }} -- ^ '{{ param.value.prefixed | lens }}'
  {% endif %}
{% endfor %}
{% if scope.request.exhaustive %}
  {% if scope.request.params | mapLength > 0 %}
    {% if scope.pagination %}
    -> Source m (Either {{ scope.service }}Error {{ scope.response.name }})
    {% else %}
    -> m (Either {{ scope.service }}Error {{ scope.response.name }})
    {% endif %}
  {% else %}
    {% if scope.pagination %}
    => Source m (Either {{ scope.service }}Error {{ scope.response.name }})
    {% else %}
    => m (Either {{ scope.service }}Error {{ scope.response.name }})
    {% endif %}
  {% endif %}
{% else %}
  {% if scope.request.params | mapLength > 0 %}
    -> ({{ scope.request.name }} -> {{ scope.request.name }}) -- ^ Function to update additional fields.
  {% else %}
    => ({{ scope.request.name }} -> {{ scope.request.name }}) -- ^ Function to update additional fields.
  {% endif %}
  {% if scope.pagination %}
    -> Source m (Either {{ scope.service }}Error {{ scope.response.name }})
  {% else %}
    -> m (Either {{ scope.service }}Error {{ scope.response.name }})
  {% endif %}
{% endif %}
{% if scope.request.exhaustive %}
{{ scope.request.function }}Catch {% for param in scope.request.params -%} p{{ param.key }} {% endfor -%} =
  {% if scope.pagination %}
    paginateCatch ({{ scope.request.smart_ctor }} {% for param in scope.request.params -%} p{{ param.key }} {% endfor -%})
  {% else %}
    sendCatch ({{ scope.request.smart_ctor }} {% for param in scope.request.params -%} p{{ param.key }} {% endfor -%})
  {% endif %}
{% else %}
{{ scope.request.function }}Catch {% for param in scope.request.params -%} p{{ param.key }} {% endfor -%} f =
  {% if scope.request.params | mapLength > 0 %}
    {% if scope.pagination %}
    paginateCatch . f $ {{ scope.request.smart_ctor }} {% for param in scope.request.params -%} p{{ param.key }} {% endfor -%}
    {% else %}
    sendCatch . f $ {{ scope.request.smart_ctor }} {% for param in scope.request.params -%} p{{ param.key }} {% endfor -%}
    {% endif %}
  {% else %}
    {% if scope.pagination %}
    paginateCatch (f {{ scope.request.smart_ctor }})
    {% else %}
    sendCatch (f {{ scope.request.smart_ctor }})
    {% endif %}
  {% endif %}
{% endif %}
