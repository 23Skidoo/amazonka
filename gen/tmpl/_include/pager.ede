{% if scope.pagination %}

instance AWSPager {{ scope.request.name }} where
  {% case scope.pagination.type %}
  {% when "next" %}
    next rq rs = (\x -> rq & {{ scope.pagination.token.input }} ?~ x) <$> (rs ^. {{ scope.pagination.token.output }})

  {% when "one" %}
    next rq rs
        | not (rs ^. {{ scope.pagination.more }}) = Nothing
        | otherwise = Just (rq & {{ scope.pagination.token.input }} .~ rs ^. {{ scope.pagination.token.output }})
  {% when "many" %}
    next rq rs
        | not (rs ^. {{ scope.pagination.more }}) = Nothing
        | {{ scope.pagination.negate }} = Nothing
        | otherwise = Just $ rq
    {% for token in scope.pagination.tokens %}
            & {{ token.value.input }} .~ {{ token.key}}
    {% endfor %}
      where
    {% for token in scope.pagination.tokens %}
       {{ token.key }} = rs ^. {{ token.value.output }}
   {% endfor %}
  {% endcase %}
{% endif %}
