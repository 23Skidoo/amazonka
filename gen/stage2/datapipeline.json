{
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "DataPipeline",
        "error": "JSONError",
        "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/Welcome.html",
        "namespace": "Network.AWS.DataPipeline",
        "protocol": "json",
        "imports": [
            "Network.AWS.DataPipeline.ActivatePipeline",
            "Network.AWS.DataPipeline.CreatePipeline",
            "Network.AWS.DataPipeline.DeletePipeline",
            "Network.AWS.DataPipeline.DescribeObjects",
            "Network.AWS.DataPipeline.DescribePipelines",
            "Network.AWS.DataPipeline.EvaluateExpression",
            "Network.AWS.DataPipeline.GetPipelineDefinition",
            "Network.AWS.DataPipeline.ListPipelines",
            "Network.AWS.DataPipeline.PollForTask",
            "Network.AWS.DataPipeline.PutPipelineDefinition",
            "Network.AWS.DataPipeline.QueryObjects",
            "Network.AWS.DataPipeline.ReportTaskProgress",
            "Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat",
            "Network.AWS.DataPipeline.SetStatus",
            "Network.AWS.DataPipeline.SetTaskStatus",
            "Network.AWS.DataPipeline.Types",
            "Network.AWS.DataPipeline.ValidatePipelineDefinition"
        ],
        "name": "Amazon Data Pipeline",
        "version": "2012-10-29",
        "documentation": "AWS Data Pipeline is a web service that you can use to automate the movement and transformation of data. With AWS Data Pipeline, you can define data-driven workflows, so that tasks can be dependent on the successful completion of previous tasks.",
        "xmlNamespace": "https://datapipeline.amazonaws.com/doc/2012-10-29/",
        "jsonVersion": "1.1",
        "endpoint": "Regional",
        "endpointPrefix": "datapipeline",
        "targetPrefix": "DataPipeline"
    },
    "cabal": {
        "other": [],
        "library": "amazonka-datapipeline",
        "exposed": [
            "Network.AWS.DataPipeline",
            "Network.AWS.DataPipeline.ActivatePipeline",
            "Network.AWS.DataPipeline.CreatePipeline",
            "Network.AWS.DataPipeline.DeletePipeline",
            "Network.AWS.DataPipeline.DescribeObjects",
            "Network.AWS.DataPipeline.DescribePipelines",
            "Network.AWS.DataPipeline.EvaluateExpression",
            "Network.AWS.DataPipeline.GetPipelineDefinition",
            "Network.AWS.DataPipeline.ListPipelines",
            "Network.AWS.DataPipeline.PollForTask",
            "Network.AWS.DataPipeline.PutPipelineDefinition",
            "Network.AWS.DataPipeline.QueryObjects",
            "Network.AWS.DataPipeline.ReportTaskProgress",
            "Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat",
            "Network.AWS.DataPipeline.SetStatus",
            "Network.AWS.DataPipeline.SetTaskStatus",
            "Network.AWS.DataPipeline.Types",
            "Network.AWS.DataPipeline.ValidatePipelineDefinition"
        ],
        "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/Welcome.html",
        "protocol": "json",
        "name": "Amazon Data Pipeline",
        "version": "0.0.0",
        "description": "AWS Data Pipeline is a web service that you can use to automate the movement and transformation of data. With AWS Data Pipeline, you can define data-driven workflows, so that tasks can be dependent on the successful completion of previous tasks."
    },
    "types": {
        "namespace": "Network.AWS.DataPipeline.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 9,
                "ctor": "pipelineObject",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "poId",
                        "name": "_poId",
                        "shape": "id",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eIdentifier of the object.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "poName",
                        "name": "_poName",
                        "shape": "id",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eName of the object.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "poFields",
                        "name": "_poFields",
                        "shape": "fieldList",
                        "locationName": "fields",
                        "documentation": "\u003cp\u003eKey-value pairs that define the properties of the object.\u003c/p\u003e",
                        "typeExposed": "[Field]",
                        "type": "[Field]"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "poId",
                        "name": "_poId",
                        "shape": "id",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eIdentifier of the object.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "poName",
                        "name": "_poName",
                        "shape": "id",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eName of the object.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 7,
                "name": "PipelineObject",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "poFields",
                        "name": "_poFields",
                        "shape": "fieldList",
                        "locationName": "fields",
                        "documentation": "\u003cp\u003eKey-value pairs that define the properties of the object.\u003c/p\u003e",
                        "typeExposed": "[Field]",
                        "type": "[Field]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "poFields",
                        "name": "_poFields",
                        "shape": "fieldList",
                        "locationName": "fields",
                        "documentation": "\u003cp\u003eKey-value pairs that define the properties of the object.\u003c/p\u003e",
                        "typeExposed": "[Field]",
                        "type": "[Field]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "poId",
                        "name": "_poId",
                        "shape": "id",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eIdentifier of the object.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "poName",
                        "name": "_poName",
                        "shape": "id",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eName of the object.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "field",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "fKey",
                        "name": "_fKey",
                        "shape": "fieldNameString",
                        "locationName": "key",
                        "documentation": "\u003cp\u003eThe field identifier.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "fStringValue",
                        "name": "_fStringValue",
                        "shape": "fieldStringValue",
                        "locationName": "stringValue",
                        "documentation": "\u003cp\u003eThe field value, expressed as a String.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "fRefValue",
                        "name": "_fRefValue",
                        "shape": "fieldNameString",
                        "locationName": "refValue",
                        "documentation": "\u003cp\u003eThe field value, expressed as the identifier of another object.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "fKey",
                        "name": "_fKey",
                        "shape": "fieldNameString",
                        "locationName": "key",
                        "documentation": "\u003cp\u003eThe field identifier.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 12,
                "name": "Field",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "fStringValue",
                        "name": "_fStringValue",
                        "shape": "fieldStringValue",
                        "locationName": "stringValue",
                        "documentation": "\u003cp\u003eThe field value, expressed as a String.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "fRefValue",
                        "name": "_fRefValue",
                        "shape": "fieldNameString",
                        "locationName": "refValue",
                        "documentation": "\u003cp\u003eThe field value, expressed as the identifier of another object.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "fKey",
                        "name": "_fKey",
                        "shape": "fieldNameString",
                        "locationName": "key",
                        "documentation": "\u003cp\u003eThe field identifier.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "fRefValue",
                        "name": "_fRefValue",
                        "shape": "fieldNameString",
                        "locationName": "refValue",
                        "documentation": "\u003cp\u003eThe field value, expressed as the identifier of another object.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "fStringValue",
                        "name": "_fStringValue",
                        "shape": "fieldStringValue",
                        "locationName": "stringValue",
                        "documentation": "\u003cp\u003eThe field value, expressed as a String.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 11,
                "ctor": "selector",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sFieldName",
                        "name": "_sFieldName",
                        "shape": "string",
                        "locationName": "fieldName",
                        "documentation": "\u003cp\u003eThe name of the field that the operator will be applied to. The field name is the \"key\" portion of the field definition in the pipeline definition syntax that is used by the AWS Data Pipeline API. If the field is not set on the object, the condition fails.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sOperator",
                        "name": "_sOperator",
                        "shape": "Operator",
                        "locationName": "operator",
                        "documentation": null,
                        "typeExposed": "Maybe Operator",
                        "type": "Maybe Operator"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 10,
                "name": "Selector",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sFieldName",
                        "name": "_sFieldName",
                        "shape": "string",
                        "locationName": "fieldName",
                        "documentation": "\u003cp\u003eThe name of the field that the operator will be applied to. The field name is the \"key\" portion of the field definition in the pipeline definition syntax that is used by the AWS Data Pipeline API. If the field is not set on the object, the condition fails.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sOperator",
                        "name": "_sOperator",
                        "shape": "Operator",
                        "locationName": "operator",
                        "documentation": null,
                        "typeExposed": "Maybe Operator",
                        "type": "Maybe Operator"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sFieldName",
                        "name": "_sFieldName",
                        "shape": "string",
                        "locationName": "fieldName",
                        "documentation": "\u003cp\u003eThe name of the field that the operator will be applied to. The field name is the \"key\" portion of the field definition in the pipeline definition syntax that is used by the AWS Data Pipeline API. If the field is not set on the object, the condition fails.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sOperator",
                        "name": "_sOperator",
                        "shape": "Operator",
                        "locationName": "operator",
                        "documentation": null,
                        "typeExposed": "Maybe Operator",
                        "type": "Maybe Operator"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 8,
                "ctor": "operator",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "oType",
                        "name": "_oType",
                        "shape": "OperatorType",
                        "locationName": "type",
                        "documentation": "\u003cp\u003e The logical operation to be performed: equal (\u003ccode\u003eEQ\u003c/code\u003e), equal reference (\u003ccode\u003eREF_EQ\u003c/code\u003e), less than or equal (\u003ccode\u003eLE\u003c/code\u003e), greater than or equal (\u003ccode\u003eGE\u003c/code\u003e), or between (\u003ccode\u003eBETWEEN\u003c/code\u003e). Equal reference (\u003ccode\u003eREF_EQ\u003c/code\u003e) can be used only with reference fields. The other comparison types can be used only with String fields. The comparison types you can use apply only to certain object fields, as detailed below. \u003c/p\u003e \u003cp\u003e The comparison operators EQ and REF_EQ act on the following fields: \u003c/p\u003e \u003cul\u003e \u003cli\u003ename\u003c/li\u003e \u003cli\u003e@sphere\u003c/li\u003e \u003cli\u003eparent\u003c/li\u003e \u003cli\u003e@componentParent\u003c/li\u003e \u003cli\u003e@instanceParent\u003c/li\u003e \u003cli\u003e@status\u003c/li\u003e \u003cli\u003e@scheduledStartTime\u003c/li\u003e \u003cli\u003e@scheduledEndTime\u003c/li\u003e \u003cli\u003e@actualStartTime\u003c/li\u003e \u003cli\u003e@actualEndTime\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e The comparison operators \u003ccode\u003eGE\u003c/code\u003e, \u003ccode\u003eLE\u003c/code\u003e, and \u003ccode\u003eBETWEEN\u003c/code\u003e act on the following fields: \u003c/p\u003e \u003cul\u003e \u003cli\u003e@scheduledStartTime\u003c/li\u003e \u003cli\u003e@scheduledEndTime\u003c/li\u003e \u003cli\u003e@actualStartTime\u003c/li\u003e \u003cli\u003e@actualEndTime\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eNote that fields beginning with the at sign (@) are read-only and set by the web service. When you name fields, you should choose names containing only alpha-numeric values, as symbols may be reserved by AWS Data Pipeline. User-defined fields that you add to a pipeline should prefix their name with the string \"my\".\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "oValues",
                        "name": "_oValues",
                        "shape": "stringList",
                        "locationName": "values",
                        "documentation": "\u003cp\u003eThe value that the actual field value will be compared with.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 7,
                "name": "Operator",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "oType",
                        "name": "_oType",
                        "shape": "OperatorType",
                        "locationName": "type",
                        "documentation": "\u003cp\u003e The logical operation to be performed: equal (\u003ccode\u003eEQ\u003c/code\u003e), equal reference (\u003ccode\u003eREF_EQ\u003c/code\u003e), less than or equal (\u003ccode\u003eLE\u003c/code\u003e), greater than or equal (\u003ccode\u003eGE\u003c/code\u003e), or between (\u003ccode\u003eBETWEEN\u003c/code\u003e). Equal reference (\u003ccode\u003eREF_EQ\u003c/code\u003e) can be used only with reference fields. The other comparison types can be used only with String fields. The comparison types you can use apply only to certain object fields, as detailed below. \u003c/p\u003e \u003cp\u003e The comparison operators EQ and REF_EQ act on the following fields: \u003c/p\u003e \u003cul\u003e \u003cli\u003ename\u003c/li\u003e \u003cli\u003e@sphere\u003c/li\u003e \u003cli\u003eparent\u003c/li\u003e \u003cli\u003e@componentParent\u003c/li\u003e \u003cli\u003e@instanceParent\u003c/li\u003e \u003cli\u003e@status\u003c/li\u003e \u003cli\u003e@scheduledStartTime\u003c/li\u003e \u003cli\u003e@scheduledEndTime\u003c/li\u003e \u003cli\u003e@actualStartTime\u003c/li\u003e \u003cli\u003e@actualEndTime\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e The comparison operators \u003ccode\u003eGE\u003c/code\u003e, \u003ccode\u003eLE\u003c/code\u003e, and \u003ccode\u003eBETWEEN\u003c/code\u003e act on the following fields: \u003c/p\u003e \u003cul\u003e \u003cli\u003e@scheduledStartTime\u003c/li\u003e \u003cli\u003e@scheduledEndTime\u003c/li\u003e \u003cli\u003e@actualStartTime\u003c/li\u003e \u003cli\u003e@actualEndTime\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eNote that fields beginning with the at sign (@) are read-only and set by the web service. When you name fields, you should choose names containing only alpha-numeric values, as symbols may be reserved by AWS Data Pipeline. User-defined fields that you add to a pipeline should prefix their name with the string \"my\".\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "oValues",
                        "name": "_oValues",
                        "shape": "stringList",
                        "locationName": "values",
                        "documentation": "\u003cp\u003eThe value that the actual field value will be compared with.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "oType",
                        "name": "_oType",
                        "shape": "OperatorType",
                        "locationName": "type",
                        "documentation": "\u003cp\u003e The logical operation to be performed: equal (\u003ccode\u003eEQ\u003c/code\u003e), equal reference (\u003ccode\u003eREF_EQ\u003c/code\u003e), less than or equal (\u003ccode\u003eLE\u003c/code\u003e), greater than or equal (\u003ccode\u003eGE\u003c/code\u003e), or between (\u003ccode\u003eBETWEEN\u003c/code\u003e). Equal reference (\u003ccode\u003eREF_EQ\u003c/code\u003e) can be used only with reference fields. The other comparison types can be used only with String fields. The comparison types you can use apply only to certain object fields, as detailed below. \u003c/p\u003e \u003cp\u003e The comparison operators EQ and REF_EQ act on the following fields: \u003c/p\u003e \u003cul\u003e \u003cli\u003ename\u003c/li\u003e \u003cli\u003e@sphere\u003c/li\u003e \u003cli\u003eparent\u003c/li\u003e \u003cli\u003e@componentParent\u003c/li\u003e \u003cli\u003e@instanceParent\u003c/li\u003e \u003cli\u003e@status\u003c/li\u003e \u003cli\u003e@scheduledStartTime\u003c/li\u003e \u003cli\u003e@scheduledEndTime\u003c/li\u003e \u003cli\u003e@actualStartTime\u003c/li\u003e \u003cli\u003e@actualEndTime\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e The comparison operators \u003ccode\u003eGE\u003c/code\u003e, \u003ccode\u003eLE\u003c/code\u003e, and \u003ccode\u003eBETWEEN\u003c/code\u003e act on the following fields: \u003c/p\u003e \u003cul\u003e \u003cli\u003e@scheduledStartTime\u003c/li\u003e \u003cli\u003e@scheduledEndTime\u003c/li\u003e \u003cli\u003e@actualStartTime\u003c/li\u003e \u003cli\u003e@actualEndTime\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eNote that fields beginning with the at sign (@) are read-only and set by the web service. When you name fields, you should choose names containing only alpha-numeric values, as symbols may be reserved by AWS Data Pipeline. User-defined fields that you add to a pipeline should prefix their name with the string \"my\".\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "oValues",
                        "name": "_oValues",
                        "shape": "stringList",
                        "locationName": "values",
                        "documentation": "\u003cp\u003eThe value that the actual field value will be compared with.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "taskObject",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "toTaskId",
                        "name": "_toTaskId",
                        "shape": "taskId",
                        "locationName": "taskId",
                        "documentation": "\u003cp\u003eAn internal identifier for the task. This ID is passed to the \u003ca\u003eSetTaskStatus\u003c/a\u003e and \u003ca\u003eReportTaskProgress\u003c/a\u003e actions.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "toPipelineId",
                        "name": "_toPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline that provided the task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "toAttemptId",
                        "name": "_toAttemptId",
                        "shape": "id",
                        "locationName": "attemptId",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline task attempt object. AWS Data Pipeline uses this value to track how many times a task is attempted.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "toObjects",
                        "name": "_toObjects",
                        "shape": "PipelineObjectMap",
                        "locationName": "objects",
                        "documentation": "\u003cp\u003eConnection information for the location where the task runner will publish the output of the task.\u003c/p\u003e",
                        "typeExposed": "HashMap Text PipelineObject",
                        "type": "Map Text PipelineObject"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 11,
                "name": "TaskObject",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "toTaskId",
                        "name": "_toTaskId",
                        "shape": "taskId",
                        "locationName": "taskId",
                        "documentation": "\u003cp\u003eAn internal identifier for the task. This ID is passed to the \u003ca\u003eSetTaskStatus\u003c/a\u003e and \u003ca\u003eReportTaskProgress\u003c/a\u003e actions.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "toPipelineId",
                        "name": "_toPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline that provided the task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "toAttemptId",
                        "name": "_toAttemptId",
                        "shape": "id",
                        "locationName": "attemptId",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline task attempt object. AWS Data Pipeline uses this value to track how many times a task is attempted.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "toObjects",
                        "name": "_toObjects",
                        "shape": "PipelineObjectMap",
                        "locationName": "objects",
                        "documentation": "\u003cp\u003eConnection information for the location where the task runner will publish the output of the task.\u003c/p\u003e",
                        "typeExposed": "HashMap Text PipelineObject",
                        "type": "Map Text PipelineObject"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "toAttemptId",
                        "name": "_toAttemptId",
                        "shape": "id",
                        "locationName": "attemptId",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline task attempt object. AWS Data Pipeline uses this value to track how many times a task is attempted.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "toObjects",
                        "name": "_toObjects",
                        "shape": "PipelineObjectMap",
                        "locationName": "objects",
                        "documentation": "\u003cp\u003eConnection information for the location where the task runner will publish the output of the task.\u003c/p\u003e",
                        "typeExposed": "HashMap Text PipelineObject",
                        "type": "Map Text PipelineObject"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "toPipelineId",
                        "name": "_toPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline that provided the task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "toTaskId",
                        "name": "_toTaskId",
                        "shape": "taskId",
                        "locationName": "taskId",
                        "documentation": "\u003cp\u003eAn internal identifier for the task. This ID is passed to the \u003ca\u003eSetTaskStatus\u003c/a\u003e and \u003ca\u003eReportTaskProgress\u003c/a\u003e actions.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 9,
                "ctor": "validationError",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "veId",
                        "name": "_veId",
                        "shape": "id",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eThe identifier of the object that contains the validation error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "veErrors",
                        "name": "_veErrors",
                        "shape": "validationMessages",
                        "locationName": "errors",
                        "documentation": "\u003cp\u003eA description of the validation error.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 7,
                "name": "ValidationError",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "veId",
                        "name": "_veId",
                        "shape": "id",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eThe identifier of the object that contains the validation error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "veErrors",
                        "name": "_veErrors",
                        "shape": "validationMessages",
                        "locationName": "errors",
                        "documentation": "\u003cp\u003eA description of the validation error.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "veErrors",
                        "name": "_veErrors",
                        "shape": "validationMessages",
                        "locationName": "errors",
                        "documentation": "\u003cp\u003eA description of the validation error.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "veId",
                        "name": "_veId",
                        "shape": "id",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eThe identifier of the object that contains the validation error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "pipelineDescription",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pdPipelineId",
                        "name": "_pdPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe pipeline identifier that was assigned by AWS Data Pipeline. This is a string of the form \u003ccode\u003edf-297EG78HU43EEXAMPLE\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pdName",
                        "name": "_pdName",
                        "shape": "id",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eName of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "pdFields",
                        "name": "_pdFields",
                        "shape": "fieldList",
                        "locationName": "fields",
                        "documentation": "\u003cp\u003eA list of read-only fields that contain metadata about the pipeline: @userId, @accountId, and @pipelineState.\u003c/p\u003e",
                        "typeExposed": "[Field]",
                        "type": "[Field]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pdDescription",
                        "name": "_pdDescription",
                        "shape": "string",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eDescription of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pdPipelineId",
                        "name": "_pdPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe pipeline identifier that was assigned by AWS Data Pipeline. This is a string of the form \u003ccode\u003edf-297EG78HU43EEXAMPLE\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pdName",
                        "name": "_pdName",
                        "shape": "id",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eName of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 12,
                "name": "PipelineDescription",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "pdFields",
                        "name": "_pdFields",
                        "shape": "fieldList",
                        "locationName": "fields",
                        "documentation": "\u003cp\u003eA list of read-only fields that contain metadata about the pipeline: @userId, @accountId, and @pipelineState.\u003c/p\u003e",
                        "typeExposed": "[Field]",
                        "type": "[Field]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pdDescription",
                        "name": "_pdDescription",
                        "shape": "string",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eDescription of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pdDescription",
                        "name": "_pdDescription",
                        "shape": "string",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eDescription of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "pdFields",
                        "name": "_pdFields",
                        "shape": "fieldList",
                        "locationName": "fields",
                        "documentation": "\u003cp\u003eA list of read-only fields that contain metadata about the pipeline: @userId, @accountId, and @pipelineState.\u003c/p\u003e",
                        "typeExposed": "[Field]",
                        "type": "[Field]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pdName",
                        "name": "_pdName",
                        "shape": "id",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eName of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pdPipelineId",
                        "name": "_pdPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe pipeline identifier that was assigned by AWS Data Pipeline. This is a string of the form \u003ccode\u003edf-297EG78HU43EEXAMPLE\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "instanceIdentity",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iiDocument",
                        "name": "_iiDocument",
                        "shape": "string",
                        "locationName": "document",
                        "documentation": "\u003cp\u003eA description of an Amazon EC2 instance that is generated when the instance is launched and exposed to the instance via the instance metadata service in the form of a JSON representation of an object.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iiSignature",
                        "name": "_iiSignature",
                        "shape": "string",
                        "locationName": "signature",
                        "documentation": "\u003cp\u003eA signature which can be used to verify the accuracy and authenticity of the information provided in the instance identity document.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 10,
                "name": "InstanceIdentity",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iiDocument",
                        "name": "_iiDocument",
                        "shape": "string",
                        "locationName": "document",
                        "documentation": "\u003cp\u003eA description of an Amazon EC2 instance that is generated when the instance is launched and exposed to the instance via the instance metadata service in the form of a JSON representation of an object.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iiSignature",
                        "name": "_iiSignature",
                        "shape": "string",
                        "locationName": "signature",
                        "documentation": "\u003cp\u003eA signature which can be used to verify the accuracy and authenticity of the information provided in the instance identity document.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iiDocument",
                        "name": "_iiDocument",
                        "shape": "string",
                        "locationName": "document",
                        "documentation": "\u003cp\u003eA description of an Amazon EC2 instance that is generated when the instance is launched and exposed to the instance via the instance metadata service in the form of a JSON representation of an object.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iiSignature",
                        "name": "_iiSignature",
                        "shape": "string",
                        "locationName": "signature",
                        "documentation": "\u003cp\u003eA signature which can be used to verify the accuracy and authenticity of the information provided in the instance identity document.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Semigroup"
                ],
                "listElement": "Selector",
                "fieldPad": 0,
                "ctor": "query",
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "qSelectors",
                    "name": "_qSelectors",
                    "shape": "SelectorList",
                    "locationName": "selectors",
                    "documentation": "\u003cp\u003eList of selectors that define the query. An object must satisfy all of the selectors to match the query.\u003c/p\u003e",
                    "typeExposed": "[Selector]",
                    "type": "[Selector]"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "qSelectors",
                        "name": "_qSelectors",
                        "shape": "SelectorList",
                        "locationName": "selectors",
                        "documentation": "\u003cp\u003eList of selectors that define the query. An object must satisfy all of the selectors to match the query.\u003c/p\u003e",
                        "typeExposed": "[Selector]",
                        "type": "[Selector]"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Query",
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "qSelectors",
                        "name": "_qSelectors",
                        "shape": "SelectorList",
                        "locationName": "selectors",
                        "documentation": "\u003cp\u003eList of selectors that define the query. An object must satisfy all of the selectors to match the query.\u003c/p\u003e",
                        "typeExposed": "[Selector]",
                        "type": "[Selector]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "qSelectors",
                        "name": "_qSelectors",
                        "shape": "SelectorList",
                        "locationName": "selectors",
                        "documentation": "\u003cp\u003eList of selectors that define the query. An object must satisfy all of the selectors to match the query.\u003c/p\u003e",
                        "typeExposed": "[Selector]",
                        "type": "[Selector]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "OperatorEq": "EQ",
                    "OperatorGe": "GE",
                    "OperatorBetween": "BETWEEN",
                    "OperatorRefEq": "REF_EQ",
                    "OperatorLe": "LE"
                },
                "valuePad": 8,
                "name": "OperatorType",
                "type": "nullary",
                "branchPad": 15
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 8,
                "ctor": "pipelineIdName",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pinId",
                        "name": "_pinId",
                        "shape": "id",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline that was assigned by AWS Data Pipeline. This is a string of the form \u003ccode\u003edf-297EG78HU43EEXAMPLE\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pinName",
                        "name": "_pinName",
                        "shape": "id",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eName of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 5,
                "name": "PipelineIdName",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pinId",
                        "name": "_pinId",
                        "shape": "id",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline that was assigned by AWS Data Pipeline. This is a string of the form \u003ccode\u003edf-297EG78HU43EEXAMPLE\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pinName",
                        "name": "_pinName",
                        "shape": "id",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eName of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pinId",
                        "name": "_pinId",
                        "shape": "id",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline that was assigned by AWS Data Pipeline. This is a string of the form \u003ccode\u003edf-297EG78HU43EEXAMPLE\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pinName",
                        "name": "_pinName",
                        "shape": "id",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eName of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Finished": "FINISHED",
                    "False'": "FALSE",
                    "Failed": "FAILED"
                },
                "valuePad": 9,
                "name": "TaskStatus",
                "type": "nullary",
                "branchPad": 8
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 11,
                "ctor": "validationWarning",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vwId",
                        "name": "_vwId",
                        "shape": "id",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eThe identifier of the object that contains the validation warning.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vwWarnings",
                        "name": "_vwWarnings",
                        "shape": "validationMessages",
                        "locationName": "warnings",
                        "documentation": "\u003cp\u003eA description of the validation warning.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 9,
                "name": "ValidationWarning",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vwId",
                        "name": "_vwId",
                        "shape": "id",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eThe identifier of the object that contains the validation warning.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vwWarnings",
                        "name": "_vwWarnings",
                        "shape": "validationMessages",
                        "locationName": "warnings",
                        "documentation": "\u003cp\u003eA description of the validation warning.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vwId",
                        "name": "_vwId",
                        "shape": "id",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eThe identifier of the object that contains the validation warning.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vwWarnings",
                        "name": "_vwWarnings",
                        "shape": "validationMessages",
                        "locationName": "warnings",
                        "documentation": "\u003cp\u003eA description of the validation warning.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        ],
        "imports": [],
        "shared": [
            "PipelineObject",
            "ValidationError",
            "ValidationWarning"
        ]
    },
    "operations": [
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "activatePipelineResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ActivatePipelineResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_ActivatePipeline.html",
            "namespace": "Network.AWS.DataPipeline.ActivatePipeline",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": null,
            "name": "ActivatePipeline",
            "method": "post",
            "documentation": "\u003cp\u003e Validates a pipeline and initiates processing. If the pipeline does not pass validation, activation fails. \u003c/p\u003e \u003cp\u003e Call this action to start processing pipeline tasks of a pipeline you've created using the \u003ca\u003eCreatePipeline\u003c/a\u003e and \u003ca\u003ePutPipelineDefinition\u003c/a\u003e actions. A pipeline cannot be modified after it has been successfully activated. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "activatePipeline",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "apPipelineId",
                    "name": "_apPipelineId",
                    "shape": "id",
                    "locationName": "pipelineId",
                    "documentation": "\u003cp\u003eThe identifier of the pipeline to activate. \u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "apPipelineId",
                        "name": "_apPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline to activate. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "apPipelineId",
                        "name": "_apPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline to activate. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "ActivatePipeline",
                "query": [],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "apPipelineId",
                        "name": "_apPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline to activate. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "createPipelineResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "cprPipelineId",
                    "name": "_cprPipelineId",
                    "shape": "id",
                    "locationName": "pipelineId",
                    "documentation": "\u003cp\u003eThe ID that AWS Data Pipeline assigns the newly created pipeline. The ID is a string of the form: df-06372391ZG65EXAMPLE.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cprPipelineId",
                        "name": "_cprPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe ID that AWS Data Pipeline assigns the newly created pipeline. The ID is a string of the form: df-06372391ZG65EXAMPLE.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cprPipelineId",
                        "name": "_cprPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe ID that AWS Data Pipeline assigns the newly created pipeline. The ID is a string of the form: df-06372391ZG65EXAMPLE.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreatePipelineResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cprPipelineId",
                        "name": "_cprPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe ID that AWS Data Pipeline assigns the newly created pipeline. The ID is a string of the form: df-06372391ZG65EXAMPLE.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_CreatePipeline.html",
            "namespace": "Network.AWS.DataPipeline.CreatePipeline",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": null,
            "name": "CreatePipeline",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a new empty pipeline. When this action succeeds, you can then use the \u003ca\u003ePutPipelineDefinition\u003c/a\u003e action to populate the pipeline.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "createPipeline",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpName",
                        "name": "_cpName",
                        "shape": "id",
                        "locationName": "name",
                        "documentation": "\u003cp\u003e The name of the new pipeline. You can use the same name for multiple pipelines associated with your AWS account, because AWS Data Pipeline assigns each new pipeline a unique pipeline identifier. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpUniqueId",
                        "name": "_cpUniqueId",
                        "shape": "id",
                        "locationName": "uniqueId",
                        "documentation": "\u003cp\u003e A unique identifier that you specify. This identifier is not the same as the pipeline identifier assigned by AWS Data Pipeline. You are responsible for defining the format and ensuring the uniqueness of this identifier. You use this parameter to ensure idempotency during repeated calls to \u003ca\u003eCreatePipeline\u003c/a\u003e. For example, if the first call to \u003ca\u003eCreatePipeline\u003c/a\u003e does not return a clear success, you can pass in the same unique identifier and pipeline name combination on a subsequent call to \u003ca\u003eCreatePipeline\u003c/a\u003e. \u003ca\u003eCreatePipeline\u003c/a\u003e ensures that if a pipeline already exists with the same name and unique identifier, a new pipeline will not be created. Instead, you'll receive the pipeline identifier from the previous attempt. The uniqueness of the name and unique identifier combination is scoped to the AWS account or IAM user credentials. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpDescription",
                        "name": "_cpDescription",
                        "shape": "string",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description of the new pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpName",
                        "name": "_cpName",
                        "shape": "id",
                        "locationName": "name",
                        "documentation": "\u003cp\u003e The name of the new pipeline. You can use the same name for multiple pipelines associated with your AWS account, because AWS Data Pipeline assigns each new pipeline a unique pipeline identifier. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpUniqueId",
                        "name": "_cpUniqueId",
                        "shape": "id",
                        "locationName": "uniqueId",
                        "documentation": "\u003cp\u003e A unique identifier that you specify. This identifier is not the same as the pipeline identifier assigned by AWS Data Pipeline. You are responsible for defining the format and ensuring the uniqueness of this identifier. You use this parameter to ensure idempotency during repeated calls to \u003ca\u003eCreatePipeline\u003c/a\u003e. For example, if the first call to \u003ca\u003eCreatePipeline\u003c/a\u003e does not return a clear success, you can pass in the same unique identifier and pipeline name combination on a subsequent call to \u003ca\u003eCreatePipeline\u003c/a\u003e. \u003ca\u003eCreatePipeline\u003c/a\u003e ensures that if a pipeline already exists with the same name and unique identifier, a new pipeline will not be created. Instead, you'll receive the pipeline identifier from the previous attempt. The uniqueness of the name and unique identifier combination is scoped to the AWS account or IAM user credentials. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 12,
                "queryPad": 0,
                "name": "CreatePipeline",
                "query": [],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpDescription",
                        "name": "_cpDescription",
                        "shape": "string",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description of the new pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpDescription",
                        "name": "_cpDescription",
                        "shape": "string",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description of the new pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpName",
                        "name": "_cpName",
                        "shape": "id",
                        "locationName": "name",
                        "documentation": "\u003cp\u003e The name of the new pipeline. You can use the same name for multiple pipelines associated with your AWS account, because AWS Data Pipeline assigns each new pipeline a unique pipeline identifier. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpUniqueId",
                        "name": "_cpUniqueId",
                        "shape": "id",
                        "locationName": "uniqueId",
                        "documentation": "\u003cp\u003e A unique identifier that you specify. This identifier is not the same as the pipeline identifier assigned by AWS Data Pipeline. You are responsible for defining the format and ensuring the uniqueness of this identifier. You use this parameter to ensure idempotency during repeated calls to \u003ca\u003eCreatePipeline\u003c/a\u003e. For example, if the first call to \u003ca\u003eCreatePipeline\u003c/a\u003e does not return a clear success, you can pass in the same unique identifier and pipeline name combination on a subsequent call to \u003ca\u003eCreatePipeline\u003c/a\u003e. \u003ca\u003eCreatePipeline\u003c/a\u003e ensures that if a pipeline already exists with the same name and unique identifier, a new pipeline will not be created. Instead, you'll receive the pipeline identifier from the previous attempt. The uniqueness of the name and unique identifier combination is scoped to the AWS account or IAM user credentials. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deletePipelineResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeletePipelineResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_DeletePipeline.html",
            "namespace": "Network.AWS.DataPipeline.DeletePipeline",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": null,
            "name": "DeletePipeline",
            "method": "post",
            "documentation": "\u003cp\u003e Permanently deletes a pipeline, its pipeline definition and its run history. You cannot query or restore a deleted pipeline. AWS Data Pipeline will attempt to cancel instances associated with the pipeline that are currently being processed by task runners. Deleting a pipeline cannot be undone. \u003c/p\u003e \u003cp\u003e To temporarily pause a pipeline instead of deleting it, call \u003ca\u003eSetStatus\u003c/a\u003e with the status set to Pause on individual components. Components that are paused by \u003ca\u003eSetStatus\u003c/a\u003e can be resumed. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "deletePipeline",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dpPipelineId",
                    "name": "_dpPipelineId",
                    "shape": "id",
                    "locationName": "pipelineId",
                    "documentation": "\u003cp\u003eThe identifier of the pipeline to be deleted.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dpPipelineId",
                        "name": "_dpPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline to be deleted.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dpPipelineId",
                        "name": "_dpPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline to be deleted.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeletePipeline",
                "query": [],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dpPipelineId",
                        "name": "_dpPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline to be deleted.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 19,
                "ctor": "describeObjectsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dorPipelineObjects",
                        "name": "_dorPipelineObjects",
                        "shape": "PipelineObjectList",
                        "locationName": "pipelineObjects",
                        "documentation": "\u003cp\u003eAn array of object definitions that are returned by the call to \u003ca\u003eDescribeObjects\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "[PipelineObject]",
                        "type": "[PipelineObject]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dorMarker",
                        "name": "_dorMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003e The starting point for the next page of results. To view the next page of results, call \u003ca\u003eDescribeObjects\u003c/a\u003e again with this marker value. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dorHasMoreResults",
                        "name": "_dorHasMoreResults",
                        "shape": "boolean",
                        "locationName": "hasMoreResults",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there are more pages of results to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 16,
                "name": "DescribeObjectsResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dorPipelineObjects",
                        "name": "_dorPipelineObjects",
                        "shape": "PipelineObjectList",
                        "locationName": "pipelineObjects",
                        "documentation": "\u003cp\u003eAn array of object definitions that are returned by the call to \u003ca\u003eDescribeObjects\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "[PipelineObject]",
                        "type": "[PipelineObject]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dorMarker",
                        "name": "_dorMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003e The starting point for the next page of results. To view the next page of results, call \u003ca\u003eDescribeObjects\u003c/a\u003e again with this marker value. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dorHasMoreResults",
                        "name": "_dorHasMoreResults",
                        "shape": "boolean",
                        "locationName": "hasMoreResults",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there are more pages of results to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dorHasMoreResults",
                        "name": "_dorHasMoreResults",
                        "shape": "boolean",
                        "locationName": "hasMoreResults",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there are more pages of results to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dorMarker",
                        "name": "_dorMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003e The starting point for the next page of results. To view the next page of results, call \u003ca\u003eDescribeObjects\u003c/a\u003e again with this marker value. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dorPipelineObjects",
                        "name": "_dorPipelineObjects",
                        "shape": "PipelineObjectList",
                        "locationName": "pipelineObjects",
                        "documentation": "\u003cp\u003eAn array of object definitions that are returned by the call to \u003ca\u003eDescribeObjects\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "[PipelineObject]",
                        "type": "[PipelineObject]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_DescribeObjects.html",
            "namespace": "Network.AWS.DataPipeline.DescribeObjects",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": {
                "more": "dorHasMoreResults",
                "token": {
                    "input": "doMarker",
                    "output": "dorMarker"
                },
                "type": "one"
            },
            "name": "DescribeObjects",
            "method": "post",
            "documentation": "\u003cp\u003e Returns the object definitions for a set of objects associated with the pipeline. Object definitions are composed of a set of fields that define the properties of the object. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 22,
                "ctor": "describeObjects",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "doPipelineId",
                        "name": "_doPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline that contains the object definitions.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "doObjectIds",
                        "name": "_doObjectIds",
                        "shape": "idList",
                        "locationName": "objectIds",
                        "documentation": "\u003cp\u003eIdentifiers of the pipeline objects that contain the definitions to be described. You can pass as many as 25 identifiers in a single call to DescribeObjects.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doEvaluateExpressions",
                        "name": "_doEvaluateExpressions",
                        "shape": "boolean",
                        "locationName": "evaluateExpressions",
                        "documentation": "\u003cp\u003eIndicates whether any expressions in the object should be evaluated when the object descriptions are returned.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doMarker",
                        "name": "_doMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eThe starting point for the results to be returned. The first time you call \u003ca\u003eDescribeObjects\u003c/a\u003e, this value should be empty. As long as the action returns \u003ccode\u003eHasMoreResults\u003c/code\u003e as \u003ccode\u003eTrue\u003c/code\u003e, you can call \u003ca\u003eDescribeObjects\u003c/a\u003e again and pass the marker value from the response to retrieve the next set of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "doPipelineId",
                        "name": "_doPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline that contains the object definitions.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 20,
                "queryPad": 0,
                "name": "DescribeObjects",
                "query": [],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "doObjectIds",
                        "name": "_doObjectIds",
                        "shape": "idList",
                        "locationName": "objectIds",
                        "documentation": "\u003cp\u003eIdentifiers of the pipeline objects that contain the definitions to be described. You can pass as many as 25 identifiers in a single call to DescribeObjects.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doEvaluateExpressions",
                        "name": "_doEvaluateExpressions",
                        "shape": "boolean",
                        "locationName": "evaluateExpressions",
                        "documentation": "\u003cp\u003eIndicates whether any expressions in the object should be evaluated when the object descriptions are returned.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doMarker",
                        "name": "_doMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eThe starting point for the results to be returned. The first time you call \u003ca\u003eDescribeObjects\u003c/a\u003e, this value should be empty. As long as the action returns \u003ccode\u003eHasMoreResults\u003c/code\u003e as \u003ccode\u003eTrue\u003c/code\u003e, you can call \u003ca\u003eDescribeObjects\u003c/a\u003e again and pass the marker value from the response to retrieve the next set of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doEvaluateExpressions",
                        "name": "_doEvaluateExpressions",
                        "shape": "boolean",
                        "locationName": "evaluateExpressions",
                        "documentation": "\u003cp\u003eIndicates whether any expressions in the object should be evaluated when the object descriptions are returned.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doMarker",
                        "name": "_doMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eThe starting point for the results to be returned. The first time you call \u003ca\u003eDescribeObjects\u003c/a\u003e, this value should be empty. As long as the action returns \u003ccode\u003eHasMoreResults\u003c/code\u003e as \u003ccode\u003eTrue\u003c/code\u003e, you can call \u003ca\u003eDescribeObjects\u003c/a\u003e again and pass the marker value from the response to retrieve the next set of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "doObjectIds",
                        "name": "_doObjectIds",
                        "shape": "idList",
                        "locationName": "objectIds",
                        "documentation": "\u003cp\u003eIdentifiers of the pipeline objects that contain the definitions to be described. You can pass as many as 25 identifiers in a single call to DescribeObjects.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "doPipelineId",
                        "name": "_doPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline that contains the object definitions.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "PipelineDescription",
                "style": "json",
                "fieldPad": 0,
                "ctor": "describePipelinesResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dprPipelineDescriptionList",
                    "name": "_dprPipelineDescriptionList",
                    "shape": "PipelineDescriptionList",
                    "locationName": "pipelineDescriptionList",
                    "documentation": "\u003cp\u003eAn array of descriptions returned for the specified pipelines.\u003c/p\u003e",
                    "typeExposed": "[PipelineDescription]",
                    "type": "[PipelineDescription]"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dprPipelineDescriptionList",
                        "name": "_dprPipelineDescriptionList",
                        "shape": "PipelineDescriptionList",
                        "locationName": "pipelineDescriptionList",
                        "documentation": "\u003cp\u003eAn array of descriptions returned for the specified pipelines.\u003c/p\u003e",
                        "typeExposed": "[PipelineDescription]",
                        "type": "[PipelineDescription]"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribePipelinesResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dprPipelineDescriptionList",
                        "name": "_dprPipelineDescriptionList",
                        "shape": "PipelineDescriptionList",
                        "locationName": "pipelineDescriptionList",
                        "documentation": "\u003cp\u003eAn array of descriptions returned for the specified pipelines.\u003c/p\u003e",
                        "typeExposed": "[PipelineDescription]",
                        "type": "[PipelineDescription]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dprPipelineDescriptionList",
                        "name": "_dprPipelineDescriptionList",
                        "shape": "PipelineDescriptionList",
                        "locationName": "pipelineDescriptionList",
                        "documentation": "\u003cp\u003eAn array of descriptions returned for the specified pipelines.\u003c/p\u003e",
                        "typeExposed": "[PipelineDescription]",
                        "type": "[PipelineDescription]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_DescribePipelines.html",
            "namespace": "Network.AWS.DataPipeline.DescribePipelines",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": null,
            "name": "DescribePipelines",
            "method": "post",
            "documentation": "\u003cp\u003e Retrieve metadata about one or more pipelines. The information retrieved includes the name of the pipeline, the pipeline identifier, its current state, and the user account that owns the pipeline. Using account credentials, you can retrieve metadata about pipelines that you or your IAM users have created. If you are using an IAM user account, you can retrieve metadata about only those pipelines you have read permission for. \u003c/p\u003e \u003cp\u003e To retrieve the full pipeline definition instead of metadata about the pipeline, call the \u003ca\u003eGetPipelineDefinition\u003c/a\u003e action. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "Text",
                "style": "json",
                "fieldPad": 0,
                "ctor": "describePipelines",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dpPipelineIds",
                    "name": "_dpPipelineIds",
                    "shape": "idList",
                    "locationName": "pipelineIds",
                    "documentation": "\u003cp\u003eIdentifiers of the pipelines to describe. You can pass as many as 25 identifiers in a single call to \u003ca\u003eDescribePipelines\u003c/a\u003e. You can obtain pipeline identifiers by calling \u003ca\u003eListPipelines\u003c/a\u003e.\u003c/p\u003e",
                    "typeExposed": "[Text]",
                    "type": "[Text]"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dpPipelineIds",
                        "name": "_dpPipelineIds",
                        "shape": "idList",
                        "locationName": "pipelineIds",
                        "documentation": "\u003cp\u003eIdentifiers of the pipelines to describe. You can pass as many as 25 identifiers in a single call to \u003ca\u003eDescribePipelines\u003c/a\u003e. You can obtain pipeline identifiers by calling \u003ca\u003eListPipelines\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DescribePipelines",
                "query": [],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dpPipelineIds",
                        "name": "_dpPipelineIds",
                        "shape": "idList",
                        "locationName": "pipelineIds",
                        "documentation": "\u003cp\u003eIdentifiers of the pipelines to describe. You can pass as many as 25 identifiers in a single call to \u003ca\u003eDescribePipelines\u003c/a\u003e. You can obtain pipeline identifiers by calling \u003ca\u003eListPipelines\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dpPipelineIds",
                        "name": "_dpPipelineIds",
                        "shape": "idList",
                        "locationName": "pipelineIds",
                        "documentation": "\u003cp\u003eIdentifiers of the pipelines to describe. You can pass as many as 25 identifiers in a single call to \u003ca\u003eDescribePipelines\u003c/a\u003e. You can obtain pipeline identifiers by calling \u003ca\u003eListPipelines\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "evaluateExpressionResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "eerEvaluatedExpression",
                    "name": "_eerEvaluatedExpression",
                    "shape": "longString",
                    "locationName": "evaluatedExpression",
                    "documentation": "\u003cp\u003eThe evaluated expression.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "eerEvaluatedExpression",
                        "name": "_eerEvaluatedExpression",
                        "shape": "longString",
                        "locationName": "evaluatedExpression",
                        "documentation": "\u003cp\u003eThe evaluated expression.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "eerEvaluatedExpression",
                        "name": "_eerEvaluatedExpression",
                        "shape": "longString",
                        "locationName": "evaluatedExpression",
                        "documentation": "\u003cp\u003eThe evaluated expression.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "EvaluateExpressionResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "eerEvaluatedExpression",
                        "name": "_eerEvaluatedExpression",
                        "shape": "longString",
                        "locationName": "evaluatedExpression",
                        "documentation": "\u003cp\u003eThe evaluated expression.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_EvaluateExpression.html",
            "namespace": "Network.AWS.DataPipeline.EvaluateExpression",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": null,
            "name": "EvaluateExpression",
            "method": "post",
            "documentation": "\u003cp\u003eEvaluates a string in the context of a specified object. A task runner can use this action to evaluate SQL queries stored in Amazon S3. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 13,
                "ctor": "evaluateExpression",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "eePipelineId",
                        "name": "_eePipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "eeObjectId",
                        "name": "_eeObjectId",
                        "shape": "id",
                        "locationName": "objectId",
                        "documentation": "\u003cp\u003eThe identifier of the object.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "eeExpression",
                        "name": "_eeExpression",
                        "shape": "longString",
                        "locationName": "expression",
                        "documentation": "\u003cp\u003eThe expression to evaluate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "eePipelineId",
                        "name": "_eePipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "eeObjectId",
                        "name": "_eeObjectId",
                        "shape": "id",
                        "locationName": "objectId",
                        "documentation": "\u003cp\u003eThe identifier of the object.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "eeExpression",
                        "name": "_eeExpression",
                        "shape": "longString",
                        "locationName": "expression",
                        "documentation": "\u003cp\u003eThe expression to evaluate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 11,
                "queryPad": 0,
                "name": "EvaluateExpression",
                "query": [],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "eeExpression",
                        "name": "_eeExpression",
                        "shape": "longString",
                        "locationName": "expression",
                        "documentation": "\u003cp\u003eThe expression to evaluate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "eeObjectId",
                        "name": "_eeObjectId",
                        "shape": "id",
                        "locationName": "objectId",
                        "documentation": "\u003cp\u003eThe identifier of the object.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "eePipelineId",
                        "name": "_eePipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "PipelineObject",
                "style": "json",
                "fieldPad": 0,
                "ctor": "getPipelineDefinitionResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "gpdrPipelineObjects",
                    "name": "_gpdrPipelineObjects",
                    "shape": "PipelineObjectList",
                    "locationName": "pipelineObjects",
                    "documentation": "\u003cp\u003eAn array of objects defined in the pipeline.\u003c/p\u003e",
                    "typeExposed": "[PipelineObject]",
                    "type": "[PipelineObject]"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gpdrPipelineObjects",
                        "name": "_gpdrPipelineObjects",
                        "shape": "PipelineObjectList",
                        "locationName": "pipelineObjects",
                        "documentation": "\u003cp\u003eAn array of objects defined in the pipeline.\u003c/p\u003e",
                        "typeExposed": "[PipelineObject]",
                        "type": "[PipelineObject]"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetPipelineDefinitionResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gpdrPipelineObjects",
                        "name": "_gpdrPipelineObjects",
                        "shape": "PipelineObjectList",
                        "locationName": "pipelineObjects",
                        "documentation": "\u003cp\u003eAn array of objects defined in the pipeline.\u003c/p\u003e",
                        "typeExposed": "[PipelineObject]",
                        "type": "[PipelineObject]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gpdrPipelineObjects",
                        "name": "_gpdrPipelineObjects",
                        "shape": "PipelineObjectList",
                        "locationName": "pipelineObjects",
                        "documentation": "\u003cp\u003eAn array of objects defined in the pipeline.\u003c/p\u003e",
                        "typeExposed": "[PipelineObject]",
                        "type": "[PipelineObject]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_GetPipelineDefinition.html",
            "namespace": "Network.AWS.DataPipeline.GetPipelineDefinition",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": null,
            "name": "GetPipelineDefinition",
            "method": "post",
            "documentation": "\u003cp\u003eReturns the definition of the specified pipeline. You can call \u003ca\u003eGetPipelineDefinition\u003c/a\u003e to retrieve the pipeline definition you provided using \u003ca\u003ePutPipelineDefinition\u003c/a\u003e.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "getPipelineDefinition",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gpdPipelineId",
                        "name": "_gpdPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gpdVersion",
                        "name": "_gpdVersion",
                        "shape": "string",
                        "locationName": "version",
                        "documentation": "\u003cp\u003eThe version of the pipeline definition to retrieve. This parameter accepts the values \u003ccode\u003elatest\u003c/code\u003e (default) and \u003ccode\u003eactive\u003c/code\u003e. Where \u003ccode\u003elatest\u003c/code\u003e indicates the last definition saved to the pipeline and \u003ccode\u003eactive\u003c/code\u003e indicates the last definition of the pipeline that was activated.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gpdPipelineId",
                        "name": "_gpdPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 11,
                "queryPad": 0,
                "name": "GetPipelineDefinition",
                "query": [],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gpdVersion",
                        "name": "_gpdVersion",
                        "shape": "string",
                        "locationName": "version",
                        "documentation": "\u003cp\u003eThe version of the pipeline definition to retrieve. This parameter accepts the values \u003ccode\u003elatest\u003c/code\u003e (default) and \u003ccode\u003eactive\u003c/code\u003e. Where \u003ccode\u003elatest\u003c/code\u003e indicates the last definition saved to the pipeline and \u003ccode\u003eactive\u003c/code\u003e indicates the last definition of the pipeline that was activated.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gpdPipelineId",
                        "name": "_gpdPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gpdVersion",
                        "name": "_gpdVersion",
                        "shape": "string",
                        "locationName": "version",
                        "documentation": "\u003cp\u003eThe version of the pipeline definition to retrieve. This parameter accepts the values \u003ccode\u003elatest\u003c/code\u003e (default) and \u003ccode\u003eactive\u003c/code\u003e. Where \u003ccode\u003elatest\u003c/code\u003e indicates the last definition saved to the pipeline and \u003ccode\u003eactive\u003c/code\u003e indicates the last definition of the pipeline that was activated.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 18,
                "ctor": "listPipelinesResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lprPipelineIdList",
                        "name": "_lprPipelineIdList",
                        "shape": "pipelineList",
                        "locationName": "pipelineIdList",
                        "documentation": "\u003cp\u003e A list of all the pipeline identifiers that your account has permission to access. If you require additional information about the pipelines, you can use these identifiers to call \u003ca\u003eDescribePipelines\u003c/a\u003e and \u003ca\u003eGetPipelineDefinition\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "[PipelineIdName]",
                        "type": "[PipelineIdName]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lprMarker",
                        "name": "_lprMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eIf not null, indicates the starting point for the set of pipeline identifiers that the next call to \u003ca\u003eListPipelines\u003c/a\u003e will retrieve. If null, there are no more pipeline identifiers.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lprHasMoreResults",
                        "name": "_lprHasMoreResults",
                        "shape": "boolean",
                        "locationName": "hasMoreResults",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there are more results that can be obtained by a subsequent call to \u003ca\u003eListPipelines\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "name": "ListPipelinesResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lprPipelineIdList",
                        "name": "_lprPipelineIdList",
                        "shape": "pipelineList",
                        "locationName": "pipelineIdList",
                        "documentation": "\u003cp\u003e A list of all the pipeline identifiers that your account has permission to access. If you require additional information about the pipelines, you can use these identifiers to call \u003ca\u003eDescribePipelines\u003c/a\u003e and \u003ca\u003eGetPipelineDefinition\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "[PipelineIdName]",
                        "type": "[PipelineIdName]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lprMarker",
                        "name": "_lprMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eIf not null, indicates the starting point for the set of pipeline identifiers that the next call to \u003ca\u003eListPipelines\u003c/a\u003e will retrieve. If null, there are no more pipeline identifiers.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lprHasMoreResults",
                        "name": "_lprHasMoreResults",
                        "shape": "boolean",
                        "locationName": "hasMoreResults",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there are more results that can be obtained by a subsequent call to \u003ca\u003eListPipelines\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lprHasMoreResults",
                        "name": "_lprHasMoreResults",
                        "shape": "boolean",
                        "locationName": "hasMoreResults",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there are more results that can be obtained by a subsequent call to \u003ca\u003eListPipelines\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lprMarker",
                        "name": "_lprMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eIf not null, indicates the starting point for the set of pipeline identifiers that the next call to \u003ca\u003eListPipelines\u003c/a\u003e will retrieve. If null, there are no more pipeline identifiers.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lprPipelineIdList",
                        "name": "_lprPipelineIdList",
                        "shape": "pipelineList",
                        "locationName": "pipelineIdList",
                        "documentation": "\u003cp\u003e A list of all the pipeline identifiers that your account has permission to access. If you require additional information about the pipelines, you can use these identifiers to call \u003ca\u003eDescribePipelines\u003c/a\u003e and \u003ca\u003eGetPipelineDefinition\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "[PipelineIdName]",
                        "type": "[PipelineIdName]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_ListPipelines.html",
            "namespace": "Network.AWS.DataPipeline.ListPipelines",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": {
                "more": "lprHasMoreResults",
                "token": {
                    "input": "lpMarker",
                    "output": "lprMarker"
                },
                "type": "one"
            },
            "name": "ListPipelines",
            "method": "post",
            "documentation": "\u003cp\u003eReturns a list of pipeline identifiers for all active pipelines. Identifiers are returned only for pipelines you have permission to access. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "listPipelines",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "lpMarker",
                    "name": "_lpMarker",
                    "shape": "string",
                    "locationName": "marker",
                    "documentation": "\u003cp\u003eThe starting point for the results to be returned. The first time you call \u003ca\u003eListPipelines\u003c/a\u003e, this value should be empty. As long as the action returns \u003ccode\u003eHasMoreResults\u003c/code\u003e as \u003ccode\u003eTrue\u003c/code\u003e, you can call \u003ca\u003eListPipelines\u003c/a\u003e again and pass the marker value from the response to retrieve the next set of results.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpMarker",
                        "name": "_lpMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eThe starting point for the results to be returned. The first time you call \u003ca\u003eListPipelines\u003c/a\u003e, this value should be empty. As long as the action returns \u003ccode\u003eHasMoreResults\u003c/code\u003e as \u003ccode\u003eTrue\u003c/code\u003e, you can call \u003ca\u003eListPipelines\u003c/a\u003e again and pass the marker value from the response to retrieve the next set of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "ListPipelines",
                "query": [],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpMarker",
                        "name": "_lpMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eThe starting point for the results to be returned. The first time you call \u003ca\u003eListPipelines\u003c/a\u003e, this value should be empty. As long as the action returns \u003ccode\u003eHasMoreResults\u003c/code\u003e as \u003ccode\u003eTrue\u003c/code\u003e, you can call \u003ca\u003eListPipelines\u003c/a\u003e again and pass the marker value from the response to retrieve the next set of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpMarker",
                        "name": "_lpMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eThe starting point for the results to be returned. The first time you call \u003ca\u003eListPipelines\u003c/a\u003e, this value should be empty. As long as the action returns \u003ccode\u003eHasMoreResults\u003c/code\u003e as \u003ccode\u003eTrue\u003c/code\u003e, you can call \u003ca\u003eListPipelines\u003c/a\u003e again and pass the marker value from the response to retrieve the next set of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "pollForTaskResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "pftrTaskObject",
                    "name": "_pftrTaskObject",
                    "shape": "TaskObject",
                    "locationName": "taskObject",
                    "documentation": "\u003cp\u003eAn instance of \u003ca\u003ePollForTaskResult\u003c/a\u003e, which contains an instance of \u003ca\u003eTaskObject\u003c/a\u003e. The returned object contains all the information needed to complete the task that is being assigned to the task runner. One of the fields returned in this object is taskId, which contains an identifier for the task being assigned. The calling task runner uses taskId in subsequent calls to \u003ca\u003eReportTaskProgress\u003c/a\u003e and \u003ca\u003eSetTaskStatus\u003c/a\u003e.\u003c/p\u003e",
                    "typeExposed": "Maybe TaskObject",
                    "type": "Maybe TaskObject"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pftrTaskObject",
                        "name": "_pftrTaskObject",
                        "shape": "TaskObject",
                        "locationName": "taskObject",
                        "documentation": "\u003cp\u003eAn instance of \u003ca\u003ePollForTaskResult\u003c/a\u003e, which contains an instance of \u003ca\u003eTaskObject\u003c/a\u003e. The returned object contains all the information needed to complete the task that is being assigned to the task runner. One of the fields returned in this object is taskId, which contains an identifier for the task being assigned. The calling task runner uses taskId in subsequent calls to \u003ca\u003eReportTaskProgress\u003c/a\u003e and \u003ca\u003eSetTaskStatus\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe TaskObject",
                        "type": "Maybe TaskObject"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "PollForTaskResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pftrTaskObject",
                        "name": "_pftrTaskObject",
                        "shape": "TaskObject",
                        "locationName": "taskObject",
                        "documentation": "\u003cp\u003eAn instance of \u003ca\u003ePollForTaskResult\u003c/a\u003e, which contains an instance of \u003ca\u003eTaskObject\u003c/a\u003e. The returned object contains all the information needed to complete the task that is being assigned to the task runner. One of the fields returned in this object is taskId, which contains an identifier for the task being assigned. The calling task runner uses taskId in subsequent calls to \u003ca\u003eReportTaskProgress\u003c/a\u003e and \u003ca\u003eSetTaskStatus\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe TaskObject",
                        "type": "Maybe TaskObject"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pftrTaskObject",
                        "name": "_pftrTaskObject",
                        "shape": "TaskObject",
                        "locationName": "taskObject",
                        "documentation": "\u003cp\u003eAn instance of \u003ca\u003ePollForTaskResult\u003c/a\u003e, which contains an instance of \u003ca\u003eTaskObject\u003c/a\u003e. The returned object contains all the information needed to complete the task that is being assigned to the task runner. One of the fields returned in this object is taskId, which contains an identifier for the task being assigned. The calling task runner uses taskId in subsequent calls to \u003ca\u003eReportTaskProgress\u003c/a\u003e and \u003ca\u003eSetTaskStatus\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe TaskObject",
                        "type": "Maybe TaskObject"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_PollForTask.html",
            "namespace": "Network.AWS.DataPipeline.PollForTask",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": null,
            "name": "PollForTask",
            "method": "post",
            "documentation": "\u003cp\u003e Task runners call this action to receive a task to perform from AWS Data Pipeline. The task runner specifies which tasks it can perform by setting a value for the workerGroup parameter of the \u003ca\u003ePollForTask\u003c/a\u003e call. The task returned by \u003ca\u003ePollForTask\u003c/a\u003e may come from any of the pipelines that match the workerGroup value passed in by the task runner and that was launched using the IAM user credentials specified by the task runner. \u003c/p\u003e \u003cp\u003e If tasks are ready in the work queue, \u003ca\u003ePollForTask\u003c/a\u003e returns a response immediately. If no tasks are available in the queue, \u003ca\u003ePollForTask\u003c/a\u003e uses long-polling and holds on to a poll connection for up to a 90 seconds during which time the first newly scheduled task is handed to the task runner. To accomodate this, set the socket timeout in your task runner to 90 seconds. The task runner should not call \u003ca\u003ePollForTask\u003c/a\u003e again on the same \u003ccode\u003eworkerGroup\u003c/code\u003e until it receives a response, and this may take up to 90 seconds. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 20,
                "ctor": "pollForTask",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pftWorkerGroup",
                        "name": "_pftWorkerGroup",
                        "shape": "string",
                        "locationName": "workerGroup",
                        "documentation": "\u003cp\u003eIndicates the type of task the task runner is configured to accept and process. The worker group is set as a field on objects in the pipeline when they are created. You can only specify a single value for \u003ccode\u003eworkerGroup\u003c/code\u003e in the call to \u003ca\u003ePollForTask\u003c/a\u003e. There are no wildcard values permitted in \u003ccode\u003eworkerGroup\u003c/code\u003e, the string must be an exact, case-sensitive, match. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pftHostname",
                        "name": "_pftHostname",
                        "shape": "id",
                        "locationName": "hostname",
                        "documentation": "\u003cp\u003eThe public DNS name of the calling task runner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pftInstanceIdentity",
                        "name": "_pftInstanceIdentity",
                        "shape": "InstanceIdentity",
                        "locationName": "instanceIdentity",
                        "documentation": "\u003cp\u003eIdentity information for the Amazon EC2 instance that is hosting the task runner. You can get this value by calling the URI, \u003ccode\u003ehttp://169.254.169.254/latest/meta-data/instance-id\u003c/code\u003e, from the EC2 instance. For more information, go to \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html\"\u003eInstance Metadata\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide.\u003c/i\u003e Passing in this value proves that your task runner is running on an EC2 instance, and ensures the proper AWS Data Pipeline service charges are applied to your pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceIdentity",
                        "type": "Maybe InstanceIdentity"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pftWorkerGroup",
                        "name": "_pftWorkerGroup",
                        "shape": "string",
                        "locationName": "workerGroup",
                        "documentation": "\u003cp\u003eIndicates the type of task the task runner is configured to accept and process. The worker group is set as a field on objects in the pipeline when they are created. You can only specify a single value for \u003ccode\u003eworkerGroup\u003c/code\u003e in the call to \u003ca\u003ePollForTask\u003c/a\u003e. There are no wildcard values permitted in \u003ccode\u003eworkerGroup\u003c/code\u003e, the string must be an exact, case-sensitive, match. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 17,
                "queryPad": 0,
                "name": "PollForTask",
                "query": [],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pftHostname",
                        "name": "_pftHostname",
                        "shape": "id",
                        "locationName": "hostname",
                        "documentation": "\u003cp\u003eThe public DNS name of the calling task runner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pftInstanceIdentity",
                        "name": "_pftInstanceIdentity",
                        "shape": "InstanceIdentity",
                        "locationName": "instanceIdentity",
                        "documentation": "\u003cp\u003eIdentity information for the Amazon EC2 instance that is hosting the task runner. You can get this value by calling the URI, \u003ccode\u003ehttp://169.254.169.254/latest/meta-data/instance-id\u003c/code\u003e, from the EC2 instance. For more information, go to \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html\"\u003eInstance Metadata\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide.\u003c/i\u003e Passing in this value proves that your task runner is running on an EC2 instance, and ensures the proper AWS Data Pipeline service charges are applied to your pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceIdentity",
                        "type": "Maybe InstanceIdentity"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pftHostname",
                        "name": "_pftHostname",
                        "shape": "id",
                        "locationName": "hostname",
                        "documentation": "\u003cp\u003eThe public DNS name of the calling task runner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pftInstanceIdentity",
                        "name": "_pftInstanceIdentity",
                        "shape": "InstanceIdentity",
                        "locationName": "instanceIdentity",
                        "documentation": "\u003cp\u003eIdentity information for the Amazon EC2 instance that is hosting the task runner. You can get this value by calling the URI, \u003ccode\u003ehttp://169.254.169.254/latest/meta-data/instance-id\u003c/code\u003e, from the EC2 instance. For more information, go to \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html\"\u003eInstance Metadata\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide.\u003c/i\u003e Passing in this value proves that your task runner is running on an EC2 instance, and ensures the proper AWS Data Pipeline service charges are applied to your pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceIdentity",
                        "type": "Maybe InstanceIdentity"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pftWorkerGroup",
                        "name": "_pftWorkerGroup",
                        "shape": "string",
                        "locationName": "workerGroup",
                        "documentation": "\u003cp\u003eIndicates the type of task the task runner is configured to accept and process. The worker group is set as a field on objects in the pipeline when they are created. You can only specify a single value for \u003ccode\u003eworkerGroup\u003c/code\u003e in the call to \u003ca\u003ePollForTask\u003c/a\u003e. There are no wildcard values permitted in \u003ccode\u003eworkerGroup\u003c/code\u003e, the string must be an exact, case-sensitive, match. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 23,
                "ctor": "putPipelineDefinitionResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ppdrValidationErrors",
                        "name": "_ppdrValidationErrors",
                        "shape": "ValidationErrors",
                        "locationName": "validationErrors",
                        "documentation": "\u003cp\u003eA list of the validation errors that are associated with the objects defined in \u003ccode\u003epipelineObjects\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "[ValidationError]",
                        "type": "[ValidationError]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ppdrValidationWarnings",
                        "name": "_ppdrValidationWarnings",
                        "shape": "ValidationWarnings",
                        "locationName": "validationWarnings",
                        "documentation": "\u003cp\u003eA list of the validation warnings that are associated with the objects defined in \u003ccode\u003epipelineObjects\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "[ValidationWarning]",
                        "type": "[ValidationWarning]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ppdrErrored",
                        "name": "_ppdrErrored",
                        "shape": "boolean",
                        "locationName": "errored",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there were validation errors. If errored is \u003ccode\u003eTrue\u003c/code\u003e, the pipeline definition is stored but cannot be activated until you correct the pipeline and call \u003ca\u003ePutPipelineDefinition\u003c/a\u003e to commit the corrected pipeline.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ppdrErrored",
                        "name": "_ppdrErrored",
                        "shape": "boolean",
                        "locationName": "errored",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there were validation errors. If errored is \u003ccode\u003eTrue\u003c/code\u003e, the pipeline definition is stored but cannot be activated until you correct the pipeline and call \u003ca\u003ePutPipelineDefinition\u003c/a\u003e to commit the corrected pipeline.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 19,
                "name": "PutPipelineDefinitionResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ppdrValidationErrors",
                        "name": "_ppdrValidationErrors",
                        "shape": "ValidationErrors",
                        "locationName": "validationErrors",
                        "documentation": "\u003cp\u003eA list of the validation errors that are associated with the objects defined in \u003ccode\u003epipelineObjects\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "[ValidationError]",
                        "type": "[ValidationError]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ppdrValidationWarnings",
                        "name": "_ppdrValidationWarnings",
                        "shape": "ValidationWarnings",
                        "locationName": "validationWarnings",
                        "documentation": "\u003cp\u003eA list of the validation warnings that are associated with the objects defined in \u003ccode\u003epipelineObjects\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "[ValidationWarning]",
                        "type": "[ValidationWarning]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ppdrErrored",
                        "name": "_ppdrErrored",
                        "shape": "boolean",
                        "locationName": "errored",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there were validation errors. If errored is \u003ccode\u003eTrue\u003c/code\u003e, the pipeline definition is stored but cannot be activated until you correct the pipeline and call \u003ca\u003ePutPipelineDefinition\u003c/a\u003e to commit the corrected pipeline.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ppdrValidationErrors",
                        "name": "_ppdrValidationErrors",
                        "shape": "ValidationErrors",
                        "locationName": "validationErrors",
                        "documentation": "\u003cp\u003eA list of the validation errors that are associated with the objects defined in \u003ccode\u003epipelineObjects\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "[ValidationError]",
                        "type": "[ValidationError]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ppdrValidationWarnings",
                        "name": "_ppdrValidationWarnings",
                        "shape": "ValidationWarnings",
                        "locationName": "validationWarnings",
                        "documentation": "\u003cp\u003eA list of the validation warnings that are associated with the objects defined in \u003ccode\u003epipelineObjects\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "[ValidationWarning]",
                        "type": "[ValidationWarning]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_PutPipelineDefinition.html",
            "namespace": "Network.AWS.DataPipeline.PutPipelineDefinition",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": null,
            "name": "PutPipelineDefinition",
            "method": "post",
            "documentation": "\u003cp\u003eAdds tasks, schedules, and preconditions that control the behavior of the pipeline. You can use PutPipelineDefinition to populate a new pipeline. \u003c/p\u003e \u003cp\u003e \u003ca\u003ePutPipelineDefinition\u003c/a\u003e also validates the configuration as it adds it to the pipeline. Changes to the pipeline are saved unless one of the following three validation errors exists in the pipeline. \u003col\u003e \u003cli\u003eAn object is missing a name or identifier field.\u003c/li\u003e \u003cli\u003eA string or reference field is empty.\u003c/li\u003e \u003cli\u003eThe number of objects in the pipeline exceeds the maximum allowed objects.\u003c/li\u003e \u003c/ol\u003e \u003c/p\u003e \u003cp\u003e Pipeline object definitions are passed to the \u003ca\u003ePutPipelineDefinition\u003c/a\u003e action and returned by the \u003ca\u003eGetPipelineDefinition\u003c/a\u003e action. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 19,
                "ctor": "putPipelineDefinition",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ppdPipelineId",
                        "name": "_ppdPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline to be configured.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ppdPipelineObjects",
                        "name": "_ppdPipelineObjects",
                        "shape": "PipelineObjectList",
                        "locationName": "pipelineObjects",
                        "documentation": "\u003cp\u003eThe objects that define the pipeline. These will overwrite the existing pipeline definition.\u003c/p\u003e",
                        "typeExposed": "[PipelineObject]",
                        "type": "[PipelineObject]"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ppdPipelineId",
                        "name": "_ppdPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline to be configured.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 16,
                "queryPad": 0,
                "name": "PutPipelineDefinition",
                "query": [],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ppdPipelineObjects",
                        "name": "_ppdPipelineObjects",
                        "shape": "PipelineObjectList",
                        "locationName": "pipelineObjects",
                        "documentation": "\u003cp\u003eThe objects that define the pipeline. These will overwrite the existing pipeline definition.\u003c/p\u003e",
                        "typeExposed": "[PipelineObject]",
                        "type": "[PipelineObject]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ppdPipelineId",
                        "name": "_ppdPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline to be configured.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ppdPipelineObjects",
                        "name": "_ppdPipelineObjects",
                        "shape": "PipelineObjectList",
                        "locationName": "pipelineObjects",
                        "documentation": "\u003cp\u003eThe objects that define the pipeline. These will overwrite the existing pipeline definition.\u003c/p\u003e",
                        "typeExposed": "[PipelineObject]",
                        "type": "[PipelineObject]"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 18,
                "ctor": "queryObjectsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "qorIds",
                        "name": "_qorIds",
                        "shape": "idList",
                        "locationName": "ids",
                        "documentation": "\u003cp\u003eA list of identifiers that match the query selectors.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qorMarker",
                        "name": "_qorMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003e The starting point for the results to be returned. As long as the action returns \u003ccode\u003eHasMoreResults\u003c/code\u003e as \u003ccode\u003eTrue\u003c/code\u003e, you can call \u003ca\u003eQueryObjects\u003c/a\u003e again and pass the marker value from the response to retrieve the next set of results. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qorHasMoreResults",
                        "name": "_qorHasMoreResults",
                        "shape": "boolean",
                        "locationName": "hasMoreResults",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there are more results that can be obtained by a subsequent call to \u003ca\u003eQueryObjects\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "name": "QueryObjectsResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "qorIds",
                        "name": "_qorIds",
                        "shape": "idList",
                        "locationName": "ids",
                        "documentation": "\u003cp\u003eA list of identifiers that match the query selectors.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qorMarker",
                        "name": "_qorMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003e The starting point for the results to be returned. As long as the action returns \u003ccode\u003eHasMoreResults\u003c/code\u003e as \u003ccode\u003eTrue\u003c/code\u003e, you can call \u003ca\u003eQueryObjects\u003c/a\u003e again and pass the marker value from the response to retrieve the next set of results. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qorHasMoreResults",
                        "name": "_qorHasMoreResults",
                        "shape": "boolean",
                        "locationName": "hasMoreResults",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there are more results that can be obtained by a subsequent call to \u003ca\u003eQueryObjects\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qorHasMoreResults",
                        "name": "_qorHasMoreResults",
                        "shape": "boolean",
                        "locationName": "hasMoreResults",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there are more results that can be obtained by a subsequent call to \u003ca\u003eQueryObjects\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "qorIds",
                        "name": "_qorIds",
                        "shape": "idList",
                        "locationName": "ids",
                        "documentation": "\u003cp\u003eA list of identifiers that match the query selectors.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qorMarker",
                        "name": "_qorMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003e The starting point for the results to be returned. As long as the action returns \u003ccode\u003eHasMoreResults\u003c/code\u003e as \u003ccode\u003eTrue\u003c/code\u003e, you can call \u003ca\u003eQueryObjects\u003c/a\u003e again and pass the marker value from the response to retrieve the next set of results. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_QueryObjects.html",
            "namespace": "Network.AWS.DataPipeline.QueryObjects",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": {
                "more": "qorHasMoreResults",
                "token": {
                    "input": "qoMarker",
                    "output": "qorMarker"
                },
                "type": "one"
            },
            "name": "QueryObjects",
            "method": "post",
            "documentation": "\u003cp\u003eQueries a pipeline for the names of objects that match a specified set of conditions.\u003c/p\u003e \u003cp\u003eThe objects returned by \u003ca\u003eQueryObjects\u003c/a\u003e are paginated and then filtered by the value you set for query. This means the action may return an empty result set with a value set for marker. If \u003ccode\u003eHasMoreResults\u003c/code\u003e is set to \u003ccode\u003eTrue\u003c/code\u003e, you should continue to call \u003ca\u003eQueryObjects\u003c/a\u003e, passing in the returned value for marker, until \u003ccode\u003eHasMoreResults\u003c/code\u003e returns \u003ccode\u003eFalse\u003c/code\u003e.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 13,
                "ctor": "queryObjects",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "qoPipelineId",
                        "name": "_qoPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline to be queried for object names.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qoQuery",
                        "name": "_qoQuery",
                        "shape": "Query",
                        "locationName": "query",
                        "documentation": "\u003cp\u003e Query that defines the objects to be returned. The \u003ca\u003eQuery\u003c/a\u003e object can contain a maximum of ten selectors. The conditions in the query are limited to top-level String fields in the object. These filters can be applied to components, instances, and attempts. \u003c/p\u003e",
                        "typeExposed": "Maybe Query",
                        "type": "Maybe Query"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "qoSphere",
                        "name": "_qoSphere",
                        "shape": "string",
                        "locationName": "sphere",
                        "documentation": "\u003cp\u003e Specifies whether the query applies to components or instances. Allowable values: \u003ccode\u003eCOMPONENT\u003c/code\u003e, \u003ccode\u003eINSTANCE\u003c/code\u003e, \u003ccode\u003eATTEMPT\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qoMarker",
                        "name": "_qoMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003e The starting point for the results to be returned. The first time you call \u003ca\u003eQueryObjects\u003c/a\u003e, this value should be empty. As long as the action returns \u003ccode\u003eHasMoreResults\u003c/code\u003e as \u003ccode\u003eTrue\u003c/code\u003e, you can call \u003ca\u003eQueryObjects\u003c/a\u003e again and pass the marker value from the response to retrieve the next set of results. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qoLimit",
                        "name": "_qoLimit",
                        "shape": "int",
                        "locationName": "limit",
                        "documentation": "\u003cp\u003eSpecifies the maximum number of object names that \u003ca\u003eQueryObjects\u003c/a\u003e will return in a single call. The default value is 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "qoPipelineId",
                        "name": "_qoPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline to be queried for object names.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "qoSphere",
                        "name": "_qoSphere",
                        "shape": "string",
                        "locationName": "sphere",
                        "documentation": "\u003cp\u003e Specifies whether the query applies to components or instances. Allowable values: \u003ccode\u003eCOMPONENT\u003c/code\u003e, \u003ccode\u003eINSTANCE\u003c/code\u003e, \u003ccode\u003eATTEMPT\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 11,
                "queryPad": 0,
                "name": "QueryObjects",
                "query": [],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qoQuery",
                        "name": "_qoQuery",
                        "shape": "Query",
                        "locationName": "query",
                        "documentation": "\u003cp\u003e Query that defines the objects to be returned. The \u003ca\u003eQuery\u003c/a\u003e object can contain a maximum of ten selectors. The conditions in the query are limited to top-level String fields in the object. These filters can be applied to components, instances, and attempts. \u003c/p\u003e",
                        "typeExposed": "Maybe Query",
                        "type": "Maybe Query"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qoMarker",
                        "name": "_qoMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003e The starting point for the results to be returned. The first time you call \u003ca\u003eQueryObjects\u003c/a\u003e, this value should be empty. As long as the action returns \u003ccode\u003eHasMoreResults\u003c/code\u003e as \u003ccode\u003eTrue\u003c/code\u003e, you can call \u003ca\u003eQueryObjects\u003c/a\u003e again and pass the marker value from the response to retrieve the next set of results. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qoLimit",
                        "name": "_qoLimit",
                        "shape": "int",
                        "locationName": "limit",
                        "documentation": "\u003cp\u003eSpecifies the maximum number of object names that \u003ca\u003eQueryObjects\u003c/a\u003e will return in a single call. The default value is 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qoLimit",
                        "name": "_qoLimit",
                        "shape": "int",
                        "locationName": "limit",
                        "documentation": "\u003cp\u003eSpecifies the maximum number of object names that \u003ca\u003eQueryObjects\u003c/a\u003e will return in a single call. The default value is 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qoMarker",
                        "name": "_qoMarker",
                        "shape": "string",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003e The starting point for the results to be returned. The first time you call \u003ca\u003eQueryObjects\u003c/a\u003e, this value should be empty. As long as the action returns \u003ccode\u003eHasMoreResults\u003c/code\u003e as \u003ccode\u003eTrue\u003c/code\u003e, you can call \u003ca\u003eQueryObjects\u003c/a\u003e again and pass the marker value from the response to retrieve the next set of results. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "qoPipelineId",
                        "name": "_qoPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifier of the pipeline to be queried for object names.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "qoQuery",
                        "name": "_qoQuery",
                        "shape": "Query",
                        "locationName": "query",
                        "documentation": "\u003cp\u003e Query that defines the objects to be returned. The \u003ca\u003eQuery\u003c/a\u003e object can contain a maximum of ten selectors. The conditions in the query are limited to top-level String fields in the object. These filters can be applied to components, instances, and attempts. \u003c/p\u003e",
                        "typeExposed": "Maybe Query",
                        "type": "Maybe Query"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "qoSphere",
                        "name": "_qoSphere",
                        "shape": "string",
                        "locationName": "sphere",
                        "documentation": "\u003cp\u003e Specifies whether the query applies to components or instances. Allowable values: \u003ccode\u003eCOMPONENT\u003c/code\u003e, \u003ccode\u003eINSTANCE\u003c/code\u003e, \u003ccode\u003eATTEMPT\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "reportTaskProgressResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rtprCanceled",
                    "name": "_rtprCanceled",
                    "shape": "boolean",
                    "locationName": "canceled",
                    "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, the calling task runner should cancel processing of the task. The task runner does not need to call \u003ca\u003eSetTaskStatus\u003c/a\u003e for canceled tasks.\u003c/p\u003e",
                    "typeExposed": "Bool",
                    "type": "Bool"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rtprCanceled",
                        "name": "_rtprCanceled",
                        "shape": "boolean",
                        "locationName": "canceled",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, the calling task runner should cancel processing of the task. The task runner does not need to call \u003ca\u003eSetTaskStatus\u003c/a\u003e for canceled tasks.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rtprCanceled",
                        "name": "_rtprCanceled",
                        "shape": "boolean",
                        "locationName": "canceled",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, the calling task runner should cancel processing of the task. The task runner does not need to call \u003ca\u003eSetTaskStatus\u003c/a\u003e for canceled tasks.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ReportTaskProgressResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rtprCanceled",
                        "name": "_rtprCanceled",
                        "shape": "boolean",
                        "locationName": "canceled",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, the calling task runner should cancel processing of the task. The task runner does not need to call \u003ca\u003eSetTaskStatus\u003c/a\u003e for canceled tasks.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_ReportTaskProgress.html",
            "namespace": "Network.AWS.DataPipeline.ReportTaskProgress",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": null,
            "name": "ReportTaskProgress",
            "method": "post",
            "documentation": "\u003cp\u003e Updates the AWS Data Pipeline service on the progress of the calling task runner. When the task runner is assigned a task, it should call ReportTaskProgress to acknowledge that it has the task within 2 minutes. If the web service does not recieve this acknowledgement within the 2 minute window, it will assign the task in a subsequent \u003ca\u003ePollForTask\u003c/a\u003e call. After this initial acknowledgement, the task runner only needs to report progress every 15 minutes to maintain its ownership of the task. You can change this reporting time from 15 minutes by specifying a \u003ccode\u003ereportProgressTimeout\u003c/code\u003e field in your pipeline. If a task runner does not report its status after 5 minutes, AWS Data Pipeline will assume that the task runner is unable to process the task and will reassign the task in a subsequent response to \u003ca\u003ePollForTask\u003c/a\u003e. task runners should call \u003ca\u003eReportTaskProgress\u003c/a\u003e every 60 seconds. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "reportTaskProgress",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rtpTaskId",
                    "name": "_rtpTaskId",
                    "shape": "taskId",
                    "locationName": "taskId",
                    "documentation": "\u003cp\u003eIdentifier of the task assigned to the task runner. This value is provided in the \u003ca\u003eTaskObject\u003c/a\u003e that the service returns with the response for the \u003ca\u003ePollForTask\u003c/a\u003e action.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rtpTaskId",
                        "name": "_rtpTaskId",
                        "shape": "taskId",
                        "locationName": "taskId",
                        "documentation": "\u003cp\u003eIdentifier of the task assigned to the task runner. This value is provided in the \u003ca\u003eTaskObject\u003c/a\u003e that the service returns with the response for the \u003ca\u003ePollForTask\u003c/a\u003e action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rtpTaskId",
                        "name": "_rtpTaskId",
                        "shape": "taskId",
                        "locationName": "taskId",
                        "documentation": "\u003cp\u003eIdentifier of the task assigned to the task runner. This value is provided in the \u003ca\u003eTaskObject\u003c/a\u003e that the service returns with the response for the \u003ca\u003ePollForTask\u003c/a\u003e action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "ReportTaskProgress",
                "query": [],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rtpTaskId",
                        "name": "_rtpTaskId",
                        "shape": "taskId",
                        "locationName": "taskId",
                        "documentation": "\u003cp\u003eIdentifier of the task assigned to the task runner. This value is provided in the \u003ca\u003eTaskObject\u003c/a\u003e that the service returns with the response for the \u003ca\u003ePollForTask\u003c/a\u003e action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "reportTaskRunnerHeartbeatResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rtrhrTerminate",
                    "name": "_rtrhrTerminate",
                    "shape": "boolean",
                    "locationName": "terminate",
                    "documentation": "\u003cp\u003eIndicates whether the calling task runner should terminate. If \u003ccode\u003eTrue\u003c/code\u003e, the task runner that called \u003ca\u003eReportTaskRunnerHeartbeat\u003c/a\u003e should terminate. \u003c/p\u003e",
                    "typeExposed": "Bool",
                    "type": "Bool"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rtrhrTerminate",
                        "name": "_rtrhrTerminate",
                        "shape": "boolean",
                        "locationName": "terminate",
                        "documentation": "\u003cp\u003eIndicates whether the calling task runner should terminate. If \u003ccode\u003eTrue\u003c/code\u003e, the task runner that called \u003ca\u003eReportTaskRunnerHeartbeat\u003c/a\u003e should terminate. \u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rtrhrTerminate",
                        "name": "_rtrhrTerminate",
                        "shape": "boolean",
                        "locationName": "terminate",
                        "documentation": "\u003cp\u003eIndicates whether the calling task runner should terminate. If \u003ccode\u003eTrue\u003c/code\u003e, the task runner that called \u003ca\u003eReportTaskRunnerHeartbeat\u003c/a\u003e should terminate. \u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ReportTaskRunnerHeartbeatResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rtrhrTerminate",
                        "name": "_rtrhrTerminate",
                        "shape": "boolean",
                        "locationName": "terminate",
                        "documentation": "\u003cp\u003eIndicates whether the calling task runner should terminate. If \u003ccode\u003eTrue\u003c/code\u003e, the task runner that called \u003ca\u003eReportTaskRunnerHeartbeat\u003c/a\u003e should terminate. \u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_ReportTaskRunnerHeartbeat.html",
            "namespace": "Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": null,
            "name": "ReportTaskRunnerHeartbeat",
            "method": "post",
            "documentation": "\u003cp\u003eTask runners call \u003ca\u003eReportTaskRunnerHeartbeat\u003c/a\u003e every 15 minutes to indicate that they are operational. In the case of AWS Data Pipeline Task Runner launched on a resource managed by AWS Data Pipeline, the web service can use this call to detect when the task runner application has failed and restart a new instance.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 17,
                "ctor": "reportTaskRunnerHeartbeat",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rtrhTaskrunnerId",
                        "name": "_rtrhTaskrunnerId",
                        "shape": "id",
                        "locationName": "taskrunnerId",
                        "documentation": "\u003cp\u003eThe identifier of the task runner. This value should be unique across your AWS account. In the case of AWS Data Pipeline Task Runner launched on a resource managed by AWS Data Pipeline, the web service provides a unique identifier when it launches the application. If you have written a custom task runner, you should assign a unique identifier for the task runner.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtrhWorkerGroup",
                        "name": "_rtrhWorkerGroup",
                        "shape": "string",
                        "locationName": "workerGroup",
                        "documentation": "\u003cp\u003eIndicates the type of task the task runner is configured to accept and process. The worker group is set as a field on objects in the pipeline when they are created. You can only specify a single value for \u003ccode\u003eworkerGroup\u003c/code\u003e in the call to \u003ca\u003eReportTaskRunnerHeartbeat\u003c/a\u003e. There are no wildcard values permitted in \u003ccode\u003eworkerGroup\u003c/code\u003e, the string must be an exact, case-sensitive, match.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtrhHostname",
                        "name": "_rtrhHostname",
                        "shape": "id",
                        "locationName": "hostname",
                        "documentation": "\u003cp\u003eThe public DNS name of the calling task runner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rtrhTaskrunnerId",
                        "name": "_rtrhTaskrunnerId",
                        "shape": "id",
                        "locationName": "taskrunnerId",
                        "documentation": "\u003cp\u003eThe identifier of the task runner. This value should be unique across your AWS account. In the case of AWS Data Pipeline Task Runner launched on a resource managed by AWS Data Pipeline, the web service provides a unique identifier when it launches the application. If you have written a custom task runner, you should assign a unique identifier for the task runner.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 13,
                "queryPad": 0,
                "name": "ReportTaskRunnerHeartbeat",
                "query": [],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtrhWorkerGroup",
                        "name": "_rtrhWorkerGroup",
                        "shape": "string",
                        "locationName": "workerGroup",
                        "documentation": "\u003cp\u003eIndicates the type of task the task runner is configured to accept and process. The worker group is set as a field on objects in the pipeline when they are created. You can only specify a single value for \u003ccode\u003eworkerGroup\u003c/code\u003e in the call to \u003ca\u003eReportTaskRunnerHeartbeat\u003c/a\u003e. There are no wildcard values permitted in \u003ccode\u003eworkerGroup\u003c/code\u003e, the string must be an exact, case-sensitive, match.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtrhHostname",
                        "name": "_rtrhHostname",
                        "shape": "id",
                        "locationName": "hostname",
                        "documentation": "\u003cp\u003eThe public DNS name of the calling task runner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtrhHostname",
                        "name": "_rtrhHostname",
                        "shape": "id",
                        "locationName": "hostname",
                        "documentation": "\u003cp\u003eThe public DNS name of the calling task runner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rtrhTaskrunnerId",
                        "name": "_rtrhTaskrunnerId",
                        "shape": "id",
                        "locationName": "taskrunnerId",
                        "documentation": "\u003cp\u003eThe identifier of the task runner. This value should be unique across your AWS account. In the case of AWS Data Pipeline Task Runner launched on a resource managed by AWS Data Pipeline, the web service provides a unique identifier when it launches the application. If you have written a custom task runner, you should assign a unique identifier for the task runner.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtrhWorkerGroup",
                        "name": "_rtrhWorkerGroup",
                        "shape": "string",
                        "locationName": "workerGroup",
                        "documentation": "\u003cp\u003eIndicates the type of task the task runner is configured to accept and process. The worker group is set as a field on objects in the pipeline when they are created. You can only specify a single value for \u003ccode\u003eworkerGroup\u003c/code\u003e in the call to \u003ca\u003eReportTaskRunnerHeartbeat\u003c/a\u003e. There are no wildcard values permitted in \u003ccode\u003eworkerGroup\u003c/code\u003e, the string must be an exact, case-sensitive, match.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "setStatusResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "SetStatusResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_SetStatus.html",
            "namespace": "Network.AWS.DataPipeline.SetStatus",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": null,
            "name": "SetStatus",
            "method": "post",
            "documentation": "\u003cp\u003eRequests that the status of an array of physical or logical pipeline objects be updated in the pipeline. This update may not occur immediately, but is eventually consistent. The status that can be set depends on the type of object.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 13,
                "ctor": "setStatus",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ssPipelineId",
                        "name": "_ssPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifies the pipeline that contains the objects.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ssObjectIds",
                        "name": "_ssObjectIds",
                        "shape": "idList",
                        "locationName": "objectIds",
                        "documentation": "\u003cp\u003eIdentifies an array of objects. The corresponding objects can be either physical or components, but not a mix of both types.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ssStatus",
                        "name": "_ssStatus",
                        "shape": "string",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eSpecifies the status to be set on all the objects in \u003ccode\u003eobjectIds\u003c/code\u003e. For components, this can be either \u003ccode\u003ePAUSE\u003c/code\u003e or \u003ccode\u003eRESUME\u003c/code\u003e. For instances, this can be either \u003ccode\u003eCANCEL\u003c/code\u003e, \u003ccode\u003eRERUN\u003c/code\u003e, or \u003ccode\u003eMARK_FINISHED\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ssPipelineId",
                        "name": "_ssPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifies the pipeline that contains the objects.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ssStatus",
                        "name": "_ssStatus",
                        "shape": "string",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eSpecifies the status to be set on all the objects in \u003ccode\u003eobjectIds\u003c/code\u003e. For components, this can be either \u003ccode\u003ePAUSE\u003c/code\u003e or \u003ccode\u003eRESUME\u003c/code\u003e. For instances, this can be either \u003ccode\u003eCANCEL\u003c/code\u003e, \u003ccode\u003eRERUN\u003c/code\u003e, or \u003ccode\u003eMARK_FINISHED\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 11,
                "queryPad": 0,
                "name": "SetStatus",
                "query": [],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ssObjectIds",
                        "name": "_ssObjectIds",
                        "shape": "idList",
                        "locationName": "objectIds",
                        "documentation": "\u003cp\u003eIdentifies an array of objects. The corresponding objects can be either physical or components, but not a mix of both types.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ssObjectIds",
                        "name": "_ssObjectIds",
                        "shape": "idList",
                        "locationName": "objectIds",
                        "documentation": "\u003cp\u003eIdentifies an array of objects. The corresponding objects can be either physical or components, but not a mix of both types.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ssPipelineId",
                        "name": "_ssPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifies the pipeline that contains the objects.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ssStatus",
                        "name": "_ssStatus",
                        "shape": "string",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eSpecifies the status to be set on all the objects in \u003ccode\u003eobjectIds\u003c/code\u003e. For components, this can be either \u003ccode\u003ePAUSE\u003c/code\u003e or \u003ccode\u003eRESUME\u003c/code\u003e. For instances, this can be either \u003ccode\u003eCANCEL\u003c/code\u003e, \u003ccode\u003eRERUN\u003c/code\u003e, or \u003ccode\u003eMARK_FINISHED\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "setTaskStatusResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "json",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "SetTaskStatusResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_SetTaskStatus.html",
            "namespace": "Network.AWS.DataPipeline.SetTaskStatus",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": null,
            "name": "SetTaskStatus",
            "method": "post",
            "documentation": "\u003cp\u003e Notifies AWS Data Pipeline that a task is completed and provides information about the final status. The task runner calls this action regardless of whether the task was sucessful. The task runner does not need to call \u003ca\u003eSetTaskStatus\u003c/a\u003e for tasks that are canceled by the web service during a call to \u003ca\u003eReportTaskProgress\u003c/a\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 19,
                "ctor": "setTaskStatus",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "stsTaskId",
                        "name": "_stsTaskId",
                        "shape": "taskId",
                        "locationName": "taskId",
                        "documentation": "\u003cp\u003eIdentifies the task assigned to the task runner. This value is set in the \u003ca\u003eTaskObject\u003c/a\u003e that is returned by the \u003ca\u003ePollForTask\u003c/a\u003e action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "stsTaskStatus",
                        "name": "_stsTaskStatus",
                        "shape": "TaskStatus",
                        "locationName": "taskStatus",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eFINISHED\u003c/code\u003e, the task successfully completed. If \u003ccode\u003eFAILED\u003c/code\u003e the task ended unsuccessfully. The \u003ccode\u003eFALSE\u003c/code\u003e value is used by preconditions.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "stsErrorId",
                        "name": "_stsErrorId",
                        "shape": "string",
                        "locationName": "errorId",
                        "documentation": "\u003cp\u003eIf an error occurred during the task, this value specifies an id value that represents the error. This value is set on the physical attempt object. It is used to display error information to the user. It should not start with string \"Service_\" which is reserved by the system.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "stsErrorMessage",
                        "name": "_stsErrorMessage",
                        "shape": "errorMessage",
                        "locationName": "errorMessage",
                        "documentation": "\u003cp\u003eIf an error occurred during the task, this value specifies a text description of the error. This value is set on the physical attempt object. It is used to display error information to the user. The web service does not parse this value.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "stsErrorStackTrace",
                        "name": "_stsErrorStackTrace",
                        "shape": "string",
                        "locationName": "errorStackTrace",
                        "documentation": "\u003cp\u003eIf an error occurred during the task, this value specifies the stack trace associated with the error. This value is set on the physical attempt object. It is used to display error information to the user. The web service does not parse this value.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "stsTaskId",
                        "name": "_stsTaskId",
                        "shape": "taskId",
                        "locationName": "taskId",
                        "documentation": "\u003cp\u003eIdentifies the task assigned to the task runner. This value is set in the \u003ca\u003eTaskObject\u003c/a\u003e that is returned by the \u003ca\u003ePollForTask\u003c/a\u003e action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "stsTaskStatus",
                        "name": "_stsTaskStatus",
                        "shape": "TaskStatus",
                        "locationName": "taskStatus",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eFINISHED\u003c/code\u003e, the task successfully completed. If \u003ccode\u003eFAILED\u003c/code\u003e the task ended unsuccessfully. The \u003ccode\u003eFALSE\u003c/code\u003e value is used by preconditions.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 16,
                "queryPad": 0,
                "name": "SetTaskStatus",
                "query": [],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "stsErrorId",
                        "name": "_stsErrorId",
                        "shape": "string",
                        "locationName": "errorId",
                        "documentation": "\u003cp\u003eIf an error occurred during the task, this value specifies an id value that represents the error. This value is set on the physical attempt object. It is used to display error information to the user. It should not start with string \"Service_\" which is reserved by the system.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "stsErrorMessage",
                        "name": "_stsErrorMessage",
                        "shape": "errorMessage",
                        "locationName": "errorMessage",
                        "documentation": "\u003cp\u003eIf an error occurred during the task, this value specifies a text description of the error. This value is set on the physical attempt object. It is used to display error information to the user. The web service does not parse this value.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "stsErrorStackTrace",
                        "name": "_stsErrorStackTrace",
                        "shape": "string",
                        "locationName": "errorStackTrace",
                        "documentation": "\u003cp\u003eIf an error occurred during the task, this value specifies the stack trace associated with the error. This value is set on the physical attempt object. It is used to display error information to the user. The web service does not parse this value.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "stsErrorId",
                        "name": "_stsErrorId",
                        "shape": "string",
                        "locationName": "errorId",
                        "documentation": "\u003cp\u003eIf an error occurred during the task, this value specifies an id value that represents the error. This value is set on the physical attempt object. It is used to display error information to the user. It should not start with string \"Service_\" which is reserved by the system.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "stsErrorMessage",
                        "name": "_stsErrorMessage",
                        "shape": "errorMessage",
                        "locationName": "errorMessage",
                        "documentation": "\u003cp\u003eIf an error occurred during the task, this value specifies a text description of the error. This value is set on the physical attempt object. It is used to display error information to the user. The web service does not parse this value.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "stsErrorStackTrace",
                        "name": "_stsErrorStackTrace",
                        "shape": "string",
                        "locationName": "errorStackTrace",
                        "documentation": "\u003cp\u003eIf an error occurred during the task, this value specifies the stack trace associated with the error. This value is set on the physical attempt object. It is used to display error information to the user. The web service does not parse this value.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "stsTaskId",
                        "name": "_stsTaskId",
                        "shape": "taskId",
                        "locationName": "taskId",
                        "documentation": "\u003cp\u003eIdentifies the task assigned to the task runner. This value is set in the \u003ca\u003eTaskObject\u003c/a\u003e that is returned by the \u003ca\u003ePollForTask\u003c/a\u003e action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "stsTaskStatus",
                        "name": "_stsTaskStatus",
                        "shape": "TaskStatus",
                        "locationName": "taskStatus",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eFINISHED\u003c/code\u003e, the task successfully completed. If \u003ccode\u003eFAILED\u003c/code\u003e the task ended unsuccessfully. The \u003ccode\u003eFALSE\u003c/code\u003e value is used by preconditions.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "DataPipeline",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 23,
                "ctor": "validatePipelineDefinitionResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vpdrValidationErrors",
                        "name": "_vpdrValidationErrors",
                        "shape": "ValidationErrors",
                        "locationName": "validationErrors",
                        "documentation": "\u003cp\u003eLists the validation errors that were found by \u003ca\u003eValidatePipelineDefinition\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "[ValidationError]",
                        "type": "[ValidationError]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vpdrValidationWarnings",
                        "name": "_vpdrValidationWarnings",
                        "shape": "ValidationWarnings",
                        "locationName": "validationWarnings",
                        "documentation": "\u003cp\u003eLists the validation warnings that were found by \u003ca\u003eValidatePipelineDefinition\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "[ValidationWarning]",
                        "type": "[ValidationWarning]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "vpdrErrored",
                        "name": "_vpdrErrored",
                        "shape": "boolean",
                        "locationName": "errored",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there were validation errors.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "wrapper": false,
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "vpdrErrored",
                        "name": "_vpdrErrored",
                        "shape": "boolean",
                        "locationName": "errored",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there were validation errors.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 19,
                "name": "ValidatePipelineDefinitionResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vpdrValidationErrors",
                        "name": "_vpdrValidationErrors",
                        "shape": "ValidationErrors",
                        "locationName": "validationErrors",
                        "documentation": "\u003cp\u003eLists the validation errors that were found by \u003ca\u003eValidatePipelineDefinition\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "[ValidationError]",
                        "type": "[ValidationError]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vpdrValidationWarnings",
                        "name": "_vpdrValidationWarnings",
                        "shape": "ValidationWarnings",
                        "locationName": "validationWarnings",
                        "documentation": "\u003cp\u003eLists the validation warnings that were found by \u003ca\u003eValidatePipelineDefinition\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "[ValidationWarning]",
                        "type": "[ValidationWarning]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "vpdrErrored",
                        "name": "_vpdrErrored",
                        "shape": "boolean",
                        "locationName": "errored",
                        "documentation": "\u003cp\u003eIf \u003ccode\u003eTrue\u003c/code\u003e, there were validation errors.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vpdrValidationErrors",
                        "name": "_vpdrValidationErrors",
                        "shape": "ValidationErrors",
                        "locationName": "validationErrors",
                        "documentation": "\u003cp\u003eLists the validation errors that were found by \u003ca\u003eValidatePipelineDefinition\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "[ValidationError]",
                        "type": "[ValidationError]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vpdrValidationWarnings",
                        "name": "_vpdrValidationWarnings",
                        "shape": "ValidationWarnings",
                        "locationName": "validationWarnings",
                        "documentation": "\u003cp\u003eLists the validation warnings that were found by \u003ca\u003eValidatePipelineDefinition\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "[ValidationWarning]",
                        "type": "[ValidationWarning]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_ValidatePipelineDefinition.html",
            "namespace": "Network.AWS.DataPipeline.ValidatePipelineDefinition",
            "protocol": "json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.DataPipeline.Types"
            ],
            "pager": null,
            "name": "ValidatePipelineDefinition",
            "method": "post",
            "documentation": "\u003cp\u003eTests the pipeline definition with a set of validation checks to ensure that it is well formed and can run without error. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 19,
                "ctor": "validatePipelineDefinition",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "vpdPipelineId",
                        "name": "_vpdPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifies the pipeline whose definition is to be validated.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vpdPipelineObjects",
                        "name": "_vpdPipelineObjects",
                        "shape": "PipelineObjectList",
                        "locationName": "pipelineObjects",
                        "documentation": "\u003cp\u003eA list of objects that define the pipeline changes to validate against the pipeline.\u003c/p\u003e",
                        "typeExposed": "[PipelineObject]",
                        "type": "[PipelineObject]"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "json",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "vpdPipelineId",
                        "name": "_vpdPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifies the pipeline whose definition is to be validated.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 16,
                "queryPad": 0,
                "name": "ValidatePipelineDefinition",
                "query": [],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vpdPipelineObjects",
                        "name": "_vpdPipelineObjects",
                        "shape": "PipelineObjectList",
                        "locationName": "pipelineObjects",
                        "documentation": "\u003cp\u003eA list of objects that define the pipeline changes to validate against the pipeline.\u003c/p\u003e",
                        "typeExposed": "[PipelineObject]",
                        "type": "[PipelineObject]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "vpdPipelineId",
                        "name": "_vpdPipelineId",
                        "shape": "id",
                        "locationName": "pipelineId",
                        "documentation": "\u003cp\u003eIdentifies the pipeline whose definition is to be validated.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vpdPipelineObjects",
                        "name": "_vpdPipelineObjects",
                        "shape": "PipelineObjectList",
                        "locationName": "pipelineObjects",
                        "documentation": "\u003cp\u003eA list of objects that define the pipeline changes to validate against the pipeline.\u003c/p\u003e",
                        "typeExposed": "[PipelineObject]",
                        "type": "[PipelineObject]"
                    }
                ]
            }
        }
    ]
}