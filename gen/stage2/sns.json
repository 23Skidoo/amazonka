{
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "SNS",
        "error": "SNSError",
        "namespace": "Network.AWS.SNS",
        "protocol": "query",
        "imports": [
            "Network.AWS.SNS.AddPermission",
            "Network.AWS.SNS.ConfirmSubscription",
            "Network.AWS.SNS.CreatePlatformApplication",
            "Network.AWS.SNS.CreatePlatformEndpoint",
            "Network.AWS.SNS.CreateTopic",
            "Network.AWS.SNS.DeleteEndpoint",
            "Network.AWS.SNS.DeletePlatformApplication",
            "Network.AWS.SNS.DeleteTopic",
            "Network.AWS.SNS.GetEndpointAttributes",
            "Network.AWS.SNS.GetPlatformApplicationAttributes",
            "Network.AWS.SNS.GetSubscriptionAttributes",
            "Network.AWS.SNS.GetTopicAttributes",
            "Network.AWS.SNS.ListEndpointsByPlatformApplication",
            "Network.AWS.SNS.ListPlatformApplications",
            "Network.AWS.SNS.ListSubscriptions",
            "Network.AWS.SNS.ListSubscriptionsByTopic",
            "Network.AWS.SNS.ListTopics",
            "Network.AWS.SNS.Publish",
            "Network.AWS.SNS.RemovePermission",
            "Network.AWS.SNS.SetEndpointAttributes",
            "Network.AWS.SNS.SetPlatformApplicationAttributes",
            "Network.AWS.SNS.SetSubscriptionAttributes",
            "Network.AWS.SNS.SetTopicAttributes",
            "Network.AWS.SNS.Subscribe",
            "Network.AWS.SNS.Types",
            "Network.AWS.SNS.Unsubscribe"
        ],
        "name": "Amazon Simple Notification Service",
        "version": "2010-03-31",
        "documentation": "Amazon Simple Notification Service (Amazon SNS) is a fast, flexible, fully managed push messaging service. Amazon SNS makes it simple and cost-effective to push notifications to Apple, Google, Fire OS, and Windows devices, as well as Android devices in China with Baidu Cloud Push. You can also use SNS to push notifications to internet connected smart devices, as well as other distributed services. Besides pushing cloud notifications directly to mobile devices, Amazon SNS can also deliver notifications by SMS text message or email, to Amazon Simple Queue Service (SQS) queues, or to any HTTP endpoint. To prevent messages from being lost, all messages published to Amazon SNS are stored redundantly across multiple availability zones.",
        "xmlNamespace": "http://sns.amazonaws.com/doc/2010-03-31/",
        "endpoint": "Regional",
        "endpointPrefix": "sns"
    },
    "cabal": {
        "other": [],
        "library": "amazonka-sns",
        "exposed": [
            "Network.AWS.SNS",
            "Network.AWS.SNS.AddPermission",
            "Network.AWS.SNS.ConfirmSubscription",
            "Network.AWS.SNS.CreatePlatformApplication",
            "Network.AWS.SNS.CreatePlatformEndpoint",
            "Network.AWS.SNS.CreateTopic",
            "Network.AWS.SNS.DeleteEndpoint",
            "Network.AWS.SNS.DeletePlatformApplication",
            "Network.AWS.SNS.DeleteTopic",
            "Network.AWS.SNS.GetEndpointAttributes",
            "Network.AWS.SNS.GetPlatformApplicationAttributes",
            "Network.AWS.SNS.GetSubscriptionAttributes",
            "Network.AWS.SNS.GetTopicAttributes",
            "Network.AWS.SNS.ListEndpointsByPlatformApplication",
            "Network.AWS.SNS.ListPlatformApplications",
            "Network.AWS.SNS.ListSubscriptions",
            "Network.AWS.SNS.ListSubscriptionsByTopic",
            "Network.AWS.SNS.ListTopics",
            "Network.AWS.SNS.Publish",
            "Network.AWS.SNS.RemovePermission",
            "Network.AWS.SNS.SetEndpointAttributes",
            "Network.AWS.SNS.SetPlatformApplicationAttributes",
            "Network.AWS.SNS.SetSubscriptionAttributes",
            "Network.AWS.SNS.SetTopicAttributes",
            "Network.AWS.SNS.Subscribe",
            "Network.AWS.SNS.Types",
            "Network.AWS.SNS.Unsubscribe"
        ],
        "dependencies": [],
        "name": "Amazon Simple Notification Service",
        "version": "0.0.0",
        "description": "Amazon Simple Notification Service (Amazon SNS) is a fast, flexible, fully managed push messaging service. Amazon SNS makes it simple and cost-effective to push notifications to Apple, Google, Fire OS, and Windows devices, as well as Android devices in China with Baidu Cloud Push. You can also use SNS to push notifications to internet connected smart devices, as well as other distributed services. Besides pushing cloud notifications directly to mobile devices, Amazon SNS can also deliver notifications by SMS text message or email, to Amazon Simple Queue Service (SQS) queues, or to any HTTP endpoint. To prevent messages from being lost, all messages published to Amazon SNS are stored redundantly across multiple availability zones."
    },
    "types": {
        "service": {
            "signature": "V4",
            "checksum": "sha256",
            "abbrev": "SNS",
            "error": "SNSError",
            "namespace": "Network.AWS.SNS",
            "protocol": "query",
            "imports": [
                "Network.AWS.SNS.AddPermission",
                "Network.AWS.SNS.ConfirmSubscription",
                "Network.AWS.SNS.CreatePlatformApplication",
                "Network.AWS.SNS.CreatePlatformEndpoint",
                "Network.AWS.SNS.CreateTopic",
                "Network.AWS.SNS.DeleteEndpoint",
                "Network.AWS.SNS.DeletePlatformApplication",
                "Network.AWS.SNS.DeleteTopic",
                "Network.AWS.SNS.GetEndpointAttributes",
                "Network.AWS.SNS.GetPlatformApplicationAttributes",
                "Network.AWS.SNS.GetSubscriptionAttributes",
                "Network.AWS.SNS.GetTopicAttributes",
                "Network.AWS.SNS.ListEndpointsByPlatformApplication",
                "Network.AWS.SNS.ListPlatformApplications",
                "Network.AWS.SNS.ListSubscriptions",
                "Network.AWS.SNS.ListSubscriptionsByTopic",
                "Network.AWS.SNS.ListTopics",
                "Network.AWS.SNS.Publish",
                "Network.AWS.SNS.RemovePermission",
                "Network.AWS.SNS.SetEndpointAttributes",
                "Network.AWS.SNS.SetPlatformApplicationAttributes",
                "Network.AWS.SNS.SetSubscriptionAttributes",
                "Network.AWS.SNS.SetTopicAttributes",
                "Network.AWS.SNS.Subscribe",
                "Network.AWS.SNS.Types",
                "Network.AWS.SNS.Unsubscribe"
            ],
            "name": "Amazon Simple Notification Service",
            "version": "2010-03-31",
            "documentation": "Amazon Simple Notification Service (Amazon SNS) is a fast, flexible, fully managed push messaging service. Amazon SNS makes it simple and cost-effective to push notifications to Apple, Google, Fire OS, and Windows devices, as well as Android devices in China with Baidu Cloud Push. You can also use SNS to push notifications to internet connected smart devices, as well as other distributed services. Besides pushing cloud notifications directly to mobile devices, Amazon SNS can also deliver notifications by SMS text message or email, to Amazon Simple Queue Service (SQS) queues, or to any HTTP endpoint. To prevent messages from being lost, all messages published to Amazon SNS are stored redundantly across multiple availability zones.",
            "xmlNamespace": "http://sns.amazonaws.com/doc/2010-03-31/",
            "endpoint": "Regional",
            "endpointPrefix": "sns"
        },
        "namespace": "Network.AWS.SNS.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 0,
                "ctor": "topic",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "tTopicArn",
                    "name": "_tTopicArn",
                    "shape": "topicARN",
                    "locationName": "TopicArn",
                    "documentation": "\u003cp\u003eThe topic's ARN.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "payload": null,
                "required": [],
                "name": "Topic",
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tTopicArn",
                        "name": "_tTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe topic's ARN.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tTopicArn",
                        "name": "_tTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe topic's ARN.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "messageAttributeValue",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "mavDataType",
                        "name": "_mavDataType",
                        "shape": "String",
                        "locationName": "DataType",
                        "documentation": "\u003cp\u003eAmazon SNS supports the following logical data types: String, Number, and Binary. For more information, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html#SNSMessageAttributes.DataTypes\"\u003eMessage Attribute Data Types\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "MessageAttributeValue",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mavStringValue",
                        "name": "_mavStringValue",
                        "shape": "String",
                        "locationName": "StringValue",
                        "documentation": "\u003cp\u003eStrings are Unicode with UTF8 binary encoding. For a list of code values, see \u003ca href=\"http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\"\u003ehttp://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mavBinaryValue",
                        "name": "_mavBinaryValue",
                        "shape": "Binary",
                        "locationName": "BinaryValue",
                        "documentation": "\u003cp\u003eBinary type attributes can store any binary data, for example, compressed data, encrypted data, or images.\u003c/p\u003e",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mavBinaryValue",
                        "name": "_mavBinaryValue",
                        "shape": "Binary",
                        "locationName": "BinaryValue",
                        "documentation": "\u003cp\u003eBinary type attributes can store any binary data, for example, compressed data, encrypted data, or images.\u003c/p\u003e",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "mavDataType",
                        "name": "_mavDataType",
                        "shape": "String",
                        "locationName": "DataType",
                        "documentation": "\u003cp\u003eAmazon SNS supports the following logical data types: String, Number, and Binary. For more information, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html#SNSMessageAttributes.DataTypes\"\u003eMessage Attribute Data Types\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mavStringValue",
                        "name": "_mavStringValue",
                        "shape": "String",
                        "locationName": "StringValue",
                        "documentation": "\u003cp\u003eStrings are Unicode with UTF8 binary encoding. For a list of code values, see \u003ca href=\"http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\"\u003ehttp://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 25,
                "ctor": "platformApplication",
                "payload": null,
                "required": [],
                "name": "PlatformApplication",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "paPlatformApplicationArn",
                        "name": "_paPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "\u003cp\u003ePlatformApplicationArn for platform application object.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "paAttributes",
                        "name": "_paAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eAttributes for platform application object.\u003c/p\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "paAttributes",
                        "name": "_paAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eAttributes for platform application object.\u003c/p\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "paPlatformApplicationArn",
                        "name": "_paPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "\u003cp\u003ePlatformApplicationArn for platform application object.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 17,
                "ctor": "subscription",
                "payload": null,
                "required": [],
                "name": "Subscription",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sSubscriptionArn",
                        "name": "_sSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "\u003cp\u003eThe subscription's ARN.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sOwner",
                        "name": "_sOwner",
                        "shape": "account",
                        "locationName": "Owner",
                        "documentation": "\u003cp\u003eThe subscription's owner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sProtocol",
                        "name": "_sProtocol",
                        "shape": "protocol",
                        "locationName": "Protocol",
                        "documentation": "\u003cp\u003eThe subscription's protocol.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sEndpoint",
                        "name": "_sEndpoint",
                        "shape": "endpoint",
                        "locationName": "Endpoint",
                        "documentation": "\u003cp\u003eThe subscription's endpoint (format depends on the protocol).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sTopicArn",
                        "name": "_sTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the subscription's topic.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sEndpoint",
                        "name": "_sEndpoint",
                        "shape": "endpoint",
                        "locationName": "Endpoint",
                        "documentation": "\u003cp\u003eThe subscription's endpoint (format depends on the protocol).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sOwner",
                        "name": "_sOwner",
                        "shape": "account",
                        "locationName": "Owner",
                        "documentation": "\u003cp\u003eThe subscription's owner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sProtocol",
                        "name": "_sProtocol",
                        "shape": "protocol",
                        "locationName": "Protocol",
                        "documentation": "\u003cp\u003eThe subscription's protocol.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sSubscriptionArn",
                        "name": "_sSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "\u003cp\u003eThe subscription's ARN.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sTopicArn",
                        "name": "_sTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the subscription's topic.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "endpoint",
                "payload": null,
                "required": [],
                "name": "Endpoint",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "eEndpointArn",
                        "name": "_eEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "\u003cp\u003eEndpointArn for mobile app and device.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "eAttributes",
                        "name": "_eAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eAttributes for endpoint.\u003c/p\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "eAttributes",
                        "name": "_eAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eAttributes for endpoint.\u003c/p\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "eEndpointArn",
                        "name": "_eEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "\u003cp\u003eEndpointArn for mobile app and device.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        ],
        "imports": []
    },
    "operations": [
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "addPermissionResponse",
                "wrapper": false,
                "required": [],
                "shared": false,
                "name": "AddPermissionResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.SNS.AddPermission",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "AddPermission",
            "method": "post",
            "documentation": "\u003cp\u003eAdds a statement to a topic's access control policy, granting access for the specified AWS accounts to the specified actions.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "addPermissionInput",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "apiTopicArn",
                        "name": "_apiTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic whose access control policy you wish to modify.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "apiLabel",
                        "name": "_apiLabel",
                        "shape": "label",
                        "locationName": "Label",
                        "documentation": "\u003cp\u003eA unique identifier for the new policy statement.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 13,
                "name": "AddPermissionInput",
                "query": [
                    {
                        "field": "_apiTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_apiLabel",
                        "locationName": "Label",
                        "type": "field"
                    },
                    {
                        "field": "_apiAWSAccountId",
                        "locationName": "AWSAccountId",
                        "type": "field"
                    },
                    {
                        "field": "_apiActionName",
                        "locationName": "ActionName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "apiAWSAccountId",
                        "name": "_apiAWSAccountId",
                        "shape": "DelegatesList",
                        "locationName": "AWSAccountId",
                        "documentation": "\u003cp\u003eThe AWS account IDs of the users (principals) who will be given access to the specified actions. The users must have AWS accounts, but do not need to be signed up for this service. \u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "apiActionName",
                        "name": "_apiActionName",
                        "shape": "ActionsList",
                        "locationName": "ActionName",
                        "documentation": "\u003cp\u003eThe action you want to allow for the specified principal(s).\u003c/p\u003e \u003cp\u003eValid values: any Amazon SNS action name.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "apiAWSAccountId",
                        "name": "_apiAWSAccountId",
                        "shape": "DelegatesList",
                        "locationName": "AWSAccountId",
                        "documentation": "\u003cp\u003eThe AWS account IDs of the users (principals) who will be given access to the specified actions. The users must have AWS accounts, but do not need to be signed up for this service. \u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "apiActionName",
                        "name": "_apiActionName",
                        "shape": "ActionsList",
                        "locationName": "ActionName",
                        "documentation": "\u003cp\u003eThe action you want to allow for the specified principal(s).\u003c/p\u003e \u003cp\u003eValid values: any Amazon SNS action name.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "apiLabel",
                        "name": "_apiLabel",
                        "shape": "label",
                        "locationName": "Label",
                        "documentation": "\u003cp\u003eA unique identifier for the new policy statement.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "apiTopicArn",
                        "name": "_apiTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic whose access control policy you wish to modify.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "confirmSubscriptionResponse",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csrSubscriptionArn",
                    "name": "_csrSubscriptionArn",
                    "shape": "subscriptionARN",
                    "locationName": "SubscriptionArn",
                    "documentation": "\u003cp\u003eThe ARN of the created subscription.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "ConfirmSubscriptionResponse",
                "resultWrapper": "ConfirmSubscriptionResult",
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csrSubscriptionArn",
                        "name": "_csrSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "\u003cp\u003eThe ARN of the created subscription.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csrSubscriptionArn",
                        "name": "_csrSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "\u003cp\u003eThe ARN of the created subscription.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.ConfirmSubscription",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "ConfirmSubscription",
            "method": "post",
            "documentation": "\u003cp\u003eVerifies an endpoint owner's intent to receive messages by validating the token sent to the endpoint by an earlier \u003ccode\u003eSubscribe\u003c/code\u003e action. If the token is valid, the action creates a new subscription and returns its Amazon Resource Name (ARN). This call requires an AWS signature only when the \u003ccode\u003eAuthenticateOnUnsubscribe\u003c/code\u003e flag is set to \"true\".\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 29,
                "ctor": "confirmSubscriptionInput",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csiTopicArn",
                        "name": "_csiTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic for which you wish to confirm a subscription.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csiToken",
                        "name": "_csiToken",
                        "shape": "token",
                        "locationName": "Token",
                        "documentation": "\u003cp\u003eShort-lived token sent to an endpoint during the \u003ccode\u003eSubscribe\u003c/code\u003e action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 26,
                "name": "ConfirmSubscriptionInput",
                "query": [
                    {
                        "field": "_csiTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_csiToken",
                        "locationName": "Token",
                        "type": "field"
                    },
                    {
                        "field": "_csiAuthenticateOnUnsubscribe",
                        "locationName": "AuthenticateOnUnsubscribe",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csiAuthenticateOnUnsubscribe",
                        "name": "_csiAuthenticateOnUnsubscribe",
                        "shape": "authenticateOnUnsubscribe",
                        "locationName": "AuthenticateOnUnsubscribe",
                        "documentation": "\u003cp\u003eDisallows unauthenticated unsubscribes of the subscription. If the value of this parameter is \u003ccode\u003etrue\u003c/code\u003e and the request has an AWS signature, then only the topic owner and the subscription owner can unsubscribe the endpoint. The unsubscribe action requires AWS authentication. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csiAuthenticateOnUnsubscribe",
                        "name": "_csiAuthenticateOnUnsubscribe",
                        "shape": "authenticateOnUnsubscribe",
                        "locationName": "AuthenticateOnUnsubscribe",
                        "documentation": "\u003cp\u003eDisallows unauthenticated unsubscribes of the subscription. If the value of this parameter is \u003ccode\u003etrue\u003c/code\u003e and the request has an AWS signature, then only the topic owner and the subscription owner can unsubscribe the endpoint. The unsubscribe action requires AWS authentication. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csiToken",
                        "name": "_csiToken",
                        "shape": "token",
                        "locationName": "Token",
                        "documentation": "\u003cp\u003eShort-lived token sent to an endpoint during the \u003ccode\u003eSubscribe\u003c/code\u003e action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csiTopicArn",
                        "name": "_csiTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic for which you wish to confirm a subscription.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createPlatformApplicationResponse",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cparPlatformApplicationArn",
                    "name": "_cparPlatformApplicationArn",
                    "shape": "String",
                    "locationName": "PlatformApplicationArn",
                    "documentation": "\u003cp\u003ePlatformApplicationArn is returned.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "CreatePlatformApplicationResponse",
                "resultWrapper": "CreatePlatformApplicationResult",
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cparPlatformApplicationArn",
                        "name": "_cparPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "\u003cp\u003ePlatformApplicationArn is returned.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cparPlatformApplicationArn",
                        "name": "_cparPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "\u003cp\u003ePlatformApplicationArn is returned.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.CreatePlatformApplication",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "CreatePlatformApplication",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a platform application object for one of the supported push notification services, such as APNS and GCM, to which devices and mobile apps may register. You must specify PlatformPrincipal and PlatformCredential attributes when using the \u003ccode\u003eCreatePlatformApplication\u003c/code\u003e action. The PlatformPrincipal is received from the notification service. For APNS/APNS_SANDBOX, PlatformPrincipal is \"SSL certificate\". For GCM, PlatformPrincipal is not applicable. For ADM, PlatformPrincipal is \"client id\". The PlatformCredential is also received from the notification service. For APNS/APNS_SANDBOX, PlatformCredential is \"private key\". For GCM, PlatformCredential is \"API key\". For ADM, PlatformCredential is \"client secret\". The PlatformApplicationArn that is returned when using \u003ccode\u003eCreatePlatformApplication\u003c/code\u003e is then used as an attribute for the \u003ccode\u003eCreatePlatformEndpoint\u003c/code\u003e action. For more information, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\u003eUsing Amazon SNS Mobile Push Notifications\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "createPlatformApplicationInput",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpaiName",
                        "name": "_cpaiName",
                        "shape": "String",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eApplication names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, hyphens, and periods, and must be between 1 and 256 characters long.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpaiPlatform",
                        "name": "_cpaiPlatform",
                        "shape": "String",
                        "locationName": "Platform",
                        "documentation": "\u003cp\u003eThe following platforms are supported: ADM (Amazon Device Messaging), APNS (Apple Push Notification Service), APNS_SANDBOX, and GCM (Google Cloud Messaging).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 11,
                "name": "CreatePlatformApplicationInput",
                "query": [
                    {
                        "field": "_cpaiName",
                        "locationName": "Name",
                        "type": "field"
                    },
                    {
                        "field": "_cpaiPlatform",
                        "locationName": "Platform",
                        "type": "field"
                    },
                    {
                        "field": "_cpaiAttributes",
                        "locationName": "Attributes",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "cpaiAttributes",
                        "name": "_cpaiAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eFor a list of attributes, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html\"\u003eSetPlatformApplicationAttributes\u003c/a\u003e\u003c/p\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "cpaiAttributes",
                        "name": "_cpaiAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eFor a list of attributes, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html\"\u003eSetPlatformApplicationAttributes\u003c/a\u003e\u003c/p\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpaiName",
                        "name": "_cpaiName",
                        "shape": "String",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eApplication names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, hyphens, and periods, and must be between 1 and 256 characters long.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpaiPlatform",
                        "name": "_cpaiPlatform",
                        "shape": "String",
                        "locationName": "Platform",
                        "documentation": "\u003cp\u003eThe following platforms are supported: ADM (Amazon Device Messaging), APNS (Apple Push Notification Service), APNS_SANDBOX, and GCM (Google Cloud Messaging).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createEndpointResponse",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cerEndpointArn",
                    "name": "_cerEndpointArn",
                    "shape": "String",
                    "locationName": "EndpointArn",
                    "documentation": "\u003cp\u003eEndpointArn returned from CreateEndpoint action.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "CreateEndpointResponse",
                "resultWrapper": "CreatePlatformEndpointResult",
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cerEndpointArn",
                        "name": "_cerEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "\u003cp\u003eEndpointArn returned from CreateEndpoint action.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cerEndpointArn",
                        "name": "_cerEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "\u003cp\u003eEndpointArn returned from CreateEndpoint action.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.CreatePlatformEndpoint",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "CreatePlatformEndpoint",
            "method": "post",
            "documentation": "\u003cp\u003eCreates an endpoint for a device and mobile app on one of the supported push notification services, such as GCM and APNS. \u003ccode\u003eCreatePlatformEndpoint\u003c/code\u003e requires the PlatformApplicationArn that is returned from \u003ccode\u003eCreatePlatformApplication\u003c/code\u003e. The EndpointArn that is returned when using \u003ccode\u003eCreatePlatformEndpoint\u003c/code\u003e can then be used by the \u003ccode\u003ePublish\u003c/code\u003e action to send a message to a mobile app or by the \u003ccode\u003eSubscribe\u003c/code\u003e action for subscription to a topic. The \u003ccode\u003eCreatePlatformEndpoint\u003c/code\u003e action is idempotent, so if the requester already owns an endpoint with the same device token and attributes, that endpoint's ARN is returned without creating a new endpoint. For more information, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\u003eUsing Amazon SNS Mobile Push Notifications\u003c/a\u003e. \u003c/p\u003e \u003cp\u003eWhen using \u003ccode\u003eCreatePlatformEndpoint\u003c/code\u003e with Baidu, two attributes must be provided: ChannelId and UserId. The token field must also contain the ChannelId. For more information, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePushBaiduEndpoint.html\"\u003eCreating an Amazon SNS Endpoint for Baidu\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 27,
                "ctor": "createPlatformEndpointInput",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpeiPlatformApplicationArn",
                        "name": "_cpeiPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "\u003cp\u003ePlatformApplicationArn returned from CreatePlatformApplication is used to create a an endpoint.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpeiToken",
                        "name": "_cpeiToken",
                        "shape": "String",
                        "locationName": "Token",
                        "documentation": "\u003cp\u003eUnique identifier created by the notification service for an app on a device. The specific name for Token will vary, depending on which notification service is being used. For example, when using APNS as the notification service, you need the device token. Alternatively, when using GCM or ADM, the device token equivalent is called the registration ID.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 23,
                "name": "CreatePlatformEndpointInput",
                "query": [
                    {
                        "field": "_cpeiPlatformApplicationArn",
                        "locationName": "PlatformApplicationArn",
                        "type": "field"
                    },
                    {
                        "field": "_cpeiToken",
                        "locationName": "Token",
                        "type": "field"
                    },
                    {
                        "field": "_cpeiCustomUserData",
                        "locationName": "CustomUserData",
                        "type": "field"
                    },
                    {
                        "field": "_cpeiAttributes",
                        "locationName": "Attributes",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpeiCustomUserData",
                        "name": "_cpeiCustomUserData",
                        "shape": "String",
                        "locationName": "CustomUserData",
                        "documentation": "\u003cp\u003eArbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "cpeiAttributes",
                        "name": "_cpeiAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eFor a list of attributes, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/api/API_SetEndpointAttributes.html\"\u003eSetEndpointAttributes\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "cpeiAttributes",
                        "name": "_cpeiAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eFor a list of attributes, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/api/API_SetEndpointAttributes.html\"\u003eSetEndpointAttributes\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpeiCustomUserData",
                        "name": "_cpeiCustomUserData",
                        "shape": "String",
                        "locationName": "CustomUserData",
                        "documentation": "\u003cp\u003eArbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpeiPlatformApplicationArn",
                        "name": "_cpeiPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "\u003cp\u003ePlatformApplicationArn returned from CreatePlatformApplication is used to create a an endpoint.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpeiToken",
                        "name": "_cpeiToken",
                        "shape": "String",
                        "locationName": "Token",
                        "documentation": "\u003cp\u003eUnique identifier created by the notification service for an app on a device. The specific name for Token will vary, depending on which notification service is being used. For example, when using APNS as the notification service, you need the device token. Alternatively, when using GCM or ADM, the device token equivalent is called the registration ID.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createTopicResponse",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ctrTopicArn",
                    "name": "_ctrTopicArn",
                    "shape": "topicARN",
                    "locationName": "TopicArn",
                    "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) assigned to the created topic.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "CreateTopicResponse",
                "resultWrapper": "CreateTopicResult",
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ctrTopicArn",
                        "name": "_ctrTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) assigned to the created topic.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ctrTopicArn",
                        "name": "_ctrTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) assigned to the created topic.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.CreateTopic",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "CreateTopic",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a topic to which notifications can be published. Users can create at most 3000 topics. For more information, see \u003ca href=\"http://aws.amazon.com/sns/\"\u003ehttp://aws.amazon.com/sns\u003c/a\u003e. This action is idempotent, so if the requester already owns a topic with the specified name, that topic's ARN is returned without creating a new topic.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createTopicInput",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ctiName",
                    "name": "_ctiName",
                    "shape": "topicName",
                    "locationName": "Name",
                    "documentation": "\u003cp\u003eThe name of the topic you want to create.\u003c/p\u003e \u003cp\u003eConstraints: Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. \u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ctiName",
                        "name": "_ctiName",
                        "shape": "topicName",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the topic you want to create.\u003c/p\u003e \u003cp\u003eConstraints: Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 5,
                "name": "CreateTopicInput",
                "query": [
                    {
                        "field": "_ctiName",
                        "locationName": "Name",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ctiName",
                        "name": "_ctiName",
                        "shape": "topicName",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the topic you want to create.\u003c/p\u003e \u003cp\u003eConstraints: Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteEndpointResponse",
                "wrapper": false,
                "required": [],
                "shared": false,
                "name": "DeleteEndpointResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.SNS.DeleteEndpoint",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "DeleteEndpoint",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the endpoint from Amazon SNS. This action is idempotent. For more information, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\u003eUsing Amazon SNS Mobile Push Notifications\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteEndpointInput",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "deiEndpointArn",
                    "name": "_deiEndpointArn",
                    "shape": "String",
                    "locationName": "EndpointArn",
                    "documentation": "\u003cp\u003eEndpointArn of endpoint to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "deiEndpointArn",
                        "name": "_deiEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "\u003cp\u003eEndpointArn of endpoint to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 12,
                "name": "DeleteEndpointInput",
                "query": [
                    {
                        "field": "_deiEndpointArn",
                        "locationName": "EndpointArn",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "deiEndpointArn",
                        "name": "_deiEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "\u003cp\u003eEndpointArn of endpoint to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deletePlatformApplicationResponse",
                "wrapper": false,
                "required": [],
                "shared": false,
                "name": "DeletePlatformApplicationResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.SNS.DeletePlatformApplication",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "DeletePlatformApplication",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes a platform application object for one of the supported push notification services, such as APNS and GCM. For more information, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\u003eUsing Amazon SNS Mobile Push Notifications\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deletePlatformApplicationInput",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dpaiPlatformApplicationArn",
                    "name": "_dpaiPlatformApplicationArn",
                    "shape": "String",
                    "locationName": "PlatformApplicationArn",
                    "documentation": "\u003cp\u003ePlatformApplicationArn of platform application object to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dpaiPlatformApplicationArn",
                        "name": "_dpaiPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "\u003cp\u003ePlatformApplicationArn of platform application object to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 23,
                "name": "DeletePlatformApplicationInput",
                "query": [
                    {
                        "field": "_dpaiPlatformApplicationArn",
                        "locationName": "PlatformApplicationArn",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dpaiPlatformApplicationArn",
                        "name": "_dpaiPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "\u003cp\u003ePlatformApplicationArn of platform application object to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteTopicResponse",
                "wrapper": false,
                "required": [],
                "shared": false,
                "name": "DeleteTopicResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.SNS.DeleteTopic",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "DeleteTopic",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes a topic and all its subscriptions. Deleting a topic might prevent some messages previously sent to the topic from being delivered to subscribers. This action is idempotent, so deleting a topic that does not exist does not result in an error.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteTopicInput",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dtiTopicArn",
                    "name": "_dtiTopicArn",
                    "shape": "topicARN",
                    "locationName": "TopicArn",
                    "documentation": "\u003cp\u003eThe ARN of the topic you want to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dtiTopicArn",
                        "name": "_dtiTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic you want to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 9,
                "name": "DeleteTopicInput",
                "query": [
                    {
                        "field": "_dtiTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dtiTopicArn",
                        "name": "_dtiTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic you want to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getEndpointAttributesResponse",
                "field": {
                    "location": "querystring",
                    "iso": "_Map",
                    "lensMapping": "_Map",
                    "default": "mempty",
                    "required": true,
                    "lens": "gearAttributes",
                    "name": "_gearAttributes",
                    "shape": "MapStringToString",
                    "locationName": "Attributes",
                    "documentation": "\u003cp\u003eAttributes include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eCustomUserData\u003c/code\u003e -- arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEnabled\u003c/code\u003e -- flag that enables/disables delivery to the endpoint. Amazon SNS will set this to false when a notification service indicates to Amazon SNS that the endpoint is invalid. Users can set it back to true, typically after updating Token.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eToken\u003c/code\u003e -- device token, also referred to as a registration id, for an app and mobile device. This is returned from the notification service when an app and mobile device are registered with the notification service.\u003c/li\u003e \u003c/ul\u003e",
                    "typeExposed": "HashMap Text Text",
                    "type": "Map Text Text"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "GetEndpointAttributesResponse",
                "resultWrapper": "GetEndpointAttributesResult",
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "gearAttributes",
                        "name": "_gearAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eAttributes include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eCustomUserData\u003c/code\u003e -- arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEnabled\u003c/code\u003e -- flag that enables/disables delivery to the endpoint. Amazon SNS will set this to false when a notification service indicates to Amazon SNS that the endpoint is invalid. Users can set it back to true, typically after updating Token.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eToken\u003c/code\u003e -- device token, also referred to as a registration id, for an app and mobile device. This is returned from the notification service when an app and mobile device are registered with the notification service.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "gearAttributes",
                        "name": "_gearAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eAttributes include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eCustomUserData\u003c/code\u003e -- arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEnabled\u003c/code\u003e -- flag that enables/disables delivery to the endpoint. Amazon SNS will set this to false when a notification service indicates to Amazon SNS that the endpoint is invalid. Users can set it back to true, typically after updating Token.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eToken\u003c/code\u003e -- device token, also referred to as a registration id, for an app and mobile device. This is returned from the notification service when an app and mobile device are registered with the notification service.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.GetEndpointAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "GetEndpointAttributes",
            "method": "post",
            "documentation": "\u003cp\u003eRetrieves the endpoint attributes for a device on one of the supported push notification services, such as GCM and APNS. For more information, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\u003eUsing Amazon SNS Mobile Push Notifications\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getEndpointAttributesInput",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "geaiEndpointArn",
                    "name": "_geaiEndpointArn",
                    "shape": "String",
                    "locationName": "EndpointArn",
                    "documentation": "\u003cp\u003eEndpointArn for GetEndpointAttributes input.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "geaiEndpointArn",
                        "name": "_geaiEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "\u003cp\u003eEndpointArn for GetEndpointAttributes input.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 12,
                "name": "GetEndpointAttributesInput",
                "query": [
                    {
                        "field": "_geaiEndpointArn",
                        "locationName": "EndpointArn",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "geaiEndpointArn",
                        "name": "_geaiEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "\u003cp\u003eEndpointArn for GetEndpointAttributes input.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getPlatformApplicationAttributesResponse",
                "field": {
                    "location": "querystring",
                    "iso": "_Map",
                    "lensMapping": "_Map",
                    "default": "mempty",
                    "required": true,
                    "lens": "gpaarAttributes",
                    "name": "_gpaarAttributes",
                    "shape": "MapStringToString",
                    "locationName": "Attributes",
                    "documentation": "\u003cp\u003eAttributes include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eEventEndpointCreated\u003c/code\u003e -- Topic ARN to which EndpointCreated event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventEndpointDeleted\u003c/code\u003e -- Topic ARN to which EndpointDeleted event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventEndpointUpdated\u003c/code\u003e -- Topic ARN to which EndpointUpdate event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventDeliveryFailure\u003c/code\u003e -- Topic ARN to which DeliveryFailure event notifications should be sent upon Direct Publish delivery failure (permanent) to one of the application's endpoints.\u003c/li\u003e \u003c/ul\u003e",
                    "typeExposed": "HashMap Text Text",
                    "type": "Map Text Text"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "GetPlatformApplicationAttributesResponse",
                "resultWrapper": "GetPlatformApplicationAttributesResult",
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "gpaarAttributes",
                        "name": "_gpaarAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eAttributes include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eEventEndpointCreated\u003c/code\u003e -- Topic ARN to which EndpointCreated event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventEndpointDeleted\u003c/code\u003e -- Topic ARN to which EndpointDeleted event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventEndpointUpdated\u003c/code\u003e -- Topic ARN to which EndpointUpdate event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventDeliveryFailure\u003c/code\u003e -- Topic ARN to which DeliveryFailure event notifications should be sent upon Direct Publish delivery failure (permanent) to one of the application's endpoints.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "gpaarAttributes",
                        "name": "_gpaarAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eAttributes include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eEventEndpointCreated\u003c/code\u003e -- Topic ARN to which EndpointCreated event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventEndpointDeleted\u003c/code\u003e -- Topic ARN to which EndpointDeleted event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventEndpointUpdated\u003c/code\u003e -- Topic ARN to which EndpointUpdate event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventDeliveryFailure\u003c/code\u003e -- Topic ARN to which DeliveryFailure event notifications should be sent upon Direct Publish delivery failure (permanent) to one of the application's endpoints.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.GetPlatformApplicationAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "GetPlatformApplicationAttributes",
            "method": "post",
            "documentation": "\u003cp\u003eRetrieves the attributes of the platform application object for the supported push notification services, such as APNS and GCM. For more information, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\u003eUsing Amazon SNS Mobile Push Notifications\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getPlatformApplicationAttributesInput",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gpaaiPlatformApplicationArn",
                    "name": "_gpaaiPlatformApplicationArn",
                    "shape": "String",
                    "locationName": "PlatformApplicationArn",
                    "documentation": "\u003cp\u003ePlatformApplicationArn for GetPlatformApplicationAttributesInput.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gpaaiPlatformApplicationArn",
                        "name": "_gpaaiPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "\u003cp\u003ePlatformApplicationArn for GetPlatformApplicationAttributesInput.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 23,
                "name": "GetPlatformApplicationAttributesInput",
                "query": [
                    {
                        "field": "_gpaaiPlatformApplicationArn",
                        "locationName": "PlatformApplicationArn",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gpaaiPlatformApplicationArn",
                        "name": "_gpaaiPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "\u003cp\u003ePlatformApplicationArn for GetPlatformApplicationAttributesInput.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getSubscriptionAttributesResponse",
                "field": {
                    "location": "querystring",
                    "iso": "_Map",
                    "lensMapping": "_Map",
                    "default": "mempty",
                    "required": true,
                    "lens": "gsarAttributes",
                    "name": "_gsarAttributes",
                    "shape": "SubscriptionAttributesMap",
                    "locationName": "Attributes",
                    "documentation": "\u003cp\u003eA map of the subscription's attributes. Attributes in this map include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eSubscriptionArn\u003c/code\u003e -- the subscription's ARN\u003c/li\u003e \u003cli\u003e \u003ccode\u003eTopicArn\u003c/code\u003e -- the topic ARN that the subscription is associated with\u003c/li\u003e \u003cli\u003e \u003ccode\u003eOwner\u003c/code\u003e -- the AWS account ID of the subscription's owner\u003c/li\u003e \u003cli\u003e \u003ccode\u003eConfirmationWasAuthenticated\u003c/code\u003e -- true if the subscription confirmation request was authenticated\u003c/li\u003e \u003cli\u003e \u003ccode\u003eDeliveryPolicy\u003c/code\u003e -- the JSON serialization of the subscription's delivery policy\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEffectiveDeliveryPolicy\u003c/code\u003e -- the JSON serialization of the effective delivery policy that takes into account the topic delivery policy and account system defaults\u003c/li\u003e \u003c/ul\u003e",
                    "typeExposed": "HashMap Text Text",
                    "type": "Map Text Text"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "GetSubscriptionAttributesResponse",
                "resultWrapper": "GetSubscriptionAttributesResult",
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "gsarAttributes",
                        "name": "_gsarAttributes",
                        "shape": "SubscriptionAttributesMap",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eA map of the subscription's attributes. Attributes in this map include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eSubscriptionArn\u003c/code\u003e -- the subscription's ARN\u003c/li\u003e \u003cli\u003e \u003ccode\u003eTopicArn\u003c/code\u003e -- the topic ARN that the subscription is associated with\u003c/li\u003e \u003cli\u003e \u003ccode\u003eOwner\u003c/code\u003e -- the AWS account ID of the subscription's owner\u003c/li\u003e \u003cli\u003e \u003ccode\u003eConfirmationWasAuthenticated\u003c/code\u003e -- true if the subscription confirmation request was authenticated\u003c/li\u003e \u003cli\u003e \u003ccode\u003eDeliveryPolicy\u003c/code\u003e -- the JSON serialization of the subscription's delivery policy\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEffectiveDeliveryPolicy\u003c/code\u003e -- the JSON serialization of the effective delivery policy that takes into account the topic delivery policy and account system defaults\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "gsarAttributes",
                        "name": "_gsarAttributes",
                        "shape": "SubscriptionAttributesMap",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eA map of the subscription's attributes. Attributes in this map include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eSubscriptionArn\u003c/code\u003e -- the subscription's ARN\u003c/li\u003e \u003cli\u003e \u003ccode\u003eTopicArn\u003c/code\u003e -- the topic ARN that the subscription is associated with\u003c/li\u003e \u003cli\u003e \u003ccode\u003eOwner\u003c/code\u003e -- the AWS account ID of the subscription's owner\u003c/li\u003e \u003cli\u003e \u003ccode\u003eConfirmationWasAuthenticated\u003c/code\u003e -- true if the subscription confirmation request was authenticated\u003c/li\u003e \u003cli\u003e \u003ccode\u003eDeliveryPolicy\u003c/code\u003e -- the JSON serialization of the subscription's delivery policy\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEffectiveDeliveryPolicy\u003c/code\u003e -- the JSON serialization of the effective delivery policy that takes into account the topic delivery policy and account system defaults\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.GetSubscriptionAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "GetSubscriptionAttributes",
            "method": "post",
            "documentation": "\u003cp\u003eReturns all of the properties of a subscription.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getSubscriptionAttributesInput",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gsaiSubscriptionArn",
                    "name": "_gsaiSubscriptionArn",
                    "shape": "subscriptionARN",
                    "locationName": "SubscriptionArn",
                    "documentation": "\u003cp\u003eThe ARN of the subscription whose properties you want to get.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gsaiSubscriptionArn",
                        "name": "_gsaiSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "\u003cp\u003eThe ARN of the subscription whose properties you want to get.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 16,
                "name": "GetSubscriptionAttributesInput",
                "query": [
                    {
                        "field": "_gsaiSubscriptionArn",
                        "locationName": "SubscriptionArn",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gsaiSubscriptionArn",
                        "name": "_gsaiSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "\u003cp\u003eThe ARN of the subscription whose properties you want to get.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getTopicAttributesResponse",
                "field": {
                    "location": "querystring",
                    "iso": "_Map",
                    "lensMapping": "_Map",
                    "default": "mempty",
                    "required": true,
                    "lens": "gtarAttributes",
                    "name": "_gtarAttributes",
                    "shape": "TopicAttributesMap",
                    "locationName": "Attributes",
                    "documentation": "\u003cp\u003eA map of the topic's attributes. Attributes in this map include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eTopicArn\u003c/code\u003e -- the topic's ARN\u003c/li\u003e \u003cli\u003e \u003ccode\u003eOwner\u003c/code\u003e -- the AWS account ID of the topic's owner\u003c/li\u003e \u003cli\u003e \u003ccode\u003ePolicy\u003c/code\u003e -- the JSON serialization of the topic's access control policy\u003c/li\u003e \u003cli\u003e \u003ccode\u003eDisplayName\u003c/code\u003e -- the human-readable name used in the \"From\" field for notifications to email and email-json endpoints\u003c/li\u003e \u003cli\u003e \u003ccode\u003eSubscriptionsPending\u003c/code\u003e -- the number of subscriptions pending confirmation on this topic\u003c/li\u003e \u003cli\u003e \u003ccode\u003eSubscriptionsConfirmed\u003c/code\u003e -- the number of confirmed subscriptions on this topic\u003c/li\u003e \u003cli\u003e \u003ccode\u003eSubscriptionsDeleted\u003c/code\u003e -- the number of deleted subscriptions on this topic\u003c/li\u003e \u003cli\u003e \u003ccode\u003eDeliveryPolicy\u003c/code\u003e -- the JSON serialization of the topic's delivery policy\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEffectiveDeliveryPolicy\u003c/code\u003e -- the JSON serialization of the effective delivery policy that takes into account system defaults\u003c/li\u003e \u003c/ul\u003e",
                    "typeExposed": "HashMap Text Text",
                    "type": "Map Text Text"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "GetTopicAttributesResponse",
                "resultWrapper": "GetTopicAttributesResult",
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "gtarAttributes",
                        "name": "_gtarAttributes",
                        "shape": "TopicAttributesMap",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eA map of the topic's attributes. Attributes in this map include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eTopicArn\u003c/code\u003e -- the topic's ARN\u003c/li\u003e \u003cli\u003e \u003ccode\u003eOwner\u003c/code\u003e -- the AWS account ID of the topic's owner\u003c/li\u003e \u003cli\u003e \u003ccode\u003ePolicy\u003c/code\u003e -- the JSON serialization of the topic's access control policy\u003c/li\u003e \u003cli\u003e \u003ccode\u003eDisplayName\u003c/code\u003e -- the human-readable name used in the \"From\" field for notifications to email and email-json endpoints\u003c/li\u003e \u003cli\u003e \u003ccode\u003eSubscriptionsPending\u003c/code\u003e -- the number of subscriptions pending confirmation on this topic\u003c/li\u003e \u003cli\u003e \u003ccode\u003eSubscriptionsConfirmed\u003c/code\u003e -- the number of confirmed subscriptions on this topic\u003c/li\u003e \u003cli\u003e \u003ccode\u003eSubscriptionsDeleted\u003c/code\u003e -- the number of deleted subscriptions on this topic\u003c/li\u003e \u003cli\u003e \u003ccode\u003eDeliveryPolicy\u003c/code\u003e -- the JSON serialization of the topic's delivery policy\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEffectiveDeliveryPolicy\u003c/code\u003e -- the JSON serialization of the effective delivery policy that takes into account system defaults\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "gtarAttributes",
                        "name": "_gtarAttributes",
                        "shape": "TopicAttributesMap",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eA map of the topic's attributes. Attributes in this map include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eTopicArn\u003c/code\u003e -- the topic's ARN\u003c/li\u003e \u003cli\u003e \u003ccode\u003eOwner\u003c/code\u003e -- the AWS account ID of the topic's owner\u003c/li\u003e \u003cli\u003e \u003ccode\u003ePolicy\u003c/code\u003e -- the JSON serialization of the topic's access control policy\u003c/li\u003e \u003cli\u003e \u003ccode\u003eDisplayName\u003c/code\u003e -- the human-readable name used in the \"From\" field for notifications to email and email-json endpoints\u003c/li\u003e \u003cli\u003e \u003ccode\u003eSubscriptionsPending\u003c/code\u003e -- the number of subscriptions pending confirmation on this topic\u003c/li\u003e \u003cli\u003e \u003ccode\u003eSubscriptionsConfirmed\u003c/code\u003e -- the number of confirmed subscriptions on this topic\u003c/li\u003e \u003cli\u003e \u003ccode\u003eSubscriptionsDeleted\u003c/code\u003e -- the number of deleted subscriptions on this topic\u003c/li\u003e \u003cli\u003e \u003ccode\u003eDeliveryPolicy\u003c/code\u003e -- the JSON serialization of the topic's delivery policy\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEffectiveDeliveryPolicy\u003c/code\u003e -- the JSON serialization of the effective delivery policy that takes into account system defaults\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.GetTopicAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "GetTopicAttributes",
            "method": "post",
            "documentation": "\u003cp\u003eReturns all of the properties of a topic. Topic properties returned might differ based on the authorization of the user. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getTopicAttributesInput",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gtaiTopicArn",
                    "name": "_gtaiTopicArn",
                    "shape": "topicARN",
                    "locationName": "TopicArn",
                    "documentation": "\u003cp\u003eThe ARN of the topic whose properties you want to get.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gtaiTopicArn",
                        "name": "_gtaiTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic whose properties you want to get.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 9,
                "name": "GetTopicAttributesInput",
                "query": [
                    {
                        "field": "_gtaiTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gtaiTopicArn",
                        "name": "_gtaiTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic whose properties you want to get.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "listEndpointsByPlatformApplicationResponse",
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "ListEndpointsByPlatformApplicationResponse",
                "resultWrapper": "ListEndpointsByPlatformApplicationResult",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lebparEndpoints",
                        "name": "_lebparEndpoints",
                        "shape": "ListOfEndpoints",
                        "locationName": "Endpoints",
                        "documentation": "\u003cp\u003eEndpoints returned for ListEndpointsByPlatformApplication action.\u003c/p\u003e",
                        "typeExposed": "[Endpoint]",
                        "type": "[Endpoint]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lebparNextToken",
                        "name": "_lebparNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eNextToken string is returned when calling ListEndpointsByPlatformApplication action if additional records are available after the first page results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lebparEndpoints",
                        "name": "_lebparEndpoints",
                        "shape": "ListOfEndpoints",
                        "locationName": "Endpoints",
                        "documentation": "\u003cp\u003eEndpoints returned for ListEndpointsByPlatformApplication action.\u003c/p\u003e",
                        "typeExposed": "[Endpoint]",
                        "type": "[Endpoint]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lebparNextToken",
                        "name": "_lebparNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eNextToken string is returned when calling ListEndpointsByPlatformApplication action if additional records are available after the first page results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.ListEndpointsByPlatformApplication",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "ListEndpointsByPlatformApplication",
            "method": "post",
            "documentation": "\u003cp\u003eLists the endpoints and endpoint attributes for devices in a supported push notification service, such as GCM and APNS. The results for \u003ccode\u003eListEndpointsByPlatformApplication\u003c/code\u003e are paginated and return a limited list of endpoints, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call \u003ccode\u003eListEndpointsByPlatformApplication\u003c/code\u003e again using the NextToken string received from the previous call. When there are no more records to return, NextToken will be null. For more information, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\u003eUsing Amazon SNS Mobile Push Notifications\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 29,
                "ctor": "listEndpointsByPlatformApplicationInput",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lebpaiPlatformApplicationArn",
                        "name": "_lebpaiPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "\u003cp\u003ePlatformApplicationArn for ListEndpointsByPlatformApplicationInput action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 23,
                "name": "ListEndpointsByPlatformApplicationInput",
                "query": [
                    {
                        "field": "_lebpaiPlatformApplicationArn",
                        "locationName": "PlatformApplicationArn",
                        "type": "field"
                    },
                    {
                        "field": "_lebpaiNextToken",
                        "locationName": "NextToken",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lebpaiNextToken",
                        "name": "_lebpaiNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eNextToken string is used when calling ListEndpointsByPlatformApplication action to retrieve additional records that are available after the first page results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lebpaiNextToken",
                        "name": "_lebpaiNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eNextToken string is used when calling ListEndpointsByPlatformApplication action to retrieve additional records that are available after the first page results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lebpaiPlatformApplicationArn",
                        "name": "_lebpaiPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "\u003cp\u003ePlatformApplicationArn for ListEndpointsByPlatformApplicationInput action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 25,
                "ctor": "listPlatformApplicationsResponse",
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "ListPlatformApplicationsResponse",
                "resultWrapper": "ListPlatformApplicationsResult",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lparPlatformApplications",
                        "name": "_lparPlatformApplications",
                        "shape": "ListOfPlatformApplications",
                        "locationName": "PlatformApplications",
                        "documentation": "\u003cp\u003ePlatform applications returned when calling ListPlatformApplications action.\u003c/p\u003e",
                        "typeExposed": "[PlatformApplication]",
                        "type": "[PlatformApplication]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lparNextToken",
                        "name": "_lparNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eNextToken string is returned when calling ListPlatformApplications action if additional records are available after the first page results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lparNextToken",
                        "name": "_lparNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eNextToken string is returned when calling ListPlatformApplications action if additional records are available after the first page results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lparPlatformApplications",
                        "name": "_lparPlatformApplications",
                        "shape": "ListOfPlatformApplications",
                        "locationName": "PlatformApplications",
                        "documentation": "\u003cp\u003ePlatform applications returned when calling ListPlatformApplications action.\u003c/p\u003e",
                        "typeExposed": "[PlatformApplication]",
                        "type": "[PlatformApplication]"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.ListPlatformApplications",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "ListPlatformApplications",
            "method": "post",
            "documentation": "\u003cp\u003eLists the platform application objects for the supported push notification services, such as APNS and GCM. The results for \u003ccode\u003eListPlatformApplications\u003c/code\u003e are paginated and return a limited list of applications, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call \u003ccode\u003eListPlatformApplications\u003c/code\u003e using the NextToken string received from the previous call. When there are no more records to return, NextToken will be null. For more information, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\u003eUsing Amazon SNS Mobile Push Notifications\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "listPlatformApplicationsInput",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "lpaiNextToken",
                    "name": "_lpaiNextToken",
                    "shape": "String",
                    "locationName": "NextToken",
                    "documentation": "\u003cp\u003eNextToken string is used when calling ListPlatformApplications action to retrieve additional records that are available after the first page results.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 10,
                "name": "ListPlatformApplicationsInput",
                "query": [
                    {
                        "field": "_lpaiNextToken",
                        "locationName": "NextToken",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpaiNextToken",
                        "name": "_lpaiNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eNextToken string is used when calling ListPlatformApplications action to retrieve additional records that are available after the first page results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpaiNextToken",
                        "name": "_lpaiNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eNextToken string is used when calling ListPlatformApplications action to retrieve additional records that are available after the first page results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "listSubscriptionsResponse",
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "ListSubscriptionsResponse",
                "resultWrapper": "ListSubscriptionsResult",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lsrSubscriptions",
                        "name": "_lsrSubscriptions",
                        "shape": "SubscriptionsList",
                        "locationName": "Subscriptions",
                        "documentation": "\u003cp\u003eA list of subscriptions.\u003c/p\u003e",
                        "typeExposed": "[Subscription]",
                        "type": "[Subscription]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsrNextToken",
                        "name": "_lsrNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eToken to pass along to the next \u003ccode\u003eListSubscriptions\u003c/code\u003e request. This element is returned if there are more subscriptions to retrieve.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsrNextToken",
                        "name": "_lsrNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eToken to pass along to the next \u003ccode\u003eListSubscriptions\u003c/code\u003e request. This element is returned if there are more subscriptions to retrieve.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lsrSubscriptions",
                        "name": "_lsrSubscriptions",
                        "shape": "SubscriptionsList",
                        "locationName": "Subscriptions",
                        "documentation": "\u003cp\u003eA list of subscriptions.\u003c/p\u003e",
                        "typeExposed": "[Subscription]",
                        "type": "[Subscription]"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.ListSubscriptions",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "ListSubscriptions",
            "method": "post",
            "documentation": "\u003cp\u003eReturns a list of the requester's subscriptions. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a \u003ccode\u003eNextToken\u003c/code\u003e is also returned. Use the \u003ccode\u003eNextToken\u003c/code\u003e parameter in a new \u003ccode\u003eListSubscriptions\u003c/code\u003e call to get further results.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "listSubscriptionsInput",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "lsiNextToken",
                    "name": "_lsiNextToken",
                    "shape": "nextToken",
                    "locationName": "NextToken",
                    "documentation": "\u003cp\u003eToken returned by the previous \u003ccode\u003eListSubscriptions\u003c/code\u003e request.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 10,
                "name": "ListSubscriptionsInput",
                "query": [
                    {
                        "field": "_lsiNextToken",
                        "locationName": "NextToken",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsiNextToken",
                        "name": "_lsiNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eToken returned by the previous \u003ccode\u003eListSubscriptions\u003c/code\u003e request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsiNextToken",
                        "name": "_lsiNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eToken returned by the previous \u003ccode\u003eListSubscriptions\u003c/code\u003e request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 19,
                "ctor": "listSubscriptionsByTopicResponse",
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "ListSubscriptionsByTopicResponse",
                "resultWrapper": "ListSubscriptionsByTopicResult",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lsbtrSubscriptions",
                        "name": "_lsbtrSubscriptions",
                        "shape": "SubscriptionsList",
                        "locationName": "Subscriptions",
                        "documentation": "\u003cp\u003eA list of subscriptions.\u003c/p\u003e",
                        "typeExposed": "[Subscription]",
                        "type": "[Subscription]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsbtrNextToken",
                        "name": "_lsbtrNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eToken to pass along to the next \u003ccode\u003eListSubscriptionsByTopic\u003c/code\u003e request. This element is returned if there are more subscriptions to retrieve.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsbtrNextToken",
                        "name": "_lsbtrNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eToken to pass along to the next \u003ccode\u003eListSubscriptionsByTopic\u003c/code\u003e request. This element is returned if there are more subscriptions to retrieve.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lsbtrSubscriptions",
                        "name": "_lsbtrSubscriptions",
                        "shape": "SubscriptionsList",
                        "locationName": "Subscriptions",
                        "documentation": "\u003cp\u003eA list of subscriptions.\u003c/p\u003e",
                        "typeExposed": "[Subscription]",
                        "type": "[Subscription]"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.ListSubscriptionsByTopic",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "ListSubscriptionsByTopic",
            "method": "post",
            "documentation": "\u003cp\u003eReturns a list of the subscriptions to a specific topic. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a \u003ccode\u003eNextToken\u003c/code\u003e is also returned. Use the \u003ccode\u003eNextToken\u003c/code\u003e parameter in a new \u003ccode\u003eListSubscriptionsByTopic\u003c/code\u003e call to get further results.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "listSubscriptionsByTopicInput",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lsbtiTopicArn",
                        "name": "_lsbtiTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic for which you wish to find subscriptions.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 10,
                "name": "ListSubscriptionsByTopicInput",
                "query": [
                    {
                        "field": "_lsbtiTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_lsbtiNextToken",
                        "locationName": "NextToken",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsbtiNextToken",
                        "name": "_lsbtiNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eToken returned by the previous \u003ccode\u003eListSubscriptionsByTopic\u003c/code\u003e request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsbtiNextToken",
                        "name": "_lsbtiNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eToken returned by the previous \u003ccode\u003eListSubscriptionsByTopic\u003c/code\u003e request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lsbtiTopicArn",
                        "name": "_lsbtiTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic for which you wish to find subscriptions.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 13,
                "ctor": "listTopicsResponse",
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "ListTopicsResponse",
                "resultWrapper": "ListTopicsResult",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ltrTopics",
                        "name": "_ltrTopics",
                        "shape": "TopicsList",
                        "locationName": "Topics",
                        "documentation": "\u003cp\u003eA list of topic ARNs.\u003c/p\u003e",
                        "typeExposed": "[Topic]",
                        "type": "[Topic]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ltrNextToken",
                        "name": "_ltrNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eToken to pass along to the next \u003ccode\u003eListTopics\u003c/code\u003e request. This element is returned if there are additional topics to retrieve.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ltrNextToken",
                        "name": "_ltrNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eToken to pass along to the next \u003ccode\u003eListTopics\u003c/code\u003e request. This element is returned if there are additional topics to retrieve.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ltrTopics",
                        "name": "_ltrTopics",
                        "shape": "TopicsList",
                        "locationName": "Topics",
                        "documentation": "\u003cp\u003eA list of topic ARNs.\u003c/p\u003e",
                        "typeExposed": "[Topic]",
                        "type": "[Topic]"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.ListTopics",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "ListTopics",
            "method": "post",
            "documentation": "\u003cp\u003eReturns a list of the requester's topics. Each call returns a limited list of topics, up to 100. If there are more topics, a \u003ccode\u003eNextToken\u003c/code\u003e is also returned. Use the \u003ccode\u003eNextToken\u003c/code\u003e parameter in a new \u003ccode\u003eListTopics\u003c/code\u003e call to get further results.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "listTopicsInput",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ltiNextToken",
                    "name": "_ltiNextToken",
                    "shape": "nextToken",
                    "locationName": "NextToken",
                    "documentation": "\u003cp\u003eToken returned by the previous \u003ccode\u003eListTopics\u003c/code\u003e request.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 10,
                "name": "ListTopicsInput",
                "query": [
                    {
                        "field": "_ltiNextToken",
                        "locationName": "NextToken",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ltiNextToken",
                        "name": "_ltiNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eToken returned by the previous \u003ccode\u003eListTopics\u003c/code\u003e request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ltiNextToken",
                        "name": "_ltiNextToken",
                        "shape": "nextToken",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eToken returned by the previous \u003ccode\u003eListTopics\u003c/code\u003e request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "publishResponse",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "prMessageId",
                    "name": "_prMessageId",
                    "shape": "messageId",
                    "locationName": "MessageId",
                    "documentation": "\u003cp\u003eUnique identifier assigned to the published message.\u003c/p\u003e \u003cp\u003eLength Constraint: Maximum 100 characters\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "PublishResponse",
                "resultWrapper": "PublishResult",
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "prMessageId",
                        "name": "_prMessageId",
                        "shape": "messageId",
                        "locationName": "MessageId",
                        "documentation": "\u003cp\u003eUnique identifier assigned to the published message.\u003c/p\u003e \u003cp\u003eLength Constraint: Maximum 100 characters\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "prMessageId",
                        "name": "_prMessageId",
                        "shape": "messageId",
                        "locationName": "MessageId",
                        "documentation": "\u003cp\u003eUnique identifier assigned to the published message.\u003c/p\u003e \u003cp\u003eLength Constraint: Maximum 100 characters\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.Publish",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "Publish",
            "method": "post",
            "documentation": "\u003cp\u003eSends a message to all of a topic's subscribed endpoints. When a \u003ccode\u003emessageId\u003c/code\u003e is returned, the message has been saved and Amazon SNS will attempt to deliver it to the topic's subscribers shortly. The format of the outgoing message to each subscribed endpoint depends on the notification protocol selected.\u003c/p\u003e \u003cp\u003eTo use the \u003ccode\u003ePublish\u003c/code\u003e action for sending a message to a mobile endpoint, such as an app on a Kindle device or mobile phone, you must specify the EndpointArn. The EndpointArn is returned when making a call with the \u003ccode\u003eCreatePlatformEndpoint\u003c/code\u003e action. The second example below shows a request and response for publishing to a mobile endpoint. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "publishInput",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "piMessage",
                        "name": "_piMessage",
                        "shape": "message",
                        "locationName": "Message",
                        "documentation": "\u003cp\u003eThe message you want to send to the topic.\u003c/p\u003e \u003cp\u003eIf you want to send the same message to all transport protocols, include the text of the message as a String value.\u003c/p\u003e \u003cp\u003eIf you want to send different messages for each transport protocol, set the value of the \u003ccode\u003eMessageStructure\u003c/code\u003e parameter to \u003ccode\u003ejson\u003c/code\u003e and use a JSON object for the \u003ccode\u003eMessage\u003c/code\u003e parameter. See the Examples section for the format of the JSON object. \u003c/p\u003e \u003cp\u003eConstraints: Messages must be UTF-8 encoded strings at most 256 KB in size (262144 bytes, not 262144 characters).\u003c/p\u003e \u003cp\u003eJSON-specific constraints: \u003cul\u003e \u003cli\u003eKeys in the JSON object that correspond to supported transport protocols must have simple JSON string values. \u003c/li\u003e \u003cli\u003eThe values will be parsed (unescaped) before they are used in outgoing messages.\u003c/li\u003e \u003cli\u003eOutbound notifications are JSON encoded (meaning that the characters will be reescaped for sending).\u003c/li\u003e \u003cli\u003eValues have a minimum length of 0 (the empty string, \"\", is allowed).\u003c/li\u003e \u003cli\u003eValues have a maximum length bounded by the overall message size (so, including multiple protocols may limit message sizes).\u003c/li\u003e \u003cli\u003eNon-string values will cause the key to be ignored.\u003c/li\u003e \u003cli\u003eKeys that do not correspond to supported transport protocols are ignored.\u003c/li\u003e \u003cli\u003eDuplicate keys are not allowed.\u003c/li\u003e \u003cli\u003eFailure to parse or validate any key or value in the message will cause the \u003ccode\u003ePublish\u003c/code\u003e call to return an error (no partial delivery).\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 18,
                "name": "PublishInput",
                "query": [
                    {
                        "field": "_piTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_piTargetArn",
                        "locationName": "TargetArn",
                        "type": "field"
                    },
                    {
                        "field": "_piMessage",
                        "locationName": "Message",
                        "type": "field"
                    },
                    {
                        "field": "_piSubject",
                        "locationName": "Subject",
                        "type": "field"
                    },
                    {
                        "field": "_piMessageStructure",
                        "locationName": "MessageStructure",
                        "type": "field"
                    },
                    {
                        "field": "_piMessageAttributes",
                        "locationName": "MessageAttributes",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "piTopicArn",
                        "name": "_piTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe topic you want to publish to.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "piTargetArn",
                        "name": "_piTargetArn",
                        "shape": "String",
                        "locationName": "TargetArn",
                        "documentation": "\u003cp\u003eEither TopicArn or EndpointArn, but not both.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "piSubject",
                        "name": "_piSubject",
                        "shape": "subject",
                        "locationName": "Subject",
                        "documentation": "\u003cp\u003eOptional parameter to be used as the \"Subject\" line when the message is delivered to email endpoints. This field will also be included, if present, in the standard JSON messages delivered to other endpoints.\u003c/p\u003e \u003cp\u003eConstraints: Subjects must be ASCII text that begins with a letter, number, or punctuation mark; must not include line breaks or control characters; and must be less than 100 characters long.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "piMessageStructure",
                        "name": "_piMessageStructure",
                        "shape": "messageStructure",
                        "locationName": "MessageStructure",
                        "documentation": "\u003cp\u003eSet \u003ccode\u003eMessageStructure\u003c/code\u003e to \u003ccode\u003ejson\u003c/code\u003e if you want to send a different message for each protocol. For example, using one publish action, you can send a short message to your SMS subscribers and a longer message to your email subscribers. If you set \u003ccode\u003eMessageStructure\u003c/code\u003e to \u003ccode\u003ejson\u003c/code\u003e, the value of the \u003ccode\u003eMessage\u003c/code\u003e parameter must: \u003c/p\u003e \u003cul\u003e \u003cli\u003ebe a syntactically valid JSON object; and\u003c/li\u003e \u003cli\u003econtain at least a top-level JSON key of \"default\" with a value that is a string.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e You can define other top-level keys that define the message you want to send to a specific transport protocol (e.g., \"http\"). \u003c/p\u003e \u003cp\u003eFor information about sending different messages for each protocol using the AWS Management Console, go to \u003ca href=\"http://docs.aws.amazon.com/sns/latest/gsg/Publish.html#sns-message-formatting-by-protocol\"\u003eCreate Different Messages for Each Protocol\u003c/a\u003e in the \u003ci\u003eAmazon Simple Notification Service Getting Started Guide\u003c/i\u003e. \u003c/p\u003e \u003cp\u003eValid value: \u003ccode\u003ejson\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "piMessageAttributes",
                        "name": "_piMessageAttributes",
                        "shape": "MessageAttributeMap",
                        "locationName": "MessageAttributes",
                        "documentation": "\u003cp\u003eMessage attributes for Publish action.\u003c/p\u003e",
                        "typeExposed": "HashMap Text MessageAttributeValue",
                        "type": "Map Text MessageAttributeValue"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "piMessage",
                        "name": "_piMessage",
                        "shape": "message",
                        "locationName": "Message",
                        "documentation": "\u003cp\u003eThe message you want to send to the topic.\u003c/p\u003e \u003cp\u003eIf you want to send the same message to all transport protocols, include the text of the message as a String value.\u003c/p\u003e \u003cp\u003eIf you want to send different messages for each transport protocol, set the value of the \u003ccode\u003eMessageStructure\u003c/code\u003e parameter to \u003ccode\u003ejson\u003c/code\u003e and use a JSON object for the \u003ccode\u003eMessage\u003c/code\u003e parameter. See the Examples section for the format of the JSON object. \u003c/p\u003e \u003cp\u003eConstraints: Messages must be UTF-8 encoded strings at most 256 KB in size (262144 bytes, not 262144 characters).\u003c/p\u003e \u003cp\u003eJSON-specific constraints: \u003cul\u003e \u003cli\u003eKeys in the JSON object that correspond to supported transport protocols must have simple JSON string values. \u003c/li\u003e \u003cli\u003eThe values will be parsed (unescaped) before they are used in outgoing messages.\u003c/li\u003e \u003cli\u003eOutbound notifications are JSON encoded (meaning that the characters will be reescaped for sending).\u003c/li\u003e \u003cli\u003eValues have a minimum length of 0 (the empty string, \"\", is allowed).\u003c/li\u003e \u003cli\u003eValues have a maximum length bounded by the overall message size (so, including multiple protocols may limit message sizes).\u003c/li\u003e \u003cli\u003eNon-string values will cause the key to be ignored.\u003c/li\u003e \u003cli\u003eKeys that do not correspond to supported transport protocols are ignored.\u003c/li\u003e \u003cli\u003eDuplicate keys are not allowed.\u003c/li\u003e \u003cli\u003eFailure to parse or validate any key or value in the message will cause the \u003ccode\u003ePublish\u003c/code\u003e call to return an error (no partial delivery).\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "piMessageAttributes",
                        "name": "_piMessageAttributes",
                        "shape": "MessageAttributeMap",
                        "locationName": "MessageAttributes",
                        "documentation": "\u003cp\u003eMessage attributes for Publish action.\u003c/p\u003e",
                        "typeExposed": "HashMap Text MessageAttributeValue",
                        "type": "Map Text MessageAttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "piMessageStructure",
                        "name": "_piMessageStructure",
                        "shape": "messageStructure",
                        "locationName": "MessageStructure",
                        "documentation": "\u003cp\u003eSet \u003ccode\u003eMessageStructure\u003c/code\u003e to \u003ccode\u003ejson\u003c/code\u003e if you want to send a different message for each protocol. For example, using one publish action, you can send a short message to your SMS subscribers and a longer message to your email subscribers. If you set \u003ccode\u003eMessageStructure\u003c/code\u003e to \u003ccode\u003ejson\u003c/code\u003e, the value of the \u003ccode\u003eMessage\u003c/code\u003e parameter must: \u003c/p\u003e \u003cul\u003e \u003cli\u003ebe a syntactically valid JSON object; and\u003c/li\u003e \u003cli\u003econtain at least a top-level JSON key of \"default\" with a value that is a string.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e You can define other top-level keys that define the message you want to send to a specific transport protocol (e.g., \"http\"). \u003c/p\u003e \u003cp\u003eFor information about sending different messages for each protocol using the AWS Management Console, go to \u003ca href=\"http://docs.aws.amazon.com/sns/latest/gsg/Publish.html#sns-message-formatting-by-protocol\"\u003eCreate Different Messages for Each Protocol\u003c/a\u003e in the \u003ci\u003eAmazon Simple Notification Service Getting Started Guide\u003c/i\u003e. \u003c/p\u003e \u003cp\u003eValid value: \u003ccode\u003ejson\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "piSubject",
                        "name": "_piSubject",
                        "shape": "subject",
                        "locationName": "Subject",
                        "documentation": "\u003cp\u003eOptional parameter to be used as the \"Subject\" line when the message is delivered to email endpoints. This field will also be included, if present, in the standard JSON messages delivered to other endpoints.\u003c/p\u003e \u003cp\u003eConstraints: Subjects must be ASCII text that begins with a letter, number, or punctuation mark; must not include line breaks or control characters; and must be less than 100 characters long.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "piTargetArn",
                        "name": "_piTargetArn",
                        "shape": "String",
                        "locationName": "TargetArn",
                        "documentation": "\u003cp\u003eEither TopicArn or EndpointArn, but not both.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "piTopicArn",
                        "name": "_piTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe topic you want to publish to.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "removePermissionResponse",
                "wrapper": false,
                "required": [],
                "shared": false,
                "name": "RemovePermissionResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.SNS.RemovePermission",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "RemovePermission",
            "method": "post",
            "documentation": "\u003cp\u003eRemoves a statement from a topic's access control policy.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 12,
                "ctor": "removePermissionInput",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rpiTopicArn",
                        "name": "_rpiTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic whose access control policy you wish to modify.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rpiLabel",
                        "name": "_rpiLabel",
                        "shape": "label",
                        "locationName": "Label",
                        "documentation": "\u003cp\u003eThe unique label of the statement you want to remove.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 9,
                "name": "RemovePermissionInput",
                "query": [
                    {
                        "field": "_rpiTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_rpiLabel",
                        "locationName": "Label",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rpiLabel",
                        "name": "_rpiLabel",
                        "shape": "label",
                        "locationName": "Label",
                        "documentation": "\u003cp\u003eThe unique label of the statement you want to remove.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rpiTopicArn",
                        "name": "_rpiTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic whose access control policy you wish to modify.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "setEndpointAttributesResponse",
                "wrapper": false,
                "required": [],
                "shared": false,
                "name": "SetEndpointAttributesResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.SNS.SetEndpointAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "SetEndpointAttributes",
            "method": "post",
            "documentation": "\u003cp\u003eSets the attributes for an endpoint for a device on one of the supported push notification services, such as GCM and APNS. For more information, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\u003eUsing Amazon SNS Mobile Push Notifications\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "setEndpointAttributesInput",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "seaiEndpointArn",
                        "name": "_seaiEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "\u003cp\u003eEndpointArn used for SetEndpointAttributes action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 12,
                "name": "SetEndpointAttributesInput",
                "query": [
                    {
                        "field": "_seaiEndpointArn",
                        "locationName": "EndpointArn",
                        "type": "field"
                    },
                    {
                        "field": "_seaiAttributes",
                        "locationName": "Attributes",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "seaiAttributes",
                        "name": "_seaiAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eA map of the endpoint attributes. Attributes in this map include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eCustomUserData\u003c/code\u003e -- arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEnabled\u003c/code\u003e -- flag that enables/disables delivery to the endpoint. Amazon SNS will set this to false when a notification service indicates to Amazon SNS that the endpoint is invalid. Users can set it back to true, typically after updating Token.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eToken\u003c/code\u003e -- device token, also referred to as a registration id, for an app and mobile device. This is returned from the notification service when an app and mobile device are registered with the notification service.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "seaiAttributes",
                        "name": "_seaiAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eA map of the endpoint attributes. Attributes in this map include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eCustomUserData\u003c/code\u003e -- arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEnabled\u003c/code\u003e -- flag that enables/disables delivery to the endpoint. Amazon SNS will set this to false when a notification service indicates to Amazon SNS that the endpoint is invalid. Users can set it back to true, typically after updating Token.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eToken\u003c/code\u003e -- device token, also referred to as a registration id, for an app and mobile device. This is returned from the notification service when an app and mobile device are registered with the notification service.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "seaiEndpointArn",
                        "name": "_seaiEndpointArn",
                        "shape": "String",
                        "locationName": "EndpointArn",
                        "documentation": "\u003cp\u003eEndpointArn used for SetEndpointAttributes action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "setPlatformApplicationAttributesResponse",
                "wrapper": false,
                "required": [],
                "shared": false,
                "name": "SetPlatformApplicationAttributesResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.SNS.SetPlatformApplicationAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "SetPlatformApplicationAttributes",
            "method": "post",
            "documentation": "\u003cp\u003eSets the attributes of the platform application object for the supported push notification services, such as APNS and GCM. For more information, see \u003ca href=\"http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\u003eUsing Amazon SNS Mobile Push Notifications\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 28,
                "ctor": "setPlatformApplicationAttributesInput",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "spaaiPlatformApplicationArn",
                        "name": "_spaaiPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "\u003cp\u003ePlatformApplicationArn for SetPlatformApplicationAttributes action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 23,
                "name": "SetPlatformApplicationAttributesInput",
                "query": [
                    {
                        "field": "_spaaiPlatformApplicationArn",
                        "locationName": "PlatformApplicationArn",
                        "type": "field"
                    },
                    {
                        "field": "_spaaiAttributes",
                        "locationName": "Attributes",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "spaaiAttributes",
                        "name": "_spaaiAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eA map of the platform application attributes. Attributes in this map include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003ePlatformCredential\u003c/code\u003e -- The credential received from the notification service. For APNS/APNS_SANDBOX, PlatformCredential is \"private key\". For GCM, PlatformCredential is \"API key\". For ADM, PlatformCredential is \"client secret\".\u003c/li\u003e \u003cli\u003e \u003ccode\u003ePlatformPrincipal\u003c/code\u003e -- The principal received from the notification service. For APNS/APNS_SANDBOX, PlatformPrincipal is \"SSL certificate\". For GCM, PlatformPrincipal is not applicable. For ADM, PlatformPrincipal is \"client id\".\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventEndpointCreated\u003c/code\u003e -- Topic ARN to which EndpointCreated event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventEndpointDeleted\u003c/code\u003e -- Topic ARN to which EndpointDeleted event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventEndpointUpdated\u003c/code\u003e -- Topic ARN to which EndpointUpdate event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventDeliveryFailure\u003c/code\u003e -- Topic ARN to which DeliveryFailure event notifications should be sent upon Direct Publish delivery failure (permanent) to one of the application's endpoints.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "spaaiAttributes",
                        "name": "_spaaiAttributes",
                        "shape": "MapStringToString",
                        "locationName": "Attributes",
                        "documentation": "\u003cp\u003eA map of the platform application attributes. Attributes in this map include the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003ePlatformCredential\u003c/code\u003e -- The credential received from the notification service. For APNS/APNS_SANDBOX, PlatformCredential is \"private key\". For GCM, PlatformCredential is \"API key\". For ADM, PlatformCredential is \"client secret\".\u003c/li\u003e \u003cli\u003e \u003ccode\u003ePlatformPrincipal\u003c/code\u003e -- The principal received from the notification service. For APNS/APNS_SANDBOX, PlatformPrincipal is \"SSL certificate\". For GCM, PlatformPrincipal is not applicable. For ADM, PlatformPrincipal is \"client id\".\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventEndpointCreated\u003c/code\u003e -- Topic ARN to which EndpointCreated event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventEndpointDeleted\u003c/code\u003e -- Topic ARN to which EndpointDeleted event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventEndpointUpdated\u003c/code\u003e -- Topic ARN to which EndpointUpdate event notifications should be sent.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEventDeliveryFailure\u003c/code\u003e -- Topic ARN to which DeliveryFailure event notifications should be sent upon Direct Publish delivery failure (permanent) to one of the application's endpoints.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "spaaiPlatformApplicationArn",
                        "name": "_spaaiPlatformApplicationArn",
                        "shape": "String",
                        "locationName": "PlatformApplicationArn",
                        "documentation": "\u003cp\u003ePlatformApplicationArn for SetPlatformApplicationAttributes action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "setSubscriptionAttributesResponse",
                "wrapper": false,
                "required": [],
                "shared": false,
                "name": "SetSubscriptionAttributesResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.SNS.SetSubscriptionAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "SetSubscriptionAttributes",
            "method": "post",
            "documentation": "\u003cp\u003eAllows a subscription owner to set an attribute of the topic to a new value.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "setSubscriptionAttributesInput",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ssaiSubscriptionArn",
                        "name": "_ssaiSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "\u003cp\u003eThe ARN of the subscription to modify.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ssaiAttributeName",
                        "name": "_ssaiAttributeName",
                        "shape": "attributeName",
                        "locationName": "AttributeName",
                        "documentation": "\u003cp\u003eThe name of the attribute you want to set. Only a subset of the subscriptions attributes are mutable.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eDeliveryPolicy\u003c/code\u003e | \u003ccode\u003eRawMessageDelivery\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 16,
                "name": "SetSubscriptionAttributesInput",
                "query": [
                    {
                        "field": "_ssaiSubscriptionArn",
                        "locationName": "SubscriptionArn",
                        "type": "field"
                    },
                    {
                        "field": "_ssaiAttributeName",
                        "locationName": "AttributeName",
                        "type": "field"
                    },
                    {
                        "field": "_ssaiAttributeValue",
                        "locationName": "AttributeValue",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ssaiAttributeValue",
                        "name": "_ssaiAttributeValue",
                        "shape": "attributeValue",
                        "locationName": "AttributeValue",
                        "documentation": "\u003cp\u003eThe new value for the attribute in JSON format.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ssaiAttributeName",
                        "name": "_ssaiAttributeName",
                        "shape": "attributeName",
                        "locationName": "AttributeName",
                        "documentation": "\u003cp\u003eThe name of the attribute you want to set. Only a subset of the subscriptions attributes are mutable.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eDeliveryPolicy\u003c/code\u003e | \u003ccode\u003eRawMessageDelivery\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ssaiAttributeValue",
                        "name": "_ssaiAttributeValue",
                        "shape": "attributeValue",
                        "locationName": "AttributeValue",
                        "documentation": "\u003cp\u003eThe new value for the attribute in JSON format.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ssaiSubscriptionArn",
                        "name": "_ssaiSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "\u003cp\u003eThe ARN of the subscription to modify.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "setTopicAttributesResponse",
                "wrapper": false,
                "required": [],
                "shared": false,
                "name": "SetTopicAttributesResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.SNS.SetTopicAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "SetTopicAttributes",
            "method": "post",
            "documentation": "\u003cp\u003eAllows a topic owner to set an attribute of the topic to a new value.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 19,
                "ctor": "setTopicAttributesInput",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "staiTopicArn",
                        "name": "_staiTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic to modify.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "staiAttributeName",
                        "name": "_staiAttributeName",
                        "shape": "attributeName",
                        "locationName": "AttributeName",
                        "documentation": "\u003cp\u003eThe name of the attribute you want to set. Only a subset of the topic's attributes are mutable.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003ePolicy\u003c/code\u003e | \u003ccode\u003eDisplayName\u003c/code\u003e | \u003ccode\u003eDeliveryPolicy\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 15,
                "name": "SetTopicAttributesInput",
                "query": [
                    {
                        "field": "_staiTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_staiAttributeName",
                        "locationName": "AttributeName",
                        "type": "field"
                    },
                    {
                        "field": "_staiAttributeValue",
                        "locationName": "AttributeValue",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "staiAttributeValue",
                        "name": "_staiAttributeValue",
                        "shape": "attributeValue",
                        "locationName": "AttributeValue",
                        "documentation": "\u003cp\u003eThe new value for the attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "staiAttributeName",
                        "name": "_staiAttributeName",
                        "shape": "attributeName",
                        "locationName": "AttributeName",
                        "documentation": "\u003cp\u003eThe name of the attribute you want to set. Only a subset of the topic's attributes are mutable.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003ePolicy\u003c/code\u003e | \u003ccode\u003eDisplayName\u003c/code\u003e | \u003ccode\u003eDeliveryPolicy\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "staiAttributeValue",
                        "name": "_staiAttributeValue",
                        "shape": "attributeValue",
                        "locationName": "AttributeValue",
                        "documentation": "\u003cp\u003eThe new value for the attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "staiTopicArn",
                        "name": "_staiTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic to modify.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "subscribeResponse",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "srSubscriptionArn",
                    "name": "_srSubscriptionArn",
                    "shape": "subscriptionARN",
                    "locationName": "SubscriptionArn",
                    "documentation": "\u003cp\u003eThe ARN of the subscription, if the service was able to create a subscription immediately (without requiring endpoint owner confirmation).\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "name": "SubscribeResponse",
                "resultWrapper": "SubscribeResult",
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "srSubscriptionArn",
                        "name": "_srSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "\u003cp\u003eThe ARN of the subscription, if the service was able to create a subscription immediately (without requiring endpoint owner confirmation).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "srSubscriptionArn",
                        "name": "_srSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "\u003cp\u003eThe ARN of the subscription, if the service was able to create a subscription immediately (without requiring endpoint owner confirmation).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SNS.Subscribe",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "Subscribe",
            "method": "post",
            "documentation": "\u003cp\u003ePrepares to subscribe an endpoint by sending the endpoint a confirmation message. To actually create a subscription, the endpoint owner must call the \u003ccode\u003eConfirmSubscription\u003c/code\u003e action with the token from the confirmation message. Confirmation tokens are valid for three days.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 11,
                "ctor": "subscribeInput",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "siTopicArn",
                        "name": "_siTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic you want to subscribe to.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "siProtocol",
                        "name": "_siProtocol",
                        "shape": "protocol",
                        "locationName": "Protocol",
                        "documentation": "\u003cp\u003eThe protocol you want to use. Supported protocols include:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003ehttp\u003c/code\u003e -- delivery of JSON-encoded message via HTTP POST\u003c/li\u003e \u003cli\u003e \u003ccode\u003ehttps\u003c/code\u003e -- delivery of JSON-encoded message via HTTPS POST\u003c/li\u003e \u003cli\u003e \u003ccode\u003eemail\u003c/code\u003e -- delivery of message via SMTP\u003c/li\u003e \u003cli\u003e \u003ccode\u003eemail-json\u003c/code\u003e -- delivery of JSON-encoded message via SMTP\u003c/li\u003e \u003cli\u003e \u003ccode\u003esms\u003c/code\u003e -- delivery of message via SMS\u003c/li\u003e \u003cli\u003e \u003ccode\u003esqs\u003c/code\u003e -- delivery of JSON-encoded message to an Amazon SQS queue\u003c/li\u003e \u003cli\u003e \u003ccode\u003eapplication\u003c/code\u003e -- delivery of JSON-encoded message to an EndpointArn for a mobile app and device.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 9,
                "name": "SubscribeInput",
                "query": [
                    {
                        "field": "_siTopicArn",
                        "locationName": "TopicArn",
                        "type": "field"
                    },
                    {
                        "field": "_siProtocol",
                        "locationName": "Protocol",
                        "type": "field"
                    },
                    {
                        "field": "_siEndpoint",
                        "locationName": "Endpoint",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "siEndpoint",
                        "name": "_siEndpoint",
                        "shape": "endpoint",
                        "locationName": "Endpoint",
                        "documentation": "\u003cp\u003eThe endpoint that you want to receive notifications. Endpoints vary by protocol:\u003c/p\u003e \u003cul\u003e \u003cli\u003eFor the \u003ccode\u003ehttp\u003c/code\u003e protocol, the endpoint is an URL beginning with \"http://\"\u003c/li\u003e \u003cli\u003eFor the \u003ccode\u003ehttps\u003c/code\u003e protocol, the endpoint is a URL beginning with \"https://\"\u003c/li\u003e \u003cli\u003eFor the \u003ccode\u003eemail\u003c/code\u003e protocol, the endpoint is an email address\u003c/li\u003e \u003cli\u003eFor the \u003ccode\u003eemail-json\u003c/code\u003e protocol, the endpoint is an email address\u003c/li\u003e \u003cli\u003eFor the \u003ccode\u003esms\u003c/code\u003e protocol, the endpoint is a phone number of an SMS-enabled device\u003c/li\u003e \u003cli\u003eFor the \u003ccode\u003esqs\u003c/code\u003e protocol, the endpoint is the ARN of an Amazon SQS queue\u003c/li\u003e \u003cli\u003eFor the \u003ccode\u003eapplication\u003c/code\u003e protocol, the endpoint is the EndpointArn of a mobile app and device.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "siEndpoint",
                        "name": "_siEndpoint",
                        "shape": "endpoint",
                        "locationName": "Endpoint",
                        "documentation": "\u003cp\u003eThe endpoint that you want to receive notifications. Endpoints vary by protocol:\u003c/p\u003e \u003cul\u003e \u003cli\u003eFor the \u003ccode\u003ehttp\u003c/code\u003e protocol, the endpoint is an URL beginning with \"http://\"\u003c/li\u003e \u003cli\u003eFor the \u003ccode\u003ehttps\u003c/code\u003e protocol, the endpoint is a URL beginning with \"https://\"\u003c/li\u003e \u003cli\u003eFor the \u003ccode\u003eemail\u003c/code\u003e protocol, the endpoint is an email address\u003c/li\u003e \u003cli\u003eFor the \u003ccode\u003eemail-json\u003c/code\u003e protocol, the endpoint is an email address\u003c/li\u003e \u003cli\u003eFor the \u003ccode\u003esms\u003c/code\u003e protocol, the endpoint is a phone number of an SMS-enabled device\u003c/li\u003e \u003cli\u003eFor the \u003ccode\u003esqs\u003c/code\u003e protocol, the endpoint is the ARN of an Amazon SQS queue\u003c/li\u003e \u003cli\u003eFor the \u003ccode\u003eapplication\u003c/code\u003e protocol, the endpoint is the EndpointArn of a mobile app and device.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "siProtocol",
                        "name": "_siProtocol",
                        "shape": "protocol",
                        "locationName": "Protocol",
                        "documentation": "\u003cp\u003eThe protocol you want to use. Supported protocols include:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003ehttp\u003c/code\u003e -- delivery of JSON-encoded message via HTTP POST\u003c/li\u003e \u003cli\u003e \u003ccode\u003ehttps\u003c/code\u003e -- delivery of JSON-encoded message via HTTPS POST\u003c/li\u003e \u003cli\u003e \u003ccode\u003eemail\u003c/code\u003e -- delivery of message via SMTP\u003c/li\u003e \u003cli\u003e \u003ccode\u003eemail-json\u003c/code\u003e -- delivery of JSON-encoded message via SMTP\u003c/li\u003e \u003cli\u003e \u003ccode\u003esms\u003c/code\u003e -- delivery of message via SMS\u003c/li\u003e \u003cli\u003e \u003ccode\u003esqs\u003c/code\u003e -- delivery of JSON-encoded message to an Amazon SQS queue\u003c/li\u003e \u003cli\u003e \u003ccode\u003eapplication\u003c/code\u003e -- delivery of JSON-encoded message to an EndpointArn for a mobile app and device.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "siTopicArn",
                        "name": "_siTopicArn",
                        "shape": "topicARN",
                        "locationName": "TopicArn",
                        "documentation": "\u003cp\u003eThe ARN of the topic you want to subscribe to.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "SNS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "unsubscribeResponse",
                "wrapper": false,
                "required": [],
                "shared": false,
                "name": "UnsubscribeResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.SNS.Unsubscribe",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.SNS.Types"
            ],
            "name": "Unsubscribe",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes a subscription. If the subscription requires authentication for deletion, only the owner of the subscription or the topic's owner can unsubscribe, and an AWS signature is required. If the \u003ccode\u003eUnsubscribe\u003c/code\u003e call does not require authentication and the requester is not the subscription owner, a final cancellation message is delivered to the endpoint, so that the endpoint owner can easily resubscribe to the topic if the \u003ccode\u003eUnsubscribe\u003c/code\u003e request was unintended.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "unsubscribeInput",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "uiSubscriptionArn",
                    "name": "_uiSubscriptionArn",
                    "shape": "subscriptionARN",
                    "locationName": "SubscriptionArn",
                    "documentation": "\u003cp\u003eThe ARN of the subscription to be deleted.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uiSubscriptionArn",
                        "name": "_uiSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "\u003cp\u003eThe ARN of the subscription to be deleted.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 16,
                "name": "UnsubscribeInput",
                "query": [
                    {
                        "field": "_uiSubscriptionArn",
                        "locationName": "SubscriptionArn",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uiSubscriptionArn",
                        "name": "_uiSubscriptionArn",
                        "shape": "subscriptionARN",
                        "locationName": "SubscriptionArn",
                        "documentation": "\u003cp\u003eThe ARN of the subscription to be deleted.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        }
    ]
}