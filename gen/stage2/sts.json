{
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "STS",
        "error": "RESTError",
        "url": "http://docs.aws.amazon.com/STS/latest/APIReference/Welcome.html",
        "namespace": "Network.AWS.STS",
        "protocol": "query",
        "imports": [
            "Network.AWS.STS.AssumeRole",
            "Network.AWS.STS.AssumeRoleWithSAML",
            "Network.AWS.STS.AssumeRoleWithWebIdentity",
            "Network.AWS.STS.DecodeAuthorizationMessage",
            "Network.AWS.STS.GetFederationToken",
            "Network.AWS.STS.GetSessionToken",
            "Network.AWS.STS.Types"
        ],
        "name": "Amazon Security Token Service",
        "version": "2011-06-15",
        "documentation": "The AWS Security Token Service (STS) is a web service that enables you to request temporary, limited-privilege credentials for AWS Identity and Access Management (IAM) users or for users that you authenticate (federated users).",
        "xmlNamespace": "https://sts.amazonaws.com/doc/2011-06-15/",
        "jsonVersion": null,
        "endpoint": "Global",
        "endpointPrefix": "sts",
        "targetPrefix": null
    },
    "cabal": {
        "other": [],
        "library": "amazonka-sts",
        "exposed": [
            "Network.AWS.STS",
            "Network.AWS.STS.AssumeRole",
            "Network.AWS.STS.AssumeRoleWithSAML",
            "Network.AWS.STS.AssumeRoleWithWebIdentity",
            "Network.AWS.STS.DecodeAuthorizationMessage",
            "Network.AWS.STS.GetFederationToken",
            "Network.AWS.STS.GetSessionToken",
            "Network.AWS.STS.Types"
        ],
        "url": "http://docs.aws.amazon.com/STS/latest/APIReference/Welcome.html",
        "protocol": "query",
        "name": "Amazon Security Token Service",
        "version": "0.0.0",
        "description": "The AWS Security Token Service (STS) is a web service that enables you to request temporary, limited-privilege credentials for AWS Identity and Access Management (IAM) users or for users that you authenticate (federated users)."
    },
    "types": {
        "namespace": "Network.AWS.STS.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 17,
                "ctor": "credentials",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cAccessKeyId",
                        "name": "_cAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "\u003cp\u003eThe access key ID that identifies the temporary security credentials.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cSecretAccessKey",
                        "name": "_cSecretAccessKey",
                        "shape": "accessKeySecretType",
                        "locationName": "SecretAccessKey",
                        "documentation": "\u003cp\u003eThe secret access key that can be used to sign requests.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cSessionToken",
                        "name": "_cSessionToken",
                        "shape": "tokenType",
                        "locationName": "SessionToken",
                        "documentation": "\u003cp\u003eThe token that users must pass to the service API to use the temporary credentials.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cExpiration",
                        "name": "_cExpiration",
                        "shape": "dateType",
                        "locationName": "Expiration",
                        "documentation": "\u003cp\u003eThe date on which the current credentials expire.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    }
                ],
                "contentPad": 0,
                "name": "Credentials",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cAccessKeyId",
                        "name": "_cAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "\u003cp\u003eThe access key ID that identifies the temporary security credentials.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cExpiration",
                        "name": "_cExpiration",
                        "shape": "dateType",
                        "locationName": "Expiration",
                        "documentation": "\u003cp\u003eThe date on which the current credentials expire.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cSecretAccessKey",
                        "name": "_cSecretAccessKey",
                        "shape": "accessKeySecretType",
                        "locationName": "SecretAccessKey",
                        "documentation": "\u003cp\u003eThe secret access key that can be used to sign requests.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cSessionToken",
                        "name": "_cSessionToken",
                        "shape": "tokenType",
                        "locationName": "SessionToken",
                        "documentation": "\u003cp\u003eThe token that users must pass to the service API to use the temporary credentials.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "federatedUser",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "fuFederatedUserId",
                        "name": "_fuFederatedUserId",
                        "shape": "federatedIdType",
                        "locationName": "FederatedUserId",
                        "documentation": "\u003cp\u003eThe string that identifies the federated user associated with the credentials, similar to the unique ID of an IAM user.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "fuArn",
                        "name": "_fuArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003eThe ARN that specifies the federated user that is associated with the credentials. For more information about ARNs and how to use them in policies, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\" target=\"_blank\"\u003eIdentifiers for IAM Entities\u003c/a\u003e in \u003ci\u003eUsing IAM\u003c/i\u003e. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "FederatedUser",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "fuArn",
                        "name": "_fuArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003eThe ARN that specifies the federated user that is associated with the credentials. For more information about ARNs and how to use them in policies, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\" target=\"_blank\"\u003eIdentifiers for IAM Entities\u003c/a\u003e in \u003ci\u003eUsing IAM\u003c/i\u003e. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "fuFederatedUserId",
                        "name": "_fuFederatedUserId",
                        "shape": "federatedIdType",
                        "locationName": "FederatedUserId",
                        "documentation": "\u003cp\u003eThe string that identifies the federated user associated with the credentials, similar to the unique ID of an IAM user.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 17,
                "ctor": "assumedRoleUser",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "aruAssumedRoleId",
                        "name": "_aruAssumedRoleId",
                        "shape": "assumedRoleIdType",
                        "locationName": "AssumedRoleId",
                        "documentation": "\u003cp\u003eA unique identifier that contains the role ID and the role session name of the role that is being assumed. The role ID is generated by AWS when the role is created.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "aruArn",
                        "name": "_aruArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003eThe ARN of the temporary security credentials that are returned from the \u003ca\u003eAssumeRole\u003c/a\u003e action. For more information about ARNs and how to use them in policies, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\" target=\"_blank\"\u003e Identifiers for IAM Entities \u003c/a\u003e in \u003ci\u003eUsing IAM\u003c/i\u003e. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "AssumedRoleUser",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "aruArn",
                        "name": "_aruArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003eThe ARN of the temporary security credentials that are returned from the \u003ca\u003eAssumeRole\u003c/a\u003e action. For more information about ARNs and how to use them in policies, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\" target=\"_blank\"\u003e Identifiers for IAM Entities \u003c/a\u003e in \u003ci\u003eUsing IAM\u003c/i\u003e. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "aruAssumedRoleId",
                        "name": "_aruAssumedRoleId",
                        "shape": "assumedRoleIdType",
                        "locationName": "AssumedRoleId",
                        "documentation": "\u003cp\u003eA unique identifier that contains the role ID and the role session name of the role that is being assumed. The role ID is generated by AWS when the role is created.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        ],
        "imports": [],
        "shared": [
            "Credentials",
            "AssumedRoleUser"
        ]
    },
    "operations": [
        {
            "service": "STS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 20,
                "ctor": "assumeRoleResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AssumeRoleResponse",
                "resultWrapper": "AssumeRoleResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arrCredentials",
                        "name": "_arrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "\u003cp\u003eThe temporary security credentials, which include an access key ID, a secret access key, and a security (or session) token.\u003c/p\u003e",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arrAssumedRoleUser",
                        "name": "_arrAssumedRoleUser",
                        "shape": "AssumedRoleUser",
                        "locationName": "AssumedRoleUser",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that you can use to refer to the resulting temporary security credentials. For example, you can reference these credentials as a principal in a resource-based policy by using the ARN or assumed role ID. The ARN and ID include the \u003ccode\u003eRoleSessionName\u003c/code\u003e that you specified when you called \u003ccode\u003eAssumeRole\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe AssumedRoleUser",
                        "type": "Maybe AssumedRoleUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arrPackedPolicySize",
                        "name": "_arrPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "\u003cp\u003eA percentage value that indicates the size of the policy in packed form. The service rejects any policy with a packed size greater than 100 percent, which means the policy exceeded the allowed space. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arrAssumedRoleUser",
                        "name": "_arrAssumedRoleUser",
                        "shape": "AssumedRoleUser",
                        "locationName": "AssumedRoleUser",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that you can use to refer to the resulting temporary security credentials. For example, you can reference these credentials as a principal in a resource-based policy by using the ARN or assumed role ID. The ARN and ID include the \u003ccode\u003eRoleSessionName\u003c/code\u003e that you specified when you called \u003ccode\u003eAssumeRole\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe AssumedRoleUser",
                        "type": "Maybe AssumedRoleUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arrCredentials",
                        "name": "_arrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "\u003cp\u003eThe temporary security credentials, which include an access key ID, a secret access key, and a security (or session) token.\u003c/p\u003e",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arrPackedPolicySize",
                        "name": "_arrPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "\u003cp\u003eA percentage value that indicates the size of the policy in packed form. The service rejects any policy with a packed size greater than 100 percent, which means the policy exceeded the allowed space. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html",
            "namespace": "Network.AWS.STS.AssumeRole",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.STS.Types"
            ],
            "pager": null,
            "name": "AssumeRole",
            "method": "post",
            "documentation": "\u003cp\u003eReturns a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) that you can use to access AWS resources that you might not normally have access to. Typically, you use \u003ccode\u003eAssumeRole\u003c/code\u003e for cross-account access or federation. \u003c/p\u003e \u003cp\u003e\u003cb\u003eImportant:\u003c/b\u003e You cannot call \u003ccode\u003eAssumeRole\u003c/code\u003e by using AWS account credentials; access will be denied. You must use IAM user credentials or temporary security credentials to call \u003ccode\u003eAssumeRole\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eFor cross-account access, imagine that you own multiple accounts and need to access resources in each account. You could create long-term credentials in each account to access those resources. However, managing all those credentials and remembering which one can access which account can be time consuming. Instead, you can create one set of long-term credentials in one account and then use temporary security credentials to access all the other accounts by assuming roles in those accounts. For more information about roles, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\"\u003eRoles\u003c/a\u003e in \u003ci\u003eUsing IAM\u003c/i\u003e. \u003c/p\u003e \u003cp\u003eFor federation, you can, for example, grant single sign-on access to the AWS Management Console. If you already have an identity and authentication system in your corporate network, you don't have to recreate user identities in AWS in order to grant those user identities access to AWS. Instead, after a user has been authenticated, you call \u003ccode\u003eAssumeRole\u003c/code\u003e (and specify the role with the appropriate permissions) to get temporary security credentials for that user. With those temporary security credentials, you construct a sign-in URL that users can use to access the console. For more information, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/STSUseCases.html\"\u003eScenarios for Granting Temporary Access\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e. \u003c/p\u003e \u003cp\u003eThe temporary security credentials are valid for the duration that you specified when calling \u003ccode\u003eAssumeRole\u003c/code\u003e, which can be from 900 seconds (15 minutes) to 3600 seconds (1 hour). The default is 1 hour. \u003c/p\u003e \u003cp\u003eOptionally, you can pass an IAM access policy to this operation. If you choose not to pass a policy, the temporary security credentials that are returned by the operation have the permissions that are defined in the access policy of the role that is being assumed. If you pass a policy to this operation, the temporary security credentials that are returned by the operation have the permissions that are allowed by both the access policy of the role that is being assumed, \u003ci\u003e\u003cb\u003eand\u003c/b\u003e\u003c/i\u003e the policy that you pass. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html\"\u003ePermissions for AssumeRole\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eTo assume a role, your AWS account must be trusted by the role. The trust relationship is defined in the role's trust policy when the role is created. You must also have a policy that allows you to call \u003ccode\u003ests:AssumeRole\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e \u003cb\u003eUsing MFA with AssumeRole\u003c/b\u003e \u003c/p\u003e \u003cp\u003eYou can optionally include multi-factor authentication (MFA) information when you call \u003ccode\u003eAssumeRole\u003c/code\u003e. This is useful for cross-account scenarios in which you want to make sure that the user who is assuming the role has been authenticated using an AWS MFA device. In that scenario, the trust policy of the role being assumed includes a condition that tests for MFA authentication; if the caller does not include valid MFA information, the request to assume the role is denied. The condition in a trust policy that tests for MFA authentication might look like the following example.\u003c/p\u003e \u003cp\u003e \u003ccode\u003e\"Condition\": {\"Null\": {\"aws:MultiFactorAuthAge\": false}}\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI.html\"\u003eConfiguring MFA-Protected API Access\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eTo use MFA with \u003ccode\u003eAssumeRole\u003c/code\u003e, you pass values for the \u003ccode\u003eSerialNumber\u003c/code\u003e and \u003ccode\u003eTokenCode\u003c/code\u003e parameters. The \u003ccode\u003eSerialNumber\u003c/code\u003e value identifies the user's hardware or virtual MFA device. The \u003ccode\u003eTokenCode\u003c/code\u003e is the time-based one-time password (TOTP) that the MFA devices produces. \u003c/p\u003e \u003cmember name=\"RoleArn\" target=\"arnType\"\u003e\u003c/member\u003e \u003cmember name=\"RoleSessionName\" target=\"userNameType\"\u003e\u003c/member\u003e \u003cmember name=\"Policy\" target=\"sessionPolicyDocumentType\"\u003e\u003c/member\u003e \u003cmember name=\"DurationSeconds\" target=\"roleDurationSecondsType\"\u003e\u003c/member\u003e \u003cmember name=\"ExternalId\" target=\"externalIdType\"\u003e\u003c/member\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "assumeRole",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arRoleArn",
                        "name": "_arRoleArn",
                        "shape": "arnType",
                        "locationName": "RoleArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the role that the caller is assuming.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arRoleSessionName",
                        "name": "_arRoleSessionName",
                        "shape": "userNameType",
                        "locationName": "RoleSessionName",
                        "documentation": "\u003cp\u003eAn identifier for the assumed role session. The session name is included as part of the \u003ccode\u003eAssumedRoleUser\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "AssumeRole",
                "query": [
                    {
                        "field": "_arRoleArn",
                        "locationName": "RoleArn",
                        "type": "field"
                    },
                    {
                        "field": "_arRoleSessionName",
                        "locationName": "RoleSessionName",
                        "type": "field"
                    },
                    {
                        "field": "_arPolicy",
                        "locationName": "Policy",
                        "type": "field"
                    },
                    {
                        "field": "_arDurationSeconds",
                        "locationName": "DurationSeconds",
                        "type": "field"
                    },
                    {
                        "field": "_arExternalId",
                        "locationName": "ExternalId",
                        "type": "field"
                    },
                    {
                        "field": "_arSerialNumber",
                        "locationName": "SerialNumber",
                        "type": "field"
                    },
                    {
                        "field": "_arTokenCode",
                        "locationName": "TokenCode",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arPolicy",
                        "name": "_arPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "\u003cp\u003eAn IAM policy in JSON format.\u003c/p\u003e \u003cp\u003eThe policy parameter is optional. If you pass a policy, the temporary security credentials that are returned by the operation have the permissions that are allowed by both the access policy of the role that is being assumed, \u003ci\u003e\u003cb\u003eand\u003c/b\u003e\u003c/i\u003e the policy that you pass. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html\"\u003ePermissions for AssumeRole\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arDurationSeconds",
                        "name": "_arDurationSeconds",
                        "shape": "roleDurationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "\u003cp\u003eThe duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arExternalId",
                        "name": "_arExternalId",
                        "shape": "externalIdType",
                        "locationName": "ExternalId",
                        "documentation": "\u003cp\u003eA unique identifier that is used by third parties to assume a role in their customers' accounts. For each role that the third party can assume, they should instruct their customers to create a role with the external ID that the third party generated. Each time the third party assumes the role, they must pass the customer's external ID. The external ID is useful in order to help third parties bind a role to the customer who created it. For more information about the external ID, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/sts-delegating-externalid.html\" target=\"_blank\"\u003eAbout the External ID\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arSerialNumber",
                        "name": "_arSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003eThe identification number of the MFA device that is associated with the user who is making the \u003ccode\u003eAssumeRole\u003c/code\u003e call. Specify this value if the trust policy of the role being assumed includes a condition that requires MFA authentication. The value is either the serial number for a hardware device (such as \u003ccode\u003eGAHT12345678\u003c/code\u003e) or an Amazon Resource Name (ARN) for a virtual device (such as \u003ccode\u003earn:aws:iam::123456789012:mfa/user\u003c/code\u003e). \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arTokenCode",
                        "name": "_arTokenCode",
                        "shape": "tokenCodeType",
                        "locationName": "TokenCode",
                        "documentation": "\u003cp\u003eThe value provided by the MFA device, if the trust policy of the role being assumed requires MFA (that is, if the policy includes a condition that tests for MFA). If the role being assumed requires MFA and if the \u003ccode\u003eTokenCode\u003c/code\u003e value is missing or expired, the \u003ccode\u003eAssumeRole\u003c/code\u003e call returns an \"access denied\" error. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arDurationSeconds",
                        "name": "_arDurationSeconds",
                        "shape": "roleDurationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "\u003cp\u003eThe duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arExternalId",
                        "name": "_arExternalId",
                        "shape": "externalIdType",
                        "locationName": "ExternalId",
                        "documentation": "\u003cp\u003eA unique identifier that is used by third parties to assume a role in their customers' accounts. For each role that the third party can assume, they should instruct their customers to create a role with the external ID that the third party generated. Each time the third party assumes the role, they must pass the customer's external ID. The external ID is useful in order to help third parties bind a role to the customer who created it. For more information about the external ID, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/sts-delegating-externalid.html\" target=\"_blank\"\u003eAbout the External ID\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arPolicy",
                        "name": "_arPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "\u003cp\u003eAn IAM policy in JSON format.\u003c/p\u003e \u003cp\u003eThe policy parameter is optional. If you pass a policy, the temporary security credentials that are returned by the operation have the permissions that are allowed by both the access policy of the role that is being assumed, \u003ci\u003e\u003cb\u003eand\u003c/b\u003e\u003c/i\u003e the policy that you pass. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html\"\u003ePermissions for AssumeRole\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arRoleArn",
                        "name": "_arRoleArn",
                        "shape": "arnType",
                        "locationName": "RoleArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the role that the caller is assuming.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arRoleSessionName",
                        "name": "_arRoleSessionName",
                        "shape": "userNameType",
                        "locationName": "RoleSessionName",
                        "documentation": "\u003cp\u003eAn identifier for the assumed role session. The session name is included as part of the \u003ccode\u003eAssumedRoleUser\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arSerialNumber",
                        "name": "_arSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003eThe identification number of the MFA device that is associated with the user who is making the \u003ccode\u003eAssumeRole\u003c/code\u003e call. Specify this value if the trust policy of the role being assumed includes a condition that requires MFA authentication. The value is either the serial number for a hardware device (such as \u003ccode\u003eGAHT12345678\u003c/code\u003e) or an Amazon Resource Name (ARN) for a virtual device (such as \u003ccode\u003earn:aws:iam::123456789012:mfa/user\u003c/code\u003e). \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arTokenCode",
                        "name": "_arTokenCode",
                        "shape": "tokenCodeType",
                        "locationName": "TokenCode",
                        "documentation": "\u003cp\u003eThe value provided by the MFA device, if the trust policy of the role being assumed requires MFA (that is, if the policy includes a condition that tests for MFA). If the role being assumed requires MFA and if the \u003ccode\u003eTokenCode\u003c/code\u003e value is missing or expired, the \u003ccode\u003eAssumeRole\u003c/code\u003e call returns an \"access denied\" error. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "STS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 25,
                "ctor": "assumeRoleWithSAMLResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AssumeRoleWithSAMLResponse",
                "resultWrapper": "AssumeRoleWithSAMLResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrCredentials",
                        "name": "_arwsamlrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": null,
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrAssumedRoleUser",
                        "name": "_arwsamlrAssumedRoleUser",
                        "shape": "AssumedRoleUser",
                        "locationName": "AssumedRoleUser",
                        "documentation": null,
                        "typeExposed": "Maybe AssumedRoleUser",
                        "type": "Maybe AssumedRoleUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrPackedPolicySize",
                        "name": "_arwsamlrPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "\u003cp\u003eA percentage value that indicates the size of the policy in packed form. The service rejects any policy with a packed size greater than 100 percent, which means the policy exceeded the allowed space. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrSubject",
                        "name": "_arwsamlrSubject",
                        "shape": "Subject",
                        "locationName": "Subject",
                        "documentation": "\u003cp\u003eThe value of the \u003ccode\u003eNameID\u003c/code\u003e element in the \u003ccode\u003eSubject\u003c/code\u003e element of the SAML assertion.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrSubjectType",
                        "name": "_arwsamlrSubjectType",
                        "shape": "SubjectType",
                        "locationName": "SubjectType",
                        "documentation": "\u003cp\u003e The format of the name ID, as defined by the \u003ccode\u003eFormat\u003c/code\u003e attribute in the \u003ccode\u003eNameID\u003c/code\u003e element of the SAML assertion. Typical examples of the format are \u003ccode\u003etransient\u003c/code\u003e or \u003ccode\u003epersistent\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e If the format includes the prefix \u003ccode\u003eurn:oasis:names:tc:SAML:2.0:nameid-format\u003c/code\u003e, that prefix is removed. For example, \u003ccode\u003eurn:oasis:names:tc:SAML:2.0:nameid-format:transient\u003c/code\u003e is returned as \u003ccode\u003etransient\u003c/code\u003e. If the format includes any other prefix, the format is returned with no modifications.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrIssuer",
                        "name": "_arwsamlrIssuer",
                        "shape": "Issuer",
                        "locationName": "Issuer",
                        "documentation": "\u003cp\u003eThe value of the \u003ccode\u003eIssuer\u003c/code\u003e element of the SAML assertion.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrAudience",
                        "name": "_arwsamlrAudience",
                        "shape": "Audience",
                        "locationName": "Audience",
                        "documentation": "\u003cp\u003e The value of the \u003ccode\u003eRecipient\u003c/code\u003e attribute of the \u003ccode\u003eSubjectConfirmationData\u003c/code\u003e element of the SAML assertion. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrNameQualifier",
                        "name": "_arwsamlrNameQualifier",
                        "shape": "NameQualifier",
                        "locationName": "NameQualifier",
                        "documentation": "\u003cp\u003eA hash value based on the concatenation of the \u003ccode\u003eIssuer\u003c/code\u003e response value, the AWS account ID, and the friendly name (the last part of the ARN) of the SAML provider in IAM. The combination of \u003ccode\u003eNameQualifier\u003c/code\u003e and \u003ccode\u003eSubject\u003c/code\u003e can be used to uniquely identify a federated user. \u003c/p\u003e \u003cp\u003eThe following pseudocode shows how the hash value is calculated:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eBASE64 ( SHA1 ( \"https://example.com/saml\" + \"123456789012\" + \"/MySAMLIdP\" ) )\u003c/code\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrAssumedRoleUser",
                        "name": "_arwsamlrAssumedRoleUser",
                        "shape": "AssumedRoleUser",
                        "locationName": "AssumedRoleUser",
                        "documentation": null,
                        "typeExposed": "Maybe AssumedRoleUser",
                        "type": "Maybe AssumedRoleUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrAudience",
                        "name": "_arwsamlrAudience",
                        "shape": "Audience",
                        "locationName": "Audience",
                        "documentation": "\u003cp\u003e The value of the \u003ccode\u003eRecipient\u003c/code\u003e attribute of the \u003ccode\u003eSubjectConfirmationData\u003c/code\u003e element of the SAML assertion. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrCredentials",
                        "name": "_arwsamlrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": null,
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrIssuer",
                        "name": "_arwsamlrIssuer",
                        "shape": "Issuer",
                        "locationName": "Issuer",
                        "documentation": "\u003cp\u003eThe value of the \u003ccode\u003eIssuer\u003c/code\u003e element of the SAML assertion.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrNameQualifier",
                        "name": "_arwsamlrNameQualifier",
                        "shape": "NameQualifier",
                        "locationName": "NameQualifier",
                        "documentation": "\u003cp\u003eA hash value based on the concatenation of the \u003ccode\u003eIssuer\u003c/code\u003e response value, the AWS account ID, and the friendly name (the last part of the ARN) of the SAML provider in IAM. The combination of \u003ccode\u003eNameQualifier\u003c/code\u003e and \u003ccode\u003eSubject\u003c/code\u003e can be used to uniquely identify a federated user. \u003c/p\u003e \u003cp\u003eThe following pseudocode shows how the hash value is calculated:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eBASE64 ( SHA1 ( \"https://example.com/saml\" + \"123456789012\" + \"/MySAMLIdP\" ) )\u003c/code\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrPackedPolicySize",
                        "name": "_arwsamlrPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "\u003cp\u003eA percentage value that indicates the size of the policy in packed form. The service rejects any policy with a packed size greater than 100 percent, which means the policy exceeded the allowed space. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrSubject",
                        "name": "_arwsamlrSubject",
                        "shape": "Subject",
                        "locationName": "Subject",
                        "documentation": "\u003cp\u003eThe value of the \u003ccode\u003eNameID\u003c/code\u003e element in the \u003ccode\u003eSubject\u003c/code\u003e element of the SAML assertion.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlrSubjectType",
                        "name": "_arwsamlrSubjectType",
                        "shape": "SubjectType",
                        "locationName": "SubjectType",
                        "documentation": "\u003cp\u003e The format of the name ID, as defined by the \u003ccode\u003eFormat\u003c/code\u003e attribute in the \u003ccode\u003eNameID\u003c/code\u003e element of the SAML assertion. Typical examples of the format are \u003ccode\u003etransient\u003c/code\u003e or \u003ccode\u003epersistent\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e If the format includes the prefix \u003ccode\u003eurn:oasis:names:tc:SAML:2.0:nameid-format\u003c/code\u003e, that prefix is removed. For example, \u003ccode\u003eurn:oasis:names:tc:SAML:2.0:nameid-format:transient\u003c/code\u003e is returned as \u003ccode\u003etransient\u003c/code\u003e. If the format includes any other prefix, the format is returned with no modifications.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithSAML.html",
            "namespace": "Network.AWS.STS.AssumeRoleWithSAML",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.STS.Types"
            ],
            "pager": null,
            "name": "AssumeRoleWithSAML",
            "method": "post",
            "documentation": "\u003cp\u003eReturns a set of temporary security credentials for users who have been authenticated via a SAML authentication response. This operation provides a mechanism for tying an enterprise identity store or directory to role-based AWS access without user-specific credentials or configuration. \u003c/p\u003e \u003cp\u003eThe temporary security credentials returned by this operation consist of an access key ID, a secret access key, and a security token. Applications can use these temporary security credentials to sign calls to AWS services. The credentials are valid for the duration that you specified when calling \u003ccode\u003eAssumeRoleWithSAML\u003c/code\u003e, which can be up to 3600 seconds (1 hour) or until the time specified in the SAML authentication response's \u003ccode\u003eNotOnOrAfter\u003c/code\u003e value, whichever is shorter.\u003c/p\u003e \u003cp\u003eOptionally, you can pass an IAM access policy to this operation. If you choose not to pass a policy, the temporary security credentials that are returned by the operation have the permissions that are defined in the access policy of the role that is being assumed. If you pass a policy to this operation, the temporary security credentials that are returned by the operation have the permissions that are allowed by both the access policy of the role that is being assumed, \u003ci\u003e\u003cb\u003eand\u003c/b\u003e\u003c/i\u003e the policy that you pass. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html\"\u003ePermissions for AssumeRoleWithSAML\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eBefore your application can call \u003ccode\u003eAssumeRoleWithSAML\u003c/code\u003e, you must configure your SAML identity provider (IdP) to issue the claims required by AWS. Additionally, you must use AWS Identity and Access Management (IAM) to create a SAML provider entity in your AWS account that represents your identity provider, and create an IAM role that specifies this SAML provider in its trust policy. \u003c/p\u003e \u003cp\u003eCalling \u003ccode\u003eAssumeRoleWithSAML\u003c/code\u003e does not require the use of AWS security credentials. The identity of the caller is validated by using keys in the metadata document that is uploaded for the SAML provider entity for your identity provider. \u003c/p\u003e \u003cp\u003eFor more information, see the following resources:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html\"\u003eCreating Temporary Security Credentials for SAML Federation\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e. \u003c/li\u003e \u003cli\u003e \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/idp-managing-identityproviders.html\"\u003eSAML Providers\u003c/a\u003e in \u003ci\u003eUsing IAM\u003c/i\u003e. \u003c/li\u003e \u003cli\u003e \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html\"\u003eConfiguring a Relying Party and Claims\u003c/a\u003e in \u003ci\u003eUsing IAM\u003c/i\u003e. \u003c/li\u003e \u003cli\u003e \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml.html\"\u003eCreating a Role for SAML-Based Federation\u003c/a\u003e in \u003ci\u003eUsing IAM\u003c/i\u003e. \u003c/li\u003e \u003c/ul\u003e \u003cmember name=\"RoleArn\" target=\"arnType\"\u003e\u003c/member\u003e \u003cmember name=\"SAMLAssertion\" target=\"SAMLAssertionType\"\u003e\u003c/member\u003e \u003cmember name=\"Policy\" target=\"sessionPolicyDocumentType\"\u003e\u003c/member\u003e \u003cmember name=\"DurationSeconds\" target=\"roleDurationSecondsType\"\u003e\u003c/member\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "assumeRoleWithSAML",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arwsamlRoleArn",
                        "name": "_arwsamlRoleArn",
                        "shape": "arnType",
                        "locationName": "RoleArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the role that the caller is assuming.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arwsamlPrincipalArn",
                        "name": "_arwsamlPrincipalArn",
                        "shape": "arnType",
                        "locationName": "PrincipalArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider in IAM that describes the IdP.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arwsamlSAMLAssertion",
                        "name": "_arwsamlSAMLAssertion",
                        "shape": "SAMLAssertionType",
                        "locationName": "SAMLAssertion",
                        "documentation": "\u003cp\u003eThe base-64 encoded SAML authentication response provided by the IdP.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html\"\u003eConfiguring a Relying Party and Adding Claims\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "AssumeRoleWithSAML",
                "query": [
                    {
                        "field": "_arwsamlRoleArn",
                        "locationName": "RoleArn",
                        "type": "field"
                    },
                    {
                        "field": "_arwsamlPrincipalArn",
                        "locationName": "PrincipalArn",
                        "type": "field"
                    },
                    {
                        "field": "_arwsamlSAMLAssertion",
                        "locationName": "SAMLAssertion",
                        "type": "field"
                    },
                    {
                        "field": "_arwsamlPolicy",
                        "locationName": "Policy",
                        "type": "field"
                    },
                    {
                        "field": "_arwsamlDurationSeconds",
                        "locationName": "DurationSeconds",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlPolicy",
                        "name": "_arwsamlPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "\u003cp\u003eAn IAM policy in JSON format.\u003c/p\u003e \u003cp\u003eThe policy parameter is optional. If you pass a policy, the temporary security credentials that are returned by the operation have the permissions that are allowed by both the access policy of the role that is being assumed, \u003ci\u003e\u003cb\u003eand\u003c/b\u003e\u003c/i\u003e the policy that you pass. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html\"\u003ePermissions for AssumeRoleWithSAML\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlDurationSeconds",
                        "name": "_arwsamlDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "\u003cp\u003eThe duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the SAML authentication response's \u003ccode\u003eNotOnOrAfter\u003c/code\u003e value. The actual expiration time is whichever value is shorter. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlDurationSeconds",
                        "name": "_arwsamlDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "\u003cp\u003eThe duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the SAML authentication response's \u003ccode\u003eNotOnOrAfter\u003c/code\u003e value. The actual expiration time is whichever value is shorter. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwsamlPolicy",
                        "name": "_arwsamlPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "\u003cp\u003eAn IAM policy in JSON format.\u003c/p\u003e \u003cp\u003eThe policy parameter is optional. If you pass a policy, the temporary security credentials that are returned by the operation have the permissions that are allowed by both the access policy of the role that is being assumed, \u003ci\u003e\u003cb\u003eand\u003c/b\u003e\u003c/i\u003e the policy that you pass. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html\"\u003ePermissions for AssumeRoleWithSAML\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arwsamlPrincipalArn",
                        "name": "_arwsamlPrincipalArn",
                        "shape": "arnType",
                        "locationName": "PrincipalArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider in IAM that describes the IdP.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arwsamlRoleArn",
                        "name": "_arwsamlRoleArn",
                        "shape": "arnType",
                        "locationName": "RoleArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the role that the caller is assuming.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arwsamlSAMLAssertion",
                        "name": "_arwsamlSAMLAssertion",
                        "shape": "SAMLAssertionType",
                        "locationName": "SAMLAssertion",
                        "documentation": "\u003cp\u003eThe base-64 encoded SAML authentication response provided by the IdP.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html\"\u003eConfiguring a Relying Party and Adding Claims\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "STS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 34,
                "ctor": "assumeRoleWithWebIdentityResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AssumeRoleWithWebIdentityResponse",
                "resultWrapper": "AssumeRoleWithWebIdentityResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirCredentials",
                        "name": "_arwwirCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "\u003cp\u003eThe temporary security credentials, which include an access key ID, a secret access key, and a security token.\u003c/p\u003e",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirSubjectFromWebIdentityToken",
                        "name": "_arwwirSubjectFromWebIdentityToken",
                        "shape": "webIdentitySubjectType",
                        "locationName": "SubjectFromWebIdentityToken",
                        "documentation": "\u003cp\u003eThe unique user identifier that is returned by the identity provider. This identifier is associated with the \u003ccode\u003eWebIdentityToken\u003c/code\u003e that was submitted with the \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e call. The identifier is typically unique to the user and the application that acquired the \u003ccode\u003eWebIdentityToken\u003c/code\u003e (pairwise identifier). If an OpenID Connect ID token was submitted in the \u003ccode\u003eWebIdentityToken\u003c/code\u003e, this value is returned by the identity provider as the token's \u003ccode\u003esub\u003c/code\u003e (Subject) claim. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirAssumedRoleUser",
                        "name": "_arwwirAssumedRoleUser",
                        "shape": "AssumedRoleUser",
                        "locationName": "AssumedRoleUser",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that you can use to refer to the resulting temporary security credentials. For example, you can reference these credentials as a principal in a resource-based policy by using the ARN or assumed role ID. The ARN and ID include the \u003ccode\u003eRoleSessionName\u003c/code\u003e that you specified when you called \u003ccode\u003eAssumeRole\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe AssumedRoleUser",
                        "type": "Maybe AssumedRoleUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirPackedPolicySize",
                        "name": "_arwwirPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "\u003cp\u003eA percentage value that indicates the size of the policy in packed form. The service rejects any policy with a packed size greater than 100 percent, which means the policy exceeded the allowed space. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirProvider",
                        "name": "_arwwirProvider",
                        "shape": "Issuer",
                        "locationName": "Provider",
                        "documentation": "\u003cp\u003e The issuing authority of the web identity token presented. For OpenID Connect ID Tokens this contains the value of the \u003ccode\u003eiss\u003c/code\u003e field. For OAuth 2.0 Access Tokens, this contains the value of the \u003ccode\u003eProviderId\u003c/code\u003e parameter that was passed in the \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirAudience",
                        "name": "_arwwirAudience",
                        "shape": "Audience",
                        "locationName": "Audience",
                        "documentation": "\u003cp\u003e The intended audience of the web identity token. This is traditionally the client identifier issued to the application that requested the web identity token.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirAssumedRoleUser",
                        "name": "_arwwirAssumedRoleUser",
                        "shape": "AssumedRoleUser",
                        "locationName": "AssumedRoleUser",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that you can use to refer to the resulting temporary security credentials. For example, you can reference these credentials as a principal in a resource-based policy by using the ARN or assumed role ID. The ARN and ID include the \u003ccode\u003eRoleSessionName\u003c/code\u003e that you specified when you called \u003ccode\u003eAssumeRole\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe AssumedRoleUser",
                        "type": "Maybe AssumedRoleUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirAudience",
                        "name": "_arwwirAudience",
                        "shape": "Audience",
                        "locationName": "Audience",
                        "documentation": "\u003cp\u003e The intended audience of the web identity token. This is traditionally the client identifier issued to the application that requested the web identity token.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirCredentials",
                        "name": "_arwwirCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "\u003cp\u003eThe temporary security credentials, which include an access key ID, a secret access key, and a security token.\u003c/p\u003e",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirPackedPolicySize",
                        "name": "_arwwirPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "\u003cp\u003eA percentage value that indicates the size of the policy in packed form. The service rejects any policy with a packed size greater than 100 percent, which means the policy exceeded the allowed space. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirProvider",
                        "name": "_arwwirProvider",
                        "shape": "Issuer",
                        "locationName": "Provider",
                        "documentation": "\u003cp\u003e The issuing authority of the web identity token presented. For OpenID Connect ID Tokens this contains the value of the \u003ccode\u003eiss\u003c/code\u003e field. For OAuth 2.0 Access Tokens, this contains the value of the \u003ccode\u003eProviderId\u003c/code\u003e parameter that was passed in the \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwirSubjectFromWebIdentityToken",
                        "name": "_arwwirSubjectFromWebIdentityToken",
                        "shape": "webIdentitySubjectType",
                        "locationName": "SubjectFromWebIdentityToken",
                        "documentation": "\u003cp\u003eThe unique user identifier that is returned by the identity provider. This identifier is associated with the \u003ccode\u003eWebIdentityToken\u003c/code\u003e that was submitted with the \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e call. The identifier is typically unique to the user and the application that acquired the \u003ccode\u003eWebIdentityToken\u003c/code\u003e (pairwise identifier). If an OpenID Connect ID token was submitted in the \u003ccode\u003eWebIdentityToken\u003c/code\u003e, this value is returned by the identity provider as the token's \u003ccode\u003esub\u003c/code\u003e (Subject) claim. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html",
            "namespace": "Network.AWS.STS.AssumeRoleWithWebIdentity",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.STS.Types"
            ],
            "pager": null,
            "name": "AssumeRoleWithWebIdentity",
            "method": "post",
            "documentation": "\u003cp\u003eReturns a set of temporary security credentials for users who have been authenticated in a mobile or web application with a web identity provider, such as Login with Amazon, Amazon Cognito, Facebook, or Google. \u003c/p\u003e \u003cp\u003eCalling \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e does not require the use of AWS security credentials. Therefore, you can distribute an application (for example, on mobile devices) that requests temporary security credentials without including long-term AWS credentials in the application, and without deploying server-based proxy services that use long-term AWS credentials. Instead, the identity of the caller is validated by using a token from the web identity provider. \u003c/p\u003e \u003cp\u003eThe temporary security credentials returned by this API consist of an access key ID, a secret access key, and a security token. Applications can use these temporary security credentials to sign calls to AWS service APIs. The credentials are valid for the duration that you specified when calling \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e, which can be from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the temporary security credentials are valid for 1 hour. \u003c/p\u003e \u003cp\u003eOptionally, you can pass an IAM access policy to this operation. If you choose not to pass a policy, the temporary security credentials that are returned by the operation have the permissions that are defined in the access policy of the role that is being assumed. If you pass a policy to this operation, the temporary security credentials that are returned by the operation have the permissions that are allowed by both the access policy of the role that is being assumed, \u003ci\u003e\u003cb\u003eand\u003c/b\u003e\u003c/i\u003e the policy that you pass. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html\"\u003ePermissions for AssumeRoleWithWebIdentity\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eBefore your application can call \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e, you must have an identity token from a supported identity provider and create a role that the application can assume. The role that your application assumes must trust the identity provider that is associated with the identity token. In other words, the identity provider must be specified in the role's trust policy. \u003c/p\u003e \u003cp\u003eFor more information about how to use web identity federation and the \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e, see the following resources: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/STSUseCases.html#MobileApplication-KnownProvider\" target=\"_blank\"\u003e Creating a Mobile Application with Third-Party Sign-In\u003c/a\u003e and \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingWIF.html\" target=\"_blank\"\u003e Creating Temporary Security Credentials for Mobile Apps Using Third-Party Identity Providers\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e. \u003c/li\u003e \u003cli\u003e \u003ca href=\"https://web-identity-federation-playground.s3.amazonaws.com/index.html\" target=\"_blank\"\u003e Web Identity Federation Playground\u003c/a\u003e. This interactive website lets you walk through the process of authenticating via Login with Amazon, Facebook, or Google, getting temporary security credentials, and then using those credentials to make a request to AWS. \u003c/li\u003e \u003cli\u003e \u003ca href=\"http://aws.amazon.com/sdkforios/\"\u003eAWS SDK for iOS\u003c/a\u003e and \u003ca href=\"http://aws.amazon.com/sdkforandroid/\" target=\"_blank\"\u003eAWS SDK for Android\u003c/a\u003e. These toolkits contain sample apps that show how to invoke the identity providers, and then how to use the information from these providers to get and use temporary security credentials. \u003c/li\u003e \u003cli\u003e \u003ca href=\"http://aws.amazon.com/articles/4617974389850313\" target=\"_blank\"\u003eWeb Identity Federation with Mobile Applications\u003c/a\u003e. This article discusses web identity federation and shows an example of how to use web identity federation to get access to content in Amazon S3. \u003c/li\u003e \u003c/ul\u003e \u003cmember name=\"RoleArn\" target=\"arnType\"\u003e\u003c/member\u003e \u003cmember name=\"RoleSessionName\" target=\"userNameType\"\u003e\u003c/member\u003e \u003cmember name=\"WebIdentityToken\" target=\"clientTokenType\"\u003e\u003c/member\u003e \u003cmember name=\"ProviderId\" target=\"urlType\"\u003e\u003c/member\u003e \u003cmember name=\"Policy\" target=\"sessionPolicyDocumentType\"\u003e\u003c/member\u003e \u003cmember name=\"DurationSeconds\" target=\"roleDurationSecondsType\"\u003e\u003c/member\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 22,
                "ctor": "assumeRoleWithWebIdentity",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arwwiRoleArn",
                        "name": "_arwwiRoleArn",
                        "shape": "arnType",
                        "locationName": "RoleArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the role that the caller is assuming.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arwwiRoleSessionName",
                        "name": "_arwwiRoleSessionName",
                        "shape": "userNameType",
                        "locationName": "RoleSessionName",
                        "documentation": "\u003cp\u003eAn identifier for the assumed role session. Typically, you pass the name or identifier that is associated with the user who is using your application. That way, the temporary security credentials that your application will use are associated with that user. This session name is included as part of the ARN and assumed role ID in the \u003ccode\u003eAssumedRoleUser\u003c/code\u003e response element. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arwwiWebIdentityToken",
                        "name": "_arwwiWebIdentityToken",
                        "shape": "clientTokenType",
                        "locationName": "WebIdentityToken",
                        "documentation": "\u003cp\u003eThe OAuth 2.0 access token or OpenID Connect ID token that is provided by the identity provider. Your application must get this token by authenticating the user who is using your application with a web identity provider before the application makes an \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e call. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "AssumeRoleWithWebIdentity",
                "query": [
                    {
                        "field": "_arwwiRoleArn",
                        "locationName": "RoleArn",
                        "type": "field"
                    },
                    {
                        "field": "_arwwiRoleSessionName",
                        "locationName": "RoleSessionName",
                        "type": "field"
                    },
                    {
                        "field": "_arwwiWebIdentityToken",
                        "locationName": "WebIdentityToken",
                        "type": "field"
                    },
                    {
                        "field": "_arwwiProviderId",
                        "locationName": "ProviderId",
                        "type": "field"
                    },
                    {
                        "field": "_arwwiPolicy",
                        "locationName": "Policy",
                        "type": "field"
                    },
                    {
                        "field": "_arwwiDurationSeconds",
                        "locationName": "DurationSeconds",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwiProviderId",
                        "name": "_arwwiProviderId",
                        "shape": "urlType",
                        "locationName": "ProviderId",
                        "documentation": "\u003cp\u003eThe fully-qualified host component of the domain name of the identity provider. Specify this value only for OAuth access tokens. Do not specify this value for OpenID Connect ID tokens, such as \u003ccode\u003eaccounts.google.com\u003c/code\u003e. Do not include URL schemes and port numbers. Currently, \u003ccode\u003ewww.amazon.com\u003c/code\u003e and \u003ccode\u003egraph.facebook.com\u003c/code\u003e are supported. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwiPolicy",
                        "name": "_arwwiPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "\u003cp\u003eAn IAM policy in JSON format.\u003c/p\u003e \u003cp\u003eThe policy parameter is optional. If you pass a policy, the temporary security credentials that are returned by the operation have the permissions that are allowed by both the access policy of the role that is being assumed, \u003ci\u003e\u003cb\u003eand\u003c/b\u003e\u003c/i\u003e the policy that you pass. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html\"\u003ePermissions for AssumeRoleWithWebIdentity\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwiDurationSeconds",
                        "name": "_arwwiDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "\u003cp\u003eThe duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwiDurationSeconds",
                        "name": "_arwwiDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "\u003cp\u003eThe duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwiPolicy",
                        "name": "_arwwiPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "\u003cp\u003eAn IAM policy in JSON format.\u003c/p\u003e \u003cp\u003eThe policy parameter is optional. If you pass a policy, the temporary security credentials that are returned by the operation have the permissions that are allowed by both the access policy of the role that is being assumed, \u003ci\u003e\u003cb\u003eand\u003c/b\u003e\u003c/i\u003e the policy that you pass. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html\"\u003ePermissions for AssumeRoleWithWebIdentity\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "arwwiProviderId",
                        "name": "_arwwiProviderId",
                        "shape": "urlType",
                        "locationName": "ProviderId",
                        "documentation": "\u003cp\u003eThe fully-qualified host component of the domain name of the identity provider. Specify this value only for OAuth access tokens. Do not specify this value for OpenID Connect ID tokens, such as \u003ccode\u003eaccounts.google.com\u003c/code\u003e. Do not include URL schemes and port numbers. Currently, \u003ccode\u003ewww.amazon.com\u003c/code\u003e and \u003ccode\u003egraph.facebook.com\u003c/code\u003e are supported. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arwwiRoleArn",
                        "name": "_arwwiRoleArn",
                        "shape": "arnType",
                        "locationName": "RoleArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the role that the caller is assuming.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arwwiRoleSessionName",
                        "name": "_arwwiRoleSessionName",
                        "shape": "userNameType",
                        "locationName": "RoleSessionName",
                        "documentation": "\u003cp\u003eAn identifier for the assumed role session. Typically, you pass the name or identifier that is associated with the user who is using your application. That way, the temporary security credentials that your application will use are associated with that user. This session name is included as part of the ARN and assumed role ID in the \u003ccode\u003eAssumedRoleUser\u003c/code\u003e response element. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "arwwiWebIdentityToken",
                        "name": "_arwwiWebIdentityToken",
                        "shape": "clientTokenType",
                        "locationName": "WebIdentityToken",
                        "documentation": "\u003cp\u003eThe OAuth 2.0 access token or OpenID Connect ID token that is provided by the identity provider. Your application must get this token by authenticating the user who is using your application with a web identity provider before the application makes an \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e call. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "STS",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "decodeAuthorizationMessageResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "damrDecodedMessage",
                    "name": "_damrDecodedMessage",
                    "shape": "decodedMessageType",
                    "locationName": "DecodedMessage",
                    "documentation": "\u003cp\u003eAn XML document that contains the decoded message. For more information, see \u003ccode\u003eDecodeAuthorizationMessage\u003c/code\u003e. \u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DecodeAuthorizationMessageResponse",
                "resultWrapper": "DecodeAuthorizationMessageResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "damrDecodedMessage",
                        "name": "_damrDecodedMessage",
                        "shape": "decodedMessageType",
                        "locationName": "DecodedMessage",
                        "documentation": "\u003cp\u003eAn XML document that contains the decoded message. For more information, see \u003ccode\u003eDecodeAuthorizationMessage\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "damrDecodedMessage",
                        "name": "_damrDecodedMessage",
                        "shape": "decodedMessageType",
                        "locationName": "DecodedMessage",
                        "documentation": "\u003cp\u003eAn XML document that contains the decoded message. For more information, see \u003ccode\u003eDecodeAuthorizationMessage\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/STS/latest/APIReference/API_DecodeAuthorizationMessage.html",
            "namespace": "Network.AWS.STS.DecodeAuthorizationMessage",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.STS.Types"
            ],
            "pager": null,
            "name": "DecodeAuthorizationMessage",
            "method": "post",
            "documentation": "\u003cp\u003eDecodes additional information about the authorization status of a request from an encoded message returned in response to an AWS request. \u003c/p\u003e \u003cp\u003eFor example, if a user is not authorized to perform an action that he or she has requested, the request returns a \u003ccode\u003eClient.UnauthorizedOperation\u003c/code\u003e response (an HTTP 403 response). Some AWS actions additionally return an encoded message that can provide details about this authorization failure. \u003c/p\u003e \u003cp\u003eThe message is encoded because the details of the authorization status can constitute privileged information that the user who requested the action should not see. To decode an authorization status message, a user must be granted permissions via an IAM policy to request the \u003ccode\u003eDecodeAuthorizationMessage\u003c/code\u003e (\u003ccode\u003ests:DecodeAuthorizationMessage\u003c/code\u003e) action. \u003c/p\u003e \u003cp\u003eThe decoded message includes the following type of information: \u003c/p\u003e \u003cul\u003e \u003cli\u003eWhether the request was denied due to an explicit deny or due to the absence of an explicit allow. For more information, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AccessPolicyLanguage_EvaluationLogic.html#policy-eval-denyallow\"\u003eDetermining Whether a Request is Allowed or Denied\u003c/a\u003e in \u003ci\u003eUsing IAM\u003c/i\u003e. \u003c/li\u003e \u003cli\u003eThe principal who made the request.\u003c/li\u003e \u003cli\u003eThe requested action.\u003c/li\u003e \u003cli\u003eThe requested resource.\u003c/li\u003e \u003cli\u003eThe values of condition keys in the context of the user's request.\u003c/li\u003e \u003c/ul\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "decodeAuthorizationMessage",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "damEncodedMessage",
                    "name": "_damEncodedMessage",
                    "shape": "encodedMessageType",
                    "locationName": "EncodedMessage",
                    "documentation": "\u003cp\u003eThe encoded message that was returned with the response.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "damEncodedMessage",
                        "name": "_damEncodedMessage",
                        "shape": "encodedMessageType",
                        "locationName": "EncodedMessage",
                        "documentation": "\u003cp\u003eThe encoded message that was returned with the response.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "DecodeAuthorizationMessage",
                "query": [
                    {
                        "field": "_damEncodedMessage",
                        "locationName": "EncodedMessage",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "damEncodedMessage",
                        "name": "_damEncodedMessage",
                        "shape": "encodedMessageType",
                        "locationName": "EncodedMessage",
                        "documentation": "\u003cp\u003eThe encoded message that was returned with the response.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "STS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 21,
                "ctor": "getFederationTokenResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetFederationTokenResponse",
                "resultWrapper": "GetFederationTokenResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gftrCredentials",
                        "name": "_gftrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "\u003cp\u003eCredentials for the service API authentication. \u003c/p\u003e",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gftrFederatedUser",
                        "name": "_gftrFederatedUser",
                        "shape": "FederatedUser",
                        "locationName": "FederatedUser",
                        "documentation": "\u003cp\u003eIdentifiers for the federated user associated with the credentials (such as \u003ccode\u003earn:aws:sts::123456789012:federated-user/Bob\u003c/code\u003e or \u003ccode\u003e123456789012:Bob\u003c/code\u003e). You can use the federated user's ARN in your resource-based policies, such as an Amazon S3 bucket policy. \u003c/p\u003e",
                        "typeExposed": "Maybe FederatedUser",
                        "type": "Maybe FederatedUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gftrPackedPolicySize",
                        "name": "_gftrPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "\u003cp\u003eA percentage value indicating the size of the policy in packed form. The service rejects policies for which the packed size is greater than 100 percent of the allowed value. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gftrCredentials",
                        "name": "_gftrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "\u003cp\u003eCredentials for the service API authentication. \u003c/p\u003e",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gftrFederatedUser",
                        "name": "_gftrFederatedUser",
                        "shape": "FederatedUser",
                        "locationName": "FederatedUser",
                        "documentation": "\u003cp\u003eIdentifiers for the federated user associated with the credentials (such as \u003ccode\u003earn:aws:sts::123456789012:federated-user/Bob\u003c/code\u003e or \u003ccode\u003e123456789012:Bob\u003c/code\u003e). You can use the federated user's ARN in your resource-based policies, such as an Amazon S3 bucket policy. \u003c/p\u003e",
                        "typeExposed": "Maybe FederatedUser",
                        "type": "Maybe FederatedUser"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gftrPackedPolicySize",
                        "name": "_gftrPackedPolicySize",
                        "shape": "nonNegativeIntegerType",
                        "locationName": "PackedPolicySize",
                        "documentation": "\u003cp\u003eA percentage value indicating the size of the policy in packed form. The service rejects policies for which the packed size is greater than 100 percent of the allowed value. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/STS/latest/APIReference/API_GetFederationToken.html",
            "namespace": "Network.AWS.STS.GetFederationToken",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.STS.Types"
            ],
            "pager": null,
            "name": "GetFederationToken",
            "method": "post",
            "documentation": "\u003cp\u003eReturns a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) for a federated user. A typical use is in a proxy application that gets temporary security credentials on behalf of distributed applications inside a corporate network. Because you must call the \u003ccode\u003eGetFederationToken\u003c/code\u003e action using the long-term security credentials of an IAM user, this call is appropriate in contexts where those credentials can be safely stored, usually in a server-based application.\u003c/p\u003e \u003cp\u003e \u003cb\u003eNote:\u003c/b\u003e Do not use this call in mobile applications or client-based web applications that directly get temporary security credentials. For those types of applications, use \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eGetFederationToken\u003c/code\u003e action must be called by using the long-term AWS security credentials of an IAM user. You can also call \u003ccode\u003eGetFederationToken\u003c/code\u003e using the security credentials of an AWS account (root), but this is not recommended. Instead, we recommend that you create an IAM user for the purpose of the proxy application and then attach a policy to the IAM user that limits federated users to only the actions and resources they need access to. For more information, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/IAMBestPractices.html\"\u003eIAM Best Practices\u003c/a\u003e in \u003ci\u003eUsing IAM\u003c/i\u003e. \u003c/p\u003e \u003cp\u003eThe temporary security credentials that are obtained by using the long-term credentials of an IAM user are valid for the specified duration, between 900 seconds (15 minutes) and 129600 seconds (36 hours). Temporary credentials that are obtained by using AWS account (root) credentials have a maximum duration of 3600 seconds (1 hour)\u003c/p\u003e \u003cp\u003e \u003cb\u003ePermissions\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe permissions for the temporary security credentials returned by \u003ccode\u003eGetFederationToken\u003c/code\u003e are determined by a combination of the following: \u003c/p\u003e \u003cul\u003e \u003cli\u003eThe policy or policies that are attached to the IAM user whose credentials are used to call \u003ccode\u003eGetFederationToken\u003c/code\u003e.\u003c/li\u003e \u003cli\u003eThe policy that is passed as a parameter in the call.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe passed policy is attached to the temporary security credentials that result from the \u003ccode\u003eGetFederationToken\u003c/code\u003e API call--that is, to the \u003ci\u003efederated user\u003c/i\u003e. When the federated user makes an AWS request, AWS evaluates the policy attached to the federated user in combination with the policy or policies attached to the IAM user whose credentials were used to call \u003ccode\u003eGetFederationToken\u003c/code\u003e. AWS allows the federated user's request only when both the federated user \u003ci\u003e\u003cb\u003eand\u003c/b\u003e\u003c/i\u003e the IAM user are explicitly allowed to perform the requested action. The passed policy cannot grant more permissions than those that are defined in the IAM user policy.\u003c/p\u003e \u003cp\u003eA typical use case is that the permissions of the IAM user whose credentials are used to call \u003ccode\u003eGetFederationToken\u003c/code\u003e are designed to allow access to all the actions and resources that any federated user will need. Then, for individual users, you pass a policy to the operation that scopes down the permissions to a level that's appropriate to that individual user, using a policy that allows only a subset of permissions that are granted to the IAM user. \u003c/p\u003e \u003cp\u003eIf you do not pass a policy, the resulting temporary security credentials have no effective permissions. The only exception is when the temporary security credentials are used to access a resource that has a resource-based policy that specifically allows the federated user to access the resource. \u003c/p\u003e \u003cp\u003eFor more information about how permissions work, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-get-federation-token.html\"\u003ePermissions for GetFederationToken\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e. For information about using \u003ccode\u003eGetFederationToken\u003c/code\u003e to create temporary security credentials, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingFedTokens.html\"\u003eCreating Temporary Credentials to Enable Access for Federated Users\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 19,
                "ctor": "getFederationToken",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gftName",
                        "name": "_gftName",
                        "shape": "userNameType",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the federated user. The name is used as an identifier for the temporary security credentials (such as \u003ccode\u003eBob\u003c/code\u003e). For example, you can reference the federated user name in a resource-based policy, such as in an Amazon S3 bucket policy. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "GetFederationToken",
                "query": [
                    {
                        "field": "_gftName",
                        "locationName": "Name",
                        "type": "field"
                    },
                    {
                        "field": "_gftPolicy",
                        "locationName": "Policy",
                        "type": "field"
                    },
                    {
                        "field": "_gftDurationSeconds",
                        "locationName": "DurationSeconds",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gftPolicy",
                        "name": "_gftPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "\u003cp\u003eAn IAM policy in JSON format that is passed with the \u003ccode\u003eGetFederationToken\u003c/code\u003e call and evaluated along with the policy or policies that are attached to the IAM user whose credentials are used to call \u003ccode\u003eGetFederationToken\u003c/code\u003e. The passed policy is used to scope down the permissions that are available to the IAM user, by allowing only a subset of the permissions that are granted to the IAM user. The passed policy cannot grant more permissions than those granted to the IAM user. The final permissions for the federated user are the most restrictive set based on the intersection of the passed policy and the IAM user policy.\u003c/p\u003e \u003cp\u003eIf you do not pass a policy, the resulting temporary security credentials have no effective permissions. The only exception is when the temporary security credentials are used to access a resource that has a resource-based policy that specifically allows the federated user to access the resource. \u003c/p\u003e \u003cp\u003eFor more information about how permissions work, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-get-federation-token.html\"\u003ePermissions for GetFederationToken\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gftDurationSeconds",
                        "name": "_gftDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "\u003cp\u003eThe duration, in seconds, that the session should last. Acceptable durations for federation sessions range from 900 seconds (15 minutes) to 129600 seconds (36 hours), with 43200 seconds (12 hours) as the default. Sessions obtained using AWS account (root) credentials are restricted to a maximum of 3600 seconds (one hour). If the specified duration is longer than one hour, the session obtained by using AWS account (root) credentials defaults to one hour. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gftDurationSeconds",
                        "name": "_gftDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "\u003cp\u003eThe duration, in seconds, that the session should last. Acceptable durations for federation sessions range from 900 seconds (15 minutes) to 129600 seconds (36 hours), with 43200 seconds (12 hours) as the default. Sessions obtained using AWS account (root) credentials are restricted to a maximum of 3600 seconds (one hour). If the specified duration is longer than one hour, the session obtained by using AWS account (root) credentials defaults to one hour. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gftName",
                        "name": "_gftName",
                        "shape": "userNameType",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the federated user. The name is used as an identifier for the temporary security credentials (such as \u003ccode\u003eBob\u003c/code\u003e). For example, you can reference the federated user name in a resource-based policy, such as in an Amazon S3 bucket policy. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gftPolicy",
                        "name": "_gftPolicy",
                        "shape": "sessionPolicyDocumentType",
                        "locationName": "Policy",
                        "documentation": "\u003cp\u003eAn IAM policy in JSON format that is passed with the \u003ccode\u003eGetFederationToken\u003c/code\u003e call and evaluated along with the policy or policies that are attached to the IAM user whose credentials are used to call \u003ccode\u003eGetFederationToken\u003c/code\u003e. The passed policy is used to scope down the permissions that are available to the IAM user, by allowing only a subset of the permissions that are granted to the IAM user. The passed policy cannot grant more permissions than those granted to the IAM user. The final permissions for the federated user are the most restrictive set based on the intersection of the passed policy and the IAM user policy.\u003c/p\u003e \u003cp\u003eIf you do not pass a policy, the resulting temporary security credentials have no effective permissions. The only exception is when the temporary security credentials are used to access a resource that has a resource-based policy that specifically allows the federated user to access the resource. \u003c/p\u003e \u003cp\u003eFor more information about how permissions work, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-get-federation-token.html\"\u003ePermissions for GetFederationToken\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "STS",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getSessionTokenResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gstrCredentials",
                    "name": "_gstrCredentials",
                    "shape": "Credentials",
                    "locationName": "Credentials",
                    "documentation": "\u003cp\u003eThe session credentials for API authentication. \u003c/p\u003e",
                    "typeExposed": "Maybe Credentials",
                    "type": "Maybe Credentials"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetSessionTokenResponse",
                "resultWrapper": "GetSessionTokenResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gstrCredentials",
                        "name": "_gstrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "\u003cp\u003eThe session credentials for API authentication. \u003c/p\u003e",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gstrCredentials",
                        "name": "_gstrCredentials",
                        "shape": "Credentials",
                        "locationName": "Credentials",
                        "documentation": "\u003cp\u003eThe session credentials for API authentication. \u003c/p\u003e",
                        "typeExposed": "Maybe Credentials",
                        "type": "Maybe Credentials"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html",
            "namespace": "Network.AWS.STS.GetSessionToken",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.STS.Types"
            ],
            "pager": null,
            "name": "GetSessionToken",
            "method": "post",
            "documentation": "\u003cp\u003eReturns a set of temporary credentials for an AWS account or IAM user. The credentials consist of an access key ID, a secret access key, and a security token. Typically, you use \u003ccode\u003eGetSessionToken\u003c/code\u003e if you want to use MFA to protect programmatic calls to specific AWS APIs like Amazon EC2 \u003ccode\u003eStopInstances\u003c/code\u003e. MFA-enabled IAM users would need to call \u003ccode\u003eGetSessionToken\u003c/code\u003e and submit an MFA code that is associated with their MFA device. Using the temporary security credentials that are returned from the call, IAM users can then make programmatic calls to APIs that require MFA authentication. \u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eGetSessionToken\u003c/code\u003e action must be called by using the long-term AWS security credentials of the AWS account or an IAM user. Credentials that are created by IAM users are valid for the duration that you specify, between 900 seconds (15 minutes) and 129600 seconds (36 hours); credentials that are created by using account credentials have a maximum duration of 3600 seconds (1 hour). \u003c/p\u003e \u003cp\u003eThe permissions associated with the temporary security credentials returned by \u003ccode\u003eGetSessionToken\u003c/code\u003e are based on the permissions associated with account or IAM user whose credentials are used to call the action. If \u003ccode\u003eGetSessionToken\u003c/code\u003e is called using root account credentials, the temporary credentials have root account permissions. Similarly, if \u003ccode\u003eGetSessionToken\u003c/code\u003e is called using the credentials of an IAM user, the temporary credentials have the same permissions as the IAM user. \u003c/p\u003e \u003cp\u003eFor more information about using \u003ccode\u003eGetSessionToken\u003c/code\u003e to create temporary credentials, go to \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSessionTokens.html\" target=\"_blank\"\u003eCreating Temporary Credentials to Enable Access for IAM Users\u003c/a\u003e in \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 19,
                "ctor": "getSessionToken",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "GetSessionToken",
                "query": [
                    {
                        "field": "_gstDurationSeconds",
                        "locationName": "DurationSeconds",
                        "type": "field"
                    },
                    {
                        "field": "_gstSerialNumber",
                        "locationName": "SerialNumber",
                        "type": "field"
                    },
                    {
                        "field": "_gstTokenCode",
                        "locationName": "TokenCode",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gstDurationSeconds",
                        "name": "_gstDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "\u003cp\u003eThe duration, in seconds, that the credentials should remain valid. Acceptable durations for IAM user sessions range from 900 seconds (15 minutes) to 129600 seconds (36 hours), with 43200 seconds (12 hours) as the default. Sessions for AWS account owners are restricted to a maximum of 3600 seconds (one hour). If the duration is longer than one hour, the session for AWS account owners defaults to one hour. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gstSerialNumber",
                        "name": "_gstSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003eThe identification number of the MFA device that is associated with the IAM user who is making the \u003ccode\u003eGetSessionToken\u003c/code\u003e call. Specify this value if the IAM user has a policy that requires MFA authentication. The value is either the serial number for a hardware device (such as \u003ccode\u003eGAHT12345678\u003c/code\u003e) or an Amazon Resource Name (ARN) for a virtual device (such as \u003ccode\u003earn:aws:iam::123456789012:mfa/user\u003c/code\u003e). You can find the device for an IAM user by going to the AWS Management Console and viewing the user's security credentials. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gstTokenCode",
                        "name": "_gstTokenCode",
                        "shape": "tokenCodeType",
                        "locationName": "TokenCode",
                        "documentation": "\u003cp\u003eThe value provided by the MFA device, if MFA is required. If any policy requires the IAM user to submit an MFA code, specify this value. If MFA authentication is required, and the user does not provide a code when requesting a set of temporary security credentials, the user will receive an \"access denied\" response when requesting resources that require MFA authentication.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gstDurationSeconds",
                        "name": "_gstDurationSeconds",
                        "shape": "durationSecondsType",
                        "locationName": "DurationSeconds",
                        "documentation": "\u003cp\u003eThe duration, in seconds, that the credentials should remain valid. Acceptable durations for IAM user sessions range from 900 seconds (15 minutes) to 129600 seconds (36 hours), with 43200 seconds (12 hours) as the default. Sessions for AWS account owners are restricted to a maximum of 3600 seconds (one hour). If the duration is longer than one hour, the session for AWS account owners defaults to one hour. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gstSerialNumber",
                        "name": "_gstSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003eThe identification number of the MFA device that is associated with the IAM user who is making the \u003ccode\u003eGetSessionToken\u003c/code\u003e call. Specify this value if the IAM user has a policy that requires MFA authentication. The value is either the serial number for a hardware device (such as \u003ccode\u003eGAHT12345678\u003c/code\u003e) or an Amazon Resource Name (ARN) for a virtual device (such as \u003ccode\u003earn:aws:iam::123456789012:mfa/user\u003c/code\u003e). You can find the device for an IAM user by going to the AWS Management Console and viewing the user's security credentials. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gstTokenCode",
                        "name": "_gstTokenCode",
                        "shape": "tokenCodeType",
                        "locationName": "TokenCode",
                        "documentation": "\u003cp\u003eThe value provided by the MFA device, if MFA is required. If any policy requires the IAM user to submit an MFA code, specify this value. If MFA authentication is required, and the user does not provide a code when requesting a set of temporary security credentials, the user will receive an \"access denied\" response when requesting resources that require MFA authentication.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        }
    ]
}