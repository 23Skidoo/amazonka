{
    "service": {
        "signature": "v4",
        "checksum": "sha256",
        "abbrev": "StorageGateway",
        "error": "StorageGatewayError",
        "namespace": "Network.AWS.StorageGateway",
        "protocol": "json",
        "imports": [
            "Network.AWS.StorageGateway.ActivateGateway",
            "Network.AWS.StorageGateway.AddCache",
            "Network.AWS.StorageGateway.AddUploadBuffer",
            "Network.AWS.StorageGateway.AddWorkingStorage",
            "Network.AWS.StorageGateway.CancelArchival",
            "Network.AWS.StorageGateway.CancelRetrieval",
            "Network.AWS.StorageGateway.CreateCachediSCSIVolume",
            "Network.AWS.StorageGateway.CreateSnapshot",
            "Network.AWS.StorageGateway.CreateSnapshotFromVolumeRecoveryPoint",
            "Network.AWS.StorageGateway.CreateStorediSCSIVolume",
            "Network.AWS.StorageGateway.CreateTapes",
            "Network.AWS.StorageGateway.DeleteBandwidthRateLimit",
            "Network.AWS.StorageGateway.DeleteChapCredentials",
            "Network.AWS.StorageGateway.DeleteGateway",
            "Network.AWS.StorageGateway.DeleteSnapshotSchedule",
            "Network.AWS.StorageGateway.DeleteTape",
            "Network.AWS.StorageGateway.DeleteTapeArchive",
            "Network.AWS.StorageGateway.DeleteVolume",
            "Network.AWS.StorageGateway.DescribeBandwidthRateLimit",
            "Network.AWS.StorageGateway.DescribeCache",
            "Network.AWS.StorageGateway.DescribeCachediSCSIVolumes",
            "Network.AWS.StorageGateway.DescribeChapCredentials",
            "Network.AWS.StorageGateway.DescribeGatewayInformation",
            "Network.AWS.StorageGateway.DescribeMaintenanceStartTime",
            "Network.AWS.StorageGateway.DescribeSnapshotSchedule",
            "Network.AWS.StorageGateway.DescribeStorediSCSIVolumes",
            "Network.AWS.StorageGateway.DescribeTapeArchives",
            "Network.AWS.StorageGateway.DescribeTapeRecoveryPoints",
            "Network.AWS.StorageGateway.DescribeTapes",
            "Network.AWS.StorageGateway.DescribeUploadBuffer",
            "Network.AWS.StorageGateway.DescribeVTLDevices",
            "Network.AWS.StorageGateway.DescribeWorkingStorage",
            "Network.AWS.StorageGateway.DisableGateway",
            "Network.AWS.StorageGateway.ListGateways",
            "Network.AWS.StorageGateway.ListLocalDisks",
            "Network.AWS.StorageGateway.ListVolumeRecoveryPoints",
            "Network.AWS.StorageGateway.ListVolumes",
            "Network.AWS.StorageGateway.RetrieveTapeArchive",
            "Network.AWS.StorageGateway.RetrieveTapeRecoveryPoint",
            "Network.AWS.StorageGateway.ShutdownGateway",
            "Network.AWS.StorageGateway.StartGateway",
            "Network.AWS.StorageGateway.Types",
            "Network.AWS.StorageGateway.UpdateBandwidthRateLimit",
            "Network.AWS.StorageGateway.UpdateChapCredentials",
            "Network.AWS.StorageGateway.UpdateGatewayInformation",
            "Network.AWS.StorageGateway.UpdateGatewaySoftwareNow",
            "Network.AWS.StorageGateway.UpdateMaintenanceStartTime",
            "Network.AWS.StorageGateway.UpdateSnapshotSchedule"
        ],
        "name": "AWS Storage Gateway",
        "version": "2013-06-30",
        "documentation": "\u003cfullname\u003eAWS Storage Gateway Service\u003c/fullname\u003e \u003cp\u003eAWS Storage Gateway is the service that connects an on-premises software appliance with cloud-based storage to provide seamless and secure integration between an organization's on-premises IT environment and AWS's storage infrastructure. The service enables you to securely upload data to the AWS cloud for cost effective backup and rapid disaster recovery.\u003c/p\u003e \u003cp\u003eUse the following links to get started using the \u003ci\u003eAWS Storage Gateway Service API Reference\u003c/i\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ca href=\"http://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayHTTPRequestsHeaders.html\"\u003eAWS Storage Gateway Required Request Headers\u003c/a\u003e: Describes the required headers that you must send with every POST request to AWS Storage Gateway.\u003c/li\u003e \u003cli\u003e \u003ca href=\"http://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewaySigningRequests.html\"\u003eSigning Requests\u003c/a\u003e: AWS Storage Gateway requires that you authenticate every request you send; this topic describes how sign such a request.\u003c/li\u003e \u003cli\u003e \u003ca href=\"http://docs.aws.amazon.com/storagegateway/latest/userguide/APIErrorResponses.html\"\u003eError Responses\u003c/a\u003e: Provides reference information about AWS Storage Gateway errors.\u003c/li\u003e \u003cli\u003e \u003ca href=\"http://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPIOperations.html\"\u003eOperations in AWS Storage Gateway\u003c/a\u003e: Contains detailed descriptions of all AWS Storage Gateway operations, their request parameters, response elements, possible errors, and examples of requests and responses.\u003c/li\u003e \u003cli\u003e \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/index.html?rande.html\"\u003eAWS Storage Gateway Regions and Endpoints\u003c/a\u003e: Provides a list of each of the regions and endpoints available for use with AWS Storage Gateway. \u003c/li\u003e \u003c/ul\u003e",
        "xmlNamespace": "https://storagegateway.amazonaws.com/doc/2013-06-30/",
        "endpoint": "regional",
        "endpointPrefix": "storagegateway",
        "targetPrefix": "StorageGateway_20130630"
    },
    "cabal": {
        "library": "amazonka-storagegateway",
        "modules": [
            "Network.AWS.StorageGateway",
            "Network.AWS.StorageGateway.ActivateGateway",
            "Network.AWS.StorageGateway.AddCache",
            "Network.AWS.StorageGateway.AddUploadBuffer",
            "Network.AWS.StorageGateway.AddWorkingStorage",
            "Network.AWS.StorageGateway.CancelArchival",
            "Network.AWS.StorageGateway.CancelRetrieval",
            "Network.AWS.StorageGateway.CreateCachediSCSIVolume",
            "Network.AWS.StorageGateway.CreateSnapshot",
            "Network.AWS.StorageGateway.CreateSnapshotFromVolumeRecoveryPoint",
            "Network.AWS.StorageGateway.CreateStorediSCSIVolume",
            "Network.AWS.StorageGateway.CreateTapes",
            "Network.AWS.StorageGateway.DeleteBandwidthRateLimit",
            "Network.AWS.StorageGateway.DeleteChapCredentials",
            "Network.AWS.StorageGateway.DeleteGateway",
            "Network.AWS.StorageGateway.DeleteSnapshotSchedule",
            "Network.AWS.StorageGateway.DeleteTape",
            "Network.AWS.StorageGateway.DeleteTapeArchive",
            "Network.AWS.StorageGateway.DeleteVolume",
            "Network.AWS.StorageGateway.DescribeBandwidthRateLimit",
            "Network.AWS.StorageGateway.DescribeCache",
            "Network.AWS.StorageGateway.DescribeCachediSCSIVolumes",
            "Network.AWS.StorageGateway.DescribeChapCredentials",
            "Network.AWS.StorageGateway.DescribeGatewayInformation",
            "Network.AWS.StorageGateway.DescribeMaintenanceStartTime",
            "Network.AWS.StorageGateway.DescribeSnapshotSchedule",
            "Network.AWS.StorageGateway.DescribeStorediSCSIVolumes",
            "Network.AWS.StorageGateway.DescribeTapeArchives",
            "Network.AWS.StorageGateway.DescribeTapeRecoveryPoints",
            "Network.AWS.StorageGateway.DescribeTapes",
            "Network.AWS.StorageGateway.DescribeUploadBuffer",
            "Network.AWS.StorageGateway.DescribeVTLDevices",
            "Network.AWS.StorageGateway.DescribeWorkingStorage",
            "Network.AWS.StorageGateway.DisableGateway",
            "Network.AWS.StorageGateway.ListGateways",
            "Network.AWS.StorageGateway.ListLocalDisks",
            "Network.AWS.StorageGateway.ListVolumeRecoveryPoints",
            "Network.AWS.StorageGateway.ListVolumes",
            "Network.AWS.StorageGateway.RetrieveTapeArchive",
            "Network.AWS.StorageGateway.RetrieveTapeRecoveryPoint",
            "Network.AWS.StorageGateway.ShutdownGateway",
            "Network.AWS.StorageGateway.StartGateway",
            "Network.AWS.StorageGateway.Types",
            "Network.AWS.StorageGateway.UpdateBandwidthRateLimit",
            "Network.AWS.StorageGateway.UpdateChapCredentials",
            "Network.AWS.StorageGateway.UpdateGatewayInformation",
            "Network.AWS.StorageGateway.UpdateGatewaySoftwareNow",
            "Network.AWS.StorageGateway.UpdateMaintenanceStartTime",
            "Network.AWS.StorageGateway.UpdateSnapshotSchedule"
        ],
        "dependencies": [],
        "version": "0.0.0",
        "synopsis": "",
        "description": ""
    },
    "types": {
        "ChapInfo": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ciTargetARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ciSecretToAuthenticateInitiator",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ciInitiatorName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ciSecretToAuthenticateTarget",
                    "type": "Maybe Text"
                }
            ]
        },
        "VolumeiSCSIAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vscsiaTargetARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vscsiaNetworkInterfaceId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vscsiaNetworkInterfacePort",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vscsiaLunNumber",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vscsiaChapEnabled",
                    "type": "Maybe Bool"
                }
            ]
        },
        "DeviceiSCSIAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dscsiaTargetARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dscsiaNetworkInterfaceId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dscsiaNetworkInterfacePort",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dscsiaChapEnabled",
                    "type": "Maybe Bool"
                }
            ]
        },
        "Disk": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "disDiskId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "disDiskPath",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "disDiskNode",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "disDiskSizeInBytes",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "disDiskAllocationType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "disDiskAllocationResource",
                    "type": "Maybe Text"
                }
            ]
        },
        "Tape": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tapTapeARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tapTapeBarcode",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tapTapeSizeInBytes",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tapTapeStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tapVTLDevice",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tapProgress",
                    "type": "Maybe Double"
                }
            ]
        },
        "NetworkInterface": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "niIpv4Address",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "niMacAddress",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "niIpv6Address",
                    "type": "Maybe Text"
                }
            ]
        },
        "namespace": "Network.AWS.StorageGateway.Types",
        "VTLDevice": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vtldVTLDeviceARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vtldVTLDeviceType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vtldVTLDeviceVendor",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vtldVTLDeviceProductIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vtldDeviceiSCSIAttributes",
                    "type": "Maybe DeviceiSCSIAttributes"
                }
            ]
        },
        "imports": [],
        "TapeRecoveryPointInfo": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "trpiTapeARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "trpiTapeRecoveryPointTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "trpiTapeSizeInBytes",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "trpiTapeStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "StorageGatewayError": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sgeerrorDetails",
                    "type": "Map Text Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sgeerrorCode",
                    "type": "Maybe Text"
                }
            ]
        },
        "VolumeRecoveryPointInfo": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vrpiVolumeARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vrpiVolumeSizeInBytes",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vrpiVolumeUsageInBytes",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vrpiVolumeRecoveryPointTime",
                    "type": "Maybe Text"
                }
            ]
        },
        "InvalidGatewayRequestException": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "igremessage",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "igreerror",
                    "type": "Maybe StorageGatewayError"
                }
            ]
        },
        "TapeArchive": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "taTapeARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "taTapeBarcode",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "taTapeSizeInBytes",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "taCompletionTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "taRetrievedTo",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "taTapeStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "InternalServerError": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "isemessage",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "iseerror",
                    "type": "Maybe StorageGatewayError"
                }
            ]
        },
        "StorediSCSIVolume": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sscsivVolumeARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sscsivVolumeId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sscsivVolumeType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sscsivVolumeStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sscsivVolumeSizeInBytes",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sscsivVolumeProgress",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sscsivVolumeDiskId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sscsivSourceSnapshotId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sscsivPreservedExistingData",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sscsivVolumeiSCSIAttributes",
                    "type": "Maybe VolumeiSCSIAttributes"
                }
            ]
        },
        "CachediSCSIVolume": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cscsivVolumeARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cscsivVolumeId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cscsivVolumeType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cscsivVolumeStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cscsivVolumeSizeInBytes",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cscsivVolumeProgress",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cscsivSourceSnapshotId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cscsivVolumeiSCSIAttributes",
                    "type": "Maybe VolumeiSCSIAttributes"
                }
            ]
        },
        "VolumeInfo": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "viVolumeARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "viVolumeType",
                    "type": "Maybe Text"
                }
            ]
        },
        "GatewayInfo": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "giGatewayARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "giGatewayType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "giGatewayOperationalState",
                    "type": "Maybe Text"
                }
            ]
        }
    },
    "operations": [
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "caoTapeARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "CancelArchivalOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.CancelArchival",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "CancelArchival",
            "method": "post",
            "documentation": "\u003cp\u003eCancels archiving of a virtual tape to the virtual tape shelf (VTS) after the archiving process is initiated. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "caiGatewayARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "caiTapeARN",
                        "type": "Text"
                    }
                ],
                "name": "CancelArchivalInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "CreateStorediSCSIVolumeOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csscsivoVolumeARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csscsivoVolumeSizeInBytes",
                        "type": "Maybe Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csscsivoTargetARN",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.CreateStorediSCSIVolume",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "CreateStorediSCSIVolume",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation creates a volume on a specified gateway. This operation is supported only for the gateway-stored volume architecture. \u003c/p\u003e \u003cp\u003eThe size of the volume to create is inferred from the disk size. You can choose to preserve existing data on the disk, create volume from an existing snapshot, or create an empty volume. If you choose to create an empty gateway volume, then any existing data on the disk is erased.\u003c/p\u003e \u003cp\u003eIn the request you must specify the gateway and the disk information on which you are creating the volume. In response, AWS Storage Gateway creates the volume and returns volume information such as the volume Amazon Resource Name (ARN), its size, and the iSCSI target ARN that initiators can use to connect to the volume target.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csscsiviGatewayARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csscsiviDiskId",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csscsiviPreserveExistingData",
                        "type": "Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csscsiviTargetName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csscsiviNetworkInterfaceId",
                        "type": "Text"
                    }
                ],
                "name": "CreateStorediSCSIVolumeInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csscsiviSnapshotId",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dccoChapCredentials",
                    "type": "List ChapInfo"
                },
                "wrapper": false,
                "name": "DescribeChapCredentialsOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.DescribeChapCredentials",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DescribeChapCredentials",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns an array of Challenge-Handshake Authentication Protocol (CHAP) credentials information for a specified iSCSI target, one for each target-initiator pair.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dcci1TargetARN",
                    "type": "Text"
                },
                "name": "DescribeChapCredentialsInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ctoTapeARNs",
                    "type": "List Text"
                },
                "wrapper": false,
                "name": "CreateTapesOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.CreateTapes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "CreateTapes",
            "method": "post",
            "documentation": "\u003cp\u003eCreates one or more virtual tapes. You write data to the virtual tapes and then archive the tapes.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ctiGatewayARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ctiTapeSizeInBytes",
                        "type": "Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ctiClientToken",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ctiNumTapesToCreate",
                        "type": "Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ctiTapeBarcodePrefix",
                        "type": "Text"
                    }
                ],
                "name": "CreateTapesInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "CreateCachediSCSIVolumeOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccscsivoVolumeARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccscsivoTargetARN",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.CreateCachediSCSIVolume",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "CreateCachediSCSIVolume",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation creates a cached volume on a specified cached gateway. This operation is supported only for the gateway-cached volume architecture.\u003c/p\u003e \u003cp\u003eIn the request, you must specify the gateway, size of the volume in bytes, the iSCSI target name, an IP address on which to expose the target, and a unique client token. In response, AWS Storage Gateway creates the volume and returns information about it such as the volume Amazon Resource Name (ARN), its size, and the iSCSI target ARN that initiators can use to connect to the volume target.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccscsiviGatewayARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccscsiviVolumeSizeInBytes",
                        "type": "Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccscsiviTargetName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccscsiviNetworkInterfaceId",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccscsiviClientToken",
                        "type": "Text"
                    }
                ],
                "name": "CreateCachediSCSIVolumeInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccscsiviSnapshotId",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "auboGatewayARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "AddUploadBufferOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.AddUploadBuffer",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "AddUploadBuffer",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation configures one or more gateway local disks as upload buffer for a specified gateway. This operation is supported for both the gateway-stored and gateway-cached volume architectures. \u003c/p\u003e \u003cp\u003e In the request, you specify the gateway Amazon Resource Name (ARN) to which you want to add upload buffer, and one or more disk IDs that you want to configure as upload buffer.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "aubiGatewayARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "aubiDiskIds",
                        "type": "List Text"
                    }
                ],
                "name": "AddUploadBufferInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ugioGatewayARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "UpdateGatewayInformationOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.UpdateGatewayInformation",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "UpdateGatewayInformation",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation updates a gateway's metadata, which includes the gateway's name and time zone. To specify which gateway to update, use the Amazon Resource Name (ARN) of the gateway in your request.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ugiiGatewayARN",
                        "type": "Text"
                    }
                ],
                "name": "UpdateGatewayInformationInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ugiiGatewayName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ugiiGatewayTimezone",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "DescribeMaintenanceStartTimeOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dmstoGatewayARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dmstoHourOfDay",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dmstoMinuteOfHour",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dmstoDayOfWeek",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dmstoTimezone",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.DescribeMaintenanceStartTime",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DescribeMaintenanceStartTime",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns your gateway's weekly maintenance start time including the day and time of the week. Note that values are in terms of the gateway's time zone.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dmstiGatewayARN",
                    "type": "Text"
                },
                "name": "DescribeMaintenanceStartTimeInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dwsoDiskIds",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeWorkingStorageOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dwsoGatewayARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dwsoWorkingStorageUsedInBytes",
                        "type": "Maybe Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dwsoWorkingStorageAllocatedInBytes",
                        "type": "Maybe Integer"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.DescribeWorkingStorage",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DescribeWorkingStorage",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns information about the working storage of a gateway. This operation is supported only for the gateway-stored volume architecture. This operation is deprecated in cached-volumes API version (20120630). Use DescribeUploadBuffer instead.\u003c/p\u003e \u003cp\u003eThe response includes disk IDs that are configured as working storage, and it includes the amount of working storage allocated and used.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dwsiGatewayARN",
                    "type": "Text"
                },
                "name": "DescribeWorkingStorageInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dcscsivoCachediSCSIVolumes",
                    "type": "List CachediSCSIVolume"
                },
                "wrapper": false,
                "name": "DescribeCachediSCSIVolumesOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.DescribeCachediSCSIVolumes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DescribeCachediSCSIVolumes",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns a description of the gateway volumes specified in the request. This operation is supported only for the gateway-cached volume architecture.\u003c/p\u003e \u003cp\u003e The list of gateway volumes in the request must be from one gateway. In the response Amazon Storage Gateway returns volume information sorted by volume Amazon Resource Name (ARN). \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dcscsiviVolumeARNs",
                    "type": "List Text"
                },
                "name": "DescribeCachediSCSIVolumesInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "acoGatewayARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "AddCacheOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.AddCache",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "AddCache",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation configures one or more gateway local disks as cache for a cached-volume gateway. This operation is supported only for the gateway-cached volume architecture (see \u003ca href=\"http://docs.aws.amazon.com/storagegateway/latest/userguide/StorageGatewayConcepts.html\"\u003eStorage Gateway Concepts\u003c/a\u003e).\u003c/p\u003e \u003cp\u003eIn the request, you specify the gateway Amazon Resource Name (ARN) to which you want to add cache, and one or more disk IDs that you want to configure as cache. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "aciGatewayARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "aciDiskIds",
                        "type": "List Text"
                    }
                ],
                "name": "AddCacheInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "sgoGatewayARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "StartGatewayOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.StartGateway",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "StartGateway",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation starts a gateway that you previously shut down (see \u003ca\u003eShutdownGateway\u003c/a\u003e). After the gateway starts, you can then make other API calls, your applications can read from or write to the gateway's storage volumes and you will be able to take snapshot backups.\u003c/p\u003e \u003cp\u003eTo specify which gateway to start, use the Amazon Resource Name (ARN) of the gateway in your request.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "sgiGatewayARN",
                    "type": "Text"
                },
                "name": "StartGatewayInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "sgo1GatewayARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "ShutdownGatewayOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.ShutdownGateway",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "ShutdownGateway",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation shuts down a gateway. To specify which gateway to shut down, use the Amazon Resource Name (ARN) of the gateway in the body of your request.\u003c/p\u003e \u003cp\u003eThe operation shuts down the gateway service component running in the storage gateway's virtual machine (VM) and not the VM.\u003c/p\u003e \u003cp\u003eAfter the gateway is shutdown, you cannot call any other API except \u003ca\u003eStartGateway\u003c/a\u003e, \u003ca\u003eDescribeGatewayInformation\u003c/a\u003e, and \u003ca\u003eListGateways\u003c/a\u003e. For more information, see \u003ca\u003eActivateGateway\u003c/a\u003e. Your applications cannot read from or write to the gateway's storage volumes, and there are no snapshots taken.\u003c/p\u003e \u003cp\u003eIf do not intend to use the gateway again, you must delete the gateway (using \u003ca\u003eDeleteGateway\u003c/a\u003e) to no longer pay software charges associated with the gateway.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "sgi1GatewayARN",
                    "type": "Text"
                },
                "name": "ShutdownGatewayInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ugsnoGatewayARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "UpdateGatewaySoftwareNowOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.UpdateGatewaySoftwareNow",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "UpdateGatewaySoftwareNow",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation updates the gateway virtual machine (VM) software. The request immediately triggers the software update. \u003c/p\u003e \u003cimportant\u003eA software update forces a system restart of your gateway. You can minimize the chance of any disruption to your applications by increasing your iSCSI Initiators' timeouts. For more information about increasing iSCSI Initiator timeouts for Windows and Linux, see \u003ca href=\"http://docs.aws.amazon.com/storagegateway/latest/userguide/ConfiguringiSCSIClientInitiatorWindowsClient.html#CustomizeWindowsiSCSISettings\"\u003eCustomizing Your Windows iSCSI Settings\u003c/a\u003e and \u003ca href=\"http://docs.aws.amazon.com/storagegateway/latest/userguide/ConfiguringiSCSIClientInitiatorRedHatClient.html#CustomizeLinuxiSCSISettings\"\u003eCustomizing Your Linux iSCSI Settings\u003c/a\u003e, respectively.\u003c/important\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ugsniGatewayARN",
                    "type": "Text"
                },
                "name": "UpdateGatewaySoftwareNowInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "DeleteChapCredentialsOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dccoTargetARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dccoInitiatorName",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.DeleteChapCredentials",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DeleteChapCredentials",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation deletes Challenge-Handshake Authentication Protocol (CHAP) credentials for a specified iSCSI target and initiator pair.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcciTargetARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcciInitiatorName",
                        "type": "Text"
                    }
                ],
                "name": "DeleteChapCredentialsInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "UpdateChapCredentialsOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uccoTargetARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uccoInitiatorName",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.UpdateChapCredentials",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "UpdateChapCredentials",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation updates the Challenge-Handshake Authentication Protocol (CHAP) credentials for a specified iSCSI target. By default, a gateway does not have CHAP enabled; however, for added security, you might use it.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eWhen you update CHAP credentials, all existing connections on the target are closed and initiators must reconnect with the new credentials.\u003c/p\u003e \u003c/important\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ucciTargetARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ucciSecretToAuthenticateInitiator",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ucciInitiatorName",
                        "type": "Text"
                    }
                ],
                "name": "UpdateChapCredentialsInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ucciSecretToAuthenticateTarget",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "duboDiskIds",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeUploadBufferOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "duboGatewayARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "duboUploadBufferUsedInBytes",
                        "type": "Maybe Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "duboUploadBufferAllocatedInBytes",
                        "type": "Maybe Integer"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.DescribeUploadBuffer",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DescribeUploadBuffer",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns information about the upload buffer of a gateway. This operation is supported for both the gateway-stored and gateway-cached volume architectures. \u003c/p\u003e \u003cp\u003e The response includes disk IDs that are configured as upload buffer space, and it includes the amount of upload buffer space allocated and used.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dubiGatewayARN",
                    "type": "Text"
                },
                "name": "DescribeUploadBufferInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtoTapes",
                        "type": "List Tape"
                    }
                ],
                "name": "DescribeTapesOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtoMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.DescribeTapes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DescribeTapes",
            "method": "post",
            "documentation": "\u003cp\u003eReturns a description of the specified Amazon Resource Name (ARN) of virtual tapes. If a \u003ccode\u003eTapeARN\u003c/code\u003e is not specified, returns a description of all virtual tapes associated with the specified gateway.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtiGatewayARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtiTapeARNs",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeTapesInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtiMarker",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtiLimit",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dsscsivoStorediSCSIVolumes",
                    "type": "List StorediSCSIVolume"
                },
                "wrapper": false,
                "name": "DescribeStorediSCSIVolumesOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.DescribeStorediSCSIVolumes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DescribeStorediSCSIVolumes",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns description of the gateway volumes specified in the request. The list of gateway volumes in the request must be from one gateway. In the response Amazon Storage Gateway returns volume information sorted by volume ARNs.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dsscsiviVolumeARNs",
                    "type": "List Text"
                },
                "name": "DescribeStorediSCSIVolumesInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "CreateSnapshotFromVolumeRecoveryPointOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csfvrpoSnapshotId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csfvrpoVolumeARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csfvrpoVolumeRecoveryPointTime",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.CreateSnapshotFromVolumeRecoveryPoint",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "CreateSnapshotFromVolumeRecoveryPoint",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation initiates a snapshot of a gateway from a volume recovery point. This operation is supported only for the gateway-cached volume architecture (see ).\u003c/p\u003e \u003cp\u003eA volume recovery point is a point in time at which all data of the volume is consistent and from which you can create a snapshot. To get a list of volume recovery point for gateway-cached volumes, use \u003ca\u003eListVolumeRecoveryPoints\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIn the \u003ccode\u003eCreateSnapshotFromVolumeRecoveryPoint\u003c/code\u003e request, you identify the volume by providing its Amazon Resource Name (ARN). You must also provide a description for the snapshot. When AWS Storage Gateway takes a snapshot of the specified volume, the snapshot and its description appear in the AWS Storage Gateway console. In response, AWS Storage Gateway returns you a snapshot ID. You can use this snapshot ID to check the snapshot progress or later use it when you want to create a volume from a snapshot.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csfvrpiVolumeARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csfvrpiSnapshotDescription",
                        "type": "Text"
                    }
                ],
                "name": "CreateSnapshotFromVolumeRecoveryPointInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rtrpoTapeARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "RetrieveTapeRecoveryPointOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.RetrieveTapeRecoveryPoint",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "RetrieveTapeRecoveryPoint",
            "method": "post",
            "documentation": "\u003cp\u003eRetrieves the recovery point for the specified virtual tape.\u003c/p\u003e \u003cp\u003eA recovery point is a point in time view of a virtual tape at which all the data on the tape is consistent. If your gateway crashes, virtual tapes that have recovery points can be recovered to a new gateway.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rtrpiTapeARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rtrpiGatewayARN",
                        "type": "Text"
                    }
                ],
                "name": "RetrieveTapeRecoveryPointInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dgo1GatewayARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "DeleteGatewayOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.DeleteGateway",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DeleteGateway",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation deletes a gateway. To specify which gateway to delete, use the Amazon Resource Name (ARN) of the gateway in your request. The operation deletes the gateway; however, it does not delete the gateway virtual machine (VM) from your host computer.\u003c/p\u003e \u003cp\u003eAfter you delete a gateway, you cannot reactivate it. Completed snapshots of the gateway volumes are not deleted upon deleting the gateway, however, pending snapshots will not complete. After you delete a gateway, your next step is to remove it from your environment.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eYou no longer pay software charges after the gateway is deleted; however, your existing Amazon EBS snapshots persist and you will continue to be billed for these snapshots. You can choose to remove all remaining Amazon EBS snapshots by canceling your Amazon EC2 subscription.  If you prefer not to cancel your Amazon EC2 subscription, you can delete your snapshots using the Amazon EC2 console. For more information, see the \u003ca href=\"http://aws.amazon.com/storagegateway\"\u003e AWS Storage Gateway Detail Page\u003c/a\u003e. \u003c/p\u003e \u003c/important\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dgiGatewayARN",
                    "type": "Text"
                },
                "name": "DeleteGatewayInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "umstoGatewayARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "UpdateMaintenanceStartTimeOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.UpdateMaintenanceStartTime",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "UpdateMaintenanceStartTime",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation updates a gateway's weekly maintenance start time information, including day and time of the week. The maintenance time is the time in your gateway's time zone.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "umstiGatewayARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "umstiHourOfDay",
                        "type": "Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "umstiMinuteOfHour",
                        "type": "Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "umstiDayOfWeek",
                        "type": "Int"
                    }
                ],
                "name": "UpdateMaintenanceStartTimeInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dgioGatewayNetworkInterfaces",
                        "type": "List NetworkInterface"
                    }
                ],
                "name": "DescribeGatewayInformationOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dgioGatewayARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dgioGatewayId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dgioGatewayTimezone",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dgioGatewayState",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dgioGatewayType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dgioNextUpdateAvailabilityDate",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.DescribeGatewayInformation",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DescribeGatewayInformation",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns metadata about a gateway such as its name, network interfaces, configured time zone, and the state (whether the gateway is running or not). To specify which gateway to describe, use the Amazon Resource Name (ARN) of the gateway in your request.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dgiiGatewayARN",
                    "type": "Text"
                },
                "name": "DescribeGatewayInformationInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rtaoTapeARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "RetrieveTapeArchiveOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.RetrieveTapeArchive",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "RetrieveTapeArchive",
            "method": "post",
            "documentation": "\u003cp\u003eRetrieves an archived virtual tape from the virtual tape shelf (VTS) to a gateway-VTL. Virtual tapes archived in the VTS are not associated with any gateway. However after a tape is retrieved, it is associated with a gateway, even though it is also listed in the VTS.\u003c/p\u003e \u003cp\u003eOnce a tape is successfully retrieved to a gateway, it cannot be retrieved again to another gateway. You must archive the tape again before you can retrieve it to another gateway.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rtaiTapeARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rtaiGatewayARN",
                        "type": "Text"
                    }
                ],
                "name": "RetrieveTapeArchiveInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtaoTapeArchives",
                        "type": "List TapeArchive"
                    }
                ],
                "name": "DescribeTapeArchivesOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtaoMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.DescribeTapeArchives",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DescribeTapeArchives",
            "method": "post",
            "documentation": "\u003cp\u003eReturns a description of specified virtual tapes in the virtual tape shelf (VTS). \u003c/p\u003e \u003cp\u003eIf a specific \u003ccode\u003eTapeARN\u003c/code\u003e is not specified, AWS Storage Gateway returns a description of all virtual tapes found in the VTS associated with your account.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtaiTapeARNs",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeTapeArchivesInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtaiMarker",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtaiLimit",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dgoGatewayARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "DisableGatewayOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.DisableGateway",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DisableGateway",
            "method": "post",
            "documentation": "\u003cp\u003eDisables a gateway when the gateway is no longer functioning. For example, if your gateway VM is damaged, you can disable the gateway so you can recover virtual tapes. \u003c/p\u003e \u003cp\u003eUse this operation for a gateway-VTL that is not reachable or not functioning.\u003c/p\u003e \u003cimportant\u003eOnce a gateway is disabled it cannot be enabled.\u003c/important\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dgi1GatewayARN",
                    "type": "Text"
                },
                "name": "DisableGatewayInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "DescribeSnapshotScheduleOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsso1VolumeARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsso1StartAt",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsso1RecurrenceInHours",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsso1Description",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsso1Timezone",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.DescribeSnapshotSchedule",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DescribeSnapshotSchedule",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation describes the snapshot schedule for the specified gateway volume. The snapshot schedule information includes intervals at which snapshots are automatically initiated on the volume.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dssiVolumeARN",
                    "type": "Text"
                },
                "name": "DescribeSnapshotScheduleInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "DescribeBandwidthRateLimitOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbrloGatewayARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbrloAverageUploadRateLimitInBitsPerSec",
                        "type": "Maybe Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbrloAverageDownloadRateLimitInBitsPerSec",
                        "type": "Maybe Integer"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.DescribeBandwidthRateLimit",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DescribeBandwidthRateLimit",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns the bandwidth rate limits of a gateway. By default, these limits are not set, which means no bandwidth rate limiting is in effect.\u003c/p\u003e \u003cp\u003eThis operation only returns a value for a bandwidth rate limit only if the limit is set. If no limits are set for the gateway, then this operation returns only the gateway ARN in the response body. To specify which gateway to describe, use the Amazon Resource Name (ARN) of the gateway in your request.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dbrli1GatewayARN",
                    "type": "Text"
                },
                "name": "DescribeBandwidthRateLimitInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dssoVolumeARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "DeleteSnapshotScheduleOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.DeleteSnapshotSchedule",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DeleteSnapshotSchedule",
            "method": "post",
            "documentation": "\u003cp\u003e This operation deletes a snapshot of a volume. \u003c/p\u003e \u003cp\u003e You can take snapshots of your gateway volumes on a scheduled or ad-hoc basis. This API enables you to delete a snapshot schedule for a volume. For more information, see \u003ca href=\"http://docs.aws.amazon.com/storagegateway/latest/userguide/WorkingWithSnapshots.html\"\u003eWorking with Snapshots\u003c/a\u003e. In the \u003ccode\u003eDeleteSnapshotSchedule\u003c/code\u003e request, you identify the volume by providing its Amazon Resource Name (ARN). \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dssi1VolumeARN",
                    "type": "Text"
                },
                "name": "DeleteSnapshotScheduleInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ussoVolumeARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "UpdateSnapshotScheduleOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.UpdateSnapshotSchedule",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "UpdateSnapshotSchedule",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation updates a snapshot schedule configured for a gateway volume.\u003c/p\u003e \u003cp\u003eThe default snapshot schedule for volume is once every 24 hours, starting at the creation time of the volume. You can use this API to change the snapshot schedule configured for the volume.\u003c/p\u003e \u003cp\u003eIn the request you must identify the gateway volume whose snapshot schedule you want to update, and the schedule information, including when you want the snapshot to begin on a day and the frequency (in hours) of snapshots.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ussiVolumeARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ussiStartAt",
                        "type": "Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ussiRecurrenceInHours",
                        "type": "Int"
                    }
                ],
                "name": "UpdateSnapshotScheduleInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ussiDescription",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "CreateSnapshotOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csoVolumeARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csoSnapshotId",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.CreateSnapshot",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "CreateSnapshot",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation initiates a snapshot of a volume.\u003c/p\u003e \u003cp\u003eAWS Storage Gateway provides the ability to back up point-in-time snapshots of your data to Amazon Simple Storage (S3) for durable off-site recovery, as well as import the data to an Amazon Elastic Block Store (EBS) volume in Amazon Elastic Compute Cloud (EC2). You can take snapshots of your gateway volume on a scheduled or ad-hoc basis. This API enables you to take ad-hoc snapshot. For more information, see \u003ca href=\"http://docs.aws.amazon.com/storagegateway/latest/userguide/WorkingWithSnapshots.html\"\u003eWorking With Snapshots in the AWS Storage Gateway Console\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIn the CreateSnapshot request you identify the volume by providing its Amazon Resource Name (ARN). You must also provide description for the snapshot. When AWS Storage Gateway takes the snapshot of specified volume, the snapshot and description appears in the AWS Storage Gateway Console. In response, AWS Storage Gateway returns you a snapshot ID. You can use this snapshot ID to check the snapshot progress or later use it when you want to create a volume from a snapshot.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csiVolumeARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csiSnapshotDescription",
                        "type": "Text"
                    }
                ],
                "name": "CreateSnapshotInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "croTapeARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "CancelRetrievalOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.CancelRetrieval",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "CancelRetrieval",
            "method": "post",
            "documentation": "\u003cp\u003eCancels retrieval of a virtual tape from the virtual tape shelf (VTS) to a gateway after the retrieval process is initiated. The virtual tape is returned to the VTS.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "criGatewayARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "criTapeARN",
                        "type": "Text"
                    }
                ],
                "name": "CancelRetrievalInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dvtldoVTLDevices",
                        "type": "List VTLDevice"
                    }
                ],
                "name": "DescribeVTLDevicesOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dvtldoGatewayARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dvtldoMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.DescribeVTLDevices",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DescribeVTLDevices",
            "method": "post",
            "documentation": "\u003cp\u003eReturns a description of virtual tape library (VTL) devices for the specified gateway. In the response, AWS Storage Gateway returns VTL device information. \u003c/p\u003e \u003cp\u003eThe list of VTL devices must be from one gateway.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dvtldiGatewayARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dvtldiVTLDeviceARNs",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeVTLDevicesInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dvtldiMarker",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dvtldiLimit",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dtaoTapeARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "DeleteTapeArchiveOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.DeleteTapeArchive",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DeleteTapeArchive",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified virtual tape from the virtual tape shelf (VTS).\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dtaiTapeARN",
                    "type": "Text"
                },
                "name": "DeleteTapeArchiveInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lvrpoVolumeRecoveryPointInfos",
                        "type": "List VolumeRecoveryPointInfo"
                    }
                ],
                "name": "ListVolumeRecoveryPointsOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lvrpoGatewayARN",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.ListVolumeRecoveryPoints",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "ListVolumeRecoveryPoints",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation lists the recovery points for a specified gateway. This operation is supported only for the gateway-cached volume architecture.\u003c/p\u003e \u003cp\u003eEach gateway-cached volume has one recovery point. A volume recovery point is a point in time at which all data of the volume is consistent and from which you can create a snapshot. To create a snapshot from a volume recovery point use the \u003ca\u003eCreateSnapshotFromVolumeRecoveryPoint\u003c/a\u003e operation.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "lvrpiGatewayARN",
                    "type": "Text"
                },
                "name": "ListVolumeRecoveryPointsInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lgoGateways",
                        "type": "List GatewayInfo"
                    }
                ],
                "name": "ListGatewaysOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lgoMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.ListGateways",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "ListGateways",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation lists gateways owned by an AWS account in a region specified in the request. The returned list is ordered by gateway Amazon Resource Name (ARN).\u003c/p\u003e \u003cp\u003eBy default, the operation returns a maximum of 100 gateways. This operation supports pagination that allows you to optionally reduce the number of gateways returned in a response.\u003c/p\u003e \u003cp\u003eIf you have more gateways than are returned in a response-that is, the response returns only a truncated list of your gateways-the response contains a marker that you can specify in your next request to fetch the next page of gateways.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "ListGatewaysInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lgiMarker",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lgiLimit",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dtoTapeARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "DeleteTapeOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.DeleteTape",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DeleteTape",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified virtual tape.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dti1GatewayARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dti1TapeARN",
                        "type": "Text"
                    }
                ],
                "name": "DeleteTapeInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lldoDisks",
                        "type": "List Disk"
                    }
                ],
                "name": "ListLocalDisksOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lldoGatewayARN",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.ListLocalDisks",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "ListLocalDisks",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns a list of the local disks of a gateway. To specify which gateway to describe you use the Amazon Resource Name (ARN) of the gateway in the body of the request.\u003c/p\u003e \u003cp\u003eThe request returns all disks, specifying which are configured as working storage, stored volume or not configured at all.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "lldiGatewayARN",
                    "type": "Text"
                },
                "name": "ListLocalDisksInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lvoVolumeInfos",
                        "type": "List VolumeInfo"
                    }
                ],
                "name": "ListVolumesOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lvoGatewayARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lvoMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.ListVolumes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "ListVolumes",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation lists the iSCSI stored volumes of a gateway. Results are sorted by volume ARN. The response includes only the volume ARNs. If you want additional volume information, use the \u003ca\u003eDescribeStorediSCSIVolumes\u003c/a\u003e API.\u003c/p\u003e \u003cp\u003eThe operation supports pagination. By default, the operation returns a maximum of up to 100 volumes. You can optionally specify the \u003ccode\u003eLimit\u003c/code\u003e field in the body to limit the number of volumes in the response. If the number of volumes returned in the response is truncated, the response includes a Marker field. You can use this Marker value in your subsequent request to retrieve the next set of volumes.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lviGatewayARN",
                        "type": "Text"
                    }
                ],
                "name": "ListVolumesInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lviMarker",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lviLimit",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ubrloGatewayARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "UpdateBandwidthRateLimitOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.UpdateBandwidthRateLimit",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "UpdateBandwidthRateLimit",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation updates the bandwidth rate limits of a gateway. You can update both the upload and download bandwidth rate limit or specify only one of the two. If you don't set a bandwidth rate limit, the existing rate limit remains.\u003c/p\u003e \u003cp\u003eBy default, a gateway's bandwidth rate limits are not set. If you don't set any limit, the gateway does not have any limitations on its bandwidth usage and could potentially use the maximum available bandwidth.\u003c/p\u003e \u003cp\u003eTo specify which gateway to update, use the Amazon Resource Name (ARN) of the gateway in your request.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ubrliGatewayARN",
                        "type": "Text"
                    }
                ],
                "name": "UpdateBandwidthRateLimitInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ubrliAverageUploadRateLimitInBitsPerSec",
                        "type": "Maybe Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ubrliAverageDownloadRateLimitInBitsPerSec",
                        "type": "Maybe Integer"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "awsoGatewayARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "AddWorkingStorageOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.AddWorkingStorage",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "AddWorkingStorage",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation configures one or more gateway local disks as working storage for a gateway. This operation is supported only for the gateway-stored volume architecture. This operation is deprecated method in cached-volumes API version (20120630). Use AddUploadBuffer instead.\u003c/p\u003e \u003cp\u003eIn the request, you specify the gateway Amazon Resource Name (ARN) to which you want to add working storage, and one or more disk IDs that you want to configure as working storage.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "awsiGatewayARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "awsiDiskIds",
                        "type": "List Text"
                    }
                ],
                "name": "AddWorkingStorageInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtrpoTapeRecoveryPointInfos",
                        "type": "List TapeRecoveryPointInfo"
                    }
                ],
                "name": "DescribeTapeRecoveryPointsOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtrpoGatewayARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtrpoMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.DescribeTapeRecoveryPoints",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DescribeTapeRecoveryPoints",
            "method": "post",
            "documentation": "\u003cp\u003eReturns a list of virtual tape recovery points that are available for the specified gateway-VTL.\u003c/p\u003e \u003cp\u003eA recovery point is a point in time view of a virtual tape at which all the data on the virtual tape is consistent. If your gateway crashes, virtual tapes that have recovery points can be recovered to a new gateway.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtrpiGatewayARN",
                        "type": "Text"
                    }
                ],
                "name": "DescribeTapeRecoveryPointsInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtrpiMarker",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtrpiLimit",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dbrlo1GatewayARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "DeleteBandwidthRateLimitOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.DeleteBandwidthRateLimit",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DeleteBandwidthRateLimit",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation deletes the bandwidth rate limits of a gateway. You can delete either the upload and download bandwidth rate limit, or you can delete both. If you delete only one of the limits, the other limit remains unchanged. To specify which gateway to work with, use the Amazon Resource Name (ARN) of the gateway in your request.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbrliGatewayARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbrliBandwidthType",
                        "type": "Text"
                    }
                ],
                "name": "DeleteBandwidthRateLimitInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "agoGatewayARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "ActivateGatewayOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.ActivateGateway",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "ActivateGateway",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation activates the gateway you previously deployed on your host. For more information, see \u003ca href=\"http://docs.aws.amazon.com/storagegateway/latest/userguide/GettingStartedActivateGateway-common.html\"\u003e Activate the AWS Storage Gateway\u003c/a\u003e. In the activation process, you specify information such as the region you want to use for storing snapshots, the time zone for scheduled snapshots the gateway snapshot schedule window, an activation key, and a name for your gateway. The activation process also associates your gateway with your account; for more information, see \u003ca\u003eUpdateGatewayInformation\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "agiActivationKey",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "agiGatewayName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "agiGatewayTimezone",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "agiGatewayRegion",
                        "type": "Text"
                    }
                ],
                "name": "ActivateGatewayInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "agiGatewayType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "agiTapeDriveType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "agiMediumChangerType",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcoDiskIds",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeCacheOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcoGatewayARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcoCacheAllocatedInBytes",
                        "type": "Maybe Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcoCacheUsedPercentage",
                        "type": "Maybe Double"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcoCacheDirtyPercentage",
                        "type": "Maybe Double"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcoCacheHitPercentage",
                        "type": "Maybe Double"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcoCacheMissPercentage",
                        "type": "Maybe Double"
                    }
                ]
            },
            "namespace": "Network.AWS.StorageGateway.DescribeCache",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DescribeCache",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns information about the cache of a gateway. This operation is supported only for the gateway-cached volume architecture. \u003c/p\u003e \u003cp\u003e The response includes disk IDs that are configured as cache, and it includes the amount of cache allocated and used. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dciGatewayARN",
                    "type": "Text"
                },
                "name": "DescribeCacheInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dvoVolumeARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "DeleteVolumeOutput",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.StorageGateway.DeleteVolume",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.StorageGateway.Types"
            ],
            "name": "DeleteVolume",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation delete the specified gateway volume that you previously created using the \u003ca\u003eCreateStorediSCSIVolume\u003c/a\u003e API. For gateway-stored volumes, the local disk that was configured as the storage volume is not deleted. You can reuse the local disk to create another storage volume. \u003c/p\u003e \u003cp\u003eBefore you delete a gateway volume, make sure there are no iSCSI connections to the volume you are deleting. You should also make sure there is no snapshot in progress. You can use the Amazon Elastic Compute Cloud (Amazon EC2) API to query snapshots on the volume you are deleting and check the snapshot status. For more information, go to \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSnapshots.html\"\u003eDescribeSnapshots\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud API Reference\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIn the request, you must provide the Amazon Resource Name (ARN) of the storage volume you want to delete.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dviVolumeARN",
                    "type": "Text"
                },
                "name": "DeleteVolumeInput",
                "type": "newtype"
            }
        }
    ]
}