{
    "service": {
        "signature": "v4",
        "checksum": "sha256",
        "abbrev": "SWF",
        "error": "SWFError",
        "namespace": "Network.AWS.SWF",
        "protocol": "json",
        "imports": [
            "Network.AWS.SWF.CountClosedWorkflowExecutions",
            "Network.AWS.SWF.CountOpenWorkflowExecutions",
            "Network.AWS.SWF.CountPendingActivityTasks",
            "Network.AWS.SWF.CountPendingDecisionTasks",
            "Network.AWS.SWF.DeprecateActivityType",
            "Network.AWS.SWF.DeprecateDomain",
            "Network.AWS.SWF.DeprecateWorkflowType",
            "Network.AWS.SWF.DescribeActivityType",
            "Network.AWS.SWF.DescribeDomain",
            "Network.AWS.SWF.DescribeWorkflowExecution",
            "Network.AWS.SWF.DescribeWorkflowType",
            "Network.AWS.SWF.GetWorkflowExecutionHistory",
            "Network.AWS.SWF.ListActivityTypes",
            "Network.AWS.SWF.ListClosedWorkflowExecutions",
            "Network.AWS.SWF.ListDomains",
            "Network.AWS.SWF.ListOpenWorkflowExecutions",
            "Network.AWS.SWF.ListWorkflowTypes",
            "Network.AWS.SWF.PollForActivityTask",
            "Network.AWS.SWF.PollForDecisionTask",
            "Network.AWS.SWF.RecordActivityTaskHeartbeat",
            "Network.AWS.SWF.RegisterActivityType",
            "Network.AWS.SWF.RegisterDomain",
            "Network.AWS.SWF.RegisterWorkflowType",
            "Network.AWS.SWF.RequestCancelWorkflowExecution",
            "Network.AWS.SWF.RespondActivityTaskCanceled",
            "Network.AWS.SWF.RespondActivityTaskCompleted",
            "Network.AWS.SWF.RespondActivityTaskFailed",
            "Network.AWS.SWF.RespondDecisionTaskCompleted",
            "Network.AWS.SWF.SignalWorkflowExecution",
            "Network.AWS.SWF.StartWorkflowExecution",
            "Network.AWS.SWF.TerminateWorkflowExecution",
            "Network.AWS.SWF.Types"
        ],
        "name": "Amazon Simple Workflow Service",
        "version": "2012-01-25",
        "documentation": "\u003cfullname\u003eAmazon Simple Workflow Service\u003c/fullname\u003e \u003cp\u003e The Amazon Simple Workflow Service API Reference is intended for programmers who need detailed information about the Amazon SWF actions and data types. \u003c/p\u003e \u003cp\u003e For an broader overview of the Amazon SWF programming model, please go to the \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/\"\u003eAmazon SWF Developer Guide\u003c/a\u003e. \u003c/p\u003e \u003cp\u003eThis section provides an overview of Amazon SWF actions.\u003c/p\u003e \u003cp\u003e\u003cb\u003eAction Categories\u003c/b\u003e\u003c/p\u003e \u003cp\u003eThe Amazon SWF actions can be grouped into the following major categories.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eActions related to Activities\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eActions related to Deciders\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eActions related to Workflow Executions\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eActions related to Administration\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eActions related to Visibility\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003cb\u003eActions related to Activities\u003c/b\u003e\u003c/p\u003e \u003cp\u003eThe following are actions that are performed by activity workers:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_PollForActivityTask.html\" title=\"PollForActivityTask\"\u003ePollForActivityTask\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_RespondActivityTaskCompleted.html\" title=\"RespondActivityTaskCompleted\"\u003eRespondActivityTaskCompleted\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_RespondActivityTaskFailed.html\" title=\"RespondActivityTaskFailed\"\u003eRespondActivityTaskFailed\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_RespondActivityTaskCanceled.html\" title=\"RespondActivityTaskCanceled\"\u003eRespondActivityTaskCanceled\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_RecordActivityTaskHeartbeat.html\" title=\"RecordActivityTaskHeartbeat\"\u003eRecordActivityTaskHeartbeat\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eActivity workers use the \u003ca href=\"API_PollForActivityTask.html\" title=\"PollForActivityTask\"\u003ePollForActivityTask\u003c/a\u003e to get new activity tasks. After a worker receives an activity task from Amazon SWF, it performs the task and responds using \u003ca href=\"API_RespondActivityTaskCompleted.html\" title=\"RespondActivityTaskCompleted\"\u003eRespondActivityTaskCompleted\u003c/a\u003e if successful or \u003ca href=\"API_RespondActivityTaskFailed.html\" title=\"RespondActivityTaskFailed\"\u003eRespondActivityTaskFailed\u003c/a\u003e if unsuccessful. \u003c/p\u003e \u003cp\u003e\u003cb\u003eActions related to Deciders\u003c/b\u003e\u003c/p\u003e \u003cp\u003eThe following are actions that are performed by deciders:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_PollForDecisionTask.html\" title=\"PollForDecisionTask\"\u003ePollForDecisionTask\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_RespondDecisionTaskCompleted.html\" title=\"RespondDecisionTaskCompleted\"\u003eRespondDecisionTaskCompleted\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eDeciders use \u003ca href=\"API_PollForDecisionTask.html\" title=\"PollForDecisionTask\"\u003ePollForDecisionTask\u003c/a\u003e to get decision tasks. After a decider receives a decision task from Amazon SWF, it examines its workflow execution history and decides what to do next. It calls \u003ca href=\"API_RespondDecisionTaskCompleted.html\" title=\"RespondDecisionTaskCompleted\"\u003eRespondDecisionTaskCompleted\u003c/a\u003eto complete the decision task and provide zero or more next decisions. \u003c/p\u003e \u003cp\u003e\u003cb\u003eActions related to Workflow Executions\u003c/b\u003e\u003c/p\u003e \u003cp\u003eThe following actions operate on a workflow execution:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_RequestCancelWorkflowExecution.html\" title=\"RequestCancelWorkflowExecution\"\u003eRequestCancelWorkflowExecution\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_StartWorkflowExecution.html\" title=\"StartWorkflowExecution\"\u003eStartWorkflowExecution\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_SignalWorkflowExecution.html\" title=\"SignalWorkflowExecution\"\u003eSignalWorkflowExecution\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_TerminateWorkflowExecution.html\" title=\"TerminateWorkflowExecution\"\u003eTerminateWorkflowExecution\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003cb\u003eActions related to Administration\u003c/b\u003e\u003c/p\u003e \u003cp\u003eAlthough you can perform administrative tasks from the Amazon SWF console, you can use the actions in this section to automate functions or build your own administrative tools. \u003c/p\u003e \u003cp\u003e\u003cb\u003eActivity Management\u003c/b\u003e\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_RegisterActivityType.html\" title=\"RegisterActivityType\"\u003eRegisterActivityType\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_DeprecateActivityType.html\" title=\"DeprecateActivityType\"\u003eDeprecateActivityType\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003cb\u003eWorkflow Management\u003c/b\u003e\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_RegisterWorkflowType.html\" title=\"RegisterWorkflowType\"\u003eRegisterWorkflowType\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_DeprecateWorkflowType.html\" title=\"DeprecateWorkflowType\"\u003eDeprecateWorkflowType\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003cb\u003eDomain Management\u003c/b\u003e\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_RegisterDomain.html\" title=\"RegisterDomain\"\u003eRegisterDomain\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_DeprecateDomain.html\" title=\"DeprecateDomain\"\u003eDeprecateDomain\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003cb\u003eWorkflow Execution Management\u003c/b\u003e\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_RequestCancelWorkflowExecution.html\" title=\"RequestCancelWorkflowExecution\"\u003eRequestCancelWorkflowExecution\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_TerminateWorkflowExecution.html\" title=\"TerminateWorkflowExecution\"\u003eTerminateWorkflowExecution\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003cb\u003eVisibility Actions\u003c/b\u003e\u003c/p\u003e \u003cp\u003eAlthough you can perform visibility actions from the Amazon SWF console, you can use the actions in this section to build your own console or administrative tools. \u003c/p\u003e \u003cul\u003e \u003c/ul\u003e \u003cp\u003e\u003cb\u003eActivity Visibility\u003c/b\u003e\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_ListActivityTypes.html\" title=\"ListActivities\"\u003eListActivityTypes\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_DescribeActivityType.html\" title=\"DescribeActivityType\"\u003eDescribeActivity\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003cb\u003eWorkflow Visibility\u003c/b\u003e\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_ListWorkflowTypes.html\" title=\"ListWorkflowTypes\"\u003eListWorkflowTypes\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_DescribeWorkflowType.html\" title=\"DescribeWorkflowType\"\u003eDescribeWorkflowType\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003cb\u003eWorkflow Execution Visibility\u003c/b\u003e\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_DescribeWorkflowExecution.html\" title=\"DescribeWorkflowExecution\"\u003eDescribeWorkflowExecution\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_ListOpenWorkflowExecutions.html\" title=\"ListOpenWorkflowExecutions\"\u003eListOpenWorkflowExecutions\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_ListClosedWorkflowExecutions.html\" title=\"ListClosedWorkflowExecutions\"\u003eListClosedWorkflowExecutions\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_CountOpenWorkflowExecutions.html\" title=\"CountOpenWorkflowExecutions\"\u003eCountOpenWorkflowExecutions\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_CountClosedWorkflowExecutions.html\" title=\"CountClosedWorkflowExecutions\"\u003eCountClosedWorkflowExecutions\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_GetWorkflowExecutionHistory.html\" title=\"GetWorkflowExecutionHistory\"\u003eGetWorkflowExecutionHistory\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003cb\u003eDomain Visibility\u003c/b\u003e\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_ListDomains.html\" title=\"ListDomains\"\u003eListDomains\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_DescribeDomain.html\" title=\"DescribeDomain\"\u003eDescribeDomain\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003cb\u003eTask List Visibility\u003c/b\u003e\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_CountPendingActivityTasks.html\" title=\"CountPendingActivityTasks\"\u003eCountPendingActivityTasks\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"API_CountPendingDecisionTasks.html\" title=\"CountPendingDecisionTasks\"\u003eCountPendingDecisionTasks\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
        "xmlNamespace": "https://swf.amazonaws.com/doc/2012-01-25/",
        "endpoint": "regional",
        "endpointPrefix": "swf",
        "targetPrefix": "SimpleWorkflowService"
    },
    "cabal": {
        "library": "amazonka-swf",
        "modules": [
            "Network.AWS.SWF",
            "Network.AWS.SWF.CountClosedWorkflowExecutions",
            "Network.AWS.SWF.CountOpenWorkflowExecutions",
            "Network.AWS.SWF.CountPendingActivityTasks",
            "Network.AWS.SWF.CountPendingDecisionTasks",
            "Network.AWS.SWF.DeprecateActivityType",
            "Network.AWS.SWF.DeprecateDomain",
            "Network.AWS.SWF.DeprecateWorkflowType",
            "Network.AWS.SWF.DescribeActivityType",
            "Network.AWS.SWF.DescribeDomain",
            "Network.AWS.SWF.DescribeWorkflowExecution",
            "Network.AWS.SWF.DescribeWorkflowType",
            "Network.AWS.SWF.GetWorkflowExecutionHistory",
            "Network.AWS.SWF.ListActivityTypes",
            "Network.AWS.SWF.ListClosedWorkflowExecutions",
            "Network.AWS.SWF.ListDomains",
            "Network.AWS.SWF.ListOpenWorkflowExecutions",
            "Network.AWS.SWF.ListWorkflowTypes",
            "Network.AWS.SWF.PollForActivityTask",
            "Network.AWS.SWF.PollForDecisionTask",
            "Network.AWS.SWF.RecordActivityTaskHeartbeat",
            "Network.AWS.SWF.RegisterActivityType",
            "Network.AWS.SWF.RegisterDomain",
            "Network.AWS.SWF.RegisterWorkflowType",
            "Network.AWS.SWF.RequestCancelWorkflowExecution",
            "Network.AWS.SWF.RespondActivityTaskCanceled",
            "Network.AWS.SWF.RespondActivityTaskCompleted",
            "Network.AWS.SWF.RespondActivityTaskFailed",
            "Network.AWS.SWF.RespondDecisionTaskCompleted",
            "Network.AWS.SWF.SignalWorkflowExecution",
            "Network.AWS.SWF.StartWorkflowExecution",
            "Network.AWS.SWF.TerminateWorkflowExecution",
            "Network.AWS.SWF.Types"
        ],
        "dependencies": [],
        "version": "0.0.0",
        "synopsis": "",
        "description": ""
    },
    "types": {
        "DomainAlreadyExistsFault": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "daefmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "WorkflowExecutionCancelRequestedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecreaexternalWorkflowExecution",
                    "type": "Maybe WorkflowExecution"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecreaexternalInitiatedEventId",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecreacause",
                    "type": "Maybe Text"
                }
            ]
        },
        "LimitExceededFault": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "lefmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "WorkflowExecutionAlreadyStartedFault": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "weasfmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "RequestCancelExternalWorkflowExecutionDecisionAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcewedaworkflowId",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcewedarunId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcewedacontrol",
                    "type": "Maybe Text"
                }
            ]
        },
        "DecisionTaskScheduledEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dtseataskList",
                    "type": "TaskList"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dtseastartToCloseTimeout",
                    "type": "Maybe Text"
                }
            ]
        },
        "WorkflowExecutionCompletedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weceadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecearesult",
                    "type": "Maybe Text"
                }
            ]
        },
        "ExecutionTimeFilter": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "etfoldestDate",
                    "type": "Time RFC822"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "etflatestDate",
                    "type": "Maybe (Time RFC822)"
                }
            ]
        },
        "StartTimerFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "stfeatimerId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "stfeacause",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "stfeadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "RequestCancelExternalWorkflowExecutionInitiatedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rceweieaworkflowId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rceweieadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rceweiearunId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rceweieacontrol",
                    "type": "Maybe Text"
                }
            ]
        },
        "RecordMarkerFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rmfeamarkerName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rmfeacause",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rmfeadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "ActivityTaskScheduledEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atseaactivityType",
                    "type": "ActivityType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atseaactivityId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atseataskList",
                    "type": "TaskList"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atseadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atseainput",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atseacontrol",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atseascheduleToStartTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atseascheduleToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atseastartToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atseaheartbeatTimeout",
                    "type": "Maybe Text"
                }
            ]
        },
        "CloseStatusFilter": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "csfstatus",
                "type": "Text"
            },
            "type": "newtype"
        },
        "ScheduleActivityTaskDecisionAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "satdaactivityType",
                    "type": "ActivityType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "satdaactivityId",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "satdacontrol",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "satdainput",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "satdascheduleToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "satdataskList",
                    "type": "Maybe TaskList"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "satdascheduleToStartTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "satdastartToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "satdaheartbeatTimeout",
                    "type": "Maybe Text"
                }
            ]
        },
        "ActivityTypeConfiguration": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atcdefaultTaskStartToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atcdefaultTaskHeartbeatTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atcdefaultTaskList",
                    "type": "Maybe TaskList"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atcdefaultTaskScheduleToStartTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atcdefaultTaskScheduleToCloseTimeout",
                    "type": "Maybe Text"
                }
            ]
        },
        "ActivityType": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atname",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atversion",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": []
        },
        "WorkflowTypeInfo": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wtiworkflowType",
                    "type": "WorkflowType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wtistatus",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wticreationDate",
                    "type": "Time RFC822"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wtidescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wtideprecationDate",
                    "type": "Maybe (Time RFC822)"
                }
            ]
        },
        "ChildWorkflowExecutionCompletedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cweceaworkflowExecution",
                    "type": "WorkflowExecution"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cweceaworkflowType",
                    "type": "WorkflowType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cweceainitiatedEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cweceastartedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwecearesult",
                    "type": "Maybe Text"
                }
            ]
        },
        "WorkflowExecutionOpenCounts": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "enum",
                "num"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weocopenActivityTasks",
                    "type": "Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weocopenDecisionTasks",
                    "type": "Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weocopenTimers",
                    "type": "Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weocopenChildWorkflowExecutions",
                    "type": "Int"
                }
            ],
            "type": "record",
            "optional": []
        },
        "ScheduleActivityTaskFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "satfeaactivityType",
                    "type": "ActivityType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "satfeaactivityId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "satfeacause",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "satfeadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "MarkerRecordedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "mreamarkerName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "mreadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "mreadetails",
                    "type": "Maybe Text"
                }
            ]
        },
        "SignalExternalWorkflowExecutionDecisionAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sewedaworkflowId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sewedasignalName",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sewedarunId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sewedainput",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sewedacontrol",
                    "type": "Maybe Text"
                }
            ]
        },
        "OperationNotPermittedFault": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "onpfmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "RecordMarkerDecisionAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rmdamarkerName",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rmdadetails",
                    "type": "Maybe Text"
                }
            ]
        },
        "CompleteWorkflowExecutionFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwefeacause",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwefeadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "StartTimerDecisionAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "stdatimerId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "stdastartToFireTimeout",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "stdacontrol",
                    "type": "Maybe Text"
                }
            ]
        },
        "UnknownResourceFault": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "urfmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "DefaultUndefinedFault": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "dufmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "TypeDeprecatedFault": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "tdfmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "RequestCancelExternalWorkflowExecutionFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcewefeaworkflowId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcewefeacause",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcewefeainitiatedEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcewefeadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcewefearunId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcewefeacontrol",
                    "type": "Maybe Text"
                }
            ]
        },
        "ActivityTypeInfo": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atiactivityType",
                    "type": "ActivityType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atistatus",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "aticreationDate",
                    "type": "Time RFC822"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atidescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atideprecationDate",
                    "type": "Maybe (Time RFC822)"
                }
            ]
        },
        "TimerCanceledEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tceatimerId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tceastartedEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tceadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "WorkflowExecutionStartedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weseachildPolicy",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weseataskList",
                    "type": "TaskList"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weseaworkflowType",
                    "type": "WorkflowType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weseatagList",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weseainput",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weseaexecutionStartToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weseataskStartToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weseacontinuedExecutionRunId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weseaparentWorkflowExecution",
                    "type": "Maybe WorkflowExecution"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weseaparentInitiatedEventId",
                    "type": "Maybe Integer"
                }
            ]
        },
        "WorkflowTypeConfiguration": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wtcdefaultTaskStartToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wtcdefaultExecutionStartToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wtcdefaultTaskList",
                    "type": "Maybe TaskList"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wtcdefaultChildPolicy",
                    "type": "Maybe Text"
                }
            ]
        },
        "namespace": "Network.AWS.SWF.Types",
        "WorkflowType": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wtname",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wtversion",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": []
        },
        "ActivityTaskCompletedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atceascheduledEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atceastartedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atcearesult",
                    "type": "Maybe Text"
                }
            ]
        },
        "imports": [],
        "DecisionTaskTimedOutEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dttoeatimeoutType",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dttoeascheduledEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dttoeastartedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "ChildWorkflowExecutionStartedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cweseaworkflowExecution",
                    "type": "WorkflowExecution"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cweseaworkflowType",
                    "type": "WorkflowType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cweseainitiatedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "CancelTimerFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ctfeatimerId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ctfeacause",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ctfeadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "WorkflowExecutionFilter": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "wefworkflowId",
                "type": "Text"
            },
            "type": "newtype"
        },
        "ActivityTaskCanceledEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atcea1scheduledEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atcea1startedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atcea1details",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atcea1latestCancelRequestedEventId",
                    "type": "Maybe Integer"
                }
            ]
        },
        "StartChildWorkflowExecutionDecisionAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwedaworkflowType",
                    "type": "WorkflowType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwedaworkflowId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwedatagList",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwedacontrol",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwedainput",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwedaexecutionStartToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwedataskList",
                    "type": "Maybe TaskList"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwedataskStartToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwedachildPolicy",
                    "type": "Maybe Text"
                }
            ]
        },
        "FailWorkflowExecutionDecisionAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "fwedareason",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "fwedadetails",
                    "type": "Maybe Text"
                }
            ]
        },
        "TypeAlreadyExistsFault": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "taefmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "ActivityTaskTimedOutEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "attoeatimeoutType",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "attoeascheduledEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "attoeastartedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "attoeadetails",
                    "type": "Maybe Text"
                }
            ]
        },
        "RequestCancelActivityTaskFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcatfeaactivityId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcatfeacause",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcatfeadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "CompleteWorkflowExecutionDecisionAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "cwedaresult",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "DecisionTaskStartedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dtseascheduledEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dtseaidentity",
                    "type": "Maybe Text"
                }
            ]
        },
        "ChildWorkflowExecutionTimedOutEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwetoeaworkflowExecution",
                    "type": "WorkflowExecution"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwetoeaworkflowType",
                    "type": "WorkflowType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwetoeatimeoutType",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwetoeainitiatedEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwetoeastartedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "StartChildWorkflowExecutionInitiatedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scweieaworkflowId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scweieaworkflowType",
                    "type": "WorkflowType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scweieataskList",
                    "type": "TaskList"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scweieadecisionTaskCompletedEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scweieachildPolicy",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scweieatagList",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scweieacontrol",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scweieainput",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scweieaexecutionStartToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scweieataskStartToCloseTimeout",
                    "type": "Maybe Text"
                }
            ]
        },
        "CancelWorkflowExecutionFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwefea1cause",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwefea1decisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "WorkflowExecutionTerminatedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weteachildPolicy",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weteareason",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weteadetails",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weteacause",
                    "type": "Maybe Text"
                }
            ]
        },
        "TaskList": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "tlname",
                "type": "Text"
            },
            "type": "newtype"
        },
        "ChildWorkflowExecutionCanceledEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwecea1workflowExecution",
                    "type": "WorkflowExecution"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwecea1workflowType",
                    "type": "WorkflowType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwecea1initiatedEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwecea1startedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwecea1details",
                    "type": "Maybe Text"
                }
            ]
        },
        "WorkflowExecutionInfo": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weiexecution",
                    "type": "WorkflowExecution"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weiworkflowType",
                    "type": "WorkflowType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weistartTimestamp",
                    "type": "Time RFC822"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weiexecutionStatus",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weitagList",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weicloseTimestamp",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weicloseStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weiparent",
                    "type": "Maybe WorkflowExecution"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weicancelRequested",
                    "type": "Maybe Bool"
                }
            ]
        },
        "SignalExternalWorkflowExecutionFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sewefeaworkflowId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sewefeacause",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sewefeainitiatedEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sewefeadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sewefearunId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sewefeacontrol",
                    "type": "Maybe Text"
                }
            ]
        },
        "TagFilter": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "tftag",
                "type": "Text"
            },
            "type": "newtype"
        },
        "ActivityTaskStartedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atseascheduledEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atseaidentity",
                    "type": "Maybe Text"
                }
            ]
        },
        "ActivityTaskCancelRequestedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atcreadecisionTaskCompletedEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atcreaactivityId",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": []
        },
        "WorkflowExecutionTimedOutEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wetoeatimeoutType",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wetoeachildPolicy",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": []
        },
        "ChildWorkflowExecutionTerminatedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cweteaworkflowExecution",
                    "type": "WorkflowExecution"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cweteaworkflowType",
                    "type": "WorkflowType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cweteainitiatedEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cweteastartedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "WorkflowExecutionCanceledEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecea1decisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecea1details",
                    "type": "Maybe Text"
                }
            ]
        },
        "WorkflowExecutionSignaledEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wesea1signalName",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wesea1input",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wesea1externalWorkflowExecution",
                    "type": "Maybe WorkflowExecution"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wesea1externalInitiatedEventId",
                    "type": "Maybe Integer"
                }
            ]
        },
        "TimerStartedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tseatimerId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tseastartToFireTimeout",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tseadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tseacontrol",
                    "type": "Maybe Text"
                }
            ]
        },
        "RequestCancelActivityTaskDecisionAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "rcatdaactivityId",
                "type": "Text"
            },
            "type": "newtype"
        },
        "Decision": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "decdecisionType",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "decscheduleActivityTaskDecisionAttributes",
                    "type": "Maybe ScheduleActivityTaskDecisionAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "decrequestCancelActivityTaskDecisionAttributes",
                    "type": "Maybe RequestCancelActivityTaskDecisionAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "deccompleteWorkflowExecutionDecisionAttributes",
                    "type": "Maybe CompleteWorkflowExecutionDecisionAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "decfailWorkflowExecutionDecisionAttributes",
                    "type": "Maybe FailWorkflowExecutionDecisionAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "deccancelWorkflowExecutionDecisionAttributes",
                    "type": "Maybe CancelWorkflowExecutionDecisionAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "deccontinueAsNewWorkflowExecutionDecisionAttributes",
                    "type": "Maybe ContinueAsNewWorkflowExecutionDecisionAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "decrecordMarkerDecisionAttributes",
                    "type": "Maybe RecordMarkerDecisionAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "decstartTimerDecisionAttributes",
                    "type": "Maybe StartTimerDecisionAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "deccancelTimerDecisionAttributes",
                    "type": "Maybe CancelTimerDecisionAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "decsignalExternalWorkflowExecutionDecisionAttributes",
                    "type": "Maybe SignalExternalWorkflowExecutionDecisionAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "decrequestCancelExternalWorkflowExecutionDecisionAttributes",
                    "type": "Maybe RequestCancelExternalWorkflowExecutionDecisionAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "decstartChildWorkflowExecutionDecisionAttributes",
                    "type": "Maybe StartChildWorkflowExecutionDecisionAttributes"
                }
            ]
        },
        "TimerFiredEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tfeatimerId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tfeastartedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "DomainConfiguration": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "dcworkflowExecutionRetentionPeriodInDays",
                "type": "Text"
            },
            "type": "newtype"
        },
        "ExternalWorkflowExecutionSignaledEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eweseaworkflowExecution",
                    "type": "WorkflowExecution"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eweseainitiatedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "CancelWorkflowExecutionDecisionAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "cwedadetails",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "ActivityTaskFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atfeascheduledEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atfeastartedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atfeareason",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "atfeadetails",
                    "type": "Maybe Text"
                }
            ]
        },
        "FailWorkflowExecutionFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "fwefeacause",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "fwefeadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "StartChildWorkflowExecutionFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwefeaworkflowType",
                    "type": "WorkflowType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwefeacause",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwefeaworkflowId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwefeainitiatedEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwefeadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "scwefeacontrol",
                    "type": "Maybe Text"
                }
            ]
        },
        "DomainDeprecatedFault": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "ddfmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "WorkflowTypeFilter": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wtfname",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wtfversion",
                    "type": "Maybe Text"
                }
            ]
        },
        "DecisionTaskCompletedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dtceascheduledEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dtceastartedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dtceaexecutionContext",
                    "type": "Maybe Text"
                }
            ]
        },
        "ChildWorkflowExecutionFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwefeaworkflowExecution",
                    "type": "WorkflowExecution"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwefeaworkflowType",
                    "type": "WorkflowType"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwefeainitiatedEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwefeastartedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwefeareason",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cwefeadetails",
                    "type": "Maybe Text"
                }
            ]
        },
        "DomainInfo": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "diname",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "distatus",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "didescription",
                    "type": "Maybe Text"
                }
            ]
        },
        "HistoryEvent": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heeventTimestamp",
                    "type": "Time RFC822"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heeventType",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heeventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heworkflowExecutionStartedEventAttributes",
                    "type": "Maybe WorkflowExecutionStartedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heworkflowExecutionCompletedEventAttributes",
                    "type": "Maybe WorkflowExecutionCompletedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hecompleteWorkflowExecutionFailedEventAttributes",
                    "type": "Maybe CompleteWorkflowExecutionFailedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heworkflowExecutionFailedEventAttributes",
                    "type": "Maybe WorkflowExecutionFailedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hefailWorkflowExecutionFailedEventAttributes",
                    "type": "Maybe FailWorkflowExecutionFailedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heworkflowExecutionTimedOutEventAttributes",
                    "type": "Maybe WorkflowExecutionTimedOutEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heworkflowExecutionCanceledEventAttributes",
                    "type": "Maybe WorkflowExecutionCanceledEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hecancelWorkflowExecutionFailedEventAttributes",
                    "type": "Maybe CancelWorkflowExecutionFailedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heworkflowExecutionContinuedAsNewEventAttributes",
                    "type": "Maybe WorkflowExecutionContinuedAsNewEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hecontinueAsNewWorkflowExecutionFailedEventAttributes",
                    "type": "Maybe ContinueAsNewWorkflowExecutionFailedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heworkflowExecutionTerminatedEventAttributes",
                    "type": "Maybe WorkflowExecutionTerminatedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heworkflowExecutionCancelRequestedEventAttributes",
                    "type": "Maybe WorkflowExecutionCancelRequestedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hedecisionTaskScheduledEventAttributes",
                    "type": "Maybe DecisionTaskScheduledEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hedecisionTaskStartedEventAttributes",
                    "type": "Maybe DecisionTaskStartedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hedecisionTaskCompletedEventAttributes",
                    "type": "Maybe DecisionTaskCompletedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hedecisionTaskTimedOutEventAttributes",
                    "type": "Maybe DecisionTaskTimedOutEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heactivityTaskScheduledEventAttributes",
                    "type": "Maybe ActivityTaskScheduledEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heactivityTaskStartedEventAttributes",
                    "type": "Maybe ActivityTaskStartedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heactivityTaskCompletedEventAttributes",
                    "type": "Maybe ActivityTaskCompletedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heactivityTaskFailedEventAttributes",
                    "type": "Maybe ActivityTaskFailedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heactivityTaskTimedOutEventAttributes",
                    "type": "Maybe ActivityTaskTimedOutEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heactivityTaskCanceledEventAttributes",
                    "type": "Maybe ActivityTaskCanceledEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heactivityTaskCancelRequestedEventAttributes",
                    "type": "Maybe ActivityTaskCancelRequestedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heworkflowExecutionSignaledEventAttributes",
                    "type": "Maybe WorkflowExecutionSignaledEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hemarkerRecordedEventAttributes",
                    "type": "Maybe MarkerRecordedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "herecordMarkerFailedEventAttributes",
                    "type": "Maybe RecordMarkerFailedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hetimerStartedEventAttributes",
                    "type": "Maybe TimerStartedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hetimerFiredEventAttributes",
                    "type": "Maybe TimerFiredEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hetimerCanceledEventAttributes",
                    "type": "Maybe TimerCanceledEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hestartChildWorkflowExecutionInitiatedEventAttributes",
                    "type": "Maybe StartChildWorkflowExecutionInitiatedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hechildWorkflowExecutionStartedEventAttributes",
                    "type": "Maybe ChildWorkflowExecutionStartedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hechildWorkflowExecutionCompletedEventAttributes",
                    "type": "Maybe ChildWorkflowExecutionCompletedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hechildWorkflowExecutionFailedEventAttributes",
                    "type": "Maybe ChildWorkflowExecutionFailedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hechildWorkflowExecutionTimedOutEventAttributes",
                    "type": "Maybe ChildWorkflowExecutionTimedOutEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hechildWorkflowExecutionCanceledEventAttributes",
                    "type": "Maybe ChildWorkflowExecutionCanceledEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hechildWorkflowExecutionTerminatedEventAttributes",
                    "type": "Maybe ChildWorkflowExecutionTerminatedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hesignalExternalWorkflowExecutionInitiatedEventAttributes",
                    "type": "Maybe SignalExternalWorkflowExecutionInitiatedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heexternalWorkflowExecutionSignaledEventAttributes",
                    "type": "Maybe ExternalWorkflowExecutionSignaledEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hesignalExternalWorkflowExecutionFailedEventAttributes",
                    "type": "Maybe SignalExternalWorkflowExecutionFailedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "heexternalWorkflowExecutionCancelRequestedEventAttributes",
                    "type": "Maybe ExternalWorkflowExecutionCancelRequestedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "herequestCancelExternalWorkflowExecutionInitiatedEventAttributes",
                    "type": "Maybe RequestCancelExternalWorkflowExecutionInitiatedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "herequestCancelExternalWorkflowExecutionFailedEventAttributes",
                    "type": "Maybe RequestCancelExternalWorkflowExecutionFailedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hescheduleActivityTaskFailedEventAttributes",
                    "type": "Maybe ScheduleActivityTaskFailedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "herequestCancelActivityTaskFailedEventAttributes",
                    "type": "Maybe RequestCancelActivityTaskFailedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hestartTimerFailedEventAttributes",
                    "type": "Maybe StartTimerFailedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hecancelTimerFailedEventAttributes",
                    "type": "Maybe CancelTimerFailedEventAttributes"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hestartChildWorkflowExecutionFailedEventAttributes",
                    "type": "Maybe StartChildWorkflowExecutionFailedEventAttributes"
                }
            ]
        },
        "ContinueAsNewWorkflowExecutionFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "canwefeacause",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "canwefeadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "SignalExternalWorkflowExecutionInitiatedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "seweieaworkflowId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "seweieasignalName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "seweieadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "seweiearunId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "seweieainput",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "seweieacontrol",
                    "type": "Maybe Text"
                }
            ]
        },
        "CancelTimerDecisionAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "ctdatimerId",
                "type": "Text"
            },
            "type": "newtype"
        },
        "WorkflowExecutionFailedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wefeadecisionTaskCompletedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wefeareason",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wefeadetails",
                    "type": "Maybe Text"
                }
            ]
        },
        "WorkflowExecutionConfiguration": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wectaskStartToCloseTimeout",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecexecutionStartToCloseTimeout",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wectaskList",
                    "type": "TaskList"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecchildPolicy",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": []
        },
        "WorkflowExecution": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "weworkflowId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "werunId",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": []
        },
        "ContinueAsNewWorkflowExecutionDecisionAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "canwedatagList",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "canwedainput",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "canwedaexecutionStartToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "canwedataskList",
                    "type": "Maybe TaskList"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "canwedataskStartToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "canwedachildPolicy",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "canwedaworkflowTypeVersion",
                    "type": "Maybe Text"
                }
            ]
        },
        "ExternalWorkflowExecutionCancelRequestedEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ewecreaworkflowExecution",
                    "type": "WorkflowExecution"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ewecreainitiatedEventId",
                    "type": "Integer"
                }
            ],
            "type": "record",
            "optional": []
        },
        "WorkflowExecutionContinuedAsNewEventAttributes": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecaneadecisionTaskCompletedEventId",
                    "type": "Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecaneanewExecutionRunId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecaneataskList",
                    "type": "TaskList"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecaneachildPolicy",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecaneatagList",
                    "type": "List Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecaneaworkflowType",
                    "type": "WorkflowType"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecaneainput",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecaneaexecutionStartToCloseTimeout",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "wecaneataskStartToCloseTimeout",
                    "type": "Maybe Text"
                }
            ]
        }
    },
    "operations": [
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "weiexecutionInfos",
                        "type": "List WorkflowExecutionInfo"
                    }
                ],
                "name": "WorkflowExecutionInfos",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "weinextPageToken",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SWF.ListOpenWorkflowExecutions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "ListOpenWorkflowExecutions",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of open workflow executions in the specified domain that meet the filtering criteria. The results may be split into multiple pages. To retrieve subsequent pages, make the call again using the nextPageToken returned by the initial call. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the following parameters by using a \u003ccode\u003eCondition\u003c/code\u003e element with the appropriate keys. \u003cul\u003e \u003cli\u003e \u003ccode\u003etagFilter.tag\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:tagFilter.tag\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003etypeFilter.name\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:typeFilter.name\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003etypeFilter.version\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:typeFilter.version\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "loweidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "loweistartTimeFilter",
                        "type": "ExecutionTimeFilter"
                    }
                ],
                "name": "ListOpenWorkflowExecutionsInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "loweitypeFilter",
                        "type": "Maybe WorkflowTypeFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "loweitagFilter",
                        "type": "Maybe TagFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "loweinextPageToken",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "loweimaximumPageSize",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "loweireverseOrder",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "loweiexecutionFilter",
                        "type": "Maybe WorkflowExecutionFilter"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.RegisterActivityType",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "RegisterActivityType",
            "method": "post",
            "documentation": "\u003cp\u003e Registers a new \u003ci\u003eactivity type\u003c/i\u003e along with its configuration settings in the specified domain. \u003c/p\u003e \u003cimportant\u003e A \u003ccode\u003eTypeAlreadyExists\u003c/code\u003e fault is returned if the type already exists in the domain. You cannot change any configuration settings of the type after its registration, and it must be registered as a new version. \u003c/important\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the following parameters by using a \u003ccode\u003eCondition\u003c/code\u003e element with the appropriate keys. \u003cul\u003e \u003cli\u003e \u003ccode\u003edefaultTaskList.name\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:defaultTaskList.name\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003ename\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:name\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eversion\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:version\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratiname",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rativersion",
                        "type": "Text"
                    }
                ],
                "name": "RegisterActivityTypeInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratidescription",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratidefaultTaskStartToCloseTimeout",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratidefaultTaskHeartbeatTimeout",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratidefaultTaskList",
                        "type": "Maybe TaskList"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratidefaultTaskScheduleToStartTimeout",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratidefaultTaskScheduleToCloseTimeout",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "atitypeInfos",
                        "type": "List ActivityTypeInfo"
                    }
                ],
                "name": "ActivityTypeInfos",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "atinextPageToken",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SWF.ListActivityTypes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "ListActivityTypes",
            "method": "post",
            "documentation": "\u003cp\u003e Returns information about all activities registered in the specified domain that match the specified name and registration status. The result includes information like creation date, current status of the activity, etc. The results may be split into multiple pages. To retrieve subsequent pages, make the call again using the \u003ccode\u003enextPageToken\u003c/code\u003e returned by the initial call. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "latidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "latiregistrationStatus",
                        "type": "Text"
                    }
                ],
                "name": "ListActivityTypesInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "latiname",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "latinextPageToken",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "latimaximumPageSize",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "latireverseOrder",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "enum"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ptccount",
                        "type": "Int"
                    }
                ],
                "name": "PendingTaskCount",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ptctruncated",
                        "type": "Maybe Bool"
                    }
                ]
            },
            "namespace": "Network.AWS.SWF.CountPendingActivityTasks",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "CountPendingActivityTasks",
            "method": "post",
            "documentation": "\u003cp\u003e Returns the estimated number of activity tasks in the specified task list. The count returned is an approximation and is not guaranteed to be exact. If you specify a task list that no activity task was ever scheduled in then 0 will be returned. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the \u003ccode\u003etaskList.name\u003c/code\u003e parameter by using a \u003cb\u003eCondition\u003c/b\u003e element with the \u003ccode\u003eswf:taskList.name\u003c/code\u003e key to allow the action to access only certain task lists.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cpatidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cpatitaskList",
                        "type": "TaskList"
                    }
                ],
                "name": "CountPendingActivityTasksInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.RegisterWorkflowType",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "RegisterWorkflowType",
            "method": "post",
            "documentation": "\u003cp\u003e Registers a new \u003ci\u003eworkflow type\u003c/i\u003e and its configuration settings in the specified domain. \u003c/p\u003e \u003cp\u003e The retention period for the workflow history is set by the \u003ca\u003eRegisterDomain\u003c/a\u003e action. \u003c/p\u003e \u003cimportant\u003e If the type already exists, then a \u003ccode\u003eTypeAlreadyExists\u003c/code\u003e fault is returned. You cannot change the configuration settings of a workflow type once it is registered and it must be registered as a new version. \u003c/important\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the following parameters by using a \u003ccode\u003eCondition\u003c/code\u003e element with the appropriate keys. \u003cul\u003e \u003cli\u003e \u003ccode\u003edefaultTaskList.name\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:defaultTaskList.name\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003ename\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:name\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eversion\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:version\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rwtidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rwtiname",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rwtiversion",
                        "type": "Text"
                    }
                ],
                "name": "RegisterWorkflowTypeInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rwtidescription",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rwtidefaultTaskStartToCloseTimeout",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rwtidefaultExecutionStartToCloseTimeout",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rwtidefaultTaskList",
                        "type": "Maybe TaskList"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rwtidefaultChildPolicy",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "wtitypeInfos",
                        "type": "List WorkflowTypeInfo"
                    }
                ],
                "name": "WorkflowTypeInfos",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "wtinextPageToken",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SWF.ListWorkflowTypes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "ListWorkflowTypes",
            "method": "post",
            "documentation": "\u003cp\u003e Returns information about workflow types in the specified domain. The results may be split into multiple pages that can be retrieved by making the call repeatedly. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lwtidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lwtiregistrationStatus",
                        "type": "Text"
                    }
                ],
                "name": "ListWorkflowTypesInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lwtiname",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lwtinextPageToken",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lwtimaximumPageSize",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lwtireverseOrder",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.RespondActivityTaskFailed",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "RespondActivityTaskFailed",
            "method": "post",
            "documentation": "\u003cp\u003e Used by workers to tell the service that the \u003ca\u003eActivityTask\u003c/a\u003e identified by the \u003ccode\u003etaskToken\u003c/code\u003e has failed with \u003ccode\u003ereason\u003c/code\u003e (if specified). The \u003ccode\u003ereason\u003c/code\u003e and \u003ccode\u003edetails\u003c/code\u003e appear in the \u003ccode\u003eActivityTaskFailed\u003c/code\u003e event added to the workflow history. \u003c/p\u003e \u003cp\u003e A task is considered open from the time that it is scheduled until it is closed. Therefore a task is reported as open while a worker is processing it. A task is closed after it has been specified in a call to \u003ca\u003eRespondActivityTaskCompleted\u003c/a\u003e, \u003ca\u003eRespondActivityTaskCanceled\u003c/a\u003e, RespondActivityTaskFailed, or the task has \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types\"\u003etimed out\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratfitaskToken",
                        "type": "Text"
                    }
                ],
                "name": "RespondActivityTaskFailedInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratfireason",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratfidetails",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "enum"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "weccount",
                        "type": "Int"
                    }
                ],
                "name": "WorkflowExecutionCount",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "wectruncated",
                        "type": "Maybe Bool"
                    }
                ]
            },
            "namespace": "Network.AWS.SWF.CountOpenWorkflowExecutions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "CountOpenWorkflowExecutions",
            "method": "post",
            "documentation": "\u003cp\u003e Returns the number of open workflow executions within the given domain that meet the specified filtering criteria. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the following parameters by using a \u003ccode\u003eCondition\u003c/code\u003e element with the appropriate keys. \u003cul\u003e \u003cli\u003e \u003ccode\u003etagFilter.tag\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:tagFilter.tag\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003etypeFilter.name\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:typeFilter.name\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003etypeFilter.version\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:typeFilter.version\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "coweidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "coweistartTimeFilter",
                        "type": "ExecutionTimeFilter"
                    }
                ],
                "name": "CountOpenWorkflowExecutionsInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "coweitypeFilter",
                        "type": "Maybe WorkflowTypeFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "coweitagFilter",
                        "type": "Maybe TagFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "coweiexecutionFilter",
                        "type": "Maybe WorkflowExecutionFilter"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "wtdtypeInfo",
                        "type": "WorkflowTypeInfo"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "wtdconfiguration",
                        "type": "WorkflowTypeConfiguration"
                    }
                ],
                "name": "WorkflowTypeDetail",
                "resultWrapper": null,
                "type": "record",
                "optional": []
            },
            "namespace": "Network.AWS.SWF.DescribeWorkflowType",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "DescribeWorkflowType",
            "method": "post",
            "documentation": "\u003cp\u003e Returns information about the specified \u003ci\u003eworkflow type\u003c/i\u003e. This includes configuration settings specified when the type was registered and other information such as creation date, current status, etc. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the following parameters by using a \u003ccode\u003eCondition\u003c/code\u003e element with the appropriate keys. \u003cul\u003e \u003cli\u003e \u003ccode\u003eworkflowType.name\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:workflowType.name\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eworkflowType.version\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:workflowType.version\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dwti1domain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dwti1workflowType",
                        "type": "WorkflowType"
                    }
                ],
                "name": "DescribeWorkflowTypeInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.DeprecateWorkflowType",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "DeprecateWorkflowType",
            "method": "post",
            "documentation": "\u003cp\u003e Deprecates the specified \u003ci\u003eworkflow type\u003c/i\u003e. After a workflow type has been deprecated, you cannot create new executions of that type. Executions that were started before the type was deprecated will continue to run. A deprecated workflow type may still be used when calling visibility actions. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the following parameters by using a \u003ccode\u003eCondition\u003c/code\u003e element with the appropriate keys. \u003cul\u003e \u003cli\u003e \u003ccode\u003eworkflowType.name\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:workflowType.name\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eworkflowType.version\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:workflowType.version\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dwtidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dwtiworkflowType",
                        "type": "WorkflowType"
                    }
                ],
                "name": "DeprecateWorkflowTypeInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.RequestCancelWorkflowExecution",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "RequestCancelWorkflowExecution",
            "method": "post",
            "documentation": "\u003cp\u003e Records a \u003ccode\u003eWorkflowExecutionCancelRequested\u003c/code\u003e event in the currently running workflow execution identified by the given domain, workflowId, and runId. This logically requests the cancellation of the workflow execution as a whole. It is up to the decider to take appropriate actions when it receives an execution history with this event. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rcweidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rcweiworkflowId",
                        "type": "Text"
                    }
                ],
                "name": "RequestCancelWorkflowExecutionInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rcweirunId",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.RegisterDomain",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "RegisterDomain",
            "method": "post",
            "documentation": "\u003cp\u003e Registers a new domain. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eYou cannot use an IAM policy to control domain access for this action. The name of the domain being registered is available as the resource of this action.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e \u003cp\u003e\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdiname",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdiworkflowExecutionRetentionPeriodInDays",
                        "type": "Text"
                    }
                ],
                "name": "RegisterDomainInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdidescription",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.RespondDecisionTaskCompleted",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "RespondDecisionTaskCompleted",
            "method": "post",
            "documentation": "\u003cp\u003e Used by deciders to tell the service that the \u003ca\u003eDecisionTask\u003c/a\u003e identified by the \u003ccode\u003etaskToken\u003c/code\u003e has successfully completed. The \u003ccode\u003edecisions\u003c/code\u003e argument specifies the list of decisions made while processing the task. \u003c/p\u003e \u003cp\u003e A \u003ccode\u003eDecisionTaskCompleted\u003c/code\u003e event is added to the workflow history. The \u003ccode\u003eexecutionContext\u003c/code\u003e specified is attached to the event in the workflow execution history. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eIf an IAM policy grants permission to use \u003ccode\u003eRespondDecisionTaskCompleted\u003c/code\u003e, it can express permissions for the list of decisions in the \u003ccode\u003edecisions\u003c/code\u003e parameter. Each of the decisions has one or more parameters, much like a regular API call. To allow for policies to be as readable as possible, you can express permissions on decisions as if they were actual API calls, including applying conditions to some parameters. For more information, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdtcitaskToken",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdtcidecisions",
                        "type": "List Decision"
                    }
                ],
                "name": "RespondDecisionTaskCompletedInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdtciexecutionContext",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "attaskToken",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "atactivityId",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "atstartedEventId",
                        "type": "Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "atworkflowExecution",
                        "type": "WorkflowExecution"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "atactivityType",
                        "type": "ActivityType"
                    }
                ],
                "name": "ActivityTask",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "atinput",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SWF.PollForActivityTask",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "PollForActivityTask",
            "method": "post",
            "documentation": "\u003cp\u003e Used by workers to get an \u003ca\u003eActivityTask\u003c/a\u003e from the specified activity \u003ccode\u003etaskList\u003c/code\u003e. This initiates a long poll, where the service holds the HTTP connection open and responds as soon as a task becomes available. The maximum time the service holds on to the request before responding is 60 seconds. If no task is available within 60 seconds, the poll will return an empty result. An empty result, in this context, means that an ActivityTask is returned, but that the value of taskToken is an empty string. If a task is returned, the worker should use its type to identify and process it correctly. \u003c/p\u003e \u003cimportant\u003e Workers should set their client side socket timeout to at least 70 seconds (10 seconds higher than the maximum time service may hold the poll request). \u003c/important\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the \u003ccode\u003etaskList.name\u003c/code\u003e parameter by using a \u003cb\u003eCondition\u003c/b\u003e element with the \u003ccode\u003eswf:taskList.name\u003c/code\u003e key to allow the action to access only certain task lists.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "pfatidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "pfatitaskList",
                        "type": "TaskList"
                    }
                ],
                "name": "PollForActivityTaskInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "pfatiidentity",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.RespondActivityTaskCompleted",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "RespondActivityTaskCompleted",
            "method": "post",
            "documentation": "\u003cp\u003e Used by workers to tell the service that the \u003ca\u003eActivityTask\u003c/a\u003e identified by the \u003ccode\u003etaskToken\u003c/code\u003e completed successfully with a \u003ccode\u003eresult\u003c/code\u003e (if provided). The \u003ccode\u003eresult\u003c/code\u003e appears in the \u003ccode\u003eActivityTaskCompleted\u003c/code\u003e event in the workflow history. \u003c/p\u003e \u003cimportant\u003e If the requested task does not complete successfully, use \u003ca\u003eRespondActivityTaskFailed\u003c/a\u003e instead. If the worker finds that the task is canceled through the \u003ccode\u003ecanceled\u003c/code\u003e flag returned by \u003ca\u003eRecordActivityTaskHeartbeat\u003c/a\u003e, it should cancel the task, clean up and then call \u003ca\u003eRespondActivityTaskCanceled\u003c/a\u003e. \u003c/important\u003e \u003cp\u003e A task is considered open from the time that it is scheduled until it is closed. Therefore a task is reported as open while a worker is processing it. A task is closed after it has been specified in a call to RespondActivityTaskCompleted, \u003ca\u003eRespondActivityTaskCanceled\u003c/a\u003e, \u003ca\u003eRespondActivityTaskFailed\u003c/a\u003e, or the task has \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types\"\u003etimed out\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratcitaskToken",
                        "type": "Text"
                    }
                ],
                "name": "RespondActivityTaskCompletedInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratciresult",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "wedexecutionInfo",
                        "type": "WorkflowExecutionInfo"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "wedexecutionConfiguration",
                        "type": "WorkflowExecutionConfiguration"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "wedopenCounts",
                        "type": "WorkflowExecutionOpenCounts"
                    }
                ],
                "name": "WorkflowExecutionDetail",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "wedlatestActivityTaskTimestamp",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "wedlatestExecutionContext",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SWF.DescribeWorkflowExecution",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "DescribeWorkflowExecution",
            "method": "post",
            "documentation": "\u003cp\u003e Returns information about the specified workflow execution including its type and some statistics. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dweidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dweiexecution",
                        "type": "WorkflowExecution"
                    }
                ],
                "name": "DescribeWorkflowExecutionInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.SignalWorkflowExecution",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "SignalWorkflowExecution",
            "method": "post",
            "documentation": "\u003cp\u003e Records a \u003ccode\u003eWorkflowExecutionSignaled\u003c/code\u003e event in the workflow execution history and creates a decision task for the workflow execution identified by the given domain, workflowId and runId. The event is recorded with the specified user defined signalName and input (if provided). \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "swei1domain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "swei1workflowId",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "swei1signalName",
                        "type": "Text"
                    }
                ],
                "name": "SignalWorkflowExecutionInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "swei1runId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "swei1input",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "PendingTaskCount",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.CountPendingDecisionTasks",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "CountPendingDecisionTasks",
            "method": "post",
            "documentation": "\u003cp\u003e Returns the estimated number of decision tasks in the specified task list. The count returned is an approximation and is not guaranteed to be exact. If you specify a task list that no decision task was ever scheduled in then 0 will be returned. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the \u003ccode\u003etaskList.name\u003c/code\u003e parameter by using a \u003cb\u003eCondition\u003c/b\u003e element with the \u003ccode\u003eswf:taskList.name\u003c/code\u003e key to allow the action to access only certain task lists.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cpdtidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cpdtitaskList",
                        "type": "TaskList"
                    }
                ],
                "name": "CountPendingDecisionTasksInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "WorkflowExecutionInfos",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.ListClosedWorkflowExecutions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "ListClosedWorkflowExecutions",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of closed workflow executions in the specified domain that meet the filtering criteria. The results may be split into multiple pages. To retrieve subsequent pages, make the call again using the nextPageToken returned by the initial call. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the following parameters by using a \u003ccode\u003eCondition\u003c/code\u003e element with the appropriate keys. \u003cul\u003e \u003cli\u003e \u003ccode\u003etagFilter.tag\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:tagFilter.tag\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003etypeFilter.name\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:typeFilter.name\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003etypeFilter.version\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:typeFilter.version\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lcweidomain",
                        "type": "Text"
                    }
                ],
                "name": "ListClosedWorkflowExecutionsInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lcweistartTimeFilter",
                        "type": "Maybe ExecutionTimeFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lcweicloseTimeFilter",
                        "type": "Maybe ExecutionTimeFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lcweiexecutionFilter",
                        "type": "Maybe WorkflowExecutionFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lcweicloseStatusFilter",
                        "type": "Maybe CloseStatusFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lcweitypeFilter",
                        "type": "Maybe WorkflowTypeFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lcweitagFilter",
                        "type": "Maybe TagFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lcweinextPageToken",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lcweimaximumPageSize",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lcweireverseOrder",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "enum"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "atscancelRequested",
                    "type": "Bool"
                },
                "wrapper": false,
                "name": "ActivityTaskStatus",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.SWF.RecordActivityTaskHeartbeat",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "RecordActivityTaskHeartbeat",
            "method": "post",
            "documentation": "\u003cp\u003e Used by activity workers to report to the service that the \u003ca\u003eActivityTask\u003c/a\u003e represented by the specified \u003ccode\u003etaskToken\u003c/code\u003e is still making progress. The worker can also (optionally) specify details of the progress, for example percent complete, using the \u003ccode\u003edetails\u003c/code\u003e parameter. This action can also be used by the worker as a mechanism to check if cancellation is being requested for the activity task. If a cancellation is being attempted for the specified task, then the boolean \u003ccode\u003ecancelRequested\u003c/code\u003e flag returned by the service is set to \u003ccode\u003etrue\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e This action resets the \u003ccode\u003etaskHeartbeatTimeout\u003c/code\u003e clock. The \u003ccode\u003etaskHeartbeatTimeout\u003c/code\u003e is specified in \u003ca\u003eRegisterActivityType\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e This action does not in itself create an event in the workflow execution history. However, if the task times out, the workflow execution history will contain a \u003ccode\u003eActivityTaskTimedOut\u003c/code\u003e event that contains the information from the last heartbeat generated by the activity worker. \u003c/p\u003e \u003cimportant\u003e If the \u003ccode\u003ecancelRequested\u003c/code\u003e flag returns \u003ccode\u003etrue\u003c/code\u003e, a cancellation is being attempted. If the worker can cancel the activity, it should respond with \u003ca\u003eRespondActivityTaskCanceled\u003c/a\u003e. Otherwise, it should ignore the cancellation request. \u003c/important\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rathitaskToken",
                        "type": "Text"
                    }
                ],
                "name": "RecordActivityTaskHeartbeatInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rathidetails",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dddomainInfo",
                        "type": "DomainInfo"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddconfiguration",
                        "type": "DomainConfiguration"
                    }
                ],
                "name": "DomainDetail",
                "resultWrapper": null,
                "type": "record",
                "optional": []
            },
            "namespace": "Network.AWS.SWF.DescribeDomain",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "DescribeDomain",
            "method": "post",
            "documentation": "\u003cp\u003e Returns information about the specified domain including description and status. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddi1name",
                    "type": "Text"
                },
                "name": "DescribeDomainInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "hisevents",
                        "type": "List HistoryEvent"
                    }
                ],
                "name": "History",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "hisnextPageToken",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SWF.GetWorkflowExecutionHistory",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "GetWorkflowExecutionHistory",
            "method": "post",
            "documentation": "\u003cp\u003e Returns the history of the specified workflow execution. The results may be split into multiple pages. To retrieve subsequent pages, make the call again using the \u003ccode\u003enextPageToken\u003c/code\u003e returned by the initial call. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gwehidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gwehiexecution",
                        "type": "WorkflowExecution"
                    }
                ],
                "name": "GetWorkflowExecutionHistoryInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gwehinextPageToken",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gwehimaximumPageSize",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gwehireverseOrder",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.DeprecateDomain",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "DeprecateDomain",
            "method": "post",
            "documentation": "\u003cp\u003e Deprecates the specified domain. After a domain has been deprecated it cannot be used to create new workflow executions or register new types. However, you can still use visibility actions on this domain. Deprecating a domain also deprecates all activity and workflow types registered in the domain. Executions that were started before the domain was deprecated will continue to run. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddiname",
                    "type": "Text"
                },
                "name": "DeprecateDomainInput",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.TerminateWorkflowExecution",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "TerminateWorkflowExecution",
            "method": "post",
            "documentation": "\u003cp\u003e Records a \u003ccode\u003eWorkflowExecutionTerminated\u003c/code\u003e event and forces closure of the workflow execution identified by the given domain, runId, and workflowId. The child policy, registered with the workflow type or specified when starting this execution, is applied to any open child workflow executions of this workflow execution. \u003c/p\u003e \u003cimportant\u003e If the identified workflow execution was in progress, it is terminated immediately. \u003c/important\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tweidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tweiworkflowId",
                        "type": "Text"
                    }
                ],
                "name": "TerminateWorkflowExecutionInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tweirunId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tweireason",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tweidetails",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tweichildPolicy",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "atdtypeInfo",
                        "type": "ActivityTypeInfo"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "atdconfiguration",
                        "type": "ActivityTypeConfiguration"
                    }
                ],
                "name": "ActivityTypeDetail",
                "resultWrapper": null,
                "type": "record",
                "optional": []
            },
            "namespace": "Network.AWS.SWF.DescribeActivityType",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "DescribeActivityType",
            "method": "post",
            "documentation": "\u003cp\u003e Returns information about the specified activity type. This includes configuration settings provided at registration time as well as other general information about the type. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the following parameters by using a \u003ccode\u003eCondition\u003c/code\u003e element with the appropriate keys. \u003cul\u003e \u003cli\u003e \u003ccode\u003eactivityType.name\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:activityType.name\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eactivityType.version\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:activityType.version\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "datidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "datiactivityType",
                        "type": "ActivityType"
                    }
                ],
                "name": "DescribeActivityTypeInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.DeprecateActivityType",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "DeprecateActivityType",
            "method": "post",
            "documentation": "\u003cp\u003e Deprecates the specified \u003ci\u003eactivity type\u003c/i\u003e. After an activity type has been deprecated, you cannot create new tasks of that activity type. Tasks of this type that were scheduled before the type was deprecated will continue to run. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the following parameters by using a \u003ccode\u003eCondition\u003c/code\u003e element with the appropriate keys. \u003cul\u003e \u003cli\u003e \u003ccode\u003eactivityType.name\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:activityType.name\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eactivityType.version\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:activityType.version\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dati1domain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dati1activityType",
                        "type": "ActivityType"
                    }
                ],
                "name": "DeprecateActivityTypeInput",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "WorkflowExecutionCount",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.CountClosedWorkflowExecutions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "CountClosedWorkflowExecutions",
            "method": "post",
            "documentation": "\u003cp\u003e Returns the number of closed workflow executions within the given domain that meet the specified filtering criteria. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the following parameters by using a \u003ccode\u003eCondition\u003c/code\u003e element with the appropriate keys. \u003cul\u003e \u003cli\u003e \u003ccode\u003etagFilter.tag\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:tagFilter.tag\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003etypeFilter.name\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:typeFilter.name\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003etypeFilter.version\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:typeFilter.version\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccweidomain",
                        "type": "Text"
                    }
                ],
                "name": "CountClosedWorkflowExecutionsInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccweistartTimeFilter",
                        "type": "Maybe ExecutionTimeFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccweicloseTimeFilter",
                        "type": "Maybe ExecutionTimeFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccweiexecutionFilter",
                        "type": "Maybe WorkflowExecutionFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccweitypeFilter",
                        "type": "Maybe WorkflowTypeFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccweitagFilter",
                        "type": "Maybe TagFilter"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccweicloseStatusFilter",
                        "type": "Maybe CloseStatusFilter"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.SWF.RespondActivityTaskCanceled",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "RespondActivityTaskCanceled",
            "method": "post",
            "documentation": "\u003cp\u003e Used by workers to tell the service that the \u003ca\u003eActivityTask\u003c/a\u003e identified by the \u003ccode\u003etaskToken\u003c/code\u003e was successfully canceled. Additional \u003ccode\u003edetails\u003c/code\u003e can be optionally provided using the \u003ccode\u003edetails\u003c/code\u003e argument. \u003c/p\u003e \u003cp\u003e These \u003ccode\u003edetails\u003c/code\u003e (if provided) appear in the \u003ccode\u003eActivityTaskCanceled\u003c/code\u003e event added to the workflow history. \u003c/p\u003e \u003cimportant\u003e Only use this operation if the \u003ccode\u003ecanceled\u003c/code\u003e flag of a \u003ca\u003eRecordActivityTaskHeartbeat\u003c/a\u003e request returns \u003ccode\u003etrue\u003c/code\u003e and if the activity can be safely undone or abandoned. \u003c/important\u003e \u003cp\u003e A task is considered open from the time that it is scheduled until it is closed. Therefore a task is reported as open while a worker is processing it. A task is closed after it has been specified in a call to \u003ca\u003eRespondActivityTaskCompleted\u003c/a\u003e, RespondActivityTaskCanceled, \u003ca\u003eRespondActivityTaskFailed\u003c/a\u003e, or the task has \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types\"\u003etimed out\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratci1taskToken",
                        "type": "Text"
                    }
                ],
                "name": "RespondActivityTaskCanceledInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ratci1details",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "runrunId",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "Run",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.SWF.StartWorkflowExecution",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "StartWorkflowExecution",
            "method": "post",
            "documentation": "\u003cp\u003e Starts an execution of the workflow type in the specified domain using the provided \u003ccode\u003eworkflowId\u003c/code\u003e and input data. \u003c/p\u003e \u003cp\u003eThis action returns the newly started workflow execution.\u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the following parameters by using a \u003ccode\u003eCondition\u003c/code\u003e element with the appropriate keys. \u003cul\u003e \u003cli\u003e \u003ccode\u003etagList.member.0\u003c/code\u003e: The key is \u003ccode\u003eswf:tagList.member.0\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003etagList.member.1\u003c/code\u003e: The key is \u003ccode\u003eswf:tagList.member.1\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003etagList.member.2\u003c/code\u003e: The key is \u003ccode\u003eswf:tagList.member.2\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003etagList.member.3\u003c/code\u003e: The key is \u003ccode\u003eswf:tagList.member.3\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003etagList.member.4\u003c/code\u003e: The key is \u003ccode\u003eswf:tagList.member.4\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003etaskList\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:taskList.name\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003ename\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:workflowType.name\u003c/code\u003e.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eversion\u003c/code\u003e: String constraint. The key is \u003ccode\u003eswf:workflowType.version\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sweidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sweiworkflowId",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sweiworkflowType",
                        "type": "WorkflowType"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sweitagList",
                        "type": "List Text"
                    }
                ],
                "name": "StartWorkflowExecutionInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sweitaskList",
                        "type": "Maybe TaskList"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sweiinput",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sweiexecutionStartToCloseTimeout",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sweitaskStartToCloseTimeout",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sweichildPolicy",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dttaskToken",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtstartedEventId",
                        "type": "Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtworkflowExecution",
                        "type": "WorkflowExecution"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtworkflowType",
                        "type": "WorkflowType"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtevents",
                        "type": "List HistoryEvent"
                    }
                ],
                "name": "DecisionTask",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtnextPageToken",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dtpreviousStartedEventId",
                        "type": "Maybe Integer"
                    }
                ]
            },
            "namespace": "Network.AWS.SWF.PollForDecisionTask",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "PollForDecisionTask",
            "method": "post",
            "documentation": "\u003cp\u003e Used by deciders to get a \u003ca\u003eDecisionTask\u003c/a\u003e from the specified decision \u003ccode\u003etaskList\u003c/code\u003e. A decision task may be returned for any open workflow execution that is using the specified task list. The task includes a paginated view of the history of the workflow execution. The decider should use the workflow type and the history to determine how to properly handle the task. \u003c/p\u003e \u003cp\u003e This action initiates a long poll, where the service holds the HTTP connection open and responds as soon a task becomes available. If no decision task is available in the specified task list before the timeout of 60 seconds expires, an empty result is returned. An empty result, in this context, means that a DecisionTask is returned, but that the value of taskToken is an empty string. \u003c/p\u003e \u003cimportant\u003e Deciders should set their client side socket timeout to at least 70 seconds (10 seconds higher than the timeout). \u003c/important\u003e \u003cimportant\u003e Because the number of workflow history events for a single workflow execution might be very large, the result returned might be split up across a number of pages. To retrieve subsequent pages, make additional calls to \u003ccode\u003ePollForDecisionTask\u003c/code\u003e using the \u003ccode\u003enextPageToken\u003c/code\u003e returned by the initial call. Note that you do \u003cb\u003enot\u003c/b\u003e call \u003ccode\u003eGetWorkflowExecutionHistory\u003c/code\u003e with this \u003ccode\u003enextPageToken\u003c/code\u003e. Instead, call \u003ccode\u003ePollForDecisionTask\u003c/code\u003e again. \u003c/important\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eConstrain the \u003ccode\u003etaskList.name\u003c/code\u003e parameter by using a \u003cb\u003eCondition\u003c/b\u003e element with the \u003ccode\u003eswf:taskList.name\u003c/code\u003e key to allow the action to access only certain task lists.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "pfdtidomain",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "pfdtitaskList",
                        "type": "TaskList"
                    }
                ],
                "name": "PollForDecisionTaskInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "pfdtiidentity",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "pfdtinextPageToken",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "pfdtimaximumPageSize",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "pfdtireverseOrder",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "didomainInfos",
                        "type": "List DomainInfo"
                    }
                ],
                "name": "DomainInfos",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dinextPageToken",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.SWF.ListDomains",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.SWF.Types"
            ],
            "name": "ListDomains",
            "method": "post",
            "documentation": "\u003cp\u003e Returns the list of domains registered in the account. The results may be split into multiple pages. To retrieve subsequent pages, make the call again using the nextPageToken returned by the initial call. \u003c/p\u003e \u003cp\u003e\u003cb\u003eAccess Control\u003c/b\u003e\u003c/p\u003e \u003cp\u003eYou can use IAM policies to control this action's access to Amazon SWF resources as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eUse a \u003ccode\u003eResource\u003c/code\u003e element with the domain name to limit the action to only specified domains. The element must be set to \u003ccode\u003earn:aws:swf::AccountID:domain/*\"\u003c/code\u003e, where \"AccountID\" is the account ID, with no dashes.\u003c/li\u003e \u003cli\u003eUse an \u003ccode\u003eAction\u003c/code\u003e element to allow or deny permission to call this action.\u003c/li\u003e \u003cli\u003eYou cannot use an IAM policy to constrain this action's parameters.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing \u003ccode\u003eOperationNotPermitted\u003c/code\u003e. For details and example IAM policies, see \u003ca href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\u003eUsing IAM to Manage Access to Amazon SWF Workflows\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ldiregistrationStatus",
                        "type": "Text"
                    }
                ],
                "name": "ListDomainsInput",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ldinextPageToken",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ldimaximumPageSize",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ldireverseOrder",
                        "type": "Maybe Bool"
                    }
                ]
            }
        }
    ]
}