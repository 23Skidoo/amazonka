{
    "service": {
        "signature": "V3",
        "checksum": "sha256",
        "abbrev": "Route53",
        "error": "RESTError",
        "namespace": "Network.AWS.Route53",
        "protocol": "xml",
        "imports": [
            "Network.AWS.Route53.AssociateVPCWithHostedZone",
            "Network.AWS.Route53.ChangeResourceRecordSets",
            "Network.AWS.Route53.ChangeTagsForResource",
            "Network.AWS.Route53.CreateHealthCheck",
            "Network.AWS.Route53.CreateHostedZone",
            "Network.AWS.Route53.CreateReusableDelegationSet",
            "Network.AWS.Route53.DeleteHealthCheck",
            "Network.AWS.Route53.DeleteHostedZone",
            "Network.AWS.Route53.DeleteReusableDelegationSet",
            "Network.AWS.Route53.DisassociateVPCFromHostedZone",
            "Network.AWS.Route53.GetChange",
            "Network.AWS.Route53.GetCheckerIpRanges",
            "Network.AWS.Route53.GetGeoLocation",
            "Network.AWS.Route53.GetHealthCheck",
            "Network.AWS.Route53.GetHealthCheckCount",
            "Network.AWS.Route53.GetHealthCheckLastFailureReason",
            "Network.AWS.Route53.GetHealthCheckStatus",
            "Network.AWS.Route53.GetHostedZone",
            "Network.AWS.Route53.GetReusableDelegationSet",
            "Network.AWS.Route53.ListGeoLocations",
            "Network.AWS.Route53.ListHealthChecks",
            "Network.AWS.Route53.ListHostedZones",
            "Network.AWS.Route53.ListResourceRecordSets",
            "Network.AWS.Route53.ListReusableDelegationSets",
            "Network.AWS.Route53.ListTagsForResource",
            "Network.AWS.Route53.ListTagsForResources",
            "Network.AWS.Route53.Types",
            "Network.AWS.Route53.UpdateHealthCheck"
        ],
        "name": "Amazon Route 53",
        "version": "2013-04-01",
        "documentation": "Amazon Route 53 is a scalable Domain Name System (DNS) web service. It provides secure and reliable routing to your infrastructure that uses Amazon Web Services (AWS) products, such as Amazon Elastic Compute Cloud (Amazon EC2), Elastic Load Balancing, or Amazon Simple Storage Service (Amazon S3). You can also use Amazon Route 53 to route users to your infrastructure outside of AWS.",
        "xmlNamespace": "https://route53.amazonaws.com/doc/2013-04-01/",
        "endpoint": "Global",
        "endpointPrefix": "route53"
    },
    "cabal": {
        "other": [],
        "library": "amazonka-route53",
        "exposed": [
            "Network.AWS.Route53",
            "Network.AWS.Route53.AssociateVPCWithHostedZone",
            "Network.AWS.Route53.ChangeResourceRecordSets",
            "Network.AWS.Route53.ChangeTagsForResource",
            "Network.AWS.Route53.CreateHealthCheck",
            "Network.AWS.Route53.CreateHostedZone",
            "Network.AWS.Route53.CreateReusableDelegationSet",
            "Network.AWS.Route53.DeleteHealthCheck",
            "Network.AWS.Route53.DeleteHostedZone",
            "Network.AWS.Route53.DeleteReusableDelegationSet",
            "Network.AWS.Route53.DisassociateVPCFromHostedZone",
            "Network.AWS.Route53.GetChange",
            "Network.AWS.Route53.GetCheckerIpRanges",
            "Network.AWS.Route53.GetGeoLocation",
            "Network.AWS.Route53.GetHealthCheck",
            "Network.AWS.Route53.GetHealthCheckCount",
            "Network.AWS.Route53.GetHealthCheckLastFailureReason",
            "Network.AWS.Route53.GetHealthCheckStatus",
            "Network.AWS.Route53.GetHostedZone",
            "Network.AWS.Route53.GetReusableDelegationSet",
            "Network.AWS.Route53.ListGeoLocations",
            "Network.AWS.Route53.ListHealthChecks",
            "Network.AWS.Route53.ListHostedZones",
            "Network.AWS.Route53.ListResourceRecordSets",
            "Network.AWS.Route53.ListReusableDelegationSets",
            "Network.AWS.Route53.ListTagsForResource",
            "Network.AWS.Route53.ListTagsForResources",
            "Network.AWS.Route53.Types",
            "Network.AWS.Route53.UpdateHealthCheck"
        ],
        "dependencies": [],
        "name": "Amazon Route 53",
        "version": "0.0.0",
        "description": "Amazon Route 53 is a scalable Domain Name System (DNS) web service. It provides secure and reliable routing to your infrastructure that uses Amazon Web Services (AWS) products, such as Amazon Elastic Compute Cloud (Amazon EC2), Elastic Load Balancing, or Amazon Simple Storage Service (Amazon S3). You can also use Amazon Route 53 to route users to your infrastructure outside of AWS."
    },
    "types": {
        "service": {
            "signature": "V3",
            "checksum": "sha256",
            "abbrev": "Route53",
            "error": "RESTError",
            "namespace": "Network.AWS.Route53",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Route53.AssociateVPCWithHostedZone",
                "Network.AWS.Route53.ChangeResourceRecordSets",
                "Network.AWS.Route53.ChangeTagsForResource",
                "Network.AWS.Route53.CreateHealthCheck",
                "Network.AWS.Route53.CreateHostedZone",
                "Network.AWS.Route53.CreateReusableDelegationSet",
                "Network.AWS.Route53.DeleteHealthCheck",
                "Network.AWS.Route53.DeleteHostedZone",
                "Network.AWS.Route53.DeleteReusableDelegationSet",
                "Network.AWS.Route53.DisassociateVPCFromHostedZone",
                "Network.AWS.Route53.GetChange",
                "Network.AWS.Route53.GetCheckerIpRanges",
                "Network.AWS.Route53.GetGeoLocation",
                "Network.AWS.Route53.GetHealthCheck",
                "Network.AWS.Route53.GetHealthCheckCount",
                "Network.AWS.Route53.GetHealthCheckLastFailureReason",
                "Network.AWS.Route53.GetHealthCheckStatus",
                "Network.AWS.Route53.GetHostedZone",
                "Network.AWS.Route53.GetReusableDelegationSet",
                "Network.AWS.Route53.ListGeoLocations",
                "Network.AWS.Route53.ListHealthChecks",
                "Network.AWS.Route53.ListHostedZones",
                "Network.AWS.Route53.ListResourceRecordSets",
                "Network.AWS.Route53.ListReusableDelegationSets",
                "Network.AWS.Route53.ListTagsForResource",
                "Network.AWS.Route53.ListTagsForResources",
                "Network.AWS.Route53.Types",
                "Network.AWS.Route53.UpdateHealthCheck"
            ],
            "name": "Amazon Route 53",
            "version": "2013-04-01",
            "documentation": "Amazon Route 53 is a scalable Domain Name System (DNS) web service. It provides secure and reliable routing to your infrastructure that uses Amazon Web Services (AWS) products, such as Amazon Elastic Compute Cloud (Amazon EC2), Elastic Load Balancing, or Amazon Simple Storage Service (Amazon S3). You can also use Amazon Route 53 to route users to your infrastructure outside of AWS.",
            "xmlNamespace": "https://route53.amazonaws.com/doc/2013-04-01/",
            "endpoint": "Global",
            "endpointPrefix": "route53"
        },
        "namespace": "Network.AWS.Route53.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 23,
                "ctor": "aliasTarget",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "atHostedZoneId",
                    "name": "_atHostedZoneId",
                    "shape": "ResourceId",
                    "locationName": "HostedZoneId",
                    "documentation": "\u003cp\u003e\u003ci\u003eAlias resource record sets only:\u003c/i\u003e The value of the hosted zone ID for the AWS resource.\u003c/p\u003e \u003cp\u003eFor more information and an example, see \u003ca href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingAliasRRSets.html\"\u003eCreating Alias Resource Record Sets\u003c/a\u003e in the \u003ci\u003eAmazon Route 53 Developer Guide\u003c/i\u003e\u003c/p\u003e.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "atHostedZoneId",
                        "name": "_atHostedZoneId",
                        "shape": "ResourceId",
                        "locationName": "HostedZoneId",
                        "documentation": "\u003cp\u003e\u003ci\u003eAlias resource record sets only:\u003c/i\u003e The value of the hosted zone ID for the AWS resource.\u003c/p\u003e \u003cp\u003eFor more information and an example, see \u003ca href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingAliasRRSets.html\"\u003eCreating Alias Resource Record Sets\u003c/a\u003e in the \u003ci\u003eAmazon Route 53 Developer Guide\u003c/i\u003e\u003c/p\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "atDNSName",
                        "name": "_atDNSName",
                        "shape": "DNSName",
                        "locationName": "DNSName",
                        "documentation": "\u003cp\u003e\u003ci\u003eAlias resource record sets only:\u003c/i\u003e The external DNS name associated with the AWS Resource.\u003c/p\u003e \u003cp\u003eFor more information and an example, see \u003ca href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingAliasRRSets.html\"\u003eCreating Alias Resource Record Sets\u003c/a\u003e in the \u003ci\u003eAmazon Route 53 Developer Guide\u003c/i\u003e\u003c/p\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "atEvaluateTargetHealth",
                        "name": "_atEvaluateTargetHealth",
                        "shape": "AliasHealthEnabled",
                        "locationName": "EvaluateTargetHealth",
                        "documentation": "\u003cp\u003e\u003ci\u003eAlias resource record sets only:\u003c/i\u003e A boolean value that indicates whether this Resource Record Set should respect the health status of any health checks associated with the ALIAS target record which it is linked to.\u003c/p\u003e \u003cp\u003eFor more information and an example, see \u003ca href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingAliasRRSets.html\"\u003eCreating Alias Resource Record Sets\u003c/a\u003e in the \u003ci\u003eAmazon Route 53 Developer Guide\u003c/i\u003e\u003c/p\u003e.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "name": "AliasTarget",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "atDNSName",
                        "name": "_atDNSName",
                        "shape": "DNSName",
                        "locationName": "DNSName",
                        "documentation": "\u003cp\u003e\u003ci\u003eAlias resource record sets only:\u003c/i\u003e The external DNS name associated with the AWS Resource.\u003c/p\u003e \u003cp\u003eFor more information and an example, see \u003ca href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingAliasRRSets.html\"\u003eCreating Alias Resource Record Sets\u003c/a\u003e in the \u003ci\u003eAmazon Route 53 Developer Guide\u003c/i\u003e\u003c/p\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "atEvaluateTargetHealth",
                        "name": "_atEvaluateTargetHealth",
                        "shape": "AliasHealthEnabled",
                        "locationName": "EvaluateTargetHealth",
                        "documentation": "\u003cp\u003e\u003ci\u003eAlias resource record sets only:\u003c/i\u003e A boolean value that indicates whether this Resource Record Set should respect the health status of any health checks associated with the ALIAS target record which it is linked to.\u003c/p\u003e \u003cp\u003eFor more information and an example, see \u003ca href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingAliasRRSets.html\"\u003eCreating Alias Resource Record Sets\u003c/a\u003e in the \u003ci\u003eAmazon Route 53 Developer Guide\u003c/i\u003e\u003c/p\u003e.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "atHostedZoneId",
                        "name": "_atHostedZoneId",
                        "shape": "ResourceId",
                        "locationName": "HostedZoneId",
                        "documentation": "\u003cp\u003e\u003ci\u003eAlias resource record sets only:\u003c/i\u003e The value of the hosted zone ID for the AWS resource.\u003c/p\u003e \u003cp\u003eFor more information and an example, see \u003ca href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingAliasRRSets.html\"\u003eCreating Alias Resource Record Sets\u003c/a\u003e in the \u003ci\u003eAmazon Route 53 Developer Guide\u003c/i\u003e\u003c/p\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "resourceRecord",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rrValue",
                    "name": "_rrValue",
                    "shape": "RData",
                    "locationName": "Value",
                    "documentation": "\u003cp\u003eThe value of the \u003ccode\u003eValue\u003c/code\u003e element for the current resource record set.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rrValue",
                    "name": "_rrValue",
                    "shape": "RData",
                    "locationName": "Value",
                    "documentation": "\u003cp\u003eThe value of the \u003ccode\u003eValue\u003c/code\u003e element for the current resource record set.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrValue",
                        "name": "_rrValue",
                        "shape": "RData",
                        "locationName": "Value",
                        "documentation": "\u003cp\u003eThe value of the \u003ccode\u003eValue\u003c/code\u003e element for the current resource record set.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "ResourceRecord",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrValue",
                        "name": "_rrValue",
                        "shape": "RData",
                        "locationName": "Value",
                        "documentation": "\u003cp\u003eThe value of the \u003ccode\u003eValue\u003c/code\u003e element for the current resource record set.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 9,
                "ctor": "tag",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "tagKey",
                    "name": "_tagKey",
                    "shape": "TagKey",
                    "locationName": "Key",
                    "documentation": "\u003cp\u003eThe key for a \u003ccode\u003eTag\u003c/code\u003e.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Tag",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tagKey",
                        "name": "_tagKey",
                        "shape": "TagKey",
                        "locationName": "Key",
                        "documentation": "\u003cp\u003eThe key for a \u003ccode\u003eTag\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tagValue",
                        "name": "_tagValue",
                        "shape": "TagValue",
                        "locationName": "Value",
                        "documentation": "\u003cp\u003eThe value for a \u003ccode\u003eTag\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tagKey",
                        "name": "_tagKey",
                        "shape": "TagKey",
                        "locationName": "Key",
                        "documentation": "\u003cp\u003eThe key for a \u003ccode\u003eTag\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tagValue",
                        "name": "_tagValue",
                        "shape": "TagValue",
                        "locationName": "Value",
                        "documentation": "\u003cp\u003eThe value for a \u003ccode\u003eTag\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 19,
                "ctor": "geoLocationDetails",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gldContinentCode",
                    "name": "_gldContinentCode",
                    "shape": "GeoLocationContinentCode",
                    "locationName": "ContinentCode",
                    "documentation": "\u003cp\u003eThe code for a continent geo location. Note: only continent locations have a continent code.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "GeoLocationDetails",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gldContinentCode",
                        "name": "_gldContinentCode",
                        "shape": "GeoLocationContinentCode",
                        "locationName": "ContinentCode",
                        "documentation": "\u003cp\u003eThe code for a continent geo location. Note: only continent locations have a continent code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gldContinentName",
                        "name": "_gldContinentName",
                        "shape": "GeoLocationContinentName",
                        "locationName": "ContinentName",
                        "documentation": "\u003cp\u003eThe name of the continent. This element is only present if \u003ccode\u003eContinentCode\u003c/code\u003e is also present.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gldCountryCode",
                        "name": "_gldCountryCode",
                        "shape": "GeoLocationCountryCode",
                        "locationName": "CountryCode",
                        "documentation": "\u003cp\u003eThe code for a country geo location. The default location uses '*' for the country code and will match all locations that are not matched by a geo location.\u003c/p\u003e \u003cp\u003eThe default geo location uses a \u003ccode\u003e*\u003c/code\u003e for the country code. All other country codes follow the ISO 3166 two-character code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gldCountryName",
                        "name": "_gldCountryName",
                        "shape": "GeoLocationCountryName",
                        "locationName": "CountryName",
                        "documentation": "\u003cp\u003eThe name of the country. This element is only present if \u003ccode\u003eCountryCode\u003c/code\u003e is also present.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gldSubdivisionCode",
                        "name": "_gldSubdivisionCode",
                        "shape": "GeoLocationSubdivisionCode",
                        "locationName": "SubdivisionCode",
                        "documentation": "\u003cp\u003eThe code for a country's subdivision (e.g., a province of Canada). A subdivision code is only valid with the appropriate country code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gldSubdivisionName",
                        "name": "_gldSubdivisionName",
                        "shape": "GeoLocationSubdivisionName",
                        "locationName": "SubdivisionName",
                        "documentation": "\u003cp\u003eThe name of the subdivision. This element is only present if \u003ccode\u003eSubdivisionCode\u003c/code\u003e is also present.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gldContinentCode",
                        "name": "_gldContinentCode",
                        "shape": "GeoLocationContinentCode",
                        "locationName": "ContinentCode",
                        "documentation": "\u003cp\u003eThe code for a continent geo location. Note: only continent locations have a continent code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gldContinentName",
                        "name": "_gldContinentName",
                        "shape": "GeoLocationContinentName",
                        "locationName": "ContinentName",
                        "documentation": "\u003cp\u003eThe name of the continent. This element is only present if \u003ccode\u003eContinentCode\u003c/code\u003e is also present.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gldCountryCode",
                        "name": "_gldCountryCode",
                        "shape": "GeoLocationCountryCode",
                        "locationName": "CountryCode",
                        "documentation": "\u003cp\u003eThe code for a country geo location. The default location uses '*' for the country code and will match all locations that are not matched by a geo location.\u003c/p\u003e \u003cp\u003eThe default geo location uses a \u003ccode\u003e*\u003c/code\u003e for the country code. All other country codes follow the ISO 3166 two-character code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gldCountryName",
                        "name": "_gldCountryName",
                        "shape": "GeoLocationCountryName",
                        "locationName": "CountryName",
                        "documentation": "\u003cp\u003eThe name of the country. This element is only present if \u003ccode\u003eCountryCode\u003c/code\u003e is also present.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gldSubdivisionCode",
                        "name": "_gldSubdivisionCode",
                        "shape": "GeoLocationSubdivisionCode",
                        "locationName": "SubdivisionCode",
                        "documentation": "\u003cp\u003eThe code for a country's subdivision (e.g., a province of Canada). A subdivision code is only valid with the appropriate country code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gldSubdivisionName",
                        "name": "_gldSubdivisionName",
                        "shape": "GeoLocationSubdivisionName",
                        "locationName": "SubdivisionName",
                        "documentation": "\u003cp\u003eThe name of the subdivision. This element is only present if \u003ccode\u003eSubdivisionCode\u003c/code\u003e is also present.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 21,
                "ctor": "healthCheck",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "hcId",
                    "name": "_hcId",
                    "shape": "HealthCheckId",
                    "locationName": "Id",
                    "documentation": "\u003cp\u003eThe ID of the specified health check.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hcId",
                        "name": "_hcId",
                        "shape": "HealthCheckId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe ID of the specified health check.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hcCallerReference",
                        "name": "_hcCallerReference",
                        "shape": "HealthCheckNonce",
                        "locationName": "CallerReference",
                        "documentation": "\u003cp\u003eA unique string that identifies the request to create the health check.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hcHealthCheckConfig",
                        "name": "_hcHealthCheckConfig",
                        "shape": "HealthCheckConfig",
                        "locationName": "HealthCheckConfig",
                        "documentation": "\u003cp\u003eA complex type that contains the health check configuration.\u003c/p\u003e",
                        "typeExposed": "HealthCheckConfig",
                        "type": "HealthCheckConfig"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hcHealthCheckVersion",
                        "name": "_hcHealthCheckVersion",
                        "shape": "HealthCheckVersion",
                        "locationName": "HealthCheckVersion",
                        "documentation": "\u003cp\u003eThe version of the health check. You can optionally pass this value in a call to \u003ccode\u003eUpdateHealthCheck\u003c/code\u003e to prevent overwriting another change to the health check.\u003c/p\u003e",
                        "typeExposed": "Natural",
                        "type": "Natural"
                    }
                ],
                "name": "HealthCheck",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hcCallerReference",
                        "name": "_hcCallerReference",
                        "shape": "HealthCheckNonce",
                        "locationName": "CallerReference",
                        "documentation": "\u003cp\u003eA unique string that identifies the request to create the health check.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hcHealthCheckConfig",
                        "name": "_hcHealthCheckConfig",
                        "shape": "HealthCheckConfig",
                        "locationName": "HealthCheckConfig",
                        "documentation": "\u003cp\u003eA complex type that contains the health check configuration.\u003c/p\u003e",
                        "typeExposed": "HealthCheckConfig",
                        "type": "HealthCheckConfig"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hcHealthCheckVersion",
                        "name": "_hcHealthCheckVersion",
                        "shape": "HealthCheckVersion",
                        "locationName": "HealthCheckVersion",
                        "documentation": "\u003cp\u003eThe version of the health check. You can optionally pass this value in a call to \u003ccode\u003eUpdateHealthCheck\u003c/code\u003e to prevent overwriting another change to the health check.\u003c/p\u003e",
                        "typeExposed": "Natural",
                        "type": "Natural"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hcId",
                        "name": "_hcId",
                        "shape": "HealthCheckId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe ID of the specified health check.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "ApNortheast1": "ap-northeast-1",
                    "SaEast1": "sa-east-1",
                    "CnNorth1": "cn-north-1",
                    "UsWest2": "us-west-2",
                    "UsEast1": "us-east-1",
                    "EuWest1": "eu-west-1",
                    "EuCentral1": "eu-central-1",
                    "UsWest1": "us-west-1",
                    "ApSoutheast2": "ap-southeast-2",
                    "ApSoutheast1": "ap-southeast-1"
                },
                "valuePad": 15,
                "name": "VPCRegion",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Create": "CREATE",
                    "Upsert": "UPSERT",
                    "Delete": "DELETE"
                },
                "valuePad": 7,
                "name": "ChangeAction",
                "type": "nullary",
                "branchPad": 6
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Healthcheck": "healthcheck"
                },
                "valuePad": 12,
                "name": "TagResourceType",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 28,
                "ctor": "healthCheckConfig",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "hccIPAddress",
                    "name": "_hccIPAddress",
                    "shape": "IPAddress",
                    "locationName": "IPAddress",
                    "documentation": "\u003cp\u003eIP Address of the instance being checked. \u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hccType",
                        "name": "_hccType",
                        "shape": "HealthCheckType",
                        "locationName": "Type",
                        "documentation": "\u003cp\u003eThe type of health check to be performed. Currently supported types are TCP, HTTP, HTTPS, HTTP_STR_MATCH, and HTTPS_STR_MATCH.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "HealthCheckConfig",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hccIPAddress",
                        "name": "_hccIPAddress",
                        "shape": "IPAddress",
                        "locationName": "IPAddress",
                        "documentation": "\u003cp\u003eIP Address of the instance being checked. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hccPort",
                        "name": "_hccPort",
                        "shape": "Port",
                        "locationName": "Port",
                        "documentation": "\u003cp\u003ePort on which connection will be opened to the instance to health check. For HTTP and HTTP_STR_MATCH this defaults to 80 if the port is not specified. For HTTPS and HTTPS_STR_MATCH this defaults to 443 if the port is not specified.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hccResourcePath",
                        "name": "_hccResourcePath",
                        "shape": "ResourcePath",
                        "locationName": "ResourcePath",
                        "documentation": "\u003cp\u003ePath to ping on the instance to check the health. Required for HTTP, HTTPS, HTTP_STR_MATCH, and HTTPS_STR_MATCH health checks, HTTP request is issued to the instance on the given port and path.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hccFullyQualifiedDomainName",
                        "name": "_hccFullyQualifiedDomainName",
                        "shape": "FullyQualifiedDomainName",
                        "locationName": "FullyQualifiedDomainName",
                        "documentation": "\u003cp\u003eFully qualified domain name of the instance to be health checked.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hccSearchString",
                        "name": "_hccSearchString",
                        "shape": "SearchString",
                        "locationName": "SearchString",
                        "documentation": "\u003cp\u003eA string to search for in the body of a health check response. Required for HTTP_STR_MATCH and HTTPS_STR_MATCH health checks.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hccRequestInterval",
                        "name": "_hccRequestInterval",
                        "shape": "RequestInterval",
                        "locationName": "RequestInterval",
                        "documentation": "\u003cp\u003eThe number of seconds between the time that Route 53 gets a response from your endpoint and the time that it sends the next health-check request.\u003c/p\u003e \u003cp\u003eEach Route 53 health checker makes requests at this interval. Valid values are 10 and 30. The default value is 30.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hccFailureThreshold",
                        "name": "_hccFailureThreshold",
                        "shape": "FailureThreshold",
                        "locationName": "FailureThreshold",
                        "documentation": "\u003cp\u003eThe number of consecutive health checks that an endpoint must pass or fail for Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa.\u003c/p\u003e \u003cp\u003eValid values are integers between 1 and 10. For more information, see \"How Amazon Route 53 Determines Whether an Endpoint Is Healthy\" in the Amazon Route 53 Developer Guide.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hccFailureThreshold",
                        "name": "_hccFailureThreshold",
                        "shape": "FailureThreshold",
                        "locationName": "FailureThreshold",
                        "documentation": "\u003cp\u003eThe number of consecutive health checks that an endpoint must pass or fail for Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa.\u003c/p\u003e \u003cp\u003eValid values are integers between 1 and 10. For more information, see \"How Amazon Route 53 Determines Whether an Endpoint Is Healthy\" in the Amazon Route 53 Developer Guide.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hccFullyQualifiedDomainName",
                        "name": "_hccFullyQualifiedDomainName",
                        "shape": "FullyQualifiedDomainName",
                        "locationName": "FullyQualifiedDomainName",
                        "documentation": "\u003cp\u003eFully qualified domain name of the instance to be health checked.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hccIPAddress",
                        "name": "_hccIPAddress",
                        "shape": "IPAddress",
                        "locationName": "IPAddress",
                        "documentation": "\u003cp\u003eIP Address of the instance being checked. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hccPort",
                        "name": "_hccPort",
                        "shape": "Port",
                        "locationName": "Port",
                        "documentation": "\u003cp\u003ePort on which connection will be opened to the instance to health check. For HTTP and HTTP_STR_MATCH this defaults to 80 if the port is not specified. For HTTPS and HTTPS_STR_MATCH this defaults to 443 if the port is not specified.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hccRequestInterval",
                        "name": "_hccRequestInterval",
                        "shape": "RequestInterval",
                        "locationName": "RequestInterval",
                        "documentation": "\u003cp\u003eThe number of seconds between the time that Route 53 gets a response from your endpoint and the time that it sends the next health-check request.\u003c/p\u003e \u003cp\u003eEach Route 53 health checker makes requests at this interval. Valid values are 10 and 30. The default value is 30.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hccResourcePath",
                        "name": "_hccResourcePath",
                        "shape": "ResourcePath",
                        "locationName": "ResourcePath",
                        "documentation": "\u003cp\u003ePath to ping on the instance to check the health. Required for HTTP, HTTPS, HTTP_STR_MATCH, and HTTPS_STR_MATCH health checks, HTTP request is issued to the instance on the given port and path.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hccSearchString",
                        "name": "_hccSearchString",
                        "shape": "SearchString",
                        "locationName": "SearchString",
                        "documentation": "\u003cp\u003eA string to search for in the body of a health check response. Required for HTTP_STR_MATCH and HTTPS_STR_MATCH health checks.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hccType",
                        "name": "_hccType",
                        "shape": "HealthCheckType",
                        "locationName": "Type",
                        "documentation": "\u003cp\u003eThe type of health check to be performed. Currently supported types are TCP, HTTP, HTTPS, HTTP_STR_MATCH, and HTTPS_STR_MATCH.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 19,
                "ctor": "change",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "cAction",
                    "name": "_cAction",
                    "shape": "ChangeAction",
                    "locationName": "Action",
                    "documentation": "\u003cp\u003eThe action to perform.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eCREATE\u003c/code\u003e | \u003ccode\u003eDELETE\u003c/code\u003e | \u003ccode\u003eUPSERT\u003c/code\u003e\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cAction",
                        "name": "_cAction",
                        "shape": "ChangeAction",
                        "locationName": "Action",
                        "documentation": "\u003cp\u003eThe action to perform.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eCREATE\u003c/code\u003e | \u003ccode\u003eDELETE\u003c/code\u003e | \u003ccode\u003eUPSERT\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cResourceRecordSet",
                        "name": "_cResourceRecordSet",
                        "shape": "ResourceRecordSet",
                        "locationName": "ResourceRecordSet",
                        "documentation": "\u003cp\u003eInformation about the resource record set to create or delete.\u003c/p\u003e",
                        "typeExposed": "ResourceRecordSet",
                        "type": "ResourceRecordSet"
                    }
                ],
                "name": "Change",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cAction",
                        "name": "_cAction",
                        "shape": "ChangeAction",
                        "locationName": "Action",
                        "documentation": "\u003cp\u003eThe action to perform.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eCREATE\u003c/code\u003e | \u003ccode\u003eDELETE\u003c/code\u003e | \u003ccode\u003eUPSERT\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cResourceRecordSet",
                        "name": "_cResourceRecordSet",
                        "shape": "ResourceRecordSet",
                        "locationName": "ResourceRecordSet",
                        "documentation": "\u003cp\u003eInformation about the resource record set to create or delete.\u003c/p\u003e",
                        "typeExposed": "ResourceRecordSet",
                        "type": "ResourceRecordSet"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Secondary": "SECONDARY",
                    "Primary": "PRIMARY"
                },
                "valuePad": 10,
                "name": "ResourceRecordSetFailover",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 25,
                "ctor": "hostedZone",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "hzId",
                    "name": "_hzId",
                    "shape": "ResourceId",
                    "locationName": "Id",
                    "documentation": "\u003cp\u003eThe ID of the specified hosted zone.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hzId",
                        "name": "_hzId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe ID of the specified hosted zone.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hzName",
                        "name": "_hzName",
                        "shape": "DNSName",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the domain. This must be a fully-specified domain, for example, www.example.com. The trailing dot is optional; Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.\u003c/p\u003e \u003cp\u003eThis is the name you have registered with your DNS registrar. You should ask your registrar to change the authoritative name servers for your domain to the set of \u003ccode\u003eNameServers\u003c/code\u003e elements returned in \u003ccode\u003eDelegationSet\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hzCallerReference",
                        "name": "_hzCallerReference",
                        "shape": "Nonce",
                        "locationName": "CallerReference",
                        "documentation": "\u003cp\u003eA unique string that identifies the request to create the hosted zone.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "HostedZone",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hzConfig",
                        "name": "_hzConfig",
                        "shape": "HostedZoneConfig",
                        "locationName": "Config",
                        "documentation": "\u003cp\u003eA complex type that contains the \u003ccode\u003eComment\u003c/code\u003e element.\u003c/p\u003e",
                        "typeExposed": "Maybe HostedZoneConfig",
                        "type": "Maybe HostedZoneConfig"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hzResourceRecordSetCount",
                        "name": "_hzResourceRecordSetCount",
                        "shape": "HostedZoneRRSetCount",
                        "locationName": "ResourceRecordSetCount",
                        "documentation": "\u003cp\u003eTotal number of resource record sets in the hosted zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hzCallerReference",
                        "name": "_hzCallerReference",
                        "shape": "Nonce",
                        "locationName": "CallerReference",
                        "documentation": "\u003cp\u003eA unique string that identifies the request to create the hosted zone.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hzConfig",
                        "name": "_hzConfig",
                        "shape": "HostedZoneConfig",
                        "locationName": "Config",
                        "documentation": "\u003cp\u003eA complex type that contains the \u003ccode\u003eComment\u003c/code\u003e element.\u003c/p\u003e",
                        "typeExposed": "Maybe HostedZoneConfig",
                        "type": "Maybe HostedZoneConfig"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hzId",
                        "name": "_hzId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe ID of the specified hosted zone.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hzName",
                        "name": "_hzName",
                        "shape": "DNSName",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the domain. This must be a fully-specified domain, for example, www.example.com. The trailing dot is optional; Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.\u003c/p\u003e \u003cp\u003eThis is the name you have registered with your DNS registrar. You should ask your registrar to change the authoritative name servers for your domain to the set of \u003ccode\u003eNameServers\u003c/code\u003e elements returned in \u003ccode\u003eDelegationSet\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hzResourceRecordSetCount",
                        "name": "_hzResourceRecordSetCount",
                        "shape": "HostedZoneRRSetCount",
                        "locationName": "ResourceRecordSetCount",
                        "documentation": "\u003cp\u003eTotal number of resource record sets in the hosted zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "resourceTagSet",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rtsResourceType",
                    "name": "_rtsResourceType",
                    "shape": "TagResourceType",
                    "locationName": "ResourceType",
                    "documentation": "\u003cp\u003eThe type of the resource. The resource type for health checks is \u003ccode\u003ehealthcheck\u003c/code\u003e.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rtsTags",
                        "name": "_rtsTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "\u003cp\u003eThe tags associated with the specified resource.\u003c/p\u003e",
                        "typeExposed": "NonEmpty Tag",
                        "type": "List1 Tag"
                    }
                ],
                "name": "ResourceTagSet",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtsResourceType",
                        "name": "_rtsResourceType",
                        "shape": "TagResourceType",
                        "locationName": "ResourceType",
                        "documentation": "\u003cp\u003eThe type of the resource. The resource type for health checks is \u003ccode\u003ehealthcheck\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtsResourceId",
                        "name": "_rtsResourceId",
                        "shape": "TagResourceId",
                        "locationName": "ResourceId",
                        "documentation": "\u003cp\u003eThe ID for the specified resource.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtsResourceId",
                        "name": "_rtsResourceId",
                        "shape": "TagResourceId",
                        "locationName": "ResourceId",
                        "documentation": "\u003cp\u003eThe ID for the specified resource.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtsResourceType",
                        "name": "_rtsResourceType",
                        "shape": "TagResourceType",
                        "locationName": "ResourceType",
                        "documentation": "\u003cp\u003eThe type of the resource. The resource type for health checks is \u003ccode\u003ehealthcheck\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rtsTags",
                        "name": "_rtsTags",
                        "shape": "TagList",
                        "locationName": "Tags",
                        "documentation": "\u003cp\u003eThe tags associated with the specified resource.\u003c/p\u003e",
                        "typeExposed": "NonEmpty Tag",
                        "type": "List1 Tag"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Pending": "PENDING",
                    "Insync": "INSYNC"
                },
                "valuePad": 8,
                "name": "ChangeStatus",
                "type": "nullary",
                "branchPad": 7
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 10,
                "ctor": "changeBatch",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cbComment",
                    "name": "_cbComment",
                    "shape": "ResourceDescription",
                    "locationName": "Comment",
                    "documentation": "\u003cp\u003e\u003ci\u003eOptional:\u003c/i\u003e Any comments you want to include about a change batch request.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cbChanges",
                        "name": "_cbChanges",
                        "shape": "Changes",
                        "locationName": "Changes",
                        "documentation": "\u003cp\u003eA complex type that contains one \u003ccode\u003eChange\u003c/code\u003e element for each resource record set that you want to create or delete.\u003c/p\u003e",
                        "typeExposed": "NonEmpty Change",
                        "type": "List1 Change"
                    }
                ],
                "name": "ChangeBatch",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbComment",
                        "name": "_cbComment",
                        "shape": "ResourceDescription",
                        "locationName": "Comment",
                        "documentation": "\u003cp\u003e\u003ci\u003eOptional:\u003c/i\u003e Any comments you want to include about a change batch request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cbChanges",
                        "name": "_cbChanges",
                        "shape": "Changes",
                        "locationName": "Changes",
                        "documentation": "\u003cp\u003eA complex type that contains one \u003ccode\u003eChange\u003c/code\u003e element for each resource record set that you want to create or delete.\u003c/p\u003e",
                        "typeExposed": "NonEmpty Change",
                        "type": "List1 Change"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbComment",
                        "name": "_cbComment",
                        "shape": "ResourceDescription",
                        "locationName": "Comment",
                        "documentation": "\u003cp\u003e\u003ci\u003eOptional:\u003c/i\u003e Any comments you want to include about a change batch request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "statusReport",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "srStatus",
                    "name": "_srStatus",
                    "shape": "Status",
                    "locationName": "Status",
                    "documentation": "\u003cp\u003eThe observed health check status.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "StatusReport",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "srStatus",
                        "name": "_srStatus",
                        "shape": "Status",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eThe observed health check status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "srCheckedTime",
                        "name": "_srCheckedTime",
                        "shape": "TimeStamp",
                        "locationName": "CheckedTime",
                        "documentation": "\u003cp\u003eThe date and time the health check status was observed, in the format \u003ccode\u003eYYYY-MM-DDThh:mm:ssZ\u003c/code\u003e, as specified in the ISO 8601 standard (for example, 2009-11-19T19:37:58Z). The \u003ccode\u003eZ\u003c/code\u003e after the time indicates that the time is listed in Coordinated Universal Time (UTC), which is synonymous with Greenwich Mean Time in this context.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "srCheckedTime",
                        "name": "_srCheckedTime",
                        "shape": "TimeStamp",
                        "locationName": "CheckedTime",
                        "documentation": "\u003cp\u003eThe date and time the health check status was observed, in the format \u003ccode\u003eYYYY-MM-DDThh:mm:ssZ\u003c/code\u003e, as specified in the ISO 8601 standard (for example, 2009-11-19T19:37:58Z). The \u003ccode\u003eZ\u003c/code\u003e after the time indicates that the time is listed in Coordinated Universal Time (UTC), which is synonymous with Greenwich Mean Time in this context.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "srStatus",
                        "name": "_srStatus",
                        "shape": "Status",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eThe observed health check status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Https": "HTTPS",
                    "Tcp": "TCP",
                    "HttpsStrMatch": "HTTPS_STR_MATCH",
                    "Http": "HTTP",
                    "HttpStrMatch": "HTTP_STR_MATCH"
                },
                "valuePad": 16,
                "name": "HealthCheckType",
                "type": "nullary",
                "branchPad": 13
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "vpc",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vpcVPCRegion",
                    "name": "_vpcVPCRegion",
                    "shape": "VPCRegion",
                    "locationName": "VPCRegion",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VPC",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcVPCRegion",
                        "name": "_vpcVPCRegion",
                        "shape": "VPCRegion",
                        "locationName": "VPCRegion",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcVPCId",
                        "name": "_vpcVPCId",
                        "shape": "VPCId",
                        "locationName": "VPCId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcVPCId",
                        "name": "_vpcVPCId",
                        "shape": "VPCId",
                        "locationName": "VPCId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcVPCRegion",
                        "name": "_vpcVPCRegion",
                        "shape": "VPCRegion",
                        "locationName": "VPCRegion",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "hostedZoneConfig",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "hzcComment",
                    "name": "_hzcComment",
                    "shape": "ResourceDescription",
                    "locationName": "Comment",
                    "documentation": "\u003cp\u003eAn optional comment about your hosted zone. If you don't want to specify a comment, you can omit the \u003ccode\u003eHostedZoneConfig\u003c/code\u003e and \u003ccode\u003eComment\u003c/code\u003e elements from the XML document.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "HostedZoneConfig",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hzcComment",
                        "name": "_hzcComment",
                        "shape": "ResourceDescription",
                        "locationName": "Comment",
                        "documentation": "\u003cp\u003eAn optional comment about your hosted zone. If you don't want to specify a comment, you can omit the \u003ccode\u003eHostedZoneConfig\u003c/code\u003e and \u003ccode\u003eComment\u003c/code\u003e elements from the XML document.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hzcPrivateZone",
                        "name": "_hzcPrivateZone",
                        "shape": "IsPrivateZone",
                        "locationName": "PrivateZone",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hzcComment",
                        "name": "_hzcComment",
                        "shape": "ResourceDescription",
                        "locationName": "Comment",
                        "documentation": "\u003cp\u003eAn optional comment about your hosted zone. If you don't want to specify a comment, you can omit the \u003ccode\u003eHostedZoneConfig\u003c/code\u003e and \u003ccode\u003eComment\u003c/code\u003e elements from the XML document.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hzcPrivateZone",
                        "name": "_hzcPrivateZone",
                        "shape": "IsPrivateZone",
                        "locationName": "PrivateZone",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 19,
                "ctor": "resourceRecordSet",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rrsName",
                    "name": "_rrsName",
                    "shape": "DNSName",
                    "locationName": "Name",
                    "documentation": "\u003cp\u003eThe domain name of the current resource record set.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrsName",
                        "name": "_rrsName",
                        "shape": "DNSName",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe domain name of the current resource record set.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrsType",
                        "name": "_rrsType",
                        "shape": "RRType",
                        "locationName": "Type",
                        "documentation": "\u003cp\u003eThe type of the current resource record set.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrsResourceRecords",
                        "name": "_rrsResourceRecords",
                        "shape": "ResourceRecords",
                        "locationName": "ResourceRecords",
                        "documentation": "\u003cp\u003eA complex type that contains the resource records for the current resource record set.\u003c/p\u003e",
                        "typeExposed": "NonEmpty ResourceRecord",
                        "type": "List1 ResourceRecord"
                    }
                ],
                "name": "ResourceRecordSet",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsSetIdentifier",
                        "name": "_rrsSetIdentifier",
                        "shape": "ResourceRecordSetIdentifier",
                        "locationName": "SetIdentifier",
                        "documentation": "\u003cp\u003e\u003ci\u003eWeighted, Latency, Geo, and Failover resource record sets only:\u003c/i\u003e An identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsWeight",
                        "name": "_rrsWeight",
                        "shape": "ResourceRecordSetWeight",
                        "locationName": "Weight",
                        "documentation": "\u003cp\u003e\u003ci\u003eWeighted resource record sets only:\u003c/i\u003e Among resource record sets that have the same combination of DNS name and type, a value that determines what portion of traffic for the current resource record set is routed to the associated location.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsRegion",
                        "name": "_rrsRegion",
                        "shape": "ResourceRecordSetRegion",
                        "locationName": "Region",
                        "documentation": "\u003cp\u003e\u003ci\u003eLatency-based resource record sets only:\u003c/i\u003e Among resource record sets that have the same combination of DNS name and type, a value that specifies the AWS region for the current resource record set.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsGeoLocation",
                        "name": "_rrsGeoLocation",
                        "shape": "GeoLocation",
                        "locationName": "GeoLocation",
                        "documentation": "\u003cp\u003e\u003ci\u003eGeo location resource record sets only:\u003c/i\u003e Among resource record sets that have the same combination of DNS name and type, a value that specifies the geo location for the current resource record set.\u003c/p\u003e",
                        "typeExposed": "Maybe GeoLocation",
                        "type": "Maybe GeoLocation"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsFailover",
                        "name": "_rrsFailover",
                        "shape": "ResourceRecordSetFailover",
                        "locationName": "Failover",
                        "documentation": "\u003cp\u003e\u003ci\u003eFailover resource record sets only:\u003c/i\u003e Among resource record sets that have the same combination of DNS name and type, a value that indicates whether the current resource record set is a primary or secondary resource record set. A failover set may contain at most one resource record set marked as primary and one resource record set marked as secondary. A resource record set marked as primary will be returned if any of the following are true: (1) an associated health check is passing, (2) if the resource record set is an alias with the evaluate target health and at least one target resource record set is healthy, (3) both the primary and secondary resource record set are failing health checks or (4) there is no secondary resource record set. A secondary resource record set will be returned if: (1) the primary is failing a health check and either the secondary is passing a health check or has no associated health check, or (2) there is no primary resource record set. \u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003ePRIMARY\u003c/code\u003e | \u003ccode\u003eSECONDARY\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsTTL",
                        "name": "_rrsTTL",
                        "shape": "TTL",
                        "locationName": "TTL",
                        "documentation": "\u003cp\u003eThe cache time to live for the current resource record set.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsAliasTarget",
                        "name": "_rrsAliasTarget",
                        "shape": "AliasTarget",
                        "locationName": "AliasTarget",
                        "documentation": "\u003cp\u003e\u003ci\u003eAlias resource record sets only:\u003c/i\u003e Information about the AWS resource to which you are redirecting traffic.\u003c/p\u003e",
                        "typeExposed": "Maybe AliasTarget",
                        "type": "Maybe AliasTarget"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsHealthCheckId",
                        "name": "_rrsHealthCheckId",
                        "shape": "HealthCheckId",
                        "locationName": "HealthCheckId",
                        "documentation": "\u003cp\u003e\u003ci\u003eHealth Check resource record sets only, not required for alias resource record sets:\u003c/i\u003e An identifier that is used to identify health check associated with the resource record set.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsAliasTarget",
                        "name": "_rrsAliasTarget",
                        "shape": "AliasTarget",
                        "locationName": "AliasTarget",
                        "documentation": "\u003cp\u003e\u003ci\u003eAlias resource record sets only:\u003c/i\u003e Information about the AWS resource to which you are redirecting traffic.\u003c/p\u003e",
                        "typeExposed": "Maybe AliasTarget",
                        "type": "Maybe AliasTarget"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsFailover",
                        "name": "_rrsFailover",
                        "shape": "ResourceRecordSetFailover",
                        "locationName": "Failover",
                        "documentation": "\u003cp\u003e\u003ci\u003eFailover resource record sets only:\u003c/i\u003e Among resource record sets that have the same combination of DNS name and type, a value that indicates whether the current resource record set is a primary or secondary resource record set. A failover set may contain at most one resource record set marked as primary and one resource record set marked as secondary. A resource record set marked as primary will be returned if any of the following are true: (1) an associated health check is passing, (2) if the resource record set is an alias with the evaluate target health and at least one target resource record set is healthy, (3) both the primary and secondary resource record set are failing health checks or (4) there is no secondary resource record set. A secondary resource record set will be returned if: (1) the primary is failing a health check and either the secondary is passing a health check or has no associated health check, or (2) there is no primary resource record set. \u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003ePRIMARY\u003c/code\u003e | \u003ccode\u003eSECONDARY\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsGeoLocation",
                        "name": "_rrsGeoLocation",
                        "shape": "GeoLocation",
                        "locationName": "GeoLocation",
                        "documentation": "\u003cp\u003e\u003ci\u003eGeo location resource record sets only:\u003c/i\u003e Among resource record sets that have the same combination of DNS name and type, a value that specifies the geo location for the current resource record set.\u003c/p\u003e",
                        "typeExposed": "Maybe GeoLocation",
                        "type": "Maybe GeoLocation"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsHealthCheckId",
                        "name": "_rrsHealthCheckId",
                        "shape": "HealthCheckId",
                        "locationName": "HealthCheckId",
                        "documentation": "\u003cp\u003e\u003ci\u003eHealth Check resource record sets only, not required for alias resource record sets:\u003c/i\u003e An identifier that is used to identify health check associated with the resource record set.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrsName",
                        "name": "_rrsName",
                        "shape": "DNSName",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe domain name of the current resource record set.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsRegion",
                        "name": "_rrsRegion",
                        "shape": "ResourceRecordSetRegion",
                        "locationName": "Region",
                        "documentation": "\u003cp\u003e\u003ci\u003eLatency-based resource record sets only:\u003c/i\u003e Among resource record sets that have the same combination of DNS name and type, a value that specifies the AWS region for the current resource record set.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrsResourceRecords",
                        "name": "_rrsResourceRecords",
                        "shape": "ResourceRecords",
                        "locationName": "ResourceRecords",
                        "documentation": "\u003cp\u003eA complex type that contains the resource records for the current resource record set.\u003c/p\u003e",
                        "typeExposed": "NonEmpty ResourceRecord",
                        "type": "List1 ResourceRecord"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsSetIdentifier",
                        "name": "_rrsSetIdentifier",
                        "shape": "ResourceRecordSetIdentifier",
                        "locationName": "SetIdentifier",
                        "documentation": "\u003cp\u003e\u003ci\u003eWeighted, Latency, Geo, and Failover resource record sets only:\u003c/i\u003e An identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsTTL",
                        "name": "_rrsTTL",
                        "shape": "TTL",
                        "locationName": "TTL",
                        "documentation": "\u003cp\u003eThe cache time to live for the current resource record set.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrsType",
                        "name": "_rrsType",
                        "shape": "RRType",
                        "locationName": "Type",
                        "documentation": "\u003cp\u003eThe type of the current resource record set.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrsWeight",
                        "name": "_rrsWeight",
                        "shape": "ResourceRecordSetWeight",
                        "locationName": "Weight",
                        "documentation": "\u003cp\u003e\u003ci\u003eWeighted resource record sets only:\u003c/i\u003e Among resource record sets that have the same combination of DNS name and type, a value that determines what portion of traffic for the current resource record set is routed to the associated location.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "delegationSet",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsId",
                    "name": "_dsId",
                    "shape": "ResourceId",
                    "locationName": "Id",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dsNameServers",
                        "name": "_dsNameServers",
                        "shape": "DelegationSetNameServers",
                        "locationName": "NameServers",
                        "documentation": "\u003cp\u003eA complex type that contains the authoritative name servers for the hosted zone. Use the method provided by your domain registrar to add an NS record to your domain for each \u003ccode\u003eNameServer\u003c/code\u003e that is assigned to your hosted zone.\u003c/p\u003e",
                        "typeExposed": "NonEmpty Text",
                        "type": "List1 Text"
                    }
                ],
                "name": "DelegationSet",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsId",
                        "name": "_dsId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsCallerReference",
                        "name": "_dsCallerReference",
                        "shape": "Nonce",
                        "locationName": "CallerReference",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsCallerReference",
                        "name": "_dsCallerReference",
                        "shape": "Nonce",
                        "locationName": "CallerReference",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsId",
                        "name": "_dsId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dsNameServers",
                        "name": "_dsNameServers",
                        "shape": "DelegationSetNameServers",
                        "locationName": "NameServers",
                        "documentation": "\u003cp\u003eA complex type that contains the authoritative name servers for the hosted zone. Use the method provided by your domain registrar to add an NS record to your domain for each \u003ccode\u003eNameServer\u003c/code\u003e that is assigned to your hosted zone.\u003c/p\u003e",
                        "typeExposed": "NonEmpty Text",
                        "type": "List1 Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "changeInfo",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ciId",
                    "name": "_ciId",
                    "shape": "ResourceId",
                    "locationName": "Id",
                    "documentation": "\u003cp\u003eThe ID of the request. Use this ID to track when the change has completed across all Amazon Route 53 DNS servers.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ciId",
                        "name": "_ciId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe ID of the request. Use this ID to track when the change has completed across all Amazon Route 53 DNS servers.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ciStatus",
                        "name": "_ciStatus",
                        "shape": "ChangeStatus",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eThe current state of the request. \u003ccode\u003ePENDING\u003c/code\u003e indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.\u003c/p\u003e \u003cp\u003eValid Values: \u003ccode\u003ePENDING\u003c/code\u003e | \u003ccode\u003eINSYNC\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ciSubmittedAt",
                        "name": "_ciSubmittedAt",
                        "shape": "TimeStamp",
                        "locationName": "SubmittedAt",
                        "documentation": "\u003cp\u003eThe date and time the change was submitted, in the format \u003ccode\u003eYYYY-MM-DDThh:mm:ssZ\u003c/code\u003e, as specified in the ISO 8601 standard (for example, 2009-11-19T19:37:58Z). The \u003ccode\u003eZ\u003c/code\u003e after the time indicates that the time is listed in Coordinated Universal Time (UTC), which is synonymous with Greenwich Mean Time in this context.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    }
                ],
                "name": "ChangeInfo",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ciComment",
                        "name": "_ciComment",
                        "shape": "ResourceDescription",
                        "locationName": "Comment",
                        "documentation": "\u003cp\u003eA complex type that describes change information about changes made to your hosted zone.\u003c/p\u003e \u003cp\u003eThis element contains an ID that you use when performing a \u003ca\u003eGetChange\u003c/a\u003e action to get detailed information about the change.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ciComment",
                        "name": "_ciComment",
                        "shape": "ResourceDescription",
                        "locationName": "Comment",
                        "documentation": "\u003cp\u003eA complex type that describes change information about changes made to your hosted zone.\u003c/p\u003e \u003cp\u003eThis element contains an ID that you use when performing a \u003ca\u003eGetChange\u003c/a\u003e action to get detailed information about the change.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ciId",
                        "name": "_ciId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe ID of the request. Use this ID to track when the change has completed across all Amazon Route 53 DNS servers.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ciStatus",
                        "name": "_ciStatus",
                        "shape": "ChangeStatus",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eThe current state of the request. \u003ccode\u003ePENDING\u003c/code\u003e indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.\u003c/p\u003e \u003cp\u003eValid Values: \u003ccode\u003ePENDING\u003c/code\u003e | \u003ccode\u003eINSYNC\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ciSubmittedAt",
                        "name": "_ciSubmittedAt",
                        "shape": "TimeStamp",
                        "locationName": "SubmittedAt",
                        "documentation": "\u003cp\u003eThe date and time the change was submitted, in the format \u003ccode\u003eYYYY-MM-DDThh:mm:ssZ\u003c/code\u003e, as specified in the ISO 8601 standard (for example, 2009-11-19T19:37:58Z). The \u003ccode\u003eZ\u003c/code\u003e after the time indicates that the time is listed in Coordinated Universal Time (UTC), which is synonymous with Greenwich Mean Time in this context.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "geoLocation",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "glContinentCode",
                    "name": "_glContinentCode",
                    "shape": "GeoLocationContinentCode",
                    "locationName": "ContinentCode",
                    "documentation": "\u003cp\u003eThe code for a continent geo location. Note: only continent locations have a continent code.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eAF\u003c/code\u003e | \u003ccode\u003eAN\u003c/code\u003e | \u003ccode\u003eAS\u003c/code\u003e | \u003ccode\u003eEU\u003c/code\u003e | \u003ccode\u003eOC\u003c/code\u003e | \u003ccode\u003eNA\u003c/code\u003e | \u003ccode\u003eSA\u003c/code\u003e\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003eContinentCode\u003c/code\u003e with either \u003ccode\u003eCountryCode\u003c/code\u003e or \u003ccode\u003eSubdivisionCode\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "GeoLocation",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "glContinentCode",
                        "name": "_glContinentCode",
                        "shape": "GeoLocationContinentCode",
                        "locationName": "ContinentCode",
                        "documentation": "\u003cp\u003eThe code for a continent geo location. Note: only continent locations have a continent code.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eAF\u003c/code\u003e | \u003ccode\u003eAN\u003c/code\u003e | \u003ccode\u003eAS\u003c/code\u003e | \u003ccode\u003eEU\u003c/code\u003e | \u003ccode\u003eOC\u003c/code\u003e | \u003ccode\u003eNA\u003c/code\u003e | \u003ccode\u003eSA\u003c/code\u003e\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003eContinentCode\u003c/code\u003e with either \u003ccode\u003eCountryCode\u003c/code\u003e or \u003ccode\u003eSubdivisionCode\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "glCountryCode",
                        "name": "_glCountryCode",
                        "shape": "GeoLocationCountryCode",
                        "locationName": "CountryCode",
                        "documentation": "\u003cp\u003eThe code for a country geo location. The default location uses '*' for the country code and will match all locations that are not matched by a geo location.\u003c/p\u003e \u003cp\u003eThe default geo location uses a \u003ccode\u003e*\u003c/code\u003e for the country code. All other country codes follow the ISO 3166 two-character code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "glSubdivisionCode",
                        "name": "_glSubdivisionCode",
                        "shape": "GeoLocationSubdivisionCode",
                        "locationName": "SubdivisionCode",
                        "documentation": "\u003cp\u003eThe code for a country's subdivision (e.g., a province of Canada). A subdivision code is only valid with the appropriate country code.\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003eSubdivisionCode\u003c/code\u003e without \u003ccode\u003eCountryCode\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "glContinentCode",
                        "name": "_glContinentCode",
                        "shape": "GeoLocationContinentCode",
                        "locationName": "ContinentCode",
                        "documentation": "\u003cp\u003eThe code for a continent geo location. Note: only continent locations have a continent code.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eAF\u003c/code\u003e | \u003ccode\u003eAN\u003c/code\u003e | \u003ccode\u003eAS\u003c/code\u003e | \u003ccode\u003eEU\u003c/code\u003e | \u003ccode\u003eOC\u003c/code\u003e | \u003ccode\u003eNA\u003c/code\u003e | \u003ccode\u003eSA\u003c/code\u003e\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003eContinentCode\u003c/code\u003e with either \u003ccode\u003eCountryCode\u003c/code\u003e or \u003ccode\u003eSubdivisionCode\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "glCountryCode",
                        "name": "_glCountryCode",
                        "shape": "GeoLocationCountryCode",
                        "locationName": "CountryCode",
                        "documentation": "\u003cp\u003eThe code for a country geo location. The default location uses '*' for the country code and will match all locations that are not matched by a geo location.\u003c/p\u003e \u003cp\u003eThe default geo location uses a \u003ccode\u003e*\u003c/code\u003e for the country code. All other country codes follow the ISO 3166 two-character code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "glSubdivisionCode",
                        "name": "_glSubdivisionCode",
                        "shape": "GeoLocationSubdivisionCode",
                        "locationName": "SubdivisionCode",
                        "documentation": "\u003cp\u003eThe code for a country's subdivision (e.g., a province of Canada). A subdivision code is only valid with the appropriate country code.\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003eSubdivisionCode\u003c/code\u003e without \u003ccode\u003eCountryCode\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "healthCheckObservation",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "hcoIPAddress",
                    "name": "_hcoIPAddress",
                    "shape": "IPAddress",
                    "locationName": "IPAddress",
                    "documentation": "\u003cp\u003eThe IP address of the Route 53 health checker that performed the health check.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "HealthCheckObservation",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hcoIPAddress",
                        "name": "_hcoIPAddress",
                        "shape": "IPAddress",
                        "locationName": "IPAddress",
                        "documentation": "\u003cp\u003eThe IP address of the Route 53 health checker that performed the health check.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hcoStatusReport",
                        "name": "_hcoStatusReport",
                        "shape": "StatusReport",
                        "locationName": "StatusReport",
                        "documentation": "\u003cp\u003eA complex type that contains information about the health check status for the current observation.\u003c/p\u003e",
                        "typeExposed": "Maybe StatusReport",
                        "type": "Maybe StatusReport"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hcoIPAddress",
                        "name": "_hcoIPAddress",
                        "shape": "IPAddress",
                        "locationName": "IPAddress",
                        "documentation": "\u003cp\u003eThe IP address of the Route 53 health checker that performed the health check.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hcoStatusReport",
                        "name": "_hcoStatusReport",
                        "shape": "StatusReport",
                        "locationName": "StatusReport",
                        "documentation": "\u003cp\u003eA complex type that contains information about the health check status for the current observation.\u003c/p\u003e",
                        "typeExposed": "Maybe StatusReport",
                        "type": "Maybe StatusReport"
                    }
                ]
            }
        ],
        "imports": []
    },
    "operations": [
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "associateVPCWithHostedZoneResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "avpcwhzrChangeInfo",
                    "name": "_avpcwhzrChangeInfo",
                    "shape": "ChangeInfo",
                    "locationName": "ChangeInfo",
                    "documentation": "\u003cp\u003eA complex type that contains the ID, the status, and the date and time of your \u003ccode\u003eAssociateVPCWithHostedZoneRequest\u003c/code\u003e.\u003c/p\u003e",
                    "typeExposed": "ChangeInfo",
                    "type": "ChangeInfo"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "avpcwhzrChangeInfo",
                    "name": "_avpcwhzrChangeInfo",
                    "shape": "ChangeInfo",
                    "locationName": "ChangeInfo",
                    "documentation": "\u003cp\u003eA complex type that contains the ID, the status, and the date and time of your \u003ccode\u003eAssociateVPCWithHostedZoneRequest\u003c/code\u003e.\u003c/p\u003e",
                    "typeExposed": "ChangeInfo",
                    "type": "ChangeInfo"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avpcwhzrChangeInfo",
                        "name": "_avpcwhzrChangeInfo",
                        "shape": "ChangeInfo",
                        "locationName": "ChangeInfo",
                        "documentation": "\u003cp\u003eA complex type that contains the ID, the status, and the date and time of your \u003ccode\u003eAssociateVPCWithHostedZoneRequest\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "ChangeInfo",
                        "type": "ChangeInfo"
                    }
                ],
                "shared": false,
                "name": "AssociateVPCWithHostedZoneResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avpcwhzrChangeInfo",
                        "name": "_avpcwhzrChangeInfo",
                        "shape": "ChangeInfo",
                        "locationName": "ChangeInfo",
                        "documentation": "\u003cp\u003eA complex type that contains the ID, the status, and the date and time of your \u003ccode\u003eAssociateVPCWithHostedZoneRequest\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "ChangeInfo",
                        "type": "ChangeInfo"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.AssociateVPCWithHostedZone",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "AssociateVPCWithHostedZone",
            "method": "post",
            "documentation": "\u003cp\u003e This action associates a VPC with an hosted zone. \u003c/p\u003e \u003cp\u003e To associate a VPC with an hosted zone, send a \u003ccode\u003ePOST\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/hostedzone/\u003ci\u003ehosted zone ID\u003c/i\u003e/associatevpc\u003c/code\u003e resource. The request body must include an XML document with a \u003ccode\u003eAssociateVPCWithHostedZoneRequest\u003c/code\u003e element. The response returns the \u003ccode\u003eAssociateVPCWithHostedZoneResponse\u003c/code\u003e element that contains \u003ccode\u003eChangeInfo\u003c/code\u003e for you to track the progress of the \u003ccode\u003eAssociateVPCWithHostedZoneRequest\u003c/code\u003e you made. See \u003ccode\u003eGetChange\u003c/code\u003e operation for how to track the progress of your change.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "associateVPCWithHostedZone",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/hostedzone/",
                        "type": "const"
                    },
                    {
                        "value": "_avpcwhzId",
                        "type": "var"
                    },
                    {
                        "value": "/associatevpc",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "avpcwhzVPC",
                    "name": "_avpcwhzVPC",
                    "shape": "VPC",
                    "locationName": "VPC",
                    "documentation": "\u003cp\u003eThe VPC that you want your hosted zone to be associated with. \u003c/p\u003e",
                    "typeExposed": "VPC",
                    "type": "VPC"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avpcwhzHostedZoneId",
                        "name": "_avpcwhzHostedZoneId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The ID of the hosted zone you want to associate your VPC with.\u003c/p\u003e \u003cp\u003eNote that you cannot associate a VPC with a hosted zone that doesn't have an existing VPC association.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avpcwhzVPC",
                        "name": "_avpcwhzVPC",
                        "shape": "VPC",
                        "locationName": "VPC",
                        "documentation": "\u003cp\u003eThe VPC that you want your hosted zone to be associated with. \u003c/p\u003e",
                        "typeExposed": "VPC",
                        "type": "VPC"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "AssociateVPCWithHostedZone",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avpcwhzComment",
                        "name": "_avpcwhzComment",
                        "shape": "AssociateVPCComment",
                        "locationName": "Comment",
                        "documentation": "\u003cp\u003e\u003ci\u003eOptional:\u003c/i\u003e Any comments you want to include about a \u003ccode\u003eAssociateVPCWithHostedZoneRequest\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avpcwhzComment",
                        "name": "_avpcwhzComment",
                        "shape": "AssociateVPCComment",
                        "locationName": "Comment",
                        "documentation": "\u003cp\u003e\u003ci\u003eOptional:\u003c/i\u003e Any comments you want to include about a \u003ccode\u003eAssociateVPCWithHostedZoneRequest\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avpcwhzHostedZoneId",
                        "name": "_avpcwhzHostedZoneId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The ID of the hosted zone you want to associate your VPC with.\u003c/p\u003e \u003cp\u003eNote that you cannot associate a VPC with a hosted zone that doesn't have an existing VPC association.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avpcwhzVPC",
                        "name": "_avpcwhzVPC",
                        "shape": "VPC",
                        "locationName": "VPC",
                        "documentation": "\u003cp\u003eThe VPC that you want your hosted zone to be associated with. \u003c/p\u003e",
                        "typeExposed": "VPC",
                        "type": "VPC"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "changeResourceRecordSetsResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "crrsrChangeInfo",
                    "name": "_crrsrChangeInfo",
                    "shape": "ChangeInfo",
                    "locationName": "ChangeInfo",
                    "documentation": "\u003cp\u003eA complex type that contains information about changes made to your hosted zone.\u003c/p\u003e \u003cp\u003eThis element contains an ID that you use when performing a \u003ca\u003eGetChange\u003c/a\u003e action to get detailed information about the change.\u003c/p\u003e",
                    "typeExposed": "ChangeInfo",
                    "type": "ChangeInfo"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "crrsrChangeInfo",
                    "name": "_crrsrChangeInfo",
                    "shape": "ChangeInfo",
                    "locationName": "ChangeInfo",
                    "documentation": "\u003cp\u003eA complex type that contains information about changes made to your hosted zone.\u003c/p\u003e \u003cp\u003eThis element contains an ID that you use when performing a \u003ca\u003eGetChange\u003c/a\u003e action to get detailed information about the change.\u003c/p\u003e",
                    "typeExposed": "ChangeInfo",
                    "type": "ChangeInfo"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crrsrChangeInfo",
                        "name": "_crrsrChangeInfo",
                        "shape": "ChangeInfo",
                        "locationName": "ChangeInfo",
                        "documentation": "\u003cp\u003eA complex type that contains information about changes made to your hosted zone.\u003c/p\u003e \u003cp\u003eThis element contains an ID that you use when performing a \u003ca\u003eGetChange\u003c/a\u003e action to get detailed information about the change.\u003c/p\u003e",
                        "typeExposed": "ChangeInfo",
                        "type": "ChangeInfo"
                    }
                ],
                "shared": false,
                "name": "ChangeResourceRecordSetsResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crrsrChangeInfo",
                        "name": "_crrsrChangeInfo",
                        "shape": "ChangeInfo",
                        "locationName": "ChangeInfo",
                        "documentation": "\u003cp\u003eA complex type that contains information about changes made to your hosted zone.\u003c/p\u003e \u003cp\u003eThis element contains an ID that you use when performing a \u003ca\u003eGetChange\u003c/a\u003e action to get detailed information about the change.\u003c/p\u003e",
                        "typeExposed": "ChangeInfo",
                        "type": "ChangeInfo"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.ChangeResourceRecordSets",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "ChangeResourceRecordSets",
            "method": "post",
            "documentation": "\u003cp\u003eUse this action to create or change your authoritative DNS information. To use this action, send a \u003ccode\u003ePOST\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/hostedzone/\u003ci\u003ehosted Zone ID\u003c/i\u003e/rrset\u003c/code\u003e resource. The request body must include an XML document with a \u003ccode\u003eChangeResourceRecordSetsRequest\u003c/code\u003e element.\u003c/p\u003e \u003cp\u003eChanges are a list of change items and are considered transactional. For more information on transactional changes, also known as change batches, see \u003ca href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/RRSchanges.html#RRSchanges_API\"\u003eCreating, Changing, and Deleting Resource Record Sets Using the Route 53 API\u003c/a\u003e in the \u003ci\u003eAmazon Route 53 Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cimportant\u003eDue to the nature of transactional changes, you cannot delete the same resource record set more than once in a single change batch. If you attempt to delete the same change batch more than once, Route 53 returns an \u003ccode\u003eInvalidChangeBatch\u003c/code\u003e error.\u003c/important\u003e \u003cp\u003eIn response to a \u003ccode\u003eChangeResourceRecordSets\u003c/code\u003e request, your DNS data is changed on all Route 53 DNS servers. Initially, the status of a change is \u003ccode\u003ePENDING\u003c/code\u003e. This means the change has not yet propagated to all the authoritative Route 53 DNS servers. When the change is propagated to all hosts, the change returns a status of \u003ccode\u003eINSYNC\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eNote the following limitations on a \u003ccode\u003eChangeResourceRecordSets\u003c/code\u003e request:\u003c/p\u003e \u003cp\u003e- A request cannot contain more than 100 Change elements.\u003c/p\u003e \u003cp\u003e- A request cannot contain more than 1000 ResourceRecord elements.\u003c/p\u003e \u003cp\u003eThe sum of the number of characters (including spaces) in all \u003ccode\u003eValue\u003c/code\u003e elements in a request cannot exceed 32,000 characters.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "changeResourceRecordSets",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/hostedzone/",
                        "type": "const"
                    },
                    {
                        "value": "_crrsId",
                        "type": "var"
                    },
                    {
                        "value": "/rrset/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "crrsChangeBatch",
                    "name": "_crrsChangeBatch",
                    "shape": "ChangeBatch",
                    "locationName": "ChangeBatch",
                    "documentation": "\u003cp\u003eA complex type that contains an optional comment and the \u003ccode\u003eChanges\u003c/code\u003e element.\u003c/p\u003e",
                    "typeExposed": "ChangeBatch",
                    "type": "ChangeBatch"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crrsHostedZoneId",
                        "name": "_crrsHostedZoneId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The ID of the hosted zone that contains the resource record sets that you want to change.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crrsChangeBatch",
                        "name": "_crrsChangeBatch",
                        "shape": "ChangeBatch",
                        "locationName": "ChangeBatch",
                        "documentation": "\u003cp\u003eA complex type that contains an optional comment and the \u003ccode\u003eChanges\u003c/code\u003e element.\u003c/p\u003e",
                        "typeExposed": "ChangeBatch",
                        "type": "ChangeBatch"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "ChangeResourceRecordSets",
                "query": [],
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crrsChangeBatch",
                        "name": "_crrsChangeBatch",
                        "shape": "ChangeBatch",
                        "locationName": "ChangeBatch",
                        "documentation": "\u003cp\u003eA complex type that contains an optional comment and the \u003ccode\u003eChanges\u003c/code\u003e element.\u003c/p\u003e",
                        "typeExposed": "ChangeBatch",
                        "type": "ChangeBatch"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crrsHostedZoneId",
                        "name": "_crrsHostedZoneId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The ID of the hosted zone that contains the resource record sets that you want to change.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "changeTagsForResourceResponse",
                "wrapper": false,
                "required": [],
                "shared": false,
                "name": "ChangeTagsForResourceResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.Route53.ChangeTagsForResource",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "ChangeTagsForResource",
            "method": "post",
            "documentation": "",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "changeTagsForResource",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/tags/",
                        "type": "const"
                    },
                    {
                        "value": "_ctfrResourceType",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_ctfrResourceId",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": "_List1",
                    "lensMapping": "_List1",
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ctfrAddTags",
                    "name": "_ctfrAddTags",
                    "shape": "TagList",
                    "locationName": "AddTags",
                    "documentation": "\u003cp\u003eA complex type that contains a list of \u003ccode\u003eTag\u003c/code\u003e elements. Each \u003ccode\u003eTag\u003c/code\u003e element identifies a tag that you want to add or update for the specified resource.\u003c/p\u003e",
                    "typeExposed": "NonEmpty Tag",
                    "type": "List1 Tag"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ctfrResourceType",
                        "name": "_ctfrResourceType",
                        "shape": "TagResourceType",
                        "locationName": "ResourceType",
                        "documentation": "\u003cp\u003eThe type of the resource. The resource type for health checks is \u003ccode\u003ehealthcheck\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ctfrResourceId",
                        "name": "_ctfrResourceId",
                        "shape": "TagResourceId",
                        "locationName": "ResourceId",
                        "documentation": "\u003cp\u003eThe ID of the resource for which you want to add, change, or delete tags.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ctfrAddTags",
                        "name": "_ctfrAddTags",
                        "shape": "TagList",
                        "locationName": "AddTags",
                        "documentation": "\u003cp\u003eA complex type that contains a list of \u003ccode\u003eTag\u003c/code\u003e elements. Each \u003ccode\u003eTag\u003c/code\u003e element identifies a tag that you want to add or update for the specified resource.\u003c/p\u003e",
                        "typeExposed": "NonEmpty Tag",
                        "type": "List1 Tag"
                    },
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ctfrRemoveTagKeys",
                        "name": "_ctfrRemoveTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "RemoveTagKeys",
                        "documentation": "\u003cp\u003eA list of \u003ccode\u003eTag\u003c/code\u003e keys that you want to remove from the specified resource.\u003c/p\u003e",
                        "typeExposed": "NonEmpty Text",
                        "type": "List1 Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "ChangeTagsForResource",
                "query": [],
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ctfrAddTags",
                        "name": "_ctfrAddTags",
                        "shape": "TagList",
                        "locationName": "AddTags",
                        "documentation": "\u003cp\u003eA complex type that contains a list of \u003ccode\u003eTag\u003c/code\u003e elements. Each \u003ccode\u003eTag\u003c/code\u003e element identifies a tag that you want to add or update for the specified resource.\u003c/p\u003e",
                        "typeExposed": "NonEmpty Tag",
                        "type": "List1 Tag"
                    },
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ctfrRemoveTagKeys",
                        "name": "_ctfrRemoveTagKeys",
                        "shape": "TagKeyList",
                        "locationName": "RemoveTagKeys",
                        "documentation": "\u003cp\u003eA list of \u003ccode\u003eTag\u003c/code\u003e keys that you want to remove from the specified resource.\u003c/p\u003e",
                        "typeExposed": "NonEmpty Text",
                        "type": "List1 Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ctfrResourceId",
                        "name": "_ctfrResourceId",
                        "shape": "TagResourceId",
                        "locationName": "ResourceId",
                        "documentation": "\u003cp\u003eThe ID of the resource for which you want to add, change, or delete tags.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ctfrResourceType",
                        "name": "_ctfrResourceType",
                        "shape": "TagResourceType",
                        "locationName": "ResourceType",
                        "documentation": "\u003cp\u003eThe type of the resource. The resource type for health checks is \u003ccode\u003ehealthcheck\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "createHealthCheckResponse",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "chcrHealthCheck",
                    "name": "_chcrHealthCheck",
                    "shape": "HealthCheck",
                    "locationName": "HealthCheck",
                    "documentation": "\u003cp\u003eA complex type that contains identifying information about the health check.\u003c/p\u003e",
                    "typeExposed": "HealthCheck",
                    "type": "HealthCheck"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chcrHealthCheck",
                        "name": "_chcrHealthCheck",
                        "shape": "HealthCheck",
                        "locationName": "HealthCheck",
                        "documentation": "\u003cp\u003eA complex type that contains identifying information about the health check.\u003c/p\u003e",
                        "typeExposed": "HealthCheck",
                        "type": "HealthCheck"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chcrLocation",
                        "name": "_chcrLocation",
                        "shape": "ResourceURI",
                        "locationName": "Location",
                        "documentation": "\u003cp\u003eThe unique URL representing the new health check.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "name": "CreateHealthCheckResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chcrHealthCheck",
                        "name": "_chcrHealthCheck",
                        "shape": "HealthCheck",
                        "locationName": "HealthCheck",
                        "documentation": "\u003cp\u003eA complex type that contains identifying information about the health check.\u003c/p\u003e",
                        "typeExposed": "HealthCheck",
                        "type": "HealthCheck"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chcrLocation",
                        "name": "_chcrLocation",
                        "shape": "ResourceURI",
                        "locationName": "Location",
                        "documentation": "\u003cp\u003eThe unique URL representing the new health check.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.CreateHealthCheck",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "CreateHealthCheck",
            "method": "post",
            "documentation": "\u003cp\u003e This action creates a new health check.\u003c/p\u003e \u003cp\u003e To create a new health check, send a \u003ccode\u003ePOST\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/healthcheck\u003c/code\u003e resource. The request body must include an XML document with a \u003ccode\u003eCreateHealthCheckRequest\u003c/code\u003e element. The response returns the \u003ccode\u003eCreateHealthCheckResponse\u003c/code\u003e element that contains metadata about the health check.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 21,
                "ctor": "createHealthCheck",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/healthcheck",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "chcCallerReference",
                    "name": "_chcCallerReference",
                    "shape": "HealthCheckNonce",
                    "locationName": "CallerReference",
                    "documentation": "\u003cp\u003eA unique string that identifies the request and that allows failed \u003ccode\u003eCreateHealthCheck\u003c/code\u003e requests to be retried without the risk of executing the operation twice. You must use a unique \u003ccode\u003eCallerReference\u003c/code\u003e string every time you create a health check. \u003ccode\u003eCallerReference\u003c/code\u003e can be any unique string; you might choose to use a string that identifies your project.\u003c/p\u003e \u003cp\u003eValid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chcCallerReference",
                        "name": "_chcCallerReference",
                        "shape": "HealthCheckNonce",
                        "locationName": "CallerReference",
                        "documentation": "\u003cp\u003eA unique string that identifies the request and that allows failed \u003ccode\u003eCreateHealthCheck\u003c/code\u003e requests to be retried without the risk of executing the operation twice. You must use a unique \u003ccode\u003eCallerReference\u003c/code\u003e string every time you create a health check. \u003ccode\u003eCallerReference\u003c/code\u003e can be any unique string; you might choose to use a string that identifies your project.\u003c/p\u003e \u003cp\u003eValid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chcHealthCheckConfig",
                        "name": "_chcHealthCheckConfig",
                        "shape": "HealthCheckConfig",
                        "locationName": "HealthCheckConfig",
                        "documentation": "\u003cp\u003eA complex type that contains health check configuration.\u003c/p\u003e",
                        "typeExposed": "HealthCheckConfig",
                        "type": "HealthCheckConfig"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "CreateHealthCheck",
                "query": [],
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chcCallerReference",
                        "name": "_chcCallerReference",
                        "shape": "HealthCheckNonce",
                        "locationName": "CallerReference",
                        "documentation": "\u003cp\u003eA unique string that identifies the request and that allows failed \u003ccode\u003eCreateHealthCheck\u003c/code\u003e requests to be retried without the risk of executing the operation twice. You must use a unique \u003ccode\u003eCallerReference\u003c/code\u003e string every time you create a health check. \u003ccode\u003eCallerReference\u003c/code\u003e can be any unique string; you might choose to use a string that identifies your project.\u003c/p\u003e \u003cp\u003eValid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chcHealthCheckConfig",
                        "name": "_chcHealthCheckConfig",
                        "shape": "HealthCheckConfig",
                        "locationName": "HealthCheckConfig",
                        "documentation": "\u003cp\u003eA complex type that contains health check configuration.\u003c/p\u003e",
                        "typeExposed": "HealthCheckConfig",
                        "type": "HealthCheckConfig"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "createHostedZoneResponse",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "chzrHostedZone",
                    "name": "_chzrHostedZone",
                    "shape": "HostedZone",
                    "locationName": "HostedZone",
                    "documentation": "\u003cp\u003eA complex type that contains identifying information about the hosted zone.\u003c/p\u003e",
                    "typeExposed": "HostedZone",
                    "type": "HostedZone"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chzrHostedZone",
                        "name": "_chzrHostedZone",
                        "shape": "HostedZone",
                        "locationName": "HostedZone",
                        "documentation": "\u003cp\u003eA complex type that contains identifying information about the hosted zone.\u003c/p\u003e",
                        "typeExposed": "HostedZone",
                        "type": "HostedZone"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chzrChangeInfo",
                        "name": "_chzrChangeInfo",
                        "shape": "ChangeInfo",
                        "locationName": "ChangeInfo",
                        "documentation": "\u003cp\u003eA complex type that contains information about the request to create a hosted zone. This includes an ID that you use when you call the \u003ca\u003eGetChange\u003c/a\u003e action to get the current status of the change request.\u003c/p\u003e",
                        "typeExposed": "ChangeInfo",
                        "type": "ChangeInfo"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chzrDelegationSet",
                        "name": "_chzrDelegationSet",
                        "shape": "DelegationSet",
                        "locationName": "DelegationSet",
                        "documentation": "\u003cp\u003eA complex type that contains name server information.\u003c/p\u003e",
                        "typeExposed": "DelegationSet",
                        "type": "DelegationSet"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chzrLocation",
                        "name": "_chzrLocation",
                        "shape": "ResourceURI",
                        "locationName": "Location",
                        "documentation": "\u003cp\u003eThe unique URL representing the new hosted zone.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "name": "CreateHostedZoneResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "chzrVPC",
                        "name": "_chzrVPC",
                        "shape": "VPC",
                        "locationName": "VPC",
                        "documentation": null,
                        "typeExposed": "Maybe VPC",
                        "type": "Maybe VPC"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chzrChangeInfo",
                        "name": "_chzrChangeInfo",
                        "shape": "ChangeInfo",
                        "locationName": "ChangeInfo",
                        "documentation": "\u003cp\u003eA complex type that contains information about the request to create a hosted zone. This includes an ID that you use when you call the \u003ca\u003eGetChange\u003c/a\u003e action to get the current status of the change request.\u003c/p\u003e",
                        "typeExposed": "ChangeInfo",
                        "type": "ChangeInfo"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chzrDelegationSet",
                        "name": "_chzrDelegationSet",
                        "shape": "DelegationSet",
                        "locationName": "DelegationSet",
                        "documentation": "\u003cp\u003eA complex type that contains name server information.\u003c/p\u003e",
                        "typeExposed": "DelegationSet",
                        "type": "DelegationSet"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chzrHostedZone",
                        "name": "_chzrHostedZone",
                        "shape": "HostedZone",
                        "locationName": "HostedZone",
                        "documentation": "\u003cp\u003eA complex type that contains identifying information about the hosted zone.\u003c/p\u003e",
                        "typeExposed": "HostedZone",
                        "type": "HostedZone"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chzrLocation",
                        "name": "_chzrLocation",
                        "shape": "ResourceURI",
                        "locationName": "Location",
                        "documentation": "\u003cp\u003eThe unique URL representing the new hosted zone.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "chzrVPC",
                        "name": "_chzrVPC",
                        "shape": "VPC",
                        "locationName": "VPC",
                        "documentation": null,
                        "typeExposed": "Maybe VPC",
                        "type": "Maybe VPC"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.CreateHostedZone",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "CreateHostedZone",
            "method": "post",
            "documentation": "\u003cp\u003e This action creates a new hosted zone.\u003c/p\u003e \u003cp\u003eTo create a new hosted zone, send a \u003ccode\u003ePOST\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/hostedzone\u003c/code\u003e resource. The request body must include an XML document with a \u003ccode\u003eCreateHostedZoneRequest\u003c/code\u003e element. The response returns the \u003ccode\u003eCreateHostedZoneResponse\u003c/code\u003e element that contains metadata about the hosted zone.\u003c/p\u003e \u003cp\u003eRoute 53 automatically creates a default SOA record and four NS records for the zone. The NS records in the hosted zone are the name servers you give your registrar to delegate your domain to. For more information about SOA and NS records, see \u003ca href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/SOA-NSrecords.html\"\u003eNS and SOA Records that Route 53 Creates for a Hosted Zone\u003c/a\u003e in the \u003ci\u003eAmazon Route 53 Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eWhen you create a zone, its initial status is \u003ccode\u003ePENDING\u003c/code\u003e. This means that it is not yet available on all DNS servers. The status of the zone changes to \u003ccode\u003eINSYNC\u003c/code\u003e when the NS and SOA records are available on all Route 53 DNS servers. \u003c/p\u003e \u003cp\u003eWhen trying to create a hosted zone using a reusable delegation set, you could specify an optional DelegationSetId, and Route53 would assign those 4 NS records for the zone, instead of alloting a new one.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "createHostedZone",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/hostedzone",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "chzName",
                    "name": "_chzName",
                    "shape": "DNSName",
                    "locationName": "Name",
                    "documentation": "\u003cp\u003eThe name of the domain. This must be a fully-specified domain, for example, www.example.com. The trailing dot is optional; Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.\u003c/p\u003e \u003cp\u003eThis is the name you have registered with your DNS registrar. You should ask your registrar to change the authoritative name servers for your domain to the set of \u003ccode\u003eNameServers\u003c/code\u003e elements returned in \u003ccode\u003eDelegationSet\u003c/code\u003e.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chzName",
                        "name": "_chzName",
                        "shape": "DNSName",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the domain. This must be a fully-specified domain, for example, www.example.com. The trailing dot is optional; Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.\u003c/p\u003e \u003cp\u003eThis is the name you have registered with your DNS registrar. You should ask your registrar to change the authoritative name servers for your domain to the set of \u003ccode\u003eNameServers\u003c/code\u003e elements returned in \u003ccode\u003eDelegationSet\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chzCallerReference",
                        "name": "_chzCallerReference",
                        "shape": "Nonce",
                        "locationName": "CallerReference",
                        "documentation": "\u003cp\u003eA unique string that identifies the request and that allows failed \u003ccode\u003eCreateHostedZone\u003c/code\u003e requests to be retried without the risk of executing the operation twice. You must use a unique \u003ccode\u003eCallerReference\u003c/code\u003e string every time you create a hosted zone. \u003ccode\u003eCallerReference\u003c/code\u003e can be any unique string; you might choose to use a string that identifies your project, such as \u003ccode\u003eDNSMigration_01\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eValid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "CreateHostedZone",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "chzVPC",
                        "name": "_chzVPC",
                        "shape": "VPC",
                        "locationName": "VPC",
                        "documentation": "\u003cp\u003eThe VPC that you want your hosted zone to be associated with. By providing this parameter, your newly created hosted cannot be resolved anywhere other than the given VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe VPC",
                        "type": "Maybe VPC"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "chzHostedZoneConfig",
                        "name": "_chzHostedZoneConfig",
                        "shape": "HostedZoneConfig",
                        "locationName": "HostedZoneConfig",
                        "documentation": "\u003cp\u003eA complex type that contains an optional comment about your hosted zone.\u003c/p\u003e",
                        "typeExposed": "Maybe HostedZoneConfig",
                        "type": "Maybe HostedZoneConfig"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "chzDelegationSetId",
                        "name": "_chzDelegationSetId",
                        "shape": "ResourceId",
                        "locationName": "DelegationSetId",
                        "documentation": "\u003cp\u003eThe delegation set id of the reusable delgation set whose NS records you want to assign to the new hosted zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chzCallerReference",
                        "name": "_chzCallerReference",
                        "shape": "Nonce",
                        "locationName": "CallerReference",
                        "documentation": "\u003cp\u003eA unique string that identifies the request and that allows failed \u003ccode\u003eCreateHostedZone\u003c/code\u003e requests to be retried without the risk of executing the operation twice. You must use a unique \u003ccode\u003eCallerReference\u003c/code\u003e string every time you create a hosted zone. \u003ccode\u003eCallerReference\u003c/code\u003e can be any unique string; you might choose to use a string that identifies your project, such as \u003ccode\u003eDNSMigration_01\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eValid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "chzDelegationSetId",
                        "name": "_chzDelegationSetId",
                        "shape": "ResourceId",
                        "locationName": "DelegationSetId",
                        "documentation": "\u003cp\u003eThe delegation set id of the reusable delgation set whose NS records you want to assign to the new hosted zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "chzHostedZoneConfig",
                        "name": "_chzHostedZoneConfig",
                        "shape": "HostedZoneConfig",
                        "locationName": "HostedZoneConfig",
                        "documentation": "\u003cp\u003eA complex type that contains an optional comment about your hosted zone.\u003c/p\u003e",
                        "typeExposed": "Maybe HostedZoneConfig",
                        "type": "Maybe HostedZoneConfig"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "chzName",
                        "name": "_chzName",
                        "shape": "DNSName",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the domain. This must be a fully-specified domain, for example, www.example.com. The trailing dot is optional; Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.\u003c/p\u003e \u003cp\u003eThis is the name you have registered with your DNS registrar. You should ask your registrar to change the authoritative name servers for your domain to the set of \u003ccode\u003eNameServers\u003c/code\u003e elements returned in \u003ccode\u003eDelegationSet\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "chzVPC",
                        "name": "_chzVPC",
                        "shape": "VPC",
                        "locationName": "VPC",
                        "documentation": "\u003cp\u003eThe VPC that you want your hosted zone to be associated with. By providing this parameter, your newly created hosted cannot be resolved anywhere other than the given VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe VPC",
                        "type": "Maybe VPC"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 19,
                "ctor": "createReusableDelegationSetResponse",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "crdsrDelegationSet",
                    "name": "_crdsrDelegationSet",
                    "shape": "DelegationSet",
                    "locationName": "DelegationSet",
                    "documentation": "\u003cp\u003eA complex type that contains name server information.\u003c/p\u003e",
                    "typeExposed": "DelegationSet",
                    "type": "DelegationSet"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crdsrDelegationSet",
                        "name": "_crdsrDelegationSet",
                        "shape": "DelegationSet",
                        "locationName": "DelegationSet",
                        "documentation": "\u003cp\u003eA complex type that contains name server information.\u003c/p\u003e",
                        "typeExposed": "DelegationSet",
                        "type": "DelegationSet"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crdsrLocation",
                        "name": "_crdsrLocation",
                        "shape": "ResourceURI",
                        "locationName": "Location",
                        "documentation": "\u003cp\u003eThe unique URL representing the new reusbale delegation set.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "name": "CreateReusableDelegationSetResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crdsrDelegationSet",
                        "name": "_crdsrDelegationSet",
                        "shape": "DelegationSet",
                        "locationName": "DelegationSet",
                        "documentation": "\u003cp\u003eA complex type that contains name server information.\u003c/p\u003e",
                        "typeExposed": "DelegationSet",
                        "type": "DelegationSet"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crdsrLocation",
                        "name": "_crdsrLocation",
                        "shape": "ResourceURI",
                        "locationName": "Location",
                        "documentation": "\u003cp\u003eThe unique URL representing the new reusbale delegation set.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.CreateReusableDelegationSet",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "CreateReusableDelegationSet",
            "method": "post",
            "documentation": "\u003cp\u003e This action creates a reusable delegationSet.\u003c/p\u003e \u003cp\u003e To create a new reusable delegationSet, send a \u003ccode\u003ePOST\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/delegationset\u003c/code\u003e resource. The request body must include an XML document with a \u003ccode\u003eCreateReusableDelegationSetRequest\u003c/code\u003e element. The response returns the \u003ccode\u003eCreateReusableDelegationSetResponse\u003c/code\u003e element that contains metadata about the delegationSet. \u003c/p\u003e \u003cp\u003e If the optional parameter HostedZoneId is specified, it marks the delegationSet associated with that particular hosted zone as reusable. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "createReusableDelegationSet",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/delegationset",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "crdsCallerReference",
                    "name": "_crdsCallerReference",
                    "shape": "Nonce",
                    "locationName": "CallerReference",
                    "documentation": "\u003cp\u003eA unique string that identifies the request and that allows failed \u003ccode\u003eCreateReusableDelegationSet\u003c/code\u003e requests to be retried without the risk of executing the operation twice. You must use a unique \u003ccode\u003eCallerReference\u003c/code\u003e string every time you create a reusable delegation set. \u003ccode\u003eCallerReference\u003c/code\u003e can be any unique string; you might choose to use a string that identifies your project, such as \u003ccode\u003eDNSMigration_01\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eValid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crdsCallerReference",
                        "name": "_crdsCallerReference",
                        "shape": "Nonce",
                        "locationName": "CallerReference",
                        "documentation": "\u003cp\u003eA unique string that identifies the request and that allows failed \u003ccode\u003eCreateReusableDelegationSet\u003c/code\u003e requests to be retried without the risk of executing the operation twice. You must use a unique \u003ccode\u003eCallerReference\u003c/code\u003e string every time you create a reusable delegation set. \u003ccode\u003eCallerReference\u003c/code\u003e can be any unique string; you might choose to use a string that identifies your project, such as \u003ccode\u003eDNSMigration_01\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eValid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "CreateReusableDelegationSet",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crdsHostedZoneId",
                        "name": "_crdsHostedZoneId",
                        "shape": "ResourceId",
                        "locationName": "HostedZoneId",
                        "documentation": "\u003cp\u003eThe ID of the hosted zone whose delegation set you want to mark as reusable. It is an optional parameter.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crdsCallerReference",
                        "name": "_crdsCallerReference",
                        "shape": "Nonce",
                        "locationName": "CallerReference",
                        "documentation": "\u003cp\u003eA unique string that identifies the request and that allows failed \u003ccode\u003eCreateReusableDelegationSet\u003c/code\u003e requests to be retried without the risk of executing the operation twice. You must use a unique \u003ccode\u003eCallerReference\u003c/code\u003e string every time you create a reusable delegation set. \u003ccode\u003eCallerReference\u003c/code\u003e can be any unique string; you might choose to use a string that identifies your project, such as \u003ccode\u003eDNSMigration_01\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eValid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crdsHostedZoneId",
                        "name": "_crdsHostedZoneId",
                        "shape": "ResourceId",
                        "locationName": "HostedZoneId",
                        "documentation": "\u003cp\u003eThe ID of the hosted zone whose delegation set you want to mark as reusable. It is an optional parameter.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteHealthCheckResponse",
                "wrapper": false,
                "required": [],
                "shared": false,
                "name": "DeleteHealthCheckResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.Route53.DeleteHealthCheck",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "DeleteHealthCheck",
            "method": "delete",
            "documentation": "\u003cp\u003eThis action deletes a health check. To delete a health check, send a \u003ccode\u003eDELETE\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/healthcheck/\u003ci\u003ehealth check ID\u003c/i\u003e\u003c/code\u003e resource.\u003c/p\u003e \u003cimportant\u003e You can delete a health check only if there are no resource record sets associated with this health check. If resource record sets are associated with this health check, you must disassociate them before you can delete your health check. If you try to delete a health check that is associated with resource record sets, Route 53 will deny your request with a \u003ccode\u003eHealthCheckInUse\u003c/code\u003e error. For information about disassociating the records from your health check, see \u003ca\u003eChangeResourceRecordSets\u003c/a\u003e.\u003c/important\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteHealthCheck",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dhcHealthCheckId",
                    "name": "_dhcHealthCheckId",
                    "shape": "HealthCheckId",
                    "locationName": "HealthCheckId",
                    "documentation": "\u003cp\u003eThe ID of the health check to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2013-04-01/healthcheck/",
                        "type": "const"
                    },
                    {
                        "value": "_dhcHealthCheckId",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dhcHealthCheckId",
                        "name": "_dhcHealthCheckId",
                        "shape": "HealthCheckId",
                        "locationName": "HealthCheckId",
                        "documentation": "\u003cp\u003eThe ID of the health check to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "DeleteHealthCheck",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dhcHealthCheckId",
                        "name": "_dhcHealthCheckId",
                        "shape": "HealthCheckId",
                        "locationName": "HealthCheckId",
                        "documentation": "\u003cp\u003eThe ID of the health check to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteHostedZoneResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dhzrChangeInfo",
                    "name": "_dhzrChangeInfo",
                    "shape": "ChangeInfo",
                    "locationName": "ChangeInfo",
                    "documentation": "\u003cp\u003eA complex type that contains the ID, the status, and the date and time of your delete request.\u003c/p\u003e",
                    "typeExposed": "ChangeInfo",
                    "type": "ChangeInfo"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dhzrChangeInfo",
                    "name": "_dhzrChangeInfo",
                    "shape": "ChangeInfo",
                    "locationName": "ChangeInfo",
                    "documentation": "\u003cp\u003eA complex type that contains the ID, the status, and the date and time of your delete request.\u003c/p\u003e",
                    "typeExposed": "ChangeInfo",
                    "type": "ChangeInfo"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dhzrChangeInfo",
                        "name": "_dhzrChangeInfo",
                        "shape": "ChangeInfo",
                        "locationName": "ChangeInfo",
                        "documentation": "\u003cp\u003eA complex type that contains the ID, the status, and the date and time of your delete request.\u003c/p\u003e",
                        "typeExposed": "ChangeInfo",
                        "type": "ChangeInfo"
                    }
                ],
                "shared": false,
                "name": "DeleteHostedZoneResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dhzrChangeInfo",
                        "name": "_dhzrChangeInfo",
                        "shape": "ChangeInfo",
                        "locationName": "ChangeInfo",
                        "documentation": "\u003cp\u003eA complex type that contains the ID, the status, and the date and time of your delete request.\u003c/p\u003e",
                        "typeExposed": "ChangeInfo",
                        "type": "ChangeInfo"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.DeleteHostedZone",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "DeleteHostedZone",
            "method": "delete",
            "documentation": "\u003cp\u003eThis action deletes a hosted zone. To delete a hosted zone, send a \u003ccode\u003eDELETE\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/hostedzone/\u003ci\u003ehosted zone ID\u003c/i\u003e\u003c/code\u003e resource.\u003c/p\u003e \u003cp\u003eFor more information about deleting a hosted zone, see \u003ca href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DeleteHostedZone.html\"\u003eDeleting a Hosted Zone\u003c/a\u003e in the \u003ci\u003eAmazon Route 53 Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cimportant\u003e You can delete a hosted zone only if there are no resource record sets other than the default SOA record and NS resource record sets. If your hosted zone contains other resource record sets, you must delete them before you can delete your hosted zone. If you try to delete a hosted zone that contains other resource record sets, Route 53 will deny your request with a \u003ccode\u003eHostedZoneNotEmpty\u003c/code\u003e error. For information about deleting records from your hosted zone, see \u003ca\u003eChangeResourceRecordSets\u003c/a\u003e.\u003c/important\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteHostedZone",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dhzId",
                    "name": "_dhzId",
                    "shape": "ResourceId",
                    "locationName": "Id",
                    "documentation": "\u003cp\u003e The ID of the hosted zone you want to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2013-04-01/hostedzone/",
                        "type": "const"
                    },
                    {
                        "value": "_dhzId",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dhzId",
                        "name": "_dhzId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The ID of the hosted zone you want to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "DeleteHostedZone",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dhzId",
                        "name": "_dhzId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The ID of the hosted zone you want to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteReusableDelegationSetResponse",
                "wrapper": false,
                "required": [],
                "shared": false,
                "name": "DeleteReusableDelegationSetResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.Route53.DeleteReusableDelegationSet",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "DeleteReusableDelegationSet",
            "method": "delete",
            "documentation": "\u003cp\u003eThis action deletes a reusable delegation set. To delete a reusable delegation set, send a \u003ccode\u003eDELETE\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/delegationset/\u003ci\u003edelegation set ID\u003c/i\u003e\u003c/code\u003e resource.\u003c/p\u003e \u003cimportant\u003e You can delete a reusable delegation set only if there are no associated hosted zones. If your reusable delegation set contains associated hosted zones, you must delete them before you can delete your reusable delegation set. If you try to delete a reusable delegation set that contains associated hosted zones, Route 53 will deny your request with a \u003ccode\u003eDelegationSetInUse\u003c/code\u003e error.\u003c/important\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteReusableDelegationSet",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "drdsId",
                    "name": "_drdsId",
                    "shape": "ResourceId",
                    "locationName": "Id",
                    "documentation": "\u003cp\u003e The ID of the reusable delegation set you want to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2013-04-01/delegationset/",
                        "type": "const"
                    },
                    {
                        "value": "_drdsId",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drdsId",
                        "name": "_drdsId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The ID of the reusable delegation set you want to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "DeleteReusableDelegationSet",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drdsId",
                        "name": "_drdsId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The ID of the reusable delegation set you want to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "disassociateVPCFromHostedZoneResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dvpcfhzrChangeInfo",
                    "name": "_dvpcfhzrChangeInfo",
                    "shape": "ChangeInfo",
                    "locationName": "ChangeInfo",
                    "documentation": "\u003cp\u003eA complex type that contains the ID, the status, and the date and time of your \u003ccode\u003eDisassociateVPCFromHostedZoneRequest\u003c/code\u003e.\u003c/p\u003e",
                    "typeExposed": "ChangeInfo",
                    "type": "ChangeInfo"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dvpcfhzrChangeInfo",
                    "name": "_dvpcfhzrChangeInfo",
                    "shape": "ChangeInfo",
                    "locationName": "ChangeInfo",
                    "documentation": "\u003cp\u003eA complex type that contains the ID, the status, and the date and time of your \u003ccode\u003eDisassociateVPCFromHostedZoneRequest\u003c/code\u003e.\u003c/p\u003e",
                    "typeExposed": "ChangeInfo",
                    "type": "ChangeInfo"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvpcfhzrChangeInfo",
                        "name": "_dvpcfhzrChangeInfo",
                        "shape": "ChangeInfo",
                        "locationName": "ChangeInfo",
                        "documentation": "\u003cp\u003eA complex type that contains the ID, the status, and the date and time of your \u003ccode\u003eDisassociateVPCFromHostedZoneRequest\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "ChangeInfo",
                        "type": "ChangeInfo"
                    }
                ],
                "shared": false,
                "name": "DisassociateVPCFromHostedZoneResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvpcfhzrChangeInfo",
                        "name": "_dvpcfhzrChangeInfo",
                        "shape": "ChangeInfo",
                        "locationName": "ChangeInfo",
                        "documentation": "\u003cp\u003eA complex type that contains the ID, the status, and the date and time of your \u003ccode\u003eDisassociateVPCFromHostedZoneRequest\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "ChangeInfo",
                        "type": "ChangeInfo"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.DisassociateVPCFromHostedZone",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "DisassociateVPCFromHostedZone",
            "method": "post",
            "documentation": "\u003cp\u003e This action disassociates a VPC from an hosted zone. \u003c/p\u003e \u003cp\u003e To disassociate a VPC to a hosted zone, send a \u003ccode\u003ePOST\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/hostedzone/\u003ci\u003ehosted zone ID\u003c/i\u003e/disassociatevpc\u003c/code\u003e resource. The request body must include an XML document with a \u003ccode\u003eDisassociateVPCFromHostedZoneRequest\u003c/code\u003e element. The response returns the \u003ccode\u003eDisassociateVPCFromHostedZoneResponse\u003c/code\u003e element that contains \u003ccode\u003eChangeInfo\u003c/code\u003e for you to track the progress of the \u003ccode\u003eDisassociateVPCFromHostedZoneRequest\u003c/code\u003e you made. See \u003ccode\u003eGetChange\u003c/code\u003e operation for how to track the progress of your change.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "disassociateVPCFromHostedZone",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/hostedzone/",
                        "type": "const"
                    },
                    {
                        "value": "_dvpcfhzId",
                        "type": "var"
                    },
                    {
                        "value": "/disassociatevpc",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dvpcfhzVPC",
                    "name": "_dvpcfhzVPC",
                    "shape": "VPC",
                    "locationName": "VPC",
                    "documentation": "\u003cp\u003eThe VPC that you want your hosted zone to be disassociated from. \u003c/p\u003e",
                    "typeExposed": "VPC",
                    "type": "VPC"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvpcfhzHostedZoneId",
                        "name": "_dvpcfhzHostedZoneId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The ID of the hosted zone you want to disassociate your VPC from.\u003c/p\u003e \u003cp\u003eNote that you cannot disassociate the last VPC from a hosted zone.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvpcfhzVPC",
                        "name": "_dvpcfhzVPC",
                        "shape": "VPC",
                        "locationName": "VPC",
                        "documentation": "\u003cp\u003eThe VPC that you want your hosted zone to be disassociated from. \u003c/p\u003e",
                        "typeExposed": "VPC",
                        "type": "VPC"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "DisassociateVPCFromHostedZone",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvpcfhzComment",
                        "name": "_dvpcfhzComment",
                        "shape": "DisassociateVPCComment",
                        "locationName": "Comment",
                        "documentation": "\u003cp\u003e\u003ci\u003eOptional:\u003c/i\u003e Any comments you want to include about a \u003ccode\u003eDisassociateVPCFromHostedZoneRequest\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvpcfhzComment",
                        "name": "_dvpcfhzComment",
                        "shape": "DisassociateVPCComment",
                        "locationName": "Comment",
                        "documentation": "\u003cp\u003e\u003ci\u003eOptional:\u003c/i\u003e Any comments you want to include about a \u003ccode\u003eDisassociateVPCFromHostedZoneRequest\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvpcfhzHostedZoneId",
                        "name": "_dvpcfhzHostedZoneId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The ID of the hosted zone you want to disassociate your VPC from.\u003c/p\u003e \u003cp\u003eNote that you cannot disassociate the last VPC from a hosted zone.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvpcfhzVPC",
                        "name": "_dvpcfhzVPC",
                        "shape": "VPC",
                        "locationName": "VPC",
                        "documentation": "\u003cp\u003eThe VPC that you want your hosted zone to be disassociated from. \u003c/p\u003e",
                        "typeExposed": "VPC",
                        "type": "VPC"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getChangeResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gcrChangeInfo",
                    "name": "_gcrChangeInfo",
                    "shape": "ChangeInfo",
                    "locationName": "ChangeInfo",
                    "documentation": "\u003cp\u003eA complex type that contains information about the specified change batch, including the change batch ID, the status of the change, and the date and time of the request.\u003c/p\u003e",
                    "typeExposed": "ChangeInfo",
                    "type": "ChangeInfo"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gcrChangeInfo",
                    "name": "_gcrChangeInfo",
                    "shape": "ChangeInfo",
                    "locationName": "ChangeInfo",
                    "documentation": "\u003cp\u003eA complex type that contains information about the specified change batch, including the change batch ID, the status of the change, and the date and time of the request.\u003c/p\u003e",
                    "typeExposed": "ChangeInfo",
                    "type": "ChangeInfo"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gcrChangeInfo",
                        "name": "_gcrChangeInfo",
                        "shape": "ChangeInfo",
                        "locationName": "ChangeInfo",
                        "documentation": "\u003cp\u003eA complex type that contains information about the specified change batch, including the change batch ID, the status of the change, and the date and time of the request.\u003c/p\u003e",
                        "typeExposed": "ChangeInfo",
                        "type": "ChangeInfo"
                    }
                ],
                "shared": false,
                "name": "GetChangeResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gcrChangeInfo",
                        "name": "_gcrChangeInfo",
                        "shape": "ChangeInfo",
                        "locationName": "ChangeInfo",
                        "documentation": "\u003cp\u003eA complex type that contains information about the specified change batch, including the change batch ID, the status of the change, and the date and time of the request.\u003c/p\u003e",
                        "typeExposed": "ChangeInfo",
                        "type": "ChangeInfo"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.GetChange",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "GetChange",
            "method": "get",
            "documentation": "\u003cp\u003e This action returns the current status of a change batch request. The status is one of the following values:\u003c/p\u003e \u003cp\u003e- \u003ccode\u003ePENDING\u003c/code\u003e indicates that the changes in this request have not replicated to all Route 53 DNS servers. This is the initial status of all change batch requests.\u003c/p\u003e \u003cp\u003e- \u003ccode\u003eINSYNC\u003c/code\u003e indicates that the changes have replicated to all Amazon Route 53 DNS servers. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getChange",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gcId",
                    "name": "_gcId",
                    "shape": "ResourceId",
                    "locationName": "Id",
                    "documentation": "\u003cp\u003e The ID of the change batch request. The value that you specify here is the value that \u003ccode\u003eChangeResourceRecordSets\u003c/code\u003e returned in the Id element when you submitted the request.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2013-04-01/change/",
                        "type": "const"
                    },
                    {
                        "value": "_gcId",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gcId",
                        "name": "_gcId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The ID of the change batch request. The value that you specify here is the value that \u003ccode\u003eChangeResourceRecordSets\u003c/code\u003e returned in the Id element when you submitted the request.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetChange",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gcId",
                        "name": "_gcId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The ID of the change batch request. The value that you specify here is the value that \u003ccode\u003eChangeResourceRecordSets\u003c/code\u003e returned in the Id element when you submitted the request.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Foldable",
                    "Traversable",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getCheckerIpRangesResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "gcirrCheckerIpRanges",
                    "name": "_gcirrCheckerIpRanges",
                    "shape": "CheckerIpRanges",
                    "locationName": "CheckerIpRanges",
                    "documentation": "\u003cp\u003eA complex type that contains sorted list of IP ranges in CIDR format for Amazon Route 53 health checkers.\u003c/p\u003e",
                    "typeExposed": "[Text]",
                    "type": "[Text]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "gcirrCheckerIpRanges",
                    "name": "_gcirrCheckerIpRanges",
                    "shape": "CheckerIpRanges",
                    "locationName": "CheckerIpRanges",
                    "documentation": "\u003cp\u003eA complex type that contains sorted list of IP ranges in CIDR format for Amazon Route 53 health checkers.\u003c/p\u003e",
                    "typeExposed": "[Text]",
                    "type": "[Text]"
                },
                "required": [],
                "shared": false,
                "name": "GetCheckerIpRangesResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gcirrCheckerIpRanges",
                        "name": "_gcirrCheckerIpRanges",
                        "shape": "CheckerIpRanges",
                        "locationName": "CheckerIpRanges",
                        "documentation": "\u003cp\u003eA complex type that contains sorted list of IP ranges in CIDR format for Amazon Route 53 health checkers.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gcirrCheckerIpRanges",
                        "name": "_gcirrCheckerIpRanges",
                        "shape": "CheckerIpRanges",
                        "locationName": "CheckerIpRanges",
                        "documentation": "\u003cp\u003eA complex type that contains sorted list of IP ranges in CIDR format for Amazon Route 53 health checkers.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.GetCheckerIpRanges",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "GetCheckerIpRanges",
            "method": "get",
            "documentation": "\u003cp\u003e To retrieve a list of the IP ranges used by Amazon Route 53 health checkers to check the health of your resources, send a \u003ccode\u003eGET\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/checkeripranges\u003c/code\u003e resource. You can use these IP addresses to configure router and firewall rules to allow health checkers to check the health of your resources.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getCheckerIpRanges",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/checkeripranges",
                        "type": "const"
                    }
                ],
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetCheckerIpRanges",
                "query": [],
                "type": "empty",
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getGeoLocationResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gglrGeoLocationDetails",
                    "name": "_gglrGeoLocationDetails",
                    "shape": "GeoLocationDetails",
                    "locationName": "GeoLocationDetails",
                    "documentation": "\u003cp\u003eA complex type that contains the information about the specified geo location.\u003c/p\u003e",
                    "typeExposed": "GeoLocationDetails",
                    "type": "GeoLocationDetails"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gglrGeoLocationDetails",
                    "name": "_gglrGeoLocationDetails",
                    "shape": "GeoLocationDetails",
                    "locationName": "GeoLocationDetails",
                    "documentation": "\u003cp\u003eA complex type that contains the information about the specified geo location.\u003c/p\u003e",
                    "typeExposed": "GeoLocationDetails",
                    "type": "GeoLocationDetails"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gglrGeoLocationDetails",
                        "name": "_gglrGeoLocationDetails",
                        "shape": "GeoLocationDetails",
                        "locationName": "GeoLocationDetails",
                        "documentation": "\u003cp\u003eA complex type that contains the information about the specified geo location.\u003c/p\u003e",
                        "typeExposed": "GeoLocationDetails",
                        "type": "GeoLocationDetails"
                    }
                ],
                "shared": false,
                "name": "GetGeoLocationResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gglrGeoLocationDetails",
                        "name": "_gglrGeoLocationDetails",
                        "shape": "GeoLocationDetails",
                        "locationName": "GeoLocationDetails",
                        "documentation": "\u003cp\u003eA complex type that contains the information about the specified geo location.\u003c/p\u003e",
                        "typeExposed": "GeoLocationDetails",
                        "type": "GeoLocationDetails"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.GetGeoLocation",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "GetGeoLocation",
            "method": "get",
            "documentation": "\u003cp\u003e To retrieve a single geo location, send a \u003ccode\u003eGET\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/geolocation\u003c/code\u003e resource with one of these options: continentcode | countrycode | countrycode and subdivisioncode.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 19,
                "ctor": "getGeoLocation",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/geolocation",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 16,
                "name": "GetGeoLocation",
                "query": [
                    {
                        "field": "_gglContinentCode",
                        "locationName": "continentcode",
                        "type": "field"
                    },
                    {
                        "field": "_gglCountryCode",
                        "locationName": "countrycode",
                        "type": "field"
                    },
                    {
                        "field": "_gglSubdivisionCode",
                        "locationName": "subdivisioncode",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gglContinentCode",
                        "name": "_gglContinentCode",
                        "shape": "GeoLocationContinentCode",
                        "locationName": "continentcode",
                        "documentation": "\u003cp\u003eThe code for a continent geo location. Note: only continent locations have a continent code.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eAF\u003c/code\u003e | \u003ccode\u003eAN\u003c/code\u003e | \u003ccode\u003eAS\u003c/code\u003e | \u003ccode\u003eEU\u003c/code\u003e | \u003ccode\u003eOC\u003c/code\u003e | \u003ccode\u003eNA\u003c/code\u003e | \u003ccode\u003eSA\u003c/code\u003e\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003eContinentCode\u003c/code\u003e with either \u003ccode\u003eCountryCode\u003c/code\u003e or \u003ccode\u003eSubdivisionCode\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gglCountryCode",
                        "name": "_gglCountryCode",
                        "shape": "GeoLocationCountryCode",
                        "locationName": "countrycode",
                        "documentation": "\u003cp\u003eThe code for a country geo location. The default location uses '*' for the country code and will match all locations that are not matched by a geo location.\u003c/p\u003e \u003cp\u003eThe default geo location uses a \u003ccode\u003e*\u003c/code\u003e for the country code. All other country codes follow the ISO 3166 two-character code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gglSubdivisionCode",
                        "name": "_gglSubdivisionCode",
                        "shape": "GeoLocationSubdivisionCode",
                        "locationName": "subdivisioncode",
                        "documentation": "\u003cp\u003eThe code for a country's subdivision (e.g., a province of Canada). A subdivision code is only valid with the appropriate country code.\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003eSubdivisionCode\u003c/code\u003e without \u003ccode\u003eCountryCode\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gglContinentCode",
                        "name": "_gglContinentCode",
                        "shape": "GeoLocationContinentCode",
                        "locationName": "continentcode",
                        "documentation": "\u003cp\u003eThe code for a continent geo location. Note: only continent locations have a continent code.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eAF\u003c/code\u003e | \u003ccode\u003eAN\u003c/code\u003e | \u003ccode\u003eAS\u003c/code\u003e | \u003ccode\u003eEU\u003c/code\u003e | \u003ccode\u003eOC\u003c/code\u003e | \u003ccode\u003eNA\u003c/code\u003e | \u003ccode\u003eSA\u003c/code\u003e\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003eContinentCode\u003c/code\u003e with either \u003ccode\u003eCountryCode\u003c/code\u003e or \u003ccode\u003eSubdivisionCode\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gglCountryCode",
                        "name": "_gglCountryCode",
                        "shape": "GeoLocationCountryCode",
                        "locationName": "countrycode",
                        "documentation": "\u003cp\u003eThe code for a country geo location. The default location uses '*' for the country code and will match all locations that are not matched by a geo location.\u003c/p\u003e \u003cp\u003eThe default geo location uses a \u003ccode\u003e*\u003c/code\u003e for the country code. All other country codes follow the ISO 3166 two-character code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gglSubdivisionCode",
                        "name": "_gglSubdivisionCode",
                        "shape": "GeoLocationSubdivisionCode",
                        "locationName": "subdivisioncode",
                        "documentation": "\u003cp\u003eThe code for a country's subdivision (e.g., a province of Canada). A subdivision code is only valid with the appropriate country code.\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003eSubdivisionCode\u003c/code\u003e without \u003ccode\u003eCountryCode\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getHealthCheckResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ghcrHealthCheck",
                    "name": "_ghcrHealthCheck",
                    "shape": "HealthCheck",
                    "locationName": "HealthCheck",
                    "documentation": "\u003cp\u003eA complex type that contains the information about the specified health check.\u003c/p\u003e",
                    "typeExposed": "HealthCheck",
                    "type": "HealthCheck"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ghcrHealthCheck",
                    "name": "_ghcrHealthCheck",
                    "shape": "HealthCheck",
                    "locationName": "HealthCheck",
                    "documentation": "\u003cp\u003eA complex type that contains the information about the specified health check.\u003c/p\u003e",
                    "typeExposed": "HealthCheck",
                    "type": "HealthCheck"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghcrHealthCheck",
                        "name": "_ghcrHealthCheck",
                        "shape": "HealthCheck",
                        "locationName": "HealthCheck",
                        "documentation": "\u003cp\u003eA complex type that contains the information about the specified health check.\u003c/p\u003e",
                        "typeExposed": "HealthCheck",
                        "type": "HealthCheck"
                    }
                ],
                "shared": false,
                "name": "GetHealthCheckResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghcrHealthCheck",
                        "name": "_ghcrHealthCheck",
                        "shape": "HealthCheck",
                        "locationName": "HealthCheck",
                        "documentation": "\u003cp\u003eA complex type that contains the information about the specified health check.\u003c/p\u003e",
                        "typeExposed": "HealthCheck",
                        "type": "HealthCheck"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.GetHealthCheck",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "GetHealthCheck",
            "method": "get",
            "documentation": "\u003cp\u003e To retrieve the health check, send a \u003ccode\u003eGET\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/healthcheck/\u003ci\u003ehealth check ID\u003c/i\u003e\u003c/code\u003e resource. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getHealthCheck",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ghcHealthCheckId",
                    "name": "_ghcHealthCheckId",
                    "shape": "HealthCheckId",
                    "locationName": "HealthCheckId",
                    "documentation": "\u003cp\u003eThe ID of the health check to retrieve.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2013-04-01/healthcheck/",
                        "type": "const"
                    },
                    {
                        "value": "_ghcHealthCheckId",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghcHealthCheckId",
                        "name": "_ghcHealthCheckId",
                        "shape": "HealthCheckId",
                        "locationName": "HealthCheckId",
                        "documentation": "\u003cp\u003eThe ID of the health check to retrieve.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetHealthCheck",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghcHealthCheckId",
                        "name": "_ghcHealthCheckId",
                        "shape": "HealthCheckId",
                        "locationName": "HealthCheckId",
                        "documentation": "\u003cp\u003eThe ID of the health check to retrieve.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum",
                    "Num"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getHealthCheckCountResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ghccrHealthCheckCount",
                    "name": "_ghccrHealthCheckCount",
                    "shape": "HealthCheckCount",
                    "locationName": "HealthCheckCount",
                    "documentation": "\u003cp\u003e The number of health checks associated with the current AWS account.\u003c/p\u003e",
                    "typeExposed": "Integer",
                    "type": "Integer"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ghccrHealthCheckCount",
                    "name": "_ghccrHealthCheckCount",
                    "shape": "HealthCheckCount",
                    "locationName": "HealthCheckCount",
                    "documentation": "\u003cp\u003e The number of health checks associated with the current AWS account.\u003c/p\u003e",
                    "typeExposed": "Integer",
                    "type": "Integer"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghccrHealthCheckCount",
                        "name": "_ghccrHealthCheckCount",
                        "shape": "HealthCheckCount",
                        "locationName": "HealthCheckCount",
                        "documentation": "\u003cp\u003e The number of health checks associated with the current AWS account.\u003c/p\u003e",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    }
                ],
                "shared": false,
                "name": "GetHealthCheckCountResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghccrHealthCheckCount",
                        "name": "_ghccrHealthCheckCount",
                        "shape": "HealthCheckCount",
                        "locationName": "HealthCheckCount",
                        "documentation": "\u003cp\u003e The number of health checks associated with the current AWS account.\u003c/p\u003e",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.GetHealthCheckCount",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "GetHealthCheckCount",
            "method": "get",
            "documentation": "\u003cp\u003e To retrieve a count of all your health checks, send a \u003ccode\u003eGET\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/healthcheckcount\u003c/code\u003e resource.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getHealthCheckCount",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/healthcheckcount",
                        "type": "const"
                    }
                ],
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetHealthCheckCount",
                "query": [],
                "type": "empty",
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Foldable",
                    "Traversable",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getHealthCheckLastFailureReasonResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "ghclfrrHealthCheckObservations",
                    "name": "_ghclfrrHealthCheckObservations",
                    "shape": "HealthCheckObservations",
                    "locationName": "HealthCheckObservations",
                    "documentation": "\u003cp\u003eA list that contains one \u003ccode\u003eHealthCheckObservation\u003c/code\u003e element for each Route 53 health checker.\u003c/p\u003e",
                    "typeExposed": "[HealthCheckObservation]",
                    "type": "[HealthCheckObservation]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "ghclfrrHealthCheckObservations",
                    "name": "_ghclfrrHealthCheckObservations",
                    "shape": "HealthCheckObservations",
                    "locationName": "HealthCheckObservations",
                    "documentation": "\u003cp\u003eA list that contains one \u003ccode\u003eHealthCheckObservation\u003c/code\u003e element for each Route 53 health checker.\u003c/p\u003e",
                    "typeExposed": "[HealthCheckObservation]",
                    "type": "[HealthCheckObservation]"
                },
                "required": [],
                "shared": false,
                "name": "GetHealthCheckLastFailureReasonResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ghclfrrHealthCheckObservations",
                        "name": "_ghclfrrHealthCheckObservations",
                        "shape": "HealthCheckObservations",
                        "locationName": "HealthCheckObservations",
                        "documentation": "\u003cp\u003eA list that contains one \u003ccode\u003eHealthCheckObservation\u003c/code\u003e element for each Route 53 health checker.\u003c/p\u003e",
                        "typeExposed": "[HealthCheckObservation]",
                        "type": "[HealthCheckObservation]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ghclfrrHealthCheckObservations",
                        "name": "_ghclfrrHealthCheckObservations",
                        "shape": "HealthCheckObservations",
                        "locationName": "HealthCheckObservations",
                        "documentation": "\u003cp\u003eA list that contains one \u003ccode\u003eHealthCheckObservation\u003c/code\u003e element for each Route 53 health checker.\u003c/p\u003e",
                        "typeExposed": "[HealthCheckObservation]",
                        "type": "[HealthCheckObservation]"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.GetHealthCheckLastFailureReason",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "GetHealthCheckLastFailureReason",
            "method": "get",
            "documentation": "\u003cp\u003eIf you want to learn why a health check is currently failing or why it failed most recently (if at all), you can get the failure reason for the most recent failure. Send a \u003ccode\u003eGET\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/healthcheck/\u003ci\u003ehealth check ID\u003c/i\u003e/lastfailurereason\u003c/code\u003e resource.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getHealthCheckLastFailureReason",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ghclfrHealthCheckId",
                    "name": "_ghclfrHealthCheckId",
                    "shape": "HealthCheckId",
                    "locationName": "HealthCheckId",
                    "documentation": "\u003cp\u003eThe ID of the health check for which you want to retrieve the reason for the most recent failure.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2013-04-01/healthcheck/",
                        "type": "const"
                    },
                    {
                        "value": "_ghclfrHealthCheckId",
                        "type": "var"
                    },
                    {
                        "value": "/lastfailurereason",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghclfrHealthCheckId",
                        "name": "_ghclfrHealthCheckId",
                        "shape": "HealthCheckId",
                        "locationName": "HealthCheckId",
                        "documentation": "\u003cp\u003eThe ID of the health check for which you want to retrieve the reason for the most recent failure.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetHealthCheckLastFailureReason",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghclfrHealthCheckId",
                        "name": "_ghclfrHealthCheckId",
                        "shape": "HealthCheckId",
                        "locationName": "HealthCheckId",
                        "documentation": "\u003cp\u003eThe ID of the health check for which you want to retrieve the reason for the most recent failure.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Foldable",
                    "Traversable",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getHealthCheckStatusResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "ghcsrHealthCheckObservations",
                    "name": "_ghcsrHealthCheckObservations",
                    "shape": "HealthCheckObservations",
                    "locationName": "HealthCheckObservations",
                    "documentation": "\u003cp\u003eA list that contains one \u003ccode\u003eHealthCheckObservation\u003c/code\u003e element for each Route 53 health checker.\u003c/p\u003e",
                    "typeExposed": "[HealthCheckObservation]",
                    "type": "[HealthCheckObservation]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "ghcsrHealthCheckObservations",
                    "name": "_ghcsrHealthCheckObservations",
                    "shape": "HealthCheckObservations",
                    "locationName": "HealthCheckObservations",
                    "documentation": "\u003cp\u003eA list that contains one \u003ccode\u003eHealthCheckObservation\u003c/code\u003e element for each Route 53 health checker.\u003c/p\u003e",
                    "typeExposed": "[HealthCheckObservation]",
                    "type": "[HealthCheckObservation]"
                },
                "required": [],
                "shared": false,
                "name": "GetHealthCheckStatusResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ghcsrHealthCheckObservations",
                        "name": "_ghcsrHealthCheckObservations",
                        "shape": "HealthCheckObservations",
                        "locationName": "HealthCheckObservations",
                        "documentation": "\u003cp\u003eA list that contains one \u003ccode\u003eHealthCheckObservation\u003c/code\u003e element for each Route 53 health checker.\u003c/p\u003e",
                        "typeExposed": "[HealthCheckObservation]",
                        "type": "[HealthCheckObservation]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ghcsrHealthCheckObservations",
                        "name": "_ghcsrHealthCheckObservations",
                        "shape": "HealthCheckObservations",
                        "locationName": "HealthCheckObservations",
                        "documentation": "\u003cp\u003eA list that contains one \u003ccode\u003eHealthCheckObservation\u003c/code\u003e element for each Route 53 health checker.\u003c/p\u003e",
                        "typeExposed": "[HealthCheckObservation]",
                        "type": "[HealthCheckObservation]"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.GetHealthCheckStatus",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "GetHealthCheckStatus",
            "method": "get",
            "documentation": "\u003cp\u003e To retrieve the health check status, send a \u003ccode\u003eGET\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/healthcheck/\u003ci\u003ehealth check ID\u003c/i\u003e/status\u003c/code\u003e resource. You can use this call to get a health check's current status. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getHealthCheckStatus",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ghcsHealthCheckId",
                    "name": "_ghcsHealthCheckId",
                    "shape": "HealthCheckId",
                    "locationName": "HealthCheckId",
                    "documentation": "\u003cp\u003eThe ID of the health check for which you want to retrieve the most recent status.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2013-04-01/healthcheck/",
                        "type": "const"
                    },
                    {
                        "value": "_ghcsHealthCheckId",
                        "type": "var"
                    },
                    {
                        "value": "/status",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghcsHealthCheckId",
                        "name": "_ghcsHealthCheckId",
                        "shape": "HealthCheckId",
                        "locationName": "HealthCheckId",
                        "documentation": "\u003cp\u003eThe ID of the health check for which you want to retrieve the most recent status.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetHealthCheckStatus",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghcsHealthCheckId",
                        "name": "_ghcsHealthCheckId",
                        "shape": "HealthCheckId",
                        "locationName": "HealthCheckId",
                        "documentation": "\u003cp\u003eThe ID of the health check for which you want to retrieve the most recent status.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "getHostedZoneResponse",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ghzrHostedZone",
                    "name": "_ghzrHostedZone",
                    "shape": "HostedZone",
                    "locationName": "HostedZone",
                    "documentation": "\u003cp\u003eA complex type that contains the information about the specified hosted zone.\u003c/p\u003e",
                    "typeExposed": "HostedZone",
                    "type": "HostedZone"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghzrHostedZone",
                        "name": "_ghzrHostedZone",
                        "shape": "HostedZone",
                        "locationName": "HostedZone",
                        "documentation": "\u003cp\u003eA complex type that contains the information about the specified hosted zone.\u003c/p\u003e",
                        "typeExposed": "HostedZone",
                        "type": "HostedZone"
                    },
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghzrVPCs",
                        "name": "_ghzrVPCs",
                        "shape": "VPCs",
                        "locationName": "VPCs",
                        "documentation": "\u003cp\u003eA complex type that contains information about VPCs associated with the specified hosted zone.\u003c/p\u003e",
                        "typeExposed": "NonEmpty VPC",
                        "type": "List1 VPC"
                    }
                ],
                "shared": false,
                "name": "GetHostedZoneResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ghzrDelegationSet",
                        "name": "_ghzrDelegationSet",
                        "shape": "DelegationSet",
                        "locationName": "DelegationSet",
                        "documentation": "\u003cp\u003eA complex type that contains information about the name servers for the specified hosted zone.\u003c/p\u003e",
                        "typeExposed": "Maybe DelegationSet",
                        "type": "Maybe DelegationSet"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ghzrDelegationSet",
                        "name": "_ghzrDelegationSet",
                        "shape": "DelegationSet",
                        "locationName": "DelegationSet",
                        "documentation": "\u003cp\u003eA complex type that contains information about the name servers for the specified hosted zone.\u003c/p\u003e",
                        "typeExposed": "Maybe DelegationSet",
                        "type": "Maybe DelegationSet"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghzrHostedZone",
                        "name": "_ghzrHostedZone",
                        "shape": "HostedZone",
                        "locationName": "HostedZone",
                        "documentation": "\u003cp\u003eA complex type that contains the information about the specified hosted zone.\u003c/p\u003e",
                        "typeExposed": "HostedZone",
                        "type": "HostedZone"
                    },
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghzrVPCs",
                        "name": "_ghzrVPCs",
                        "shape": "VPCs",
                        "locationName": "VPCs",
                        "documentation": "\u003cp\u003eA complex type that contains information about VPCs associated with the specified hosted zone.\u003c/p\u003e",
                        "typeExposed": "NonEmpty VPC",
                        "type": "List1 VPC"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.GetHostedZone",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "GetHostedZone",
            "method": "get",
            "documentation": "\u003cp\u003e To retrieve the delegation set for a hosted zone, send a \u003ccode\u003eGET\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/hostedzone/\u003ci\u003ehosted zone ID\u003c/i\u003e\u003c/code\u003e resource. The delegation set is the four Route 53 name servers that were assigned to the hosted zone when you created it.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getHostedZone",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ghzId",
                    "name": "_ghzId",
                    "shape": "ResourceId",
                    "locationName": "Id",
                    "documentation": "\u003cp\u003eThe ID of the hosted zone for which you want to get a list of the name servers in the delegation set.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2013-04-01/hostedzone/",
                        "type": "const"
                    },
                    {
                        "value": "_ghzId",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghzId",
                        "name": "_ghzId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe ID of the hosted zone for which you want to get a list of the name servers in the delegation set.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetHostedZone",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ghzId",
                        "name": "_ghzId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe ID of the hosted zone for which you want to get a list of the name servers in the delegation set.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getReusableDelegationSetResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "grdsrDelegationSet",
                    "name": "_grdsrDelegationSet",
                    "shape": "DelegationSet",
                    "locationName": "DelegationSet",
                    "documentation": "\u003cp\u003eA complex type that contains the information about the nameservers for the specified delegation set ID.\u003c/p\u003e",
                    "typeExposed": "DelegationSet",
                    "type": "DelegationSet"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "grdsrDelegationSet",
                    "name": "_grdsrDelegationSet",
                    "shape": "DelegationSet",
                    "locationName": "DelegationSet",
                    "documentation": "\u003cp\u003eA complex type that contains the information about the nameservers for the specified delegation set ID.\u003c/p\u003e",
                    "typeExposed": "DelegationSet",
                    "type": "DelegationSet"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grdsrDelegationSet",
                        "name": "_grdsrDelegationSet",
                        "shape": "DelegationSet",
                        "locationName": "DelegationSet",
                        "documentation": "\u003cp\u003eA complex type that contains the information about the nameservers for the specified delegation set ID.\u003c/p\u003e",
                        "typeExposed": "DelegationSet",
                        "type": "DelegationSet"
                    }
                ],
                "shared": false,
                "name": "GetReusableDelegationSetResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grdsrDelegationSet",
                        "name": "_grdsrDelegationSet",
                        "shape": "DelegationSet",
                        "locationName": "DelegationSet",
                        "documentation": "\u003cp\u003eA complex type that contains the information about the nameservers for the specified delegation set ID.\u003c/p\u003e",
                        "typeExposed": "DelegationSet",
                        "type": "DelegationSet"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.GetReusableDelegationSet",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "GetReusableDelegationSet",
            "method": "get",
            "documentation": "\u003cp\u003e To retrieve the reusable delegation set, send a \u003ccode\u003eGET\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/delegationset/\u003ci\u003edelegation set ID\u003c/i\u003e\u003c/code\u003e resource.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getReusableDelegationSet",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "grdsId",
                    "name": "_grdsId",
                    "shape": "ResourceId",
                    "locationName": "Id",
                    "documentation": "\u003cp\u003eThe ID of the reusable delegation set for which you want to get a list of the name server.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2013-04-01/delegationset/",
                        "type": "const"
                    },
                    {
                        "value": "_grdsId",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grdsId",
                        "name": "_grdsId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe ID of the reusable delegation set for which you want to get a list of the name server.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetReusableDelegationSet",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grdsId",
                        "name": "_grdsId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe ID of the reusable delegation set for which you want to get a list of the name server.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 27,
                "ctor": "listGeoLocationsResponse",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "lglrGeoLocationDetailsList",
                    "name": "_lglrGeoLocationDetailsList",
                    "shape": "GeoLocationDetailsList",
                    "locationName": "GeoLocationDetailsList",
                    "documentation": "\u003cp\u003eA complex type that contains information about the geo locations that are returned by the request.\u003c/p\u003e",
                    "typeExposed": "[GeoLocationDetails]",
                    "type": "[GeoLocationDetails]"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lglrIsTruncated",
                        "name": "_lglrIsTruncated",
                        "shape": "PageTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more geo locations to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the values included in the \u003ca\u003eListGeoLocationsResponse$NextContinentCode\u003c/a\u003e, \u003ca\u003eListGeoLocationsResponse$NextCountryCode\u003c/a\u003e and \u003ca\u003eListGeoLocationsResponse$NextSubdivisionCode\u003c/a\u003e elements.\u003c/p\u003e \u003cp\u003eValid Values: \u003ccode\u003etrue\u003c/code\u003e | \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lglrMaxItems",
                        "name": "_lglrMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003eThe maximum number of records you requested. The maximum value of \u003ccode\u003eMaxItems\u003c/code\u003e is 100.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "name": "ListGeoLocationsResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lglrGeoLocationDetailsList",
                        "name": "_lglrGeoLocationDetailsList",
                        "shape": "GeoLocationDetailsList",
                        "locationName": "GeoLocationDetailsList",
                        "documentation": "\u003cp\u003eA complex type that contains information about the geo locations that are returned by the request.\u003c/p\u003e",
                        "typeExposed": "[GeoLocationDetails]",
                        "type": "[GeoLocationDetails]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lglrNextContinentCode",
                        "name": "_lglrNextContinentCode",
                        "shape": "GeoLocationContinentCode",
                        "locationName": "NextContinentCode",
                        "documentation": "\u003cp\u003eIf the results were truncated, the continent code of the next geo location in the list. This element is present only if \u003ca\u003eListGeoLocationsResponse$IsTruncated\u003c/a\u003e is true and the next geo location to list is a continent location. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lglrNextCountryCode",
                        "name": "_lglrNextCountryCode",
                        "shape": "GeoLocationCountryCode",
                        "locationName": "NextCountryCode",
                        "documentation": "\u003cp\u003eIf the results were truncated, the country code of the next geo location in the list. This element is present only if \u003ca\u003eListGeoLocationsResponse$IsTruncated\u003c/a\u003e is true and the next geo location to list is not a continent location. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lglrNextSubdivisionCode",
                        "name": "_lglrNextSubdivisionCode",
                        "shape": "GeoLocationSubdivisionCode",
                        "locationName": "NextSubdivisionCode",
                        "documentation": "\u003cp\u003eIf the results were truncated, the subdivision code of the next geo location in the list. This element is present only if \u003ca\u003eListGeoLocationsResponse$IsTruncated\u003c/a\u003e is true and the next geo location has a subdivision. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lglrGeoLocationDetailsList",
                        "name": "_lglrGeoLocationDetailsList",
                        "shape": "GeoLocationDetailsList",
                        "locationName": "GeoLocationDetailsList",
                        "documentation": "\u003cp\u003eA complex type that contains information about the geo locations that are returned by the request.\u003c/p\u003e",
                        "typeExposed": "[GeoLocationDetails]",
                        "type": "[GeoLocationDetails]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lglrIsTruncated",
                        "name": "_lglrIsTruncated",
                        "shape": "PageTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more geo locations to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the values included in the \u003ca\u003eListGeoLocationsResponse$NextContinentCode\u003c/a\u003e, \u003ca\u003eListGeoLocationsResponse$NextCountryCode\u003c/a\u003e and \u003ca\u003eListGeoLocationsResponse$NextSubdivisionCode\u003c/a\u003e elements.\u003c/p\u003e \u003cp\u003eValid Values: \u003ccode\u003etrue\u003c/code\u003e | \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lglrMaxItems",
                        "name": "_lglrMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003eThe maximum number of records you requested. The maximum value of \u003ccode\u003eMaxItems\u003c/code\u003e is 100.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lglrNextContinentCode",
                        "name": "_lglrNextContinentCode",
                        "shape": "GeoLocationContinentCode",
                        "locationName": "NextContinentCode",
                        "documentation": "\u003cp\u003eIf the results were truncated, the continent code of the next geo location in the list. This element is present only if \u003ca\u003eListGeoLocationsResponse$IsTruncated\u003c/a\u003e is true and the next geo location to list is a continent location. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lglrNextCountryCode",
                        "name": "_lglrNextCountryCode",
                        "shape": "GeoLocationCountryCode",
                        "locationName": "NextCountryCode",
                        "documentation": "\u003cp\u003eIf the results were truncated, the country code of the next geo location in the list. This element is present only if \u003ca\u003eListGeoLocationsResponse$IsTruncated\u003c/a\u003e is true and the next geo location to list is not a continent location. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lglrNextSubdivisionCode",
                        "name": "_lglrNextSubdivisionCode",
                        "shape": "GeoLocationSubdivisionCode",
                        "locationName": "NextSubdivisionCode",
                        "documentation": "\u003cp\u003eIf the results were truncated, the subdivision code of the next geo location in the list. This element is present only if \u003ca\u003eListGeoLocationsResponse$IsTruncated\u003c/a\u003e is true and the next geo location has a subdivision. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.ListGeoLocations",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "ListGeoLocations",
            "method": "get",
            "documentation": "\u003cp\u003e To retrieve a list of supported geo locations, send a \u003ccode\u003eGET\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/geolocations\u003c/code\u003e resource. The response to this request includes a \u003ccode\u003eGeoLocationDetailsList\u003c/code\u003e element with zero, one, or multiple \u003ccode\u003eGeoLocationDetails\u003c/code\u003e child elements. The list is sorted by country code, and then subdivision code, followed by continents at the end of the list. \u003c/p\u003e \u003cp\u003e By default, the list of geo locations is displayed on a single page. You can control the length of the page that is displayed by using the \u003ccode\u003eMaxItems\u003c/code\u003e parameter. If the list is truncated, \u003ccode\u003eIsTruncated\u003c/code\u003e will be set to \u003ci\u003etrue\u003c/i\u003e and a combination of \u003ccode\u003eNextContinentCode, NextCountryCode, NextSubdivisionCode\u003c/code\u003e will be populated. You can pass these as parameters to \u003ccode\u003eStartContinentCode, StartCountryCode, StartSubdivisionCode\u003c/code\u003e to control the geo location that the list begins with. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "listGeoLocations",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/geolocations",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 21,
                "name": "ListGeoLocations",
                "query": [
                    {
                        "field": "_lglStartContinentCode",
                        "locationName": "startcontinentcode",
                        "type": "field"
                    },
                    {
                        "field": "_lglStartCountryCode",
                        "locationName": "startcountrycode",
                        "type": "field"
                    },
                    {
                        "field": "_lglStartSubdivisionCode",
                        "locationName": "startsubdivisioncode",
                        "type": "field"
                    },
                    {
                        "field": "_lglMaxItems",
                        "locationName": "maxitems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lglStartContinentCode",
                        "name": "_lglStartContinentCode",
                        "shape": "GeoLocationContinentCode",
                        "locationName": "startcontinentcode",
                        "documentation": "\u003cp\u003eThe first continent code in the lexicographic ordering of geo locations that you want the \u003ccode\u003eListGeoLocations\u003c/code\u003e request to list. For non-continent geo locations, this should be null.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eAF\u003c/code\u003e | \u003ccode\u003eAN\u003c/code\u003e | \u003ccode\u003eAS\u003c/code\u003e | \u003ccode\u003eEU\u003c/code\u003e | \u003ccode\u003eOC\u003c/code\u003e | \u003ccode\u003eNA\u003c/code\u003e | \u003ccode\u003eSA\u003c/code\u003e\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003eContinentCode\u003c/code\u003e with either \u003ccode\u003eCountryCode\u003c/code\u003e or \u003ccode\u003eSubdivisionCode\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lglStartCountryCode",
                        "name": "_lglStartCountryCode",
                        "shape": "GeoLocationCountryCode",
                        "locationName": "startcountrycode",
                        "documentation": "\u003cp\u003eThe first country code in the lexicographic ordering of geo locations that you want the \u003ccode\u003eListGeoLocations\u003c/code\u003e request to list.\u003c/p\u003e \u003cp\u003eThe default geo location uses a \u003ccode\u003e*\u003c/code\u003e for the country code. All other country codes follow the ISO 3166 two-character code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lglStartSubdivisionCode",
                        "name": "_lglStartSubdivisionCode",
                        "shape": "GeoLocationSubdivisionCode",
                        "locationName": "startsubdivisioncode",
                        "documentation": "\u003cp\u003eThe first subdivision code in the lexicographic ordering of geo locations that you want the \u003ccode\u003eListGeoLocations\u003c/code\u003e request to list.\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003eSubdivisionCode\u003c/code\u003e without \u003ccode\u003eCountryCode\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lglMaxItems",
                        "name": "_lglMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "maxitems",
                        "documentation": "\u003cp\u003eThe maximum number of geo locations you want in the response body.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lglMaxItems",
                        "name": "_lglMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "maxitems",
                        "documentation": "\u003cp\u003eThe maximum number of geo locations you want in the response body.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lglStartContinentCode",
                        "name": "_lglStartContinentCode",
                        "shape": "GeoLocationContinentCode",
                        "locationName": "startcontinentcode",
                        "documentation": "\u003cp\u003eThe first continent code in the lexicographic ordering of geo locations that you want the \u003ccode\u003eListGeoLocations\u003c/code\u003e request to list. For non-continent geo locations, this should be null.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eAF\u003c/code\u003e | \u003ccode\u003eAN\u003c/code\u003e | \u003ccode\u003eAS\u003c/code\u003e | \u003ccode\u003eEU\u003c/code\u003e | \u003ccode\u003eOC\u003c/code\u003e | \u003ccode\u003eNA\u003c/code\u003e | \u003ccode\u003eSA\u003c/code\u003e\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003eContinentCode\u003c/code\u003e with either \u003ccode\u003eCountryCode\u003c/code\u003e or \u003ccode\u003eSubdivisionCode\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lglStartCountryCode",
                        "name": "_lglStartCountryCode",
                        "shape": "GeoLocationCountryCode",
                        "locationName": "startcountrycode",
                        "documentation": "\u003cp\u003eThe first country code in the lexicographic ordering of geo locations that you want the \u003ccode\u003eListGeoLocations\u003c/code\u003e request to list.\u003c/p\u003e \u003cp\u003eThe default geo location uses a \u003ccode\u003e*\u003c/code\u003e for the country code. All other country codes follow the ISO 3166 two-character code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lglStartSubdivisionCode",
                        "name": "_lglStartSubdivisionCode",
                        "shape": "GeoLocationSubdivisionCode",
                        "locationName": "startsubdivisioncode",
                        "documentation": "\u003cp\u003eThe first subdivision code in the lexicographic ordering of geo locations that you want the \u003ccode\u003eListGeoLocations\u003c/code\u003e request to list.\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003eSubdivisionCode\u003c/code\u003e without \u003ccode\u003eCountryCode\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "listHealthChecksResponse",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "lhcrHealthChecks",
                    "name": "_lhcrHealthChecks",
                    "shape": "HealthChecks",
                    "locationName": "HealthChecks",
                    "documentation": "\u003cp\u003eA complex type that contains information about the health checks associated with the current AWS account.\u003c/p\u003e",
                    "typeExposed": "[HealthCheck]",
                    "type": "[HealthCheck]"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lhcrMarker",
                        "name": "_lhcrMarker",
                        "shape": "PageMarker",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003eIf the request returned more than one page of results, submit another request and specify the value of \u003ccode\u003eNextMarker\u003c/code\u003e from the last response in the \u003ccode\u003emarker\u003c/code\u003e parameter to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lhcrIsTruncated",
                        "name": "_lhcrIsTruncated",
                        "shape": "PageTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag indicating whether there are more health checks to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the \u003ccode\u003eMarker\u003c/code\u003e element.\u003c/p\u003e \u003cp\u003eValid Values: \u003ccode\u003etrue\u003c/code\u003e | \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lhcrMaxItems",
                        "name": "_lhcrMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003eThe maximum number of health checks to be included in the response body. If the number of health checks associated with this AWS account exceeds \u003ccode\u003eMaxItems\u003c/code\u003e, the value of \u003ca\u003eListHealthChecksResponse$IsTruncated\u003c/a\u003e in the response is \u003ccode\u003etrue\u003c/code\u003e. Call \u003ccode\u003eListHealthChecks\u003c/code\u003e again and specify the value of \u003ca\u003eListHealthChecksResponse$NextMarker\u003c/a\u003e in the \u003ca\u003eListHostedZonesRequest$Marker\u003c/a\u003e element to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "name": "ListHealthChecksResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lhcrHealthChecks",
                        "name": "_lhcrHealthChecks",
                        "shape": "HealthChecks",
                        "locationName": "HealthChecks",
                        "documentation": "\u003cp\u003eA complex type that contains information about the health checks associated with the current AWS account.\u003c/p\u003e",
                        "typeExposed": "[HealthCheck]",
                        "type": "[HealthCheck]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lhcrNextMarker",
                        "name": "_lhcrNextMarker",
                        "shape": "PageMarker",
                        "locationName": "NextMarker",
                        "documentation": "\u003cp\u003e Indicates where to continue listing health checks. If \u003ca\u003eListHealthChecksResponse$IsTruncated\u003c/a\u003e is \u003ccode\u003etrue\u003c/code\u003e, make another request to \u003ccode\u003eListHealthChecks\u003c/code\u003e and include the value of the \u003ccode\u003eNextMarker\u003c/code\u003e element in the \u003ccode\u003eMarker\u003c/code\u003e element to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lhcrHealthChecks",
                        "name": "_lhcrHealthChecks",
                        "shape": "HealthChecks",
                        "locationName": "HealthChecks",
                        "documentation": "\u003cp\u003eA complex type that contains information about the health checks associated with the current AWS account.\u003c/p\u003e",
                        "typeExposed": "[HealthCheck]",
                        "type": "[HealthCheck]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lhcrIsTruncated",
                        "name": "_lhcrIsTruncated",
                        "shape": "PageTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag indicating whether there are more health checks to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the \u003ccode\u003eMarker\u003c/code\u003e element.\u003c/p\u003e \u003cp\u003eValid Values: \u003ccode\u003etrue\u003c/code\u003e | \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lhcrMarker",
                        "name": "_lhcrMarker",
                        "shape": "PageMarker",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003eIf the request returned more than one page of results, submit another request and specify the value of \u003ccode\u003eNextMarker\u003c/code\u003e from the last response in the \u003ccode\u003emarker\u003c/code\u003e parameter to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lhcrMaxItems",
                        "name": "_lhcrMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003eThe maximum number of health checks to be included in the response body. If the number of health checks associated with this AWS account exceeds \u003ccode\u003eMaxItems\u003c/code\u003e, the value of \u003ca\u003eListHealthChecksResponse$IsTruncated\u003c/a\u003e in the response is \u003ccode\u003etrue\u003c/code\u003e. Call \u003ccode\u003eListHealthChecks\u003c/code\u003e again and specify the value of \u003ca\u003eListHealthChecksResponse$NextMarker\u003c/a\u003e in the \u003ca\u003eListHostedZonesRequest$Marker\u003c/a\u003e element to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lhcrNextMarker",
                        "name": "_lhcrNextMarker",
                        "shape": "PageMarker",
                        "locationName": "NextMarker",
                        "documentation": "\u003cp\u003e Indicates where to continue listing health checks. If \u003ca\u003eListHealthChecksResponse$IsTruncated\u003c/a\u003e is \u003ccode\u003etrue\u003c/code\u003e, make another request to \u003ccode\u003eListHealthChecks\u003c/code\u003e and include the value of the \u003ccode\u003eNextMarker\u003c/code\u003e element in the \u003ccode\u003eMarker\u003c/code\u003e element to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.ListHealthChecks",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "ListHealthChecks",
            "method": "get",
            "documentation": "\u003cp\u003e To retrieve a list of your health checks, send a \u003ccode\u003eGET\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/healthcheck\u003c/code\u003e resource. The response to this request includes a \u003ccode\u003eHealthChecks\u003c/code\u003e element with zero, one, or multiple \u003ccode\u003eHealthCheck\u003c/code\u003e child elements. By default, the list of health checks is displayed on a single page. You can control the length of the page that is displayed by using the \u003ccode\u003eMaxItems\u003c/code\u003e parameter. You can use the \u003ccode\u003eMarker\u003c/code\u003e parameter to control the health check that the list begins with. \u003c/p\u003e \u003cnote\u003e Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Amazon Route 53 returns only the first 100.\u003c/note\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 12,
                "ctor": "listHealthChecks",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/healthcheck",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 9,
                "name": "ListHealthChecks",
                "query": [
                    {
                        "field": "_lhcMarker",
                        "locationName": "marker",
                        "type": "field"
                    },
                    {
                        "field": "_lhcMaxItems",
                        "locationName": "maxitems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lhcMarker",
                        "name": "_lhcMarker",
                        "shape": "PageMarker",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eIf the request returned more than one page of results, submit another request and specify the value of \u003ccode\u003eNextMarker\u003c/code\u003e from the last response in the \u003ccode\u003emarker\u003c/code\u003e parameter to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lhcMaxItems",
                        "name": "_lhcMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "maxitems",
                        "documentation": "\u003cp\u003eSpecify the maximum number of health checks to return per page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lhcMarker",
                        "name": "_lhcMarker",
                        "shape": "PageMarker",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eIf the request returned more than one page of results, submit another request and specify the value of \u003ccode\u003eNextMarker\u003c/code\u003e from the last response in the \u003ccode\u003emarker\u003c/code\u003e parameter to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lhcMaxItems",
                        "name": "_lhcMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "maxitems",
                        "documentation": "\u003cp\u003eSpecify the maximum number of health checks to return per page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "listHostedZonesResponse",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "lhzrHostedZones",
                    "name": "_lhzrHostedZones",
                    "shape": "HostedZones",
                    "locationName": "HostedZones",
                    "documentation": "\u003cp\u003eA complex type that contains information about the hosted zones associated with the current AWS account.\u003c/p\u003e",
                    "typeExposed": "[HostedZone]",
                    "type": "[HostedZone]"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lhzrMarker",
                        "name": "_lhzrMarker",
                        "shape": "PageMarker",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003eIf the request returned more than one page of results, submit another request and specify the value of \u003ccode\u003eNextMarker\u003c/code\u003e from the last response in the \u003ccode\u003emarker\u003c/code\u003e parameter to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lhzrIsTruncated",
                        "name": "_lhzrIsTruncated",
                        "shape": "PageTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag indicating whether there are more hosted zones to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the \u003ccode\u003eMarker\u003c/code\u003e element.\u003c/p\u003e \u003cp\u003eValid Values: \u003ccode\u003etrue\u003c/code\u003e | \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lhzrMaxItems",
                        "name": "_lhzrMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003eThe maximum number of hosted zones to be included in the response body. If the number of hosted zones associated with this AWS account exceeds \u003ccode\u003eMaxItems\u003c/code\u003e, the value of \u003ca\u003eListHostedZonesResponse$IsTruncated\u003c/a\u003e in the response is \u003ccode\u003etrue\u003c/code\u003e. Call \u003ccode\u003eListHostedZones\u003c/code\u003e again and specify the value of \u003ca\u003eListHostedZonesResponse$NextMarker\u003c/a\u003e in the \u003ca\u003eListHostedZonesRequest$Marker\u003c/a\u003e element to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "name": "ListHostedZonesResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lhzrHostedZones",
                        "name": "_lhzrHostedZones",
                        "shape": "HostedZones",
                        "locationName": "HostedZones",
                        "documentation": "\u003cp\u003eA complex type that contains information about the hosted zones associated with the current AWS account.\u003c/p\u003e",
                        "typeExposed": "[HostedZone]",
                        "type": "[HostedZone]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lhzrNextMarker",
                        "name": "_lhzrNextMarker",
                        "shape": "PageMarker",
                        "locationName": "NextMarker",
                        "documentation": "\u003cp\u003e Indicates where to continue listing hosted zones. If \u003ca\u003eListHostedZonesResponse$IsTruncated\u003c/a\u003e is \u003ccode\u003etrue\u003c/code\u003e, make another request to \u003ccode\u003eListHostedZones\u003c/code\u003e and include the value of the \u003ccode\u003eNextMarker\u003c/code\u003e element in the \u003ccode\u003eMarker\u003c/code\u003e element to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lhzrHostedZones",
                        "name": "_lhzrHostedZones",
                        "shape": "HostedZones",
                        "locationName": "HostedZones",
                        "documentation": "\u003cp\u003eA complex type that contains information about the hosted zones associated with the current AWS account.\u003c/p\u003e",
                        "typeExposed": "[HostedZone]",
                        "type": "[HostedZone]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lhzrIsTruncated",
                        "name": "_lhzrIsTruncated",
                        "shape": "PageTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag indicating whether there are more hosted zones to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the \u003ccode\u003eMarker\u003c/code\u003e element.\u003c/p\u003e \u003cp\u003eValid Values: \u003ccode\u003etrue\u003c/code\u003e | \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lhzrMarker",
                        "name": "_lhzrMarker",
                        "shape": "PageMarker",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003eIf the request returned more than one page of results, submit another request and specify the value of \u003ccode\u003eNextMarker\u003c/code\u003e from the last response in the \u003ccode\u003emarker\u003c/code\u003e parameter to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lhzrMaxItems",
                        "name": "_lhzrMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003eThe maximum number of hosted zones to be included in the response body. If the number of hosted zones associated with this AWS account exceeds \u003ccode\u003eMaxItems\u003c/code\u003e, the value of \u003ca\u003eListHostedZonesResponse$IsTruncated\u003c/a\u003e in the response is \u003ccode\u003etrue\u003c/code\u003e. Call \u003ccode\u003eListHostedZones\u003c/code\u003e again and specify the value of \u003ca\u003eListHostedZonesResponse$NextMarker\u003c/a\u003e in the \u003ca\u003eListHostedZonesRequest$Marker\u003c/a\u003e element to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lhzrNextMarker",
                        "name": "_lhzrNextMarker",
                        "shape": "PageMarker",
                        "locationName": "NextMarker",
                        "documentation": "\u003cp\u003e Indicates where to continue listing hosted zones. If \u003ca\u003eListHostedZonesResponse$IsTruncated\u003c/a\u003e is \u003ccode\u003etrue\u003c/code\u003e, make another request to \u003ccode\u003eListHostedZones\u003c/code\u003e and include the value of the \u003ccode\u003eNextMarker\u003c/code\u003e element in the \u003ccode\u003eMarker\u003c/code\u003e element to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.ListHostedZones",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "ListHostedZones",
            "method": "get",
            "documentation": "\u003cp\u003e To retrieve a list of your hosted zones, send a \u003ccode\u003eGET\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/hostedzone\u003c/code\u003e resource. The response to this request includes a \u003ccode\u003eHostedZones\u003c/code\u003e element with zero, one, or multiple \u003ccode\u003eHostedZone\u003c/code\u003e child elements. By default, the list of hosted zones is displayed on a single page. You can control the length of the page that is displayed by using the \u003ccode\u003eMaxItems\u003c/code\u003e parameter. You can use the \u003ccode\u003eMarker\u003c/code\u003e parameter to control the hosted zone that the list begins with. \u003c/p\u003e \u003cnote\u003e Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Amazon Route 53 returns only the first 100.\u003c/note\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 19,
                "ctor": "listHostedZones",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/hostedzone",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 16,
                "name": "ListHostedZones",
                "query": [
                    {
                        "field": "_lhzMarker",
                        "locationName": "marker",
                        "type": "field"
                    },
                    {
                        "field": "_lhzMaxItems",
                        "locationName": "maxitems",
                        "type": "field"
                    },
                    {
                        "field": "_lhzDelegationSetId",
                        "locationName": "delegationsetid",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lhzMarker",
                        "name": "_lhzMarker",
                        "shape": "PageMarker",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eIf the request returned more than one page of results, submit another request and specify the value of \u003ccode\u003eNextMarker\u003c/code\u003e from the last response in the \u003ccode\u003emarker\u003c/code\u003e parameter to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lhzMaxItems",
                        "name": "_lhzMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "maxitems",
                        "documentation": "\u003cp\u003eSpecify the maximum number of hosted zones to return per page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lhzDelegationSetId",
                        "name": "_lhzDelegationSetId",
                        "shape": "ResourceId",
                        "locationName": "delegationsetid",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lhzDelegationSetId",
                        "name": "_lhzDelegationSetId",
                        "shape": "ResourceId",
                        "locationName": "delegationsetid",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lhzMarker",
                        "name": "_lhzMarker",
                        "shape": "PageMarker",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eIf the request returned more than one page of results, submit another request and specify the value of \u003ccode\u003eNextMarker\u003c/code\u003e from the last response in the \u003ccode\u003emarker\u003c/code\u003e parameter to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lhzMaxItems",
                        "name": "_lhzMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "maxitems",
                        "documentation": "\u003cp\u003eSpecify the maximum number of hosted zones to return per page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 26,
                "ctor": "listResourceRecordSetsResponse",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "lrrsrResourceRecordSets",
                    "name": "_lrrsrResourceRecordSets",
                    "shape": "ResourceRecordSets",
                    "locationName": "ResourceRecordSets",
                    "documentation": "\u003cp\u003eA complex type that contains information about the resource record sets that are returned by the request.\u003c/p\u003e",
                    "typeExposed": "[ResourceRecordSet]",
                    "type": "[ResourceRecordSet]"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lrrsrIsTruncated",
                        "name": "_lrrsrIsTruncated",
                        "shape": "PageTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more resource record sets to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the \u003ca\u003eListResourceRecordSetsResponse$NextRecordName\u003c/a\u003e element.\u003c/p\u003e \u003cp\u003eValid Values: \u003ccode\u003etrue\u003c/code\u003e | \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lrrsrMaxItems",
                        "name": "_lrrsrMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003eThe maximum number of records you requested. The maximum value of \u003ccode\u003eMaxItems\u003c/code\u003e is 100.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "name": "ListResourceRecordSetsResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lrrsrResourceRecordSets",
                        "name": "_lrrsrResourceRecordSets",
                        "shape": "ResourceRecordSets",
                        "locationName": "ResourceRecordSets",
                        "documentation": "\u003cp\u003eA complex type that contains information about the resource record sets that are returned by the request.\u003c/p\u003e",
                        "typeExposed": "[ResourceRecordSet]",
                        "type": "[ResourceRecordSet]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrsrNextRecordName",
                        "name": "_lrrsrNextRecordName",
                        "shape": "DNSName",
                        "locationName": "NextRecordName",
                        "documentation": "\u003cp\u003eIf the results were truncated, the name of the next record in the list. This element is present only if \u003ca\u003eListResourceRecordSetsResponse$IsTruncated\u003c/a\u003e is true. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrsrNextRecordType",
                        "name": "_lrrsrNextRecordType",
                        "shape": "RRType",
                        "locationName": "NextRecordType",
                        "documentation": "\u003cp\u003eIf the results were truncated, the type of the next record in the list. This element is present only if \u003ca\u003eListResourceRecordSetsResponse$IsTruncated\u003c/a\u003e is true. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrsrNextRecordIdentifier",
                        "name": "_lrrsrNextRecordIdentifier",
                        "shape": "ResourceRecordSetIdentifier",
                        "locationName": "NextRecordIdentifier",
                        "documentation": "\u003cp\u003e\u003ci\u003eWeighted resource record sets only:\u003c/i\u003e If results were truncated for a given DNS name and type, the value of \u003ccode\u003eSetIdentifier\u003c/code\u003e for the next resource record set that has the current DNS name and type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lrrsrIsTruncated",
                        "name": "_lrrsrIsTruncated",
                        "shape": "PageTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more resource record sets to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the \u003ca\u003eListResourceRecordSetsResponse$NextRecordName\u003c/a\u003e element.\u003c/p\u003e \u003cp\u003eValid Values: \u003ccode\u003etrue\u003c/code\u003e | \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lrrsrMaxItems",
                        "name": "_lrrsrMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003eThe maximum number of records you requested. The maximum value of \u003ccode\u003eMaxItems\u003c/code\u003e is 100.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrsrNextRecordIdentifier",
                        "name": "_lrrsrNextRecordIdentifier",
                        "shape": "ResourceRecordSetIdentifier",
                        "locationName": "NextRecordIdentifier",
                        "documentation": "\u003cp\u003e\u003ci\u003eWeighted resource record sets only:\u003c/i\u003e If results were truncated for a given DNS name and type, the value of \u003ccode\u003eSetIdentifier\u003c/code\u003e for the next resource record set that has the current DNS name and type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrsrNextRecordName",
                        "name": "_lrrsrNextRecordName",
                        "shape": "DNSName",
                        "locationName": "NextRecordName",
                        "documentation": "\u003cp\u003eIf the results were truncated, the name of the next record in the list. This element is present only if \u003ca\u003eListResourceRecordSetsResponse$IsTruncated\u003c/a\u003e is true. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrsrNextRecordType",
                        "name": "_lrrsrNextRecordType",
                        "shape": "RRType",
                        "locationName": "NextRecordType",
                        "documentation": "\u003cp\u003eIf the results were truncated, the type of the next record in the list. This element is present only if \u003ca\u003eListResourceRecordSetsResponse$IsTruncated\u003c/a\u003e is true. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lrrsrResourceRecordSets",
                        "name": "_lrrsrResourceRecordSets",
                        "shape": "ResourceRecordSets",
                        "locationName": "ResourceRecordSets",
                        "documentation": "\u003cp\u003eA complex type that contains information about the resource record sets that are returned by the request.\u003c/p\u003e",
                        "typeExposed": "[ResourceRecordSet]",
                        "type": "[ResourceRecordSet]"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.ListResourceRecordSets",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "ListResourceRecordSets",
            "method": "get",
            "documentation": "\u003cp\u003eImagine all the resource record sets in a zone listed out in front of you. Imagine them sorted lexicographically first by DNS name (with the labels reversed, like \"com.amazon.www\" for example), and secondarily, lexicographically by record type. This operation retrieves at most MaxItems resource record sets from this list, in order, starting at a position specified by the Name and Type arguments:\u003c/p\u003e \u003cul\u003e \u003cli\u003eIf both Name and Type are omitted, this means start the results at the first RRSET in the HostedZone.\u003c/li\u003e \u003cli\u003eIf Name is specified but Type is omitted, this means start the results at the first RRSET in the list whose name is greater than or equal to Name. \u003c/li\u003e \u003cli\u003eIf both Name and Type are specified, this means start the results at the first RRSET in the list whose name is greater than or equal to Name and whose type is greater than or equal to Type.\u003c/li\u003e \u003cli\u003eIt is an error to specify the Type but not the Name.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eUse ListResourceRecordSets to retrieve a single known record set by specifying the record set's name and type, and setting MaxItems = 1\u003c/p\u003e \u003cp\u003eTo retrieve all the records in a HostedZone, first pause any processes making calls to ChangeResourceRecordSets. Initially call ListResourceRecordSets without a Name and Type to get the first page of record sets. For subsequent calls, set Name and Type to the NextName and NextType values returned by the previous response. \u003c/p\u003e \u003cp\u003eIn the presence of concurrent ChangeResourceRecordSets calls, there is no consistency of results across calls to ListResourceRecordSets. The only way to get a consistent multi-page snapshot of all RRSETs in a zone is to stop making changes while pagination is in progress.\u003c/p\u003e \u003cp\u003eHowever, the results from ListResourceRecordSets are consistent within a page. If MakeChange calls are taking place concurrently, the result of each one will either be completely visible in your results or not at all. You will not see partial changes, or changes that do not ultimately succeed. (This follows from the fact that MakeChange is atomic) \u003c/p\u003e \u003cp\u003eThe results from ListResourceRecordSets are strongly consistent with ChangeResourceRecordSets. To be precise, if a single process makes a call to ChangeResourceRecordSets and receives a successful response, the effects of that change will be visible in a subsequent call to ListResourceRecordSets by that process.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 26,
                "ctor": "listResourceRecordSets",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/hostedzone/",
                        "type": "const"
                    },
                    {
                        "value": "_lrrsId",
                        "type": "var"
                    },
                    {
                        "value": "/rrset",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lrrsHostedZoneId",
                        "name": "_lrrsHostedZoneId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The ID of the hosted zone that contains the resource record sets that you want to get.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 11,
                "name": "ListResourceRecordSets",
                "query": [
                    {
                        "field": "_lrrsStartRecordName",
                        "locationName": "name",
                        "type": "field"
                    },
                    {
                        "field": "_lrrsStartRecordType",
                        "locationName": "type",
                        "type": "field"
                    },
                    {
                        "field": "_lrrsStartRecordIdentifier",
                        "locationName": "identifier",
                        "type": "field"
                    },
                    {
                        "field": "_lrrsMaxItems",
                        "locationName": "maxitems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrsStartRecordName",
                        "name": "_lrrsStartRecordName",
                        "shape": "DNSName",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eThe first name in the lexicographic ordering of domain names that you want the \u003ccode\u003eListResourceRecordSets\u003c/code\u003e request to list.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrsStartRecordType",
                        "name": "_lrrsStartRecordType",
                        "shape": "RRType",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe DNS type at which to begin the listing of resource record sets. \u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eA\u003c/code\u003e | \u003ccode\u003eAAAA\u003c/code\u003e | \u003ccode\u003eCNAME\u003c/code\u003e | \u003ccode\u003eMX\u003c/code\u003e | \u003ccode\u003eNS\u003c/code\u003e | \u003ccode\u003ePTR\u003c/code\u003e | \u003ccode\u003eSOA\u003c/code\u003e | \u003ccode\u003eSPF\u003c/code\u003e | \u003ccode\u003eSRV\u003c/code\u003e | \u003ccode\u003eTXT\u003c/code\u003e\u003c/p\u003e \u003cp\u003eValues for Weighted Resource Record Sets: \u003ccode\u003eA\u003c/code\u003e | \u003ccode\u003eAAAA\u003c/code\u003e | \u003ccode\u003eCNAME\u003c/code\u003e | \u003ccode\u003eTXT\u003c/code\u003e\u003c/p\u003e \u003cp\u003e Values for Regional Resource Record Sets: \u003ccode\u003eA\u003c/code\u003e | \u003ccode\u003eAAAA\u003c/code\u003e | \u003ccode\u003eCNAME\u003c/code\u003e | \u003ccode\u003eTXT\u003c/code\u003e\u003c/p\u003e \u003cp\u003eValues for Alias Resource Record Sets: \u003ccode\u003eA\u003c/code\u003e | \u003ccode\u003eAAAA\u003c/code\u003e\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003etype\u003c/code\u003e without specifying \u003ccode\u003ename\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrsStartRecordIdentifier",
                        "name": "_lrrsStartRecordIdentifier",
                        "shape": "ResourceRecordSetIdentifier",
                        "locationName": "identifier",
                        "documentation": "\u003cp\u003e\u003ci\u003eWeighted resource record sets only:\u003c/i\u003e If results were truncated for a given DNS name and type, specify the value of \u003ccode\u003eListResourceRecordSetsResponse$NextRecordIdentifier\u003c/code\u003e from the previous response to get the next resource record set that has the current DNS name and type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrsMaxItems",
                        "name": "_lrrsMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "maxitems",
                        "documentation": "\u003cp\u003eThe maximum number of records you want in the response body.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lrrsHostedZoneId",
                        "name": "_lrrsHostedZoneId",
                        "shape": "ResourceId",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The ID of the hosted zone that contains the resource record sets that you want to get.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrsMaxItems",
                        "name": "_lrrsMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "maxitems",
                        "documentation": "\u003cp\u003eThe maximum number of records you want in the response body.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrsStartRecordIdentifier",
                        "name": "_lrrsStartRecordIdentifier",
                        "shape": "ResourceRecordSetIdentifier",
                        "locationName": "identifier",
                        "documentation": "\u003cp\u003e\u003ci\u003eWeighted resource record sets only:\u003c/i\u003e If results were truncated for a given DNS name and type, specify the value of \u003ccode\u003eListResourceRecordSetsResponse$NextRecordIdentifier\u003c/code\u003e from the previous response to get the next resource record set that has the current DNS name and type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrsStartRecordName",
                        "name": "_lrrsStartRecordName",
                        "shape": "DNSName",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eThe first name in the lexicographic ordering of domain names that you want the \u003ccode\u003eListResourceRecordSets\u003c/code\u003e request to list.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrsStartRecordType",
                        "name": "_lrrsStartRecordType",
                        "shape": "RRType",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe DNS type at which to begin the listing of resource record sets. \u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eA\u003c/code\u003e | \u003ccode\u003eAAAA\u003c/code\u003e | \u003ccode\u003eCNAME\u003c/code\u003e | \u003ccode\u003eMX\u003c/code\u003e | \u003ccode\u003eNS\u003c/code\u003e | \u003ccode\u003ePTR\u003c/code\u003e | \u003ccode\u003eSOA\u003c/code\u003e | \u003ccode\u003eSPF\u003c/code\u003e | \u003ccode\u003eSRV\u003c/code\u003e | \u003ccode\u003eTXT\u003c/code\u003e\u003c/p\u003e \u003cp\u003eValues for Weighted Resource Record Sets: \u003ccode\u003eA\u003c/code\u003e | \u003ccode\u003eAAAA\u003c/code\u003e | \u003ccode\u003eCNAME\u003c/code\u003e | \u003ccode\u003eTXT\u003c/code\u003e\u003c/p\u003e \u003cp\u003e Values for Regional Resource Record Sets: \u003ccode\u003eA\u003c/code\u003e | \u003ccode\u003eAAAA\u003c/code\u003e | \u003ccode\u003eCNAME\u003c/code\u003e | \u003ccode\u003eTXT\u003c/code\u003e\u003c/p\u003e \u003cp\u003eValues for Alias Resource Record Sets: \u003ccode\u003eA\u003c/code\u003e | \u003ccode\u003eAAAA\u003c/code\u003e\u003c/p\u003e \u003cp\u003eConstraint: Specifying \u003ccode\u003etype\u003c/code\u003e without specifying \u003ccode\u003ename\u003c/code\u003e returns an \u003ca\u003eInvalidInput\u003c/a\u003e error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "listReusableDelegationSetsResponse",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "lrdsrDelegationSets",
                    "name": "_lrdsrDelegationSets",
                    "shape": "DelegationSets",
                    "locationName": "DelegationSets",
                    "documentation": "\u003cp\u003eA complex type that contains information about the reusable delegation sets associated with the current AWS account.\u003c/p\u003e",
                    "typeExposed": "[DelegationSet]",
                    "type": "[DelegationSet]"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lrdsrMarker",
                        "name": "_lrdsrMarker",
                        "shape": "PageMarker",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003eIf the request returned more than one page of results, submit another request and specify the value of \u003ccode\u003eNextMarker\u003c/code\u003e from the last response in the \u003ccode\u003emarker\u003c/code\u003e parameter to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lrdsrIsTruncated",
                        "name": "_lrdsrIsTruncated",
                        "shape": "PageTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag indicating whether there are more reusable delegation sets to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the \u003ccode\u003eMarker\u003c/code\u003e element.\u003c/p\u003e \u003cp\u003eValid Values: \u003ccode\u003etrue\u003c/code\u003e | \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lrdsrMaxItems",
                        "name": "_lrdsrMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003eThe maximum number of reusable delegation sets to be included in the response body. If the number of reusable delegation sets associated with this AWS account exceeds \u003ccode\u003eMaxItems\u003c/code\u003e, the value of \u003ca\u003eListReusablDelegationSetsResponse$IsTruncated\u003c/a\u003e in the response is \u003ccode\u003etrue\u003c/code\u003e. Call \u003ccode\u003eListReusableDelegationSets\u003c/code\u003e again and specify the value of \u003ca\u003eListReusableDelegationSetsResponse$NextMarker\u003c/a\u003e in the \u003ca\u003eListReusableDelegationSetsRequest$Marker\u003c/a\u003e element to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "name": "ListReusableDelegationSetsResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lrdsrDelegationSets",
                        "name": "_lrdsrDelegationSets",
                        "shape": "DelegationSets",
                        "locationName": "DelegationSets",
                        "documentation": "\u003cp\u003eA complex type that contains information about the reusable delegation sets associated with the current AWS account.\u003c/p\u003e",
                        "typeExposed": "[DelegationSet]",
                        "type": "[DelegationSet]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrdsrNextMarker",
                        "name": "_lrdsrNextMarker",
                        "shape": "PageMarker",
                        "locationName": "NextMarker",
                        "documentation": "\u003cp\u003e Indicates where to continue listing reusable delegation sets. If \u003ca\u003eListReusableDelegationSetsResponse$IsTruncated\u003c/a\u003e is \u003ccode\u003etrue\u003c/code\u003e, make another request to \u003ccode\u003eListReusableDelegationSets\u003c/code\u003e and include the value of the \u003ccode\u003eNextMarker\u003c/code\u003e element in the \u003ccode\u003eMarker\u003c/code\u003e element to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lrdsrDelegationSets",
                        "name": "_lrdsrDelegationSets",
                        "shape": "DelegationSets",
                        "locationName": "DelegationSets",
                        "documentation": "\u003cp\u003eA complex type that contains information about the reusable delegation sets associated with the current AWS account.\u003c/p\u003e",
                        "typeExposed": "[DelegationSet]",
                        "type": "[DelegationSet]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lrdsrIsTruncated",
                        "name": "_lrdsrIsTruncated",
                        "shape": "PageTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag indicating whether there are more reusable delegation sets to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the \u003ccode\u003eMarker\u003c/code\u003e element.\u003c/p\u003e \u003cp\u003eValid Values: \u003ccode\u003etrue\u003c/code\u003e | \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lrdsrMarker",
                        "name": "_lrdsrMarker",
                        "shape": "PageMarker",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003eIf the request returned more than one page of results, submit another request and specify the value of \u003ccode\u003eNextMarker\u003c/code\u003e from the last response in the \u003ccode\u003emarker\u003c/code\u003e parameter to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lrdsrMaxItems",
                        "name": "_lrdsrMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003eThe maximum number of reusable delegation sets to be included in the response body. If the number of reusable delegation sets associated with this AWS account exceeds \u003ccode\u003eMaxItems\u003c/code\u003e, the value of \u003ca\u003eListReusablDelegationSetsResponse$IsTruncated\u003c/a\u003e in the response is \u003ccode\u003etrue\u003c/code\u003e. Call \u003ccode\u003eListReusableDelegationSets\u003c/code\u003e again and specify the value of \u003ca\u003eListReusableDelegationSetsResponse$NextMarker\u003c/a\u003e in the \u003ca\u003eListReusableDelegationSetsRequest$Marker\u003c/a\u003e element to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrdsrNextMarker",
                        "name": "_lrdsrNextMarker",
                        "shape": "PageMarker",
                        "locationName": "NextMarker",
                        "documentation": "\u003cp\u003e Indicates where to continue listing reusable delegation sets. If \u003ca\u003eListReusableDelegationSetsResponse$IsTruncated\u003c/a\u003e is \u003ccode\u003etrue\u003c/code\u003e, make another request to \u003ccode\u003eListReusableDelegationSets\u003c/code\u003e and include the value of the \u003ccode\u003eNextMarker\u003c/code\u003e element in the \u003ccode\u003eMarker\u003c/code\u003e element to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.ListReusableDelegationSets",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "ListReusableDelegationSets",
            "method": "get",
            "documentation": "\u003cp\u003e To retrieve a list of your reusable delegation sets, send a \u003ccode\u003eGET\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/delegationset\u003c/code\u003e resource. The response to this request includes a \u003ccode\u003eDelegationSets\u003c/code\u003e element with zero, one, or multiple \u003ccode\u003eDelegationSet\u003c/code\u003e child elements. By default, the list of delegation sets is displayed on a single page. You can control the length of the page that is displayed by using the \u003ccode\u003eMaxItems\u003c/code\u003e parameter. You can use the \u003ccode\u003eMarker\u003c/code\u003e parameter to control the delegation set that the list begins with. \u003c/p\u003e \u003cnote\u003e Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Amazon Route 53 returns only the first 100.\u003c/note\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 13,
                "ctor": "listReusableDelegationSets",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/delegationset",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 9,
                "name": "ListReusableDelegationSets",
                "query": [
                    {
                        "field": "_lrdsMarker",
                        "locationName": "marker",
                        "type": "field"
                    },
                    {
                        "field": "_lrdsMaxItems",
                        "locationName": "maxitems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrdsMarker",
                        "name": "_lrdsMarker",
                        "shape": "PageMarker",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eIf the request returned more than one page of results, submit another request and specify the value of \u003ccode\u003eNextMarker\u003c/code\u003e from the last response in the \u003ccode\u003emarker\u003c/code\u003e parameter to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrdsMaxItems",
                        "name": "_lrdsMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "maxitems",
                        "documentation": "\u003cp\u003eSpecify the maximum number of reusable delegation sets to return per page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrdsMarker",
                        "name": "_lrdsMarker",
                        "shape": "PageMarker",
                        "locationName": "marker",
                        "documentation": "\u003cp\u003eIf the request returned more than one page of results, submit another request and specify the value of \u003ccode\u003eNextMarker\u003c/code\u003e from the last response in the \u003ccode\u003emarker\u003c/code\u003e parameter to get the next page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrdsMaxItems",
                        "name": "_lrdsMaxItems",
                        "shape": "PageMaxItems",
                        "locationName": "maxitems",
                        "documentation": "\u003cp\u003eSpecify the maximum number of reusable delegation sets to return per page of results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "listTagsForResourceResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ltfrrResourceTagSet",
                    "name": "_ltfrrResourceTagSet",
                    "shape": "ResourceTagSet",
                    "locationName": "ResourceTagSet",
                    "documentation": "\u003cp\u003eA \u003ccode\u003eResourceTagSet\u003c/code\u003e containing tags associated with the specified resource.\u003c/p\u003e",
                    "typeExposed": "ResourceTagSet",
                    "type": "ResourceTagSet"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ltfrrResourceTagSet",
                    "name": "_ltfrrResourceTagSet",
                    "shape": "ResourceTagSet",
                    "locationName": "ResourceTagSet",
                    "documentation": "\u003cp\u003eA \u003ccode\u003eResourceTagSet\u003c/code\u003e containing tags associated with the specified resource.\u003c/p\u003e",
                    "typeExposed": "ResourceTagSet",
                    "type": "ResourceTagSet"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ltfrrResourceTagSet",
                        "name": "_ltfrrResourceTagSet",
                        "shape": "ResourceTagSet",
                        "locationName": "ResourceTagSet",
                        "documentation": "\u003cp\u003eA \u003ccode\u003eResourceTagSet\u003c/code\u003e containing tags associated with the specified resource.\u003c/p\u003e",
                        "typeExposed": "ResourceTagSet",
                        "type": "ResourceTagSet"
                    }
                ],
                "shared": false,
                "name": "ListTagsForResourceResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ltfrrResourceTagSet",
                        "name": "_ltfrrResourceTagSet",
                        "shape": "ResourceTagSet",
                        "locationName": "ResourceTagSet",
                        "documentation": "\u003cp\u003eA \u003ccode\u003eResourceTagSet\u003c/code\u003e containing tags associated with the specified resource.\u003c/p\u003e",
                        "typeExposed": "ResourceTagSet",
                        "type": "ResourceTagSet"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.ListTagsForResource",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "ListTagsForResource",
            "method": "get",
            "documentation": "",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "listTagsForResource",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/tags/",
                        "type": "const"
                    },
                    {
                        "value": "_ltfr1ResourceType",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_ltfr1ResourceId",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ltfr1ResourceType",
                        "name": "_ltfr1ResourceType",
                        "shape": "TagResourceType",
                        "locationName": "ResourceType",
                        "documentation": "\u003cp\u003eThe type of the resource. The resource type for health checks is \u003ccode\u003ehealthcheck\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ltfr1ResourceId",
                        "name": "_ltfr1ResourceId",
                        "shape": "TagResourceId",
                        "locationName": "ResourceId",
                        "documentation": "\u003cp\u003eThe ID of the resource for which you want to retrieve tags.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "ListTagsForResource",
                "query": [],
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ltfr1ResourceId",
                        "name": "_ltfr1ResourceId",
                        "shape": "TagResourceId",
                        "locationName": "ResourceId",
                        "documentation": "\u003cp\u003eThe ID of the resource for which you want to retrieve tags.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ltfr1ResourceType",
                        "name": "_ltfr1ResourceType",
                        "shape": "TagResourceType",
                        "locationName": "ResourceType",
                        "documentation": "\u003cp\u003eThe type of the resource. The resource type for health checks is \u003ccode\u003ehealthcheck\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Foldable",
                    "Traversable",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "listTagsForResourcesResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "ltfrrResourceTagSets",
                    "name": "_ltfrrResourceTagSets",
                    "shape": "ResourceTagSetList",
                    "locationName": "ResourceTagSets",
                    "documentation": "\u003cp\u003eA list of \u003ccode\u003eResourceTagSet\u003c/code\u003es containing tags associated with the specified resources.\u003c/p\u003e",
                    "typeExposed": "[ResourceTagSet]",
                    "type": "[ResourceTagSet]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "ltfrrResourceTagSets",
                    "name": "_ltfrrResourceTagSets",
                    "shape": "ResourceTagSetList",
                    "locationName": "ResourceTagSets",
                    "documentation": "\u003cp\u003eA list of \u003ccode\u003eResourceTagSet\u003c/code\u003es containing tags associated with the specified resources.\u003c/p\u003e",
                    "typeExposed": "[ResourceTagSet]",
                    "type": "[ResourceTagSet]"
                },
                "required": [],
                "shared": false,
                "name": "ListTagsForResourcesResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ltfrrResourceTagSets",
                        "name": "_ltfrrResourceTagSets",
                        "shape": "ResourceTagSetList",
                        "locationName": "ResourceTagSets",
                        "documentation": "\u003cp\u003eA list of \u003ccode\u003eResourceTagSet\u003c/code\u003es containing tags associated with the specified resources.\u003c/p\u003e",
                        "typeExposed": "[ResourceTagSet]",
                        "type": "[ResourceTagSet]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ltfrrResourceTagSets",
                        "name": "_ltfrrResourceTagSets",
                        "shape": "ResourceTagSetList",
                        "locationName": "ResourceTagSets",
                        "documentation": "\u003cp\u003eA list of \u003ccode\u003eResourceTagSet\u003c/code\u003es containing tags associated with the specified resources.\u003c/p\u003e",
                        "typeExposed": "[ResourceTagSet]",
                        "type": "[ResourceTagSet]"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.ListTagsForResources",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "ListTagsForResources",
            "method": "post",
            "documentation": "",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "listTagsForResources",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/tags/",
                        "type": "const"
                    },
                    {
                        "value": "_ltfrResourceType",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": "_List1",
                    "lensMapping": "_List1",
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ltfrResourceIds",
                    "name": "_ltfrResourceIds",
                    "shape": "TagResourceIdList",
                    "locationName": "ResourceIds",
                    "documentation": "\u003cp\u003eA complex type that contains the ResourceId element for each resource for which you want to get a list of tags.\u003c/p\u003e",
                    "typeExposed": "NonEmpty Text",
                    "type": "List1 Text"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ltfrResourceType",
                        "name": "_ltfrResourceType",
                        "shape": "TagResourceType",
                        "locationName": "ResourceType",
                        "documentation": "\u003cp\u003eThe type of the resources. The resource type for health checks is \u003ccode\u003ehealthcheck\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ltfrResourceIds",
                        "name": "_ltfrResourceIds",
                        "shape": "TagResourceIdList",
                        "locationName": "ResourceIds",
                        "documentation": "\u003cp\u003eA complex type that contains the ResourceId element for each resource for which you want to get a list of tags.\u003c/p\u003e",
                        "typeExposed": "NonEmpty Text",
                        "type": "List1 Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "ListTagsForResources",
                "query": [],
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ltfrResourceIds",
                        "name": "_ltfrResourceIds",
                        "shape": "TagResourceIdList",
                        "locationName": "ResourceIds",
                        "documentation": "\u003cp\u003eA complex type that contains the ResourceId element for each resource for which you want to get a list of tags.\u003c/p\u003e",
                        "typeExposed": "NonEmpty Text",
                        "type": "List1 Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ltfrResourceType",
                        "name": "_ltfrResourceType",
                        "shape": "TagResourceType",
                        "locationName": "ResourceType",
                        "documentation": "\u003cp\u003eThe type of the resources. The resource type for health checks is \u003ccode\u003ehealthcheck\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "Route53",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "updateHealthCheckResponse",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "uhcrHealthCheck",
                    "name": "_uhcrHealthCheck",
                    "shape": "HealthCheck",
                    "locationName": "HealthCheck",
                    "documentation": null,
                    "typeExposed": "HealthCheck",
                    "type": "HealthCheck"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "uhcrHealthCheck",
                    "name": "_uhcrHealthCheck",
                    "shape": "HealthCheck",
                    "locationName": "HealthCheck",
                    "documentation": null,
                    "typeExposed": "HealthCheck",
                    "type": "HealthCheck"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uhcrHealthCheck",
                        "name": "_uhcrHealthCheck",
                        "shape": "HealthCheck",
                        "locationName": "HealthCheck",
                        "documentation": null,
                        "typeExposed": "HealthCheck",
                        "type": "HealthCheck"
                    }
                ],
                "shared": false,
                "name": "UpdateHealthCheckResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uhcrHealthCheck",
                        "name": "_uhcrHealthCheck",
                        "shape": "HealthCheck",
                        "locationName": "HealthCheck",
                        "documentation": null,
                        "typeExposed": "HealthCheck",
                        "type": "HealthCheck"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53.UpdateHealthCheck",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.Route53.Types"
            ],
            "name": "UpdateHealthCheck",
            "method": "post",
            "documentation": "\u003cp\u003e This action updates an existing health check.\u003c/p\u003e \u003cp\u003e To update a health check, send a \u003ccode\u003ePOST\u003c/code\u003e request to the \u003ccode\u003e2013-04-01/healthcheck/\u003ci\u003ehealth check ID\u003c/i\u003e\u003c/code\u003e resource. The request body must include an XML document with an \u003ccode\u003eUpdateHealthCheckRequest\u003c/code\u003e element. The response returns an \u003ccode\u003eUpdateHealthCheckResponse\u003c/code\u003e element, which contains metadata about the health check.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 28,
                "ctor": "updateHealthCheck",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2013-04-01/healthcheck/",
                        "type": "const"
                    },
                    {
                        "value": "_uhcHealthCheckId",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "uhcHealthCheckVersion",
                    "name": "_uhcHealthCheckVersion",
                    "shape": "HealthCheckVersion",
                    "locationName": "HealthCheckVersion",
                    "documentation": "\u003cp\u003eOptional. When you specify a health check version, Route 53 compares this value with the current value in the health check, which prevents you from updating the health check when the versions don't match. Using \u003ccode\u003eHealthCheckVersion\u003c/code\u003e lets you prevent overwriting another change to the health check.\u003c/p\u003e",
                    "typeExposed": "Maybe Natural",
                    "type": "Maybe Natural"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uhcHealthCheckId",
                        "name": "_uhcHealthCheckId",
                        "shape": "HealthCheckId",
                        "locationName": "HealthCheckId",
                        "documentation": "\u003cp\u003eThe ID of the health check to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "UpdateHealthCheck",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uhcHealthCheckVersion",
                        "name": "_uhcHealthCheckVersion",
                        "shape": "HealthCheckVersion",
                        "locationName": "HealthCheckVersion",
                        "documentation": "\u003cp\u003eOptional. When you specify a health check version, Route 53 compares this value with the current value in the health check, which prevents you from updating the health check when the versions don't match. Using \u003ccode\u003eHealthCheckVersion\u003c/code\u003e lets you prevent overwriting another change to the health check.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uhcIPAddress",
                        "name": "_uhcIPAddress",
                        "shape": "IPAddress",
                        "locationName": "IPAddress",
                        "documentation": "\u003cp\u003eThe IP address of the resource that you want to check.\u003c/p\u003e \u003cp\u003eSpecify this value only if you want to change it.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uhcPort",
                        "name": "_uhcPort",
                        "shape": "Port",
                        "locationName": "Port",
                        "documentation": "\u003cp\u003eThe port on which you want Route 53 to open a connection to perform health checks.\u003c/p\u003e \u003cp\u003eSpecify this value only if you want to change it.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uhcResourcePath",
                        "name": "_uhcResourcePath",
                        "shape": "ResourcePath",
                        "locationName": "ResourcePath",
                        "documentation": "\u003cp\u003eThe path that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example the file /docs/route53-health-check.html. \u003c/p\u003e \u003cp\u003eSpecify this value only if you want to change it.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uhcFullyQualifiedDomainName",
                        "name": "_uhcFullyQualifiedDomainName",
                        "shape": "FullyQualifiedDomainName",
                        "locationName": "FullyQualifiedDomainName",
                        "documentation": "\u003cp\u003eFully qualified domain name of the instance to be health checked.\u003c/p\u003e \u003cp\u003eSpecify this value only if you want to change it.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uhcSearchString",
                        "name": "_uhcSearchString",
                        "shape": "SearchString",
                        "locationName": "SearchString",
                        "documentation": "\u003cp\u003eIf the value of \u003ccode\u003eType\u003c/code\u003e is \u003ccode\u003eHTTP_STR_MATCH\u003c/code\u003e or \u003ccode\u003eHTTP_STR_MATCH\u003c/code\u003e, the string that you want Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Route 53 considers the resource healthy. \u003c/p\u003e \u003cp\u003eSpecify this value only if you want to change it.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uhcFailureThreshold",
                        "name": "_uhcFailureThreshold",
                        "shape": "FailureThreshold",
                        "locationName": "FailureThreshold",
                        "documentation": "\u003cp\u003eThe number of consecutive health checks that an endpoint must pass or fail for Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa.\u003c/p\u003e \u003cp\u003eValid values are integers between 1 and 10. For more information, see \"How Amazon Route 53 Determines Whether an Endpoint Is Healthy\" in the Amazon Route 53 Developer Guide.\u003c/p\u003e \u003cp\u003eSpecify this value only if you want to change it.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uhcFailureThreshold",
                        "name": "_uhcFailureThreshold",
                        "shape": "FailureThreshold",
                        "locationName": "FailureThreshold",
                        "documentation": "\u003cp\u003eThe number of consecutive health checks that an endpoint must pass or fail for Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa.\u003c/p\u003e \u003cp\u003eValid values are integers between 1 and 10. For more information, see \"How Amazon Route 53 Determines Whether an Endpoint Is Healthy\" in the Amazon Route 53 Developer Guide.\u003c/p\u003e \u003cp\u003eSpecify this value only if you want to change it.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uhcFullyQualifiedDomainName",
                        "name": "_uhcFullyQualifiedDomainName",
                        "shape": "FullyQualifiedDomainName",
                        "locationName": "FullyQualifiedDomainName",
                        "documentation": "\u003cp\u003eFully qualified domain name of the instance to be health checked.\u003c/p\u003e \u003cp\u003eSpecify this value only if you want to change it.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uhcHealthCheckId",
                        "name": "_uhcHealthCheckId",
                        "shape": "HealthCheckId",
                        "locationName": "HealthCheckId",
                        "documentation": "\u003cp\u003eThe ID of the health check to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uhcHealthCheckVersion",
                        "name": "_uhcHealthCheckVersion",
                        "shape": "HealthCheckVersion",
                        "locationName": "HealthCheckVersion",
                        "documentation": "\u003cp\u003eOptional. When you specify a health check version, Route 53 compares this value with the current value in the health check, which prevents you from updating the health check when the versions don't match. Using \u003ccode\u003eHealthCheckVersion\u003c/code\u003e lets you prevent overwriting another change to the health check.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uhcIPAddress",
                        "name": "_uhcIPAddress",
                        "shape": "IPAddress",
                        "locationName": "IPAddress",
                        "documentation": "\u003cp\u003eThe IP address of the resource that you want to check.\u003c/p\u003e \u003cp\u003eSpecify this value only if you want to change it.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uhcPort",
                        "name": "_uhcPort",
                        "shape": "Port",
                        "locationName": "Port",
                        "documentation": "\u003cp\u003eThe port on which you want Route 53 to open a connection to perform health checks.\u003c/p\u003e \u003cp\u003eSpecify this value only if you want to change it.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Natural"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uhcResourcePath",
                        "name": "_uhcResourcePath",
                        "shape": "ResourcePath",
                        "locationName": "ResourcePath",
                        "documentation": "\u003cp\u003eThe path that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example the file /docs/route53-health-check.html. \u003c/p\u003e \u003cp\u003eSpecify this value only if you want to change it.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uhcSearchString",
                        "name": "_uhcSearchString",
                        "shape": "SearchString",
                        "locationName": "SearchString",
                        "documentation": "\u003cp\u003eIf the value of \u003ccode\u003eType\u003c/code\u003e is \u003ccode\u003eHTTP_STR_MATCH\u003c/code\u003e or \u003ccode\u003eHTTP_STR_MATCH\u003c/code\u003e, the string that you want Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Route 53 considers the resource healthy. \u003c/p\u003e \u003cp\u003eSpecify this value only if you want to change it.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        }
    ]
}