{
    "service": {
        "signature": "V4",
        "checksum": "md5",
        "abbrev": "S3",
        "error": "RESTError",
        "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/Welcome.html",
        "namespace": "Network.AWS.S3",
        "protocol": "rest-xml",
        "imports": [
            "Network.AWS.S3.AbortMultipartUpload",
            "Network.AWS.S3.CompleteMultipartUpload",
            "Network.AWS.S3.CopyObject",
            "Network.AWS.S3.CreateBucket",
            "Network.AWS.S3.CreateMultipartUpload",
            "Network.AWS.S3.DeleteBucket",
            "Network.AWS.S3.DeleteBucketCors",
            "Network.AWS.S3.DeleteBucketLifecycle",
            "Network.AWS.S3.DeleteBucketPolicy",
            "Network.AWS.S3.DeleteBucketTagging",
            "Network.AWS.S3.DeleteBucketWebsite",
            "Network.AWS.S3.DeleteObject",
            "Network.AWS.S3.DeleteObjects",
            "Network.AWS.S3.GetBucketAcl",
            "Network.AWS.S3.GetBucketCors",
            "Network.AWS.S3.GetBucketLifecycle",
            "Network.AWS.S3.GetBucketLocation",
            "Network.AWS.S3.GetBucketLogging",
            "Network.AWS.S3.GetBucketNotification",
            "Network.AWS.S3.GetBucketPolicy",
            "Network.AWS.S3.GetBucketRequestPayment",
            "Network.AWS.S3.GetBucketTagging",
            "Network.AWS.S3.GetBucketVersioning",
            "Network.AWS.S3.GetBucketWebsite",
            "Network.AWS.S3.GetObject",
            "Network.AWS.S3.GetObjectAcl",
            "Network.AWS.S3.GetObjectTorrent",
            "Network.AWS.S3.HeadBucket",
            "Network.AWS.S3.HeadObject",
            "Network.AWS.S3.ListBuckets",
            "Network.AWS.S3.ListMultipartUploads",
            "Network.AWS.S3.ListObjectVersions",
            "Network.AWS.S3.ListObjects",
            "Network.AWS.S3.ListParts",
            "Network.AWS.S3.PutBucketAcl",
            "Network.AWS.S3.PutBucketCors",
            "Network.AWS.S3.PutBucketLifecycle",
            "Network.AWS.S3.PutBucketLogging",
            "Network.AWS.S3.PutBucketNotification",
            "Network.AWS.S3.PutBucketPolicy",
            "Network.AWS.S3.PutBucketRequestPayment",
            "Network.AWS.S3.PutBucketTagging",
            "Network.AWS.S3.PutBucketVersioning",
            "Network.AWS.S3.PutBucketWebsite",
            "Network.AWS.S3.PutObject",
            "Network.AWS.S3.PutObjectAcl",
            "Network.AWS.S3.RestoreObject",
            "Network.AWS.S3.Types",
            "Network.AWS.S3.UploadPart",
            "Network.AWS.S3.UploadPartCopy"
        ],
        "name": "Amazon Simple Storage Service",
        "version": "2006-03-01",
        "documentation": "Amazon Simple Storage Service is storage for the Internet. Amazon S3 has a simple web services interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. It gives any developer access to the same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses to run its own global network of web sites. The service aims to maximize benefits of scale and to pass those benefits on to developers.",
        "xmlNamespace": "https://s3.amazonaws.com/doc/2006-03-01/",
        "jsonVersion": null,
        "endpoint": "Global",
        "endpointPrefix": "s3",
        "targetPrefix": null
    },
    "cabal": {
        "other": [
            "Network.AWS.S3.Internal"
        ],
        "library": "amazonka-s3",
        "exposed": [
            "Network.AWS.S3",
            "Network.AWS.S3.AbortMultipartUpload",
            "Network.AWS.S3.CompleteMultipartUpload",
            "Network.AWS.S3.CopyObject",
            "Network.AWS.S3.CreateBucket",
            "Network.AWS.S3.CreateMultipartUpload",
            "Network.AWS.S3.DeleteBucket",
            "Network.AWS.S3.DeleteBucketCors",
            "Network.AWS.S3.DeleteBucketLifecycle",
            "Network.AWS.S3.DeleteBucketPolicy",
            "Network.AWS.S3.DeleteBucketTagging",
            "Network.AWS.S3.DeleteBucketWebsite",
            "Network.AWS.S3.DeleteObject",
            "Network.AWS.S3.DeleteObjects",
            "Network.AWS.S3.GetBucketAcl",
            "Network.AWS.S3.GetBucketCors",
            "Network.AWS.S3.GetBucketLifecycle",
            "Network.AWS.S3.GetBucketLocation",
            "Network.AWS.S3.GetBucketLogging",
            "Network.AWS.S3.GetBucketNotification",
            "Network.AWS.S3.GetBucketPolicy",
            "Network.AWS.S3.GetBucketRequestPayment",
            "Network.AWS.S3.GetBucketTagging",
            "Network.AWS.S3.GetBucketVersioning",
            "Network.AWS.S3.GetBucketWebsite",
            "Network.AWS.S3.GetObject",
            "Network.AWS.S3.GetObjectAcl",
            "Network.AWS.S3.GetObjectTorrent",
            "Network.AWS.S3.HeadBucket",
            "Network.AWS.S3.HeadObject",
            "Network.AWS.S3.ListBuckets",
            "Network.AWS.S3.ListMultipartUploads",
            "Network.AWS.S3.ListObjectVersions",
            "Network.AWS.S3.ListObjects",
            "Network.AWS.S3.ListParts",
            "Network.AWS.S3.PutBucketAcl",
            "Network.AWS.S3.PutBucketCors",
            "Network.AWS.S3.PutBucketLifecycle",
            "Network.AWS.S3.PutBucketLogging",
            "Network.AWS.S3.PutBucketNotification",
            "Network.AWS.S3.PutBucketPolicy",
            "Network.AWS.S3.PutBucketRequestPayment",
            "Network.AWS.S3.PutBucketTagging",
            "Network.AWS.S3.PutBucketVersioning",
            "Network.AWS.S3.PutBucketWebsite",
            "Network.AWS.S3.PutObject",
            "Network.AWS.S3.PutObjectAcl",
            "Network.AWS.S3.RestoreObject",
            "Network.AWS.S3.Types",
            "Network.AWS.S3.UploadPart",
            "Network.AWS.S3.UploadPartCopy"
        ],
        "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/Welcome.html",
        "protocol": "rest-xml",
        "name": "Amazon Simple Storage Service",
        "version": "0.0.0",
        "description": "Amazon Simple Storage Service is storage for the Internet. Amazon S3 has a simple web services interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. It gives any developer access to the same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses to run its own global network of web sites. The service aims to maximize benefits of scale and to pass those benefits on to developers."
    },
    "types": {
        "namespace": "Network.AWS.S3.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "S3ObjectCreatedPut": "s3:ObjectCreated:Put",
                    "S3ReducedRedundancyLostObject": "s3:ReducedRedundancyLostObject",
                    "S3ObjectCreatedPost": "s3:ObjectCreated:Post",
                    "S3ObjectCreatedCopy": "s3:ObjectCreated:Copy",
                    "S3ObjectCreatedCompleteMultipartUpload": "s3:ObjectCreated:CompleteMultipartUpload"
                },
                "valuePad": 41,
                "name": "Event",
                "type": "nullary",
                "branchPad": 38
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum",
                    "Num",
                    "Integral",
                    "Real"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "noncurrentVersionExpiration",
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "nveNoncurrentDays",
                    "name": "_nveNoncurrentDays",
                    "shape": "Days",
                    "locationName": "NoncurrentDays",
                    "documentation": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see \u003ca href=\"/AmazonS3/latest/dev/s3-access-control.html\"\u003eHow Amazon S3 Calculates When an Object Became Noncurrent\u003c/a\u003e in the Amazon Simple Storage Service Developer Guide.",
                    "typeExposed": "Int",
                    "type": "Int"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "nveNoncurrentDays",
                        "name": "_nveNoncurrentDays",
                        "shape": "Days",
                        "locationName": "NoncurrentDays",
                        "documentation": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see \u003ca href=\"/AmazonS3/latest/dev/s3-access-control.html\"\u003eHow Amazon S3 Calculates When an Object Became Noncurrent\u003c/a\u003e in the Amazon Simple Storage Service Developer Guide.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "nveNoncurrentDays",
                        "name": "_nveNoncurrentDays",
                        "shape": "Days",
                        "locationName": "NoncurrentDays",
                        "documentation": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see \u003ca href=\"/AmazonS3/latest/dev/s3-access-control.html\"\u003eHow Amazon S3 Calculates When an Object Became Noncurrent\u003c/a\u003e in the Amazon Simple Storage Service Developer Guide.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 0,
                "name": "NoncurrentVersionExpiration",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "nveNoncurrentDays",
                        "name": "_nveNoncurrentDays",
                        "shape": "Days",
                        "locationName": "NoncurrentDays",
                        "documentation": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see \u003ca href=\"/AmazonS3/latest/dev/s3-access-control.html\"\u003eHow Amazon S3 Calculates When an Object Became Noncurrent\u003c/a\u003e in the Amazon Simple Storage Service Developer Guide.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "transition",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tDate",
                        "name": "_tDate",
                        "shape": "Date",
                        "locationName": "Date",
                        "documentation": "Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tDays",
                        "name": "_tDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tStorageClass",
                        "name": "_tStorageClass",
                        "shape": "TransitionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 13,
                "name": "Transition",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tDate",
                        "name": "_tDate",
                        "shape": "Date",
                        "locationName": "Date",
                        "documentation": "Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tDays",
                        "name": "_tDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tStorageClass",
                        "name": "_tStorageClass",
                        "shape": "TransitionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tDate",
                        "name": "_tDate",
                        "shape": "Date",
                        "locationName": "Date",
                        "documentation": "Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tDays",
                        "name": "_tDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tStorageClass",
                        "name": "_tStorageClass",
                        "shape": "TransitionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "deleteMarkerEntry",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeOwner",
                        "name": "_dmeOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeKey",
                        "name": "_dmeKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeVersionId",
                        "name": "_dmeVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "Version ID of an object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeIsLatest",
                        "name": "_dmeIsLatest",
                        "shape": "IsLatest",
                        "locationName": "IsLatest",
                        "documentation": "Specifies whether the object is (true) or is not (false) the latest version of an object.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeLastModified",
                        "name": "_dmeLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time the object was last modified.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 13,
                "name": "DeleteMarkerEntry",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeOwner",
                        "name": "_dmeOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeKey",
                        "name": "_dmeKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeVersionId",
                        "name": "_dmeVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "Version ID of an object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeIsLatest",
                        "name": "_dmeIsLatest",
                        "shape": "IsLatest",
                        "locationName": "IsLatest",
                        "documentation": "Specifies whether the object is (true) or is not (false) the latest version of an object.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeLastModified",
                        "name": "_dmeLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time the object was last modified.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeIsLatest",
                        "name": "_dmeIsLatest",
                        "shape": "IsLatest",
                        "locationName": "IsLatest",
                        "documentation": "Specifies whether the object is (true) or is not (false) the latest version of an object.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeKey",
                        "name": "_dmeKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeLastModified",
                        "name": "_dmeLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time the object was last modified.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeOwner",
                        "name": "_dmeOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dmeVersionId",
                        "name": "_dmeVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "Version ID of an object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Enabled": "Enabled",
                    "Disabled": "Disabled"
                },
                "valuePad": 9,
                "name": "ExpirationStatus",
                "type": "nullary",
                "branchPad": 8
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "part",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pPartNumber",
                        "name": "_pPartNumber",
                        "shape": "PartNumber",
                        "locationName": "PartNumber",
                        "documentation": "Part number identifying the part.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pLastModified",
                        "name": "_pLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time at which the part was uploaded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pETag",
                        "name": "_pETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag returned when the part was uploaded.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pSize",
                        "name": "_pSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": "Size of the uploaded part data.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 13,
                "name": "Part",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pPartNumber",
                        "name": "_pPartNumber",
                        "shape": "PartNumber",
                        "locationName": "PartNumber",
                        "documentation": "Part number identifying the part.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pLastModified",
                        "name": "_pLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time at which the part was uploaded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pETag",
                        "name": "_pETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag returned when the part was uploaded.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pSize",
                        "name": "_pSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": "Size of the uploaded part data.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pETag",
                        "name": "_pETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag returned when the part was uploaded.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pLastModified",
                        "name": "_pLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time at which the part was uploaded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pPartNumber",
                        "name": "_pPartNumber",
                        "shape": "PartNumber",
                        "locationName": "PartNumber",
                        "documentation": "Part number identifying the part.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pSize",
                        "name": "_pSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": "Size of the uploaded part data.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "versioningConfiguration",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcMFADelete",
                        "name": "_vcMFADelete",
                        "shape": "MFADelete",
                        "locationName": "MfaDelete",
                        "documentation": "Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcStatus",
                        "name": "_vcStatus",
                        "shape": "BucketVersioningStatus",
                        "locationName": "Status",
                        "documentation": "The versioning state of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 10,
                "name": "VersioningConfiguration",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcMFADelete",
                        "name": "_vcMFADelete",
                        "shape": "MFADelete",
                        "locationName": "MfaDelete",
                        "documentation": "Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcStatus",
                        "name": "_vcStatus",
                        "shape": "BucketVersioningStatus",
                        "locationName": "Status",
                        "documentation": "The versioning state of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcMFADelete",
                        "name": "_vcMFADelete",
                        "shape": "MFADelete",
                        "locationName": "MfaDelete",
                        "documentation": "Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcStatus",
                        "name": "_vcStatus",
                        "shape": "BucketVersioningStatus",
                        "locationName": "Status",
                        "documentation": "The versioning state of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 9,
                "ctor": "tag",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "tagKey",
                        "name": "_tagKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Name of the tag.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "tagValue",
                        "name": "_tagValue",
                        "shape": "Value",
                        "locationName": "Value",
                        "documentation": "Value of the tag.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "tagKey",
                        "name": "_tagKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Name of the tag.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "tagValue",
                        "name": "_tagValue",
                        "shape": "Value",
                        "locationName": "Value",
                        "documentation": "Value of the tag.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 6,
                "name": "Tag",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "tagKey",
                        "name": "_tagKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Name of the tag.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "tagValue",
                        "name": "_tagValue",
                        "shape": "Value",
                        "locationName": "Value",
                        "documentation": "Value of the tag.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Glacier": "GLACIER",
                    "Standard": "STANDARD",
                    "ReducedRedundancy": "REDUCED_REDUNDANCY"
                },
                "valuePad": 19,
                "name": "ObjectStorageClass",
                "type": "nullary",
                "branchPad": 17
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Replace": "REPLACE",
                    "Copy": "COPY"
                },
                "valuePad": 8,
                "name": "MetadataDirective",
                "type": "nullary",
                "branchPad": 7
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "redirectAllRequestsTo",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rartHostName",
                        "name": "_rartHostName",
                        "shape": "HostName",
                        "locationName": "HostName",
                        "documentation": "Name of the host where requests will be redirected.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rartProtocol",
                        "name": "_rartProtocol",
                        "shape": "Protocol",
                        "locationName": "Protocol",
                        "documentation": "Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rartHostName",
                        "name": "_rartHostName",
                        "shape": "HostName",
                        "locationName": "HostName",
                        "documentation": "Name of the host where requests will be redirected.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 9,
                "name": "RedirectAllRequestsTo",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rartProtocol",
                        "name": "_rartProtocol",
                        "shape": "Protocol",
                        "locationName": "Protocol",
                        "documentation": "Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rartHostName",
                        "name": "_rartHostName",
                        "shape": "HostName",
                        "locationName": "HostName",
                        "documentation": "Name of the host where requests will be redirected.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rartProtocol",
                        "name": "_rartProtocol",
                        "shape": "Protocol",
                        "locationName": "Protocol",
                        "documentation": "Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "routingRule",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rrCondition",
                        "name": "_rrCondition",
                        "shape": "Condition",
                        "locationName": "Condition",
                        "documentation": "A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the /docs folder, redirect to the /documents folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.",
                        "typeExposed": "Maybe Condition",
                        "type": "Maybe Condition"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rrRedirect",
                        "name": "_rrRedirect",
                        "shape": "Redirect",
                        "locationName": "Redirect",
                        "documentation": "Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can can specify a different error code to return.",
                        "typeExposed": "Redirect",
                        "type": "Redirect"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rrRedirect",
                        "name": "_rrRedirect",
                        "shape": "Redirect",
                        "locationName": "Redirect",
                        "documentation": "Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can can specify a different error code to return.",
                        "typeExposed": "Redirect",
                        "type": "Redirect"
                    }
                ],
                "contentPad": 10,
                "name": "RoutingRule",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rrCondition",
                        "name": "_rrCondition",
                        "shape": "Condition",
                        "locationName": "Condition",
                        "documentation": "A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the /docs folder, redirect to the /documents folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.",
                        "typeExposed": "Maybe Condition",
                        "type": "Maybe Condition"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rrCondition",
                        "name": "_rrCondition",
                        "shape": "Condition",
                        "locationName": "Condition",
                        "documentation": "A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the /docs folder, redirect to the /documents folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.",
                        "typeExposed": "Maybe Condition",
                        "type": "Maybe Condition"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rrRedirect",
                        "name": "_rrRedirect",
                        "shape": "Redirect",
                        "locationName": "Redirect",
                        "documentation": "Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can can specify a different error code to return.",
                        "typeExposed": "Redirect",
                        "type": "Redirect"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 29,
                "ctor": "notificationConfiguration",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ncTopicConfiguration",
                        "name": "_ncTopicConfiguration",
                        "shape": "TopicConfiguration",
                        "locationName": "TopicConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe TopicConfiguration",
                        "type": "Maybe TopicConfiguration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ncQueueConfiguration",
                        "name": "_ncQueueConfiguration",
                        "shape": "QueueConfiguration",
                        "locationName": "QueueConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe QueueConfiguration",
                        "type": "Maybe QueueConfiguration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ncCloudFunctionConfiguration",
                        "name": "_ncCloudFunctionConfiguration",
                        "shape": "CloudFunctionConfiguration",
                        "locationName": "CloudFunctionConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CloudFunctionConfiguration",
                        "type": "Maybe CloudFunctionConfiguration"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 27,
                "name": "NotificationConfiguration",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ncTopicConfiguration",
                        "name": "_ncTopicConfiguration",
                        "shape": "TopicConfiguration",
                        "locationName": "TopicConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe TopicConfiguration",
                        "type": "Maybe TopicConfiguration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ncQueueConfiguration",
                        "name": "_ncQueueConfiguration",
                        "shape": "QueueConfiguration",
                        "locationName": "QueueConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe QueueConfiguration",
                        "type": "Maybe QueueConfiguration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ncCloudFunctionConfiguration",
                        "name": "_ncCloudFunctionConfiguration",
                        "shape": "CloudFunctionConfiguration",
                        "locationName": "CloudFunctionConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CloudFunctionConfiguration",
                        "type": "Maybe CloudFunctionConfiguration"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ncCloudFunctionConfiguration",
                        "name": "_ncCloudFunctionConfiguration",
                        "shape": "CloudFunctionConfiguration",
                        "locationName": "CloudFunctionConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CloudFunctionConfiguration",
                        "type": "Maybe CloudFunctionConfiguration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ncQueueConfiguration",
                        "name": "_ncQueueConfiguration",
                        "shape": "QueueConfiguration",
                        "locationName": "QueueConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe QueueConfiguration",
                        "type": "Maybe QueueConfiguration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ncTopicConfiguration",
                        "name": "_ncTopicConfiguration",
                        "shape": "TopicConfiguration",
                        "locationName": "TopicConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe TopicConfiguration",
                        "type": "Maybe TopicConfiguration"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "s3ServiceError",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sseKey",
                        "name": "_sseKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sseVersionId",
                        "name": "_sseVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sseCode",
                        "name": "_sseCode",
                        "shape": "Code",
                        "locationName": "Code",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sseMessage",
                        "name": "_sseMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 10,
                "name": "S3ServiceError",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sseKey",
                        "name": "_sseKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sseVersionId",
                        "name": "_sseVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sseCode",
                        "name": "_sseCode",
                        "shape": "Code",
                        "locationName": "Code",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sseMessage",
                        "name": "_sseMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sseCode",
                        "name": "_sseCode",
                        "shape": "Code",
                        "locationName": "Code",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sseKey",
                        "name": "_sseKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sseMessage",
                        "name": "_sseMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sseVersionId",
                        "name": "_sseVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Private": "private",
                    "BucketOwnerFullControl": "bucket-owner-full-control",
                    "BucketOwnerRead": "bucket-owner-read",
                    "PublicRead": "public-read",
                    "AuthenticatedRead": "authenticated-read",
                    "PublicReadWrite": "public-read-write"
                },
                "valuePad": 26,
                "name": "ObjectCannedACL",
                "type": "nullary",
                "branchPad": 22
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "BVSSuspended": "Suspended",
                    "BVSEnabled": "Enabled"
                },
                "valuePad": 10,
                "name": "BucketVersioningStatus",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 25,
                "ctor": "deletedObject",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "do1Key",
                        "name": "_do1Key",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "do1VersionId",
                        "name": "_do1VersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "do1DeleteMarker",
                        "name": "_do1DeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "DeleteMarker",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "do1DeleteMarkerVersionId",
                        "name": "_do1DeleteMarkerVersionId",
                        "shape": "DeleteMarkerVersionId",
                        "locationName": "DeleteMarkerVersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 22,
                "name": "DeletedObject",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "do1Key",
                        "name": "_do1Key",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "do1VersionId",
                        "name": "_do1VersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "do1DeleteMarker",
                        "name": "_do1DeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "DeleteMarker",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "do1DeleteMarkerVersionId",
                        "name": "_do1DeleteMarkerVersionId",
                        "shape": "DeleteMarkerVersionId",
                        "locationName": "DeleteMarkerVersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "do1DeleteMarker",
                        "name": "_do1DeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "DeleteMarker",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "do1DeleteMarkerVersionId",
                        "name": "_do1DeleteMarkerVersionId",
                        "shape": "DeleteMarkerVersionId",
                        "locationName": "DeleteMarkerVersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "do1Key",
                        "name": "_do1Key",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "do1VersionId",
                        "name": "_do1VersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "OVSCStandard": "STANDARD"
                },
                "valuePad": 9,
                "name": "ObjectVersionStorageClass",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "copyPartResult",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cprETag",
                        "name": "_cprETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cprLastModified",
                        "name": "_cprLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time at which the object was uploaded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 13,
                "name": "CopyPartResult",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cprETag",
                        "name": "_cprETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cprLastModified",
                        "name": "_cprLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time at which the object was uploaded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cprETag",
                        "name": "_cprETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cprLastModified",
                        "name": "_cprLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time at which the object was uploaded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Url": "url"
                },
                "valuePad": 4,
                "name": "EncodingType",
                "type": "nullary",
                "branchPad": 3
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "requestPaymentConfiguration",
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "rpcPayer",
                    "name": "_rpcPayer",
                    "shape": "Payer",
                    "locationName": "Payer",
                    "documentation": "Specifies who pays for the download and request fees.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rpcPayer",
                        "name": "_rpcPayer",
                        "shape": "Payer",
                        "locationName": "Payer",
                        "documentation": "Specifies who pays for the download and request fees.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rpcPayer",
                        "name": "_rpcPayer",
                        "shape": "Payer",
                        "locationName": "Payer",
                        "documentation": "Specifies who pays for the download and request fees.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "RequestPaymentConfiguration",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rpcPayer",
                        "name": "_rpcPayer",
                        "shape": "Payer",
                        "locationName": "Payer",
                        "documentation": "Specifies who pays for the download and request fees.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 20,
                "ctor": "corsrule",
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corsrAllowedHeaders",
                        "name": "_corsrAllowedHeaders",
                        "shape": "AllowedHeaders",
                        "locationName": "AllowedHeader",
                        "documentation": "Specifies which headers are allowed in a pre-flight OPTIONS request.",
                        "typeExposed": "[Text]",
                        "type": "List \"AllowedHeader\" Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corsrAllowedMethods",
                        "name": "_corsrAllowedMethods",
                        "shape": "AllowedMethods",
                        "locationName": "AllowedMethod",
                        "documentation": "Identifies HTTP methods that the domain/origin specified in the rule is allowed to execute.",
                        "typeExposed": "[Text]",
                        "type": "List \"AllowedMethod\" Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corsrAllowedOrigins",
                        "name": "_corsrAllowedOrigins",
                        "shape": "AllowedOrigins",
                        "locationName": "AllowedOrigin",
                        "documentation": "One or more origins you want customers to be able to access the bucket from.",
                        "typeExposed": "[Text]",
                        "type": "List \"AllowedOrigin\" Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corsrExposeHeaders",
                        "name": "_corsrExposeHeaders",
                        "shape": "ExposeHeaders",
                        "locationName": "ExposeHeader",
                        "documentation": "One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).",
                        "typeExposed": "[Text]",
                        "type": "List \"ExposeHeader\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corsrMaxAgeSeconds",
                        "name": "_corsrMaxAgeSeconds",
                        "shape": "MaxAgeSeconds",
                        "locationName": "MaxAgeSeconds",
                        "documentation": "The time in seconds that your browser is to cache the preflight response for the specified resource.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corsrAllowedHeaders",
                        "name": "_corsrAllowedHeaders",
                        "shape": "AllowedHeaders",
                        "locationName": "AllowedHeader",
                        "documentation": "Specifies which headers are allowed in a pre-flight OPTIONS request.",
                        "typeExposed": "[Text]",
                        "type": "List \"AllowedHeader\" Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corsrAllowedMethods",
                        "name": "_corsrAllowedMethods",
                        "shape": "AllowedMethods",
                        "locationName": "AllowedMethod",
                        "documentation": "Identifies HTTP methods that the domain/origin specified in the rule is allowed to execute.",
                        "typeExposed": "[Text]",
                        "type": "List \"AllowedMethod\" Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corsrAllowedOrigins",
                        "name": "_corsrAllowedOrigins",
                        "shape": "AllowedOrigins",
                        "locationName": "AllowedOrigin",
                        "documentation": "One or more origins you want customers to be able to access the bucket from.",
                        "typeExposed": "[Text]",
                        "type": "List \"AllowedOrigin\" Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corsrExposeHeaders",
                        "name": "_corsrExposeHeaders",
                        "shape": "ExposeHeaders",
                        "locationName": "ExposeHeader",
                        "documentation": "One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).",
                        "typeExposed": "[Text]",
                        "type": "List \"ExposeHeader\" Text"
                    }
                ],
                "contentPad": 14,
                "name": "CORSRule",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corsrMaxAgeSeconds",
                        "name": "_corsrMaxAgeSeconds",
                        "shape": "MaxAgeSeconds",
                        "locationName": "MaxAgeSeconds",
                        "documentation": "The time in seconds that your browser is to cache the preflight response for the specified resource.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corsrAllowedHeaders",
                        "name": "_corsrAllowedHeaders",
                        "shape": "AllowedHeaders",
                        "locationName": "AllowedHeader",
                        "documentation": "Specifies which headers are allowed in a pre-flight OPTIONS request.",
                        "typeExposed": "[Text]",
                        "type": "List \"AllowedHeader\" Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corsrAllowedMethods",
                        "name": "_corsrAllowedMethods",
                        "shape": "AllowedMethods",
                        "locationName": "AllowedMethod",
                        "documentation": "Identifies HTTP methods that the domain/origin specified in the rule is allowed to execute.",
                        "typeExposed": "[Text]",
                        "type": "List \"AllowedMethod\" Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corsrAllowedOrigins",
                        "name": "_corsrAllowedOrigins",
                        "shape": "AllowedOrigins",
                        "locationName": "AllowedOrigin",
                        "documentation": "One or more origins you want customers to be able to access the bucket from.",
                        "typeExposed": "[Text]",
                        "type": "List \"AllowedOrigin\" Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corsrExposeHeaders",
                        "name": "_corsrExposeHeaders",
                        "shape": "ExposeHeaders",
                        "locationName": "ExposeHeader",
                        "documentation": "One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).",
                        "typeExposed": "[Text]",
                        "type": "List \"ExposeHeader\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corsrMaxAgeSeconds",
                        "name": "_corsrMaxAgeSeconds",
                        "shape": "MaxAgeSeconds",
                        "locationName": "MaxAgeSeconds",
                        "documentation": "The time in seconds that your browser is to cache the preflight response for the specified resource.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 24,
                "ctor": "websiteConfiguration",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "wcErrorDocument",
                        "name": "_wcErrorDocument",
                        "shape": "ErrorDocument",
                        "locationName": "ErrorDocument",
                        "documentation": null,
                        "typeExposed": "Maybe ErrorDocument",
                        "type": "Maybe ErrorDocument"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "wcIndexDocument",
                        "name": "_wcIndexDocument",
                        "shape": "IndexDocument",
                        "locationName": "IndexDocument",
                        "documentation": null,
                        "typeExposed": "Maybe IndexDocument",
                        "type": "Maybe IndexDocument"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "wcRedirectAllRequestsTo",
                        "name": "_wcRedirectAllRequestsTo",
                        "shape": "RedirectAllRequestsTo",
                        "locationName": "RedirectAllRequestsTo",
                        "documentation": null,
                        "typeExposed": "Maybe RedirectAllRequestsTo",
                        "type": "Maybe RedirectAllRequestsTo"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "wcRoutingRules",
                        "name": "_wcRoutingRules",
                        "shape": "RoutingRules",
                        "locationName": "RoutingRules",
                        "documentation": null,
                        "typeExposed": "[RoutingRule]",
                        "type": "List \"RoutingRule\" RoutingRule"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 22,
                "name": "WebsiteConfiguration",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "wcErrorDocument",
                        "name": "_wcErrorDocument",
                        "shape": "ErrorDocument",
                        "locationName": "ErrorDocument",
                        "documentation": null,
                        "typeExposed": "Maybe ErrorDocument",
                        "type": "Maybe ErrorDocument"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "wcIndexDocument",
                        "name": "_wcIndexDocument",
                        "shape": "IndexDocument",
                        "locationName": "IndexDocument",
                        "documentation": null,
                        "typeExposed": "Maybe IndexDocument",
                        "type": "Maybe IndexDocument"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "wcRedirectAllRequestsTo",
                        "name": "_wcRedirectAllRequestsTo",
                        "shape": "RedirectAllRequestsTo",
                        "locationName": "RedirectAllRequestsTo",
                        "documentation": null,
                        "typeExposed": "Maybe RedirectAllRequestsTo",
                        "type": "Maybe RedirectAllRequestsTo"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "wcRoutingRules",
                        "name": "_wcRoutingRules",
                        "shape": "RoutingRules",
                        "locationName": "RoutingRules",
                        "documentation": null,
                        "typeExposed": "[RoutingRule]",
                        "type": "List \"RoutingRule\" RoutingRule"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "wcErrorDocument",
                        "name": "_wcErrorDocument",
                        "shape": "ErrorDocument",
                        "locationName": "ErrorDocument",
                        "documentation": null,
                        "typeExposed": "Maybe ErrorDocument",
                        "type": "Maybe ErrorDocument"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "wcIndexDocument",
                        "name": "_wcIndexDocument",
                        "shape": "IndexDocument",
                        "locationName": "IndexDocument",
                        "documentation": null,
                        "typeExposed": "Maybe IndexDocument",
                        "type": "Maybe IndexDocument"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "wcRedirectAllRequestsTo",
                        "name": "_wcRedirectAllRequestsTo",
                        "shape": "RedirectAllRequestsTo",
                        "locationName": "RedirectAllRequestsTo",
                        "documentation": null,
                        "typeExposed": "Maybe RedirectAllRequestsTo",
                        "type": "Maybe RedirectAllRequestsTo"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "wcRoutingRules",
                        "name": "_wcRoutingRules",
                        "shape": "RoutingRules",
                        "locationName": "RoutingRules",
                        "documentation": null,
                        "typeExposed": "[RoutingRule]",
                        "type": "List \"RoutingRule\" RoutingRule"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "noncurrentVersionTransition",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "nvtNoncurrentDays",
                        "name": "_nvtNoncurrentDays",
                        "shape": "Days",
                        "locationName": "NoncurrentDays",
                        "documentation": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see \u003ca href=\"/AmazonS3/latest/dev/s3-access-control.html\"\u003eHow Amazon S3 Calculates When an Object Became Noncurrent\u003c/a\u003e in the Amazon Simple Storage Service Developer Guide.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "nvtStorageClass",
                        "name": "_nvtStorageClass",
                        "shape": "TransitionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "nvtNoncurrentDays",
                        "name": "_nvtNoncurrentDays",
                        "shape": "Days",
                        "locationName": "NoncurrentDays",
                        "documentation": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see \u003ca href=\"/AmazonS3/latest/dev/s3-access-control.html\"\u003eHow Amazon S3 Calculates When an Object Became Noncurrent\u003c/a\u003e in the Amazon Simple Storage Service Developer Guide.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "nvtStorageClass",
                        "name": "_nvtStorageClass",
                        "shape": "TransitionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 15,
                "name": "NoncurrentVersionTransition",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "nvtNoncurrentDays",
                        "name": "_nvtNoncurrentDays",
                        "shape": "Days",
                        "locationName": "NoncurrentDays",
                        "documentation": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see \u003ca href=\"/AmazonS3/latest/dev/s3-access-control.html\"\u003eHow Amazon S3 Calculates When an Object Became Noncurrent\u003c/a\u003e in the Amazon Simple Storage Service Developer Guide.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "nvtStorageClass",
                        "name": "_nvtStorageClass",
                        "shape": "TransitionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "initiator",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "iID",
                        "name": "_iID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "If the principal is an AWS account, it provides the Canonical User ID. If the principal is an IAM User, it provides a user ARN value.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "iDisplayName",
                        "name": "_iDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": "Name of the Principal.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 12,
                "name": "Initiator",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "iID",
                        "name": "_iID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "If the principal is an AWS account, it provides the Canonical User ID. If the principal is an IAM User, it provides a user ARN value.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "iDisplayName",
                        "name": "_iDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": "Name of the Principal.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "iDisplayName",
                        "name": "_iDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": "Name of the Principal.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "iID",
                        "name": "_iID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "If the principal is an AWS account, it provides the Canonical User ID. If the principal is an IAM User, it provides a user ARN value.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "objectIdentifier",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oiKey",
                        "name": "_oiKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Key name of the object to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oiVersionId",
                        "name": "_oiVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "VersionId for the specific version of the object to delete.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oiKey",
                        "name": "_oiKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Key name of the object to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 10,
                "name": "ObjectIdentifier",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oiVersionId",
                        "name": "_oiVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "VersionId for the specific version of the object to delete.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oiKey",
                        "name": "_oiKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Key name of the object to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oiVersionId",
                        "name": "_oiVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "VersionId for the specific version of the object to delete.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "bucket",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "bName",
                        "name": "_bName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": "The name of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "bCreationDate",
                        "name": "_bCreationDate",
                        "shape": "CreationDate",
                        "locationName": "CreationDate",
                        "documentation": "Date the bucket was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 13,
                "name": "Bucket",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "bName",
                        "name": "_bName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": "The name of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "bCreationDate",
                        "name": "_bCreationDate",
                        "shape": "CreationDate",
                        "locationName": "CreationDate",
                        "documentation": "Date the bucket was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "bCreationDate",
                        "name": "_bCreationDate",
                        "shape": "CreationDate",
                        "locationName": "CreationDate",
                        "documentation": "Date the bucket was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "bName",
                        "name": "_bName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": "The name of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Https": "https",
                    "Http": "http"
                },
                "valuePad": 6,
                "name": "Protocol",
                "type": "nullary",
                "branchPad": 5
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "grant",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gGrantee",
                        "name": "_gGrantee",
                        "shape": "Grantee",
                        "locationName": "Grantee",
                        "documentation": null,
                        "typeExposed": "Maybe Grantee",
                        "type": "Maybe Grantee"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gPermission",
                        "name": "_gPermission",
                        "shape": "Permission",
                        "locationName": "Permission",
                        "documentation": "Specifies the permission given to the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 11,
                "name": "Grant",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gGrantee",
                        "name": "_gGrantee",
                        "shape": "Grantee",
                        "locationName": "Grantee",
                        "documentation": null,
                        "typeExposed": "Maybe Grantee",
                        "type": "Maybe Grantee"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gPermission",
                        "name": "_gPermission",
                        "shape": "Permission",
                        "locationName": "Permission",
                        "documentation": "Specifies the permission given to the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gGrantee",
                        "name": "_gGrantee",
                        "shape": "Grantee",
                        "locationName": "Grantee",
                        "documentation": null,
                        "typeExposed": "Maybe Grantee",
                        "type": "Maybe Grantee"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gPermission",
                        "name": "_gPermission",
                        "shape": "Permission",
                        "locationName": "Permission",
                        "documentation": "Specifies the permission given to the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 29,
                "ctor": "rule",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rExpiration",
                        "name": "_rExpiration",
                        "shape": "LifecycleExpiration",
                        "locationName": "Expiration",
                        "documentation": null,
                        "typeExposed": "Maybe LifecycleExpiration",
                        "type": "Maybe LifecycleExpiration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rID",
                        "name": "_rID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "Unique identifier for the rule. The value cannot be longer than 255 characters.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rPrefix",
                        "name": "_rPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": "Prefix identifying one or more objects to which the rule applies.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rStatus",
                        "name": "_rStatus",
                        "shape": "ExpirationStatus",
                        "locationName": "Status",
                        "documentation": "If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not currently being applied.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rTransition",
                        "name": "_rTransition",
                        "shape": "Transition",
                        "locationName": "Transition",
                        "documentation": null,
                        "typeExposed": "Maybe Transition",
                        "type": "Maybe Transition"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rNoncurrentVersionTransition",
                        "name": "_rNoncurrentVersionTransition",
                        "shape": "NoncurrentVersionTransition",
                        "locationName": "NoncurrentVersionTransition",
                        "documentation": null,
                        "typeExposed": "Maybe NoncurrentVersionTransition",
                        "type": "Maybe NoncurrentVersionTransition"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rNoncurrentVersionExpiration",
                        "name": "_rNoncurrentVersionExpiration",
                        "shape": "NoncurrentVersionExpiration",
                        "locationName": "NoncurrentVersionExpiration",
                        "documentation": null,
                        "typeExposed": "Maybe NoncurrentVersionExpiration",
                        "type": "Maybe NoncurrentVersionExpiration"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rPrefix",
                        "name": "_rPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": "Prefix identifying one or more objects to which the rule applies.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rStatus",
                        "name": "_rStatus",
                        "shape": "ExpirationStatus",
                        "locationName": "Status",
                        "documentation": "If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not currently being applied.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 28,
                "name": "Rule",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rExpiration",
                        "name": "_rExpiration",
                        "shape": "LifecycleExpiration",
                        "locationName": "Expiration",
                        "documentation": null,
                        "typeExposed": "Maybe LifecycleExpiration",
                        "type": "Maybe LifecycleExpiration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rID",
                        "name": "_rID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "Unique identifier for the rule. The value cannot be longer than 255 characters.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rTransition",
                        "name": "_rTransition",
                        "shape": "Transition",
                        "locationName": "Transition",
                        "documentation": null,
                        "typeExposed": "Maybe Transition",
                        "type": "Maybe Transition"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rNoncurrentVersionTransition",
                        "name": "_rNoncurrentVersionTransition",
                        "shape": "NoncurrentVersionTransition",
                        "locationName": "NoncurrentVersionTransition",
                        "documentation": null,
                        "typeExposed": "Maybe NoncurrentVersionTransition",
                        "type": "Maybe NoncurrentVersionTransition"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rNoncurrentVersionExpiration",
                        "name": "_rNoncurrentVersionExpiration",
                        "shape": "NoncurrentVersionExpiration",
                        "locationName": "NoncurrentVersionExpiration",
                        "documentation": null,
                        "typeExposed": "Maybe NoncurrentVersionExpiration",
                        "type": "Maybe NoncurrentVersionExpiration"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rExpiration",
                        "name": "_rExpiration",
                        "shape": "LifecycleExpiration",
                        "locationName": "Expiration",
                        "documentation": null,
                        "typeExposed": "Maybe LifecycleExpiration",
                        "type": "Maybe LifecycleExpiration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rID",
                        "name": "_rID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "Unique identifier for the rule. The value cannot be longer than 255 characters.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rNoncurrentVersionExpiration",
                        "name": "_rNoncurrentVersionExpiration",
                        "shape": "NoncurrentVersionExpiration",
                        "locationName": "NoncurrentVersionExpiration",
                        "documentation": null,
                        "typeExposed": "Maybe NoncurrentVersionExpiration",
                        "type": "Maybe NoncurrentVersionExpiration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rNoncurrentVersionTransition",
                        "name": "_rNoncurrentVersionTransition",
                        "shape": "NoncurrentVersionTransition",
                        "locationName": "NoncurrentVersionTransition",
                        "documentation": null,
                        "typeExposed": "Maybe NoncurrentVersionTransition",
                        "type": "Maybe NoncurrentVersionTransition"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rPrefix",
                        "name": "_rPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": "Prefix identifying one or more objects to which the rule applies.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rStatus",
                        "name": "_rStatus",
                        "shape": "ExpirationStatus",
                        "locationName": "Status",
                        "documentation": "If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not currently being applied.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rTransition",
                        "name": "_rTransition",
                        "shape": "Transition",
                        "locationName": "Transition",
                        "documentation": null,
                        "typeExposed": "Maybe Transition",
                        "type": "Maybe Transition"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 9,
                "ctor": "topicConfiguration",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tcId",
                        "name": "_tcId",
                        "shape": "NotificationId",
                        "locationName": "Id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "tcEvents",
                        "name": "_tcEvents",
                        "shape": "Events",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"Event\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tcEvent",
                        "name": "_tcEvent",
                        "shape": "Event",
                        "locationName": "Event",
                        "documentation": "Bucket event for which to send notifications.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tcTopic",
                        "name": "_tcTopic",
                        "shape": "Topic",
                        "locationName": "Topic",
                        "documentation": "Amazon SNS topic to which Amazon S3 will publish a message to report the specified events for the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "tcEvents",
                        "name": "_tcEvents",
                        "shape": "Events",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"Event\" Text"
                    }
                ],
                "contentPad": 6,
                "name": "TopicConfiguration",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tcId",
                        "name": "_tcId",
                        "shape": "NotificationId",
                        "locationName": "Id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tcEvent",
                        "name": "_tcEvent",
                        "shape": "Event",
                        "locationName": "Event",
                        "documentation": "Bucket event for which to send notifications.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tcTopic",
                        "name": "_tcTopic",
                        "shape": "Topic",
                        "locationName": "Topic",
                        "documentation": "Amazon SNS topic to which Amazon S3 will publish a message to report the specified events for the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tcEvent",
                        "name": "_tcEvent",
                        "shape": "Event",
                        "locationName": "Event",
                        "documentation": "Bucket event for which to send notifications.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "tcEvents",
                        "name": "_tcEvents",
                        "shape": "Events",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"Event\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tcId",
                        "name": "_tcId",
                        "shape": "NotificationId",
                        "locationName": "Id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tcTopic",
                        "name": "_tcTopic",
                        "shape": "Topic",
                        "locationName": "Topic",
                        "documentation": "Amazon SNS topic to which Amazon S3 will publish a message to report the specified events for the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 9,
                "ctor": "queueConfiguration",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "qcId",
                        "name": "_qcId",
                        "shape": "NotificationId",
                        "locationName": "Id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "qcEvent",
                        "name": "_qcEvent",
                        "shape": "Event",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "qcEvents",
                        "name": "_qcEvents",
                        "shape": "Events",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"Event\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "qcQueue",
                        "name": "_qcQueue",
                        "shape": "Queue",
                        "locationName": "Queue",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "qcEvents",
                        "name": "_qcEvents",
                        "shape": "Events",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"Event\" Text"
                    }
                ],
                "contentPad": 6,
                "name": "QueueConfiguration",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "qcId",
                        "name": "_qcId",
                        "shape": "NotificationId",
                        "locationName": "Id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "qcEvent",
                        "name": "_qcEvent",
                        "shape": "Event",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "qcQueue",
                        "name": "_qcQueue",
                        "shape": "Queue",
                        "locationName": "Queue",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "qcEvent",
                        "name": "_qcEvent",
                        "shape": "Event",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "qcEvents",
                        "name": "_qcEvents",
                        "shape": "Events",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"Event\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "qcId",
                        "name": "_qcId",
                        "shape": "NotificationId",
                        "locationName": "Id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "qcQueue",
                        "name": "_qcQueue",
                        "shape": "Queue",
                        "locationName": "Queue",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "owner",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oDisplayName",
                        "name": "_oDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oID",
                        "name": "_oID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 12,
                "name": "Owner",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oDisplayName",
                        "name": "_oDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oID",
                        "name": "_oID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oDisplayName",
                        "name": "_oDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oID",
                        "name": "_oID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "bucketLoggingStatus",
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "blsLoggingEnabled",
                    "name": "_blsLoggingEnabled",
                    "shape": "LoggingEnabled",
                    "locationName": "LoggingEnabled",
                    "documentation": null,
                    "typeExposed": "Maybe LoggingEnabled",
                    "type": "Maybe LoggingEnabled"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "blsLoggingEnabled",
                        "name": "_blsLoggingEnabled",
                        "shape": "LoggingEnabled",
                        "locationName": "LoggingEnabled",
                        "documentation": null,
                        "typeExposed": "Maybe LoggingEnabled",
                        "type": "Maybe LoggingEnabled"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "BucketLoggingStatus",
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "blsLoggingEnabled",
                        "name": "_blsLoggingEnabled",
                        "shape": "LoggingEnabled",
                        "locationName": "LoggingEnabled",
                        "documentation": null,
                        "typeExposed": "Maybe LoggingEnabled",
                        "type": "Maybe LoggingEnabled"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "blsLoggingEnabled",
                        "name": "_blsLoggingEnabled",
                        "shape": "LoggingEnabled",
                        "locationName": "LoggingEnabled",
                        "documentation": null,
                        "typeExposed": "Maybe LoggingEnabled",
                        "type": "Maybe LoggingEnabled"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "errorDocument",
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "edKey",
                    "name": "_edKey",
                    "shape": "ObjectKey",
                    "locationName": "Key",
                    "documentation": "The object key name to use when a 4XX class error occurs.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "edKey",
                        "name": "_edKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key name to use when a 4XX class error occurs.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "edKey",
                        "name": "_edKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key name to use when a 4XX class error occurs.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "ErrorDocument",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "edKey",
                        "name": "_edKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key name to use when a 4XX class error occurs.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "SCReducedRedundancy": "REDUCED_REDUNDANCY",
                    "SCStandard": "STANDARD"
                },
                "valuePad": 19,
                "name": "StorageClass",
                "type": "nullary",
                "branchPad": 19
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "objectVersion",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovETag",
                        "name": "_ovETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovSize",
                        "name": "_ovSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": "Size in bytes of the object.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovStorageClass",
                        "name": "_ovStorageClass",
                        "shape": "ObjectVersionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovKey",
                        "name": "_ovKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovVersionId",
                        "name": "_ovVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "Version ID of an object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovIsLatest",
                        "name": "_ovIsLatest",
                        "shape": "IsLatest",
                        "locationName": "IsLatest",
                        "documentation": "Specifies whether the object is (true) or is not (false) the latest version of an object.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovLastModified",
                        "name": "_ovLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time the object was last modified.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovOwner",
                        "name": "_ovOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 13,
                "name": "ObjectVersion",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovETag",
                        "name": "_ovETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovSize",
                        "name": "_ovSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": "Size in bytes of the object.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovStorageClass",
                        "name": "_ovStorageClass",
                        "shape": "ObjectVersionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovKey",
                        "name": "_ovKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovVersionId",
                        "name": "_ovVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "Version ID of an object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovIsLatest",
                        "name": "_ovIsLatest",
                        "shape": "IsLatest",
                        "locationName": "IsLatest",
                        "documentation": "Specifies whether the object is (true) or is not (false) the latest version of an object.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovLastModified",
                        "name": "_ovLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time the object was last modified.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovOwner",
                        "name": "_ovOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovETag",
                        "name": "_ovETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovIsLatest",
                        "name": "_ovIsLatest",
                        "shape": "IsLatest",
                        "locationName": "IsLatest",
                        "documentation": "Specifies whether the object is (true) or is not (false) the latest version of an object.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovKey",
                        "name": "_ovKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovLastModified",
                        "name": "_ovLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time the object was last modified.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovOwner",
                        "name": "_ovOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovSize",
                        "name": "_ovSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": "Size in bytes of the object.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovStorageClass",
                        "name": "_ovStorageClass",
                        "shape": "ObjectVersionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ovVersionId",
                        "name": "_ovVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "Version ID of an object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "targetGrant",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tgGrantee",
                        "name": "_tgGrantee",
                        "shape": "Grantee",
                        "locationName": "Grantee",
                        "documentation": null,
                        "typeExposed": "Maybe Grantee",
                        "type": "Maybe Grantee"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tgPermission",
                        "name": "_tgPermission",
                        "shape": "BucketLogsPermission",
                        "locationName": "Permission",
                        "documentation": "Logging permissions assigned to the Grantee for the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 11,
                "name": "TargetGrant",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tgGrantee",
                        "name": "_tgGrantee",
                        "shape": "Grantee",
                        "locationName": "Grantee",
                        "documentation": null,
                        "typeExposed": "Maybe Grantee",
                        "type": "Maybe Grantee"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tgPermission",
                        "name": "_tgPermission",
                        "shape": "BucketLogsPermission",
                        "locationName": "Permission",
                        "documentation": "Logging permissions assigned to the Grantee for the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tgGrantee",
                        "name": "_tgGrantee",
                        "shape": "Grantee",
                        "locationName": "Grantee",
                        "documentation": null,
                        "typeExposed": "Maybe Grantee",
                        "type": "Maybe Grantee"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "tgPermission",
                        "name": "_tgPermission",
                        "shape": "BucketLogsPermission",
                        "locationName": "Permission",
                        "documentation": "Logging permissions assigned to the Grantee for the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "MFADSDisabled": "Disabled",
                    "MFADSEnabled": "Enabled"
                },
                "valuePad": 9,
                "name": "MFADeleteStatus",
                "type": "nullary",
                "branchPad": 13
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "BucketOwner": "BucketOwner",
                    "Requester": "Requester"
                },
                "valuePad": 12,
                "name": "Payer",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 22,
                "ctor": "redirect",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rHostName",
                        "name": "_rHostName",
                        "shape": "HostName",
                        "locationName": "HostName",
                        "documentation": "The host name to use in the redirect request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rHttpRedirectCode",
                        "name": "_rHttpRedirectCode",
                        "shape": "HttpRedirectCode",
                        "locationName": "HttpRedirectCode",
                        "documentation": "The HTTP redirect code to use on the response. Not required if one of the siblings is present.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rProtocol",
                        "name": "_rProtocol",
                        "shape": "Protocol",
                        "locationName": "Protocol",
                        "documentation": "Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rReplaceKeyPrefixWith",
                        "name": "_rReplaceKeyPrefixWith",
                        "shape": "ReplaceKeyPrefixWith",
                        "locationName": "ReplaceKeyPrefixWith",
                        "documentation": "The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the docs/ folder) to documents/, you can set a condition block with KeyPrefixEquals set to docs/ and in the Redirect set ReplaceKeyPrefixWith to /documents. Not required if one of the siblings is present. Can be present only if ReplaceKeyWith is not provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rReplaceKeyWith",
                        "name": "_rReplaceKeyWith",
                        "shape": "ReplaceKeyWith",
                        "locationName": "ReplaceKeyWith",
                        "documentation": "The specific object key to use in the redirect request. For example, redirect request to error.html. Not required if one of the sibling is present. Can be present only if ReplaceKeyPrefixWith is not provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 21,
                "name": "Redirect",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rHostName",
                        "name": "_rHostName",
                        "shape": "HostName",
                        "locationName": "HostName",
                        "documentation": "The host name to use in the redirect request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rHttpRedirectCode",
                        "name": "_rHttpRedirectCode",
                        "shape": "HttpRedirectCode",
                        "locationName": "HttpRedirectCode",
                        "documentation": "The HTTP redirect code to use on the response. Not required if one of the siblings is present.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rProtocol",
                        "name": "_rProtocol",
                        "shape": "Protocol",
                        "locationName": "Protocol",
                        "documentation": "Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rReplaceKeyPrefixWith",
                        "name": "_rReplaceKeyPrefixWith",
                        "shape": "ReplaceKeyPrefixWith",
                        "locationName": "ReplaceKeyPrefixWith",
                        "documentation": "The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the docs/ folder) to documents/, you can set a condition block with KeyPrefixEquals set to docs/ and in the Redirect set ReplaceKeyPrefixWith to /documents. Not required if one of the siblings is present. Can be present only if ReplaceKeyWith is not provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rReplaceKeyWith",
                        "name": "_rReplaceKeyWith",
                        "shape": "ReplaceKeyWith",
                        "locationName": "ReplaceKeyWith",
                        "documentation": "The specific object key to use in the redirect request. For example, redirect request to error.html. Not required if one of the sibling is present. Can be present only if ReplaceKeyPrefixWith is not provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rHostName",
                        "name": "_rHostName",
                        "shape": "HostName",
                        "locationName": "HostName",
                        "documentation": "The host name to use in the redirect request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rHttpRedirectCode",
                        "name": "_rHttpRedirectCode",
                        "shape": "HttpRedirectCode",
                        "locationName": "HttpRedirectCode",
                        "documentation": "The HTTP redirect code to use on the response. Not required if one of the siblings is present.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rProtocol",
                        "name": "_rProtocol",
                        "shape": "Protocol",
                        "locationName": "Protocol",
                        "documentation": "Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rReplaceKeyPrefixWith",
                        "name": "_rReplaceKeyPrefixWith",
                        "shape": "ReplaceKeyPrefixWith",
                        "locationName": "ReplaceKeyPrefixWith",
                        "documentation": "The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the docs/ folder) to documents/, you can set a condition block with KeyPrefixEquals set to docs/ and in the Redirect set ReplaceKeyPrefixWith to /documents. Not required if one of the siblings is present. Can be present only if ReplaceKeyWith is not provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "rReplaceKeyWith",
                        "name": "_rReplaceKeyWith",
                        "shape": "ReplaceKeyWith",
                        "locationName": "ReplaceKeyWith",
                        "documentation": "The specific object key to use in the redirect request. For example, redirect request to error.html. Not required if one of the sibling is present. Can be present only if ReplaceKeyPrefixWith is not provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "FullControl": "FULL_CONTROL",
                    "Read": "READ",
                    "Write": "WRITE"
                },
                "valuePad": 13,
                "name": "BucketLogsPermission",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "completedPart",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cpETag",
                        "name": "_cpETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag returned when the part was uploaded.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cpPartNumber",
                        "name": "_cpPartNumber",
                        "shape": "PartNumber",
                        "locationName": "PartNumber",
                        "documentation": "Part number that identifies the part.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 11,
                "name": "CompletedPart",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cpETag",
                        "name": "_cpETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag returned when the part was uploaded.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cpPartNumber",
                        "name": "_cpPartNumber",
                        "shape": "PartNumber",
                        "locationName": "PartNumber",
                        "documentation": "Part number that identifies the part.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cpETag",
                        "name": "_cpETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag returned when the part was uploaded.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cpPartNumber",
                        "name": "_cpPartNumber",
                        "shape": "PartNumber",
                        "locationName": "PartNumber",
                        "documentation": "Part number that identifies the part.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "createBucketConfiguration",
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "cbcLocationConstraint",
                    "name": "_cbcLocationConstraint",
                    "shape": "BucketLocationConstraint",
                    "locationName": "LocationConstraint",
                    "documentation": "Specifies the region where the bucket will be created.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbcLocationConstraint",
                        "name": "_cbcLocationConstraint",
                        "shape": "BucketLocationConstraint",
                        "locationName": "LocationConstraint",
                        "documentation": "Specifies the region where the bucket will be created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "CreateBucketConfiguration",
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbcLocationConstraint",
                        "name": "_cbcLocationConstraint",
                        "shape": "BucketLocationConstraint",
                        "locationName": "LocationConstraint",
                        "documentation": "Specifies the region where the bucket will be created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbcLocationConstraint",
                        "name": "_cbcLocationConstraint",
                        "shape": "BucketLocationConstraint",
                        "locationName": "LocationConstraint",
                        "documentation": "Specifies the region where the bucket will be created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Semigroup"
                ],
                "listElement": "Tag",
                "fieldPad": 0,
                "ctor": "tagging",
                "field": {
                    "location": null,
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "flattened": false,
                    "required": true,
                    "lens": "tTagSet",
                    "name": "_tTagSet",
                    "shape": "TagSet",
                    "locationName": "TagSet",
                    "documentation": null,
                    "typeExposed": "[Tag]",
                    "type": "List \"Tag\" Tag"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "tTagSet",
                        "name": "_tTagSet",
                        "shape": "TagSet",
                        "locationName": "TagSet",
                        "documentation": null,
                        "typeExposed": "[Tag]",
                        "type": "List \"Tag\" Tag"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Tagging",
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "tTagSet",
                        "name": "_tTagSet",
                        "shape": "TagSet",
                        "locationName": "TagSet",
                        "documentation": null,
                        "typeExposed": "[Tag]",
                        "type": "List \"Tag\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "tTagSet",
                        "name": "_tTagSet",
                        "shape": "TagSet",
                        "locationName": "TagSet",
                        "documentation": null,
                        "typeExposed": "[Tag]",
                        "type": "List \"Tag\" Tag"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 7,
                "ctor": "lifecycleExpiration",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "leDate",
                        "name": "_leDate",
                        "shape": "Date",
                        "locationName": "Date",
                        "documentation": "Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "leDays",
                        "name": "_leDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 5,
                "name": "LifecycleExpiration",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "leDate",
                        "name": "_leDate",
                        "shape": "Date",
                        "locationName": "Date",
                        "documentation": "Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "leDays",
                        "name": "_leDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "leDate",
                        "name": "_leDate",
                        "shape": "Date",
                        "locationName": "Date",
                        "documentation": "Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "leDays",
                        "name": "_leDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Semigroup"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "corsconfiguration",
                "field": {
                    "location": null,
                    "iso": "_List",
                    "lensMapping": "_List . _List",
                    "default": "\u003cerror\u003e",
                    "flattened": true,
                    "required": true,
                    "lens": "corscCORSRules",
                    "name": "_corscCORSRules",
                    "shape": "CORSRules",
                    "locationName": "CORSRule",
                    "documentation": null,
                    "typeExposed": "[CORSRule]",
                    "type": "List \"CORSRule\" CORSRule"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corscCORSRules",
                        "name": "_corscCORSRules",
                        "shape": "CORSRules",
                        "locationName": "CORSRule",
                        "documentation": null,
                        "typeExposed": "[CORSRule]",
                        "type": "List \"CORSRule\" CORSRule"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corscCORSRules",
                        "name": "_corscCORSRules",
                        "shape": "CORSRules",
                        "locationName": "CORSRule",
                        "documentation": null,
                        "typeExposed": "[CORSRule]",
                        "type": "List \"CORSRule\" CORSRule"
                    }
                ],
                "contentPad": 0,
                "name": "CORSConfiguration",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "corscCORSRules",
                        "name": "_corscCORSRules",
                        "shape": "CORSRules",
                        "locationName": "CORSRule",
                        "documentation": null,
                        "typeExposed": "[CORSRule]",
                        "type": "List \"CORSRule\" CORSRule"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "object'",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oKey",
                        "name": "_oKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oLastModified",
                        "name": "_oLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": null,
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oETag",
                        "name": "_oETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oSize",
                        "name": "_oSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": null,
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oStorageClass",
                        "name": "_oStorageClass",
                        "shape": "ObjectStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oOwner",
                        "name": "_oOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Owner",
                        "type": "Owner"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oKey",
                        "name": "_oKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oLastModified",
                        "name": "_oLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": null,
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oETag",
                        "name": "_oETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oSize",
                        "name": "_oSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": null,
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oStorageClass",
                        "name": "_oStorageClass",
                        "shape": "ObjectStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oOwner",
                        "name": "_oOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Owner",
                        "type": "Owner"
                    }
                ],
                "contentPad": 13,
                "name": "Object",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oETag",
                        "name": "_oETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oKey",
                        "name": "_oKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oLastModified",
                        "name": "_oLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": null,
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oOwner",
                        "name": "_oOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Owner",
                        "type": "Owner"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oSize",
                        "name": "_oSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": null,
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oStorageClass",
                        "name": "_oStorageClass",
                        "shape": "ObjectStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "commonPrefix",
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "cpPrefix",
                    "name": "_cpPrefix",
                    "shape": "Prefix",
                    "locationName": "Prefix",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cpPrefix",
                        "name": "_cpPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "CommonPrefix",
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cpPrefix",
                        "name": "_cpPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cpPrefix",
                        "name": "_cpPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "multipartUpload",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muUploadId",
                        "name": "_muUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "Upload ID that identifies the multipart upload.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muKey",
                        "name": "_muKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Key of the object for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muInitiated",
                        "name": "_muInitiated",
                        "shape": "Initiated",
                        "locationName": "Initiated",
                        "documentation": "Date and time at which the multipart upload was initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muStorageClass",
                        "name": "_muStorageClass",
                        "shape": "StorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muOwner",
                        "name": "_muOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muInitiator",
                        "name": "_muInitiator",
                        "shape": "Initiator",
                        "locationName": "Initiator",
                        "documentation": "Identifies who initiated the multipart upload.",
                        "typeExposed": "Maybe Initiator",
                        "type": "Maybe Initiator"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 13,
                "name": "MultipartUpload",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muUploadId",
                        "name": "_muUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "Upload ID that identifies the multipart upload.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muKey",
                        "name": "_muKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Key of the object for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muInitiated",
                        "name": "_muInitiated",
                        "shape": "Initiated",
                        "locationName": "Initiated",
                        "documentation": "Date and time at which the multipart upload was initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muStorageClass",
                        "name": "_muStorageClass",
                        "shape": "StorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muOwner",
                        "name": "_muOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muInitiator",
                        "name": "_muInitiator",
                        "shape": "Initiator",
                        "locationName": "Initiator",
                        "documentation": "Identifies who initiated the multipart upload.",
                        "typeExposed": "Maybe Initiator",
                        "type": "Maybe Initiator"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muInitiated",
                        "name": "_muInitiated",
                        "shape": "Initiated",
                        "locationName": "Initiated",
                        "documentation": "Date and time at which the multipart upload was initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muInitiator",
                        "name": "_muInitiator",
                        "shape": "Initiator",
                        "locationName": "Initiator",
                        "documentation": "Identifies who initiated the multipart upload.",
                        "typeExposed": "Maybe Initiator",
                        "type": "Maybe Initiator"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muKey",
                        "name": "_muKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Key of the object for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muOwner",
                        "name": "_muOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muStorageClass",
                        "name": "_muStorageClass",
                        "shape": "StorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "muUploadId",
                        "name": "_muUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "Upload ID that identifies the multipart upload.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Group": "Group",
                    "CanonicalUser": "CanonicalUser",
                    "AmazonCustomerByEmail": "AmazonCustomerByEmail"
                },
                "valuePad": 22,
                "name": "Type",
                "type": "nullary",
                "branchPad": 21
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "TSCGlacier": "GLACIER"
                },
                "valuePad": 8,
                "name": "TransitionStorageClass",
                "type": "nullary",
                "branchPad": 10
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Semigroup"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "completedMultipartUpload",
                "field": {
                    "location": null,
                    "iso": "_List",
                    "lensMapping": "_List . _List",
                    "default": "\u003cerror\u003e",
                    "flattened": true,
                    "required": true,
                    "lens": "cmuParts",
                    "name": "_cmuParts",
                    "shape": "CompletedPartList",
                    "locationName": "Part",
                    "documentation": null,
                    "typeExposed": "[CompletedPart]",
                    "type": "List \"Part\" CompletedPart"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "cmuParts",
                        "name": "_cmuParts",
                        "shape": "CompletedPartList",
                        "locationName": "Part",
                        "documentation": null,
                        "typeExposed": "[CompletedPart]",
                        "type": "List \"Part\" CompletedPart"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "cmuParts",
                        "name": "_cmuParts",
                        "shape": "CompletedPartList",
                        "locationName": "Part",
                        "documentation": null,
                        "typeExposed": "[CompletedPart]",
                        "type": "List \"Part\" CompletedPart"
                    }
                ],
                "contentPad": 0,
                "name": "CompletedMultipartUpload",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "cmuParts",
                        "name": "_cmuParts",
                        "shape": "CompletedPartList",
                        "locationName": "Part",
                        "documentation": null,
                        "typeExposed": "[CompletedPart]",
                        "type": "List \"Part\" CompletedPart"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 29,
                "ctor": "condition",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cHttpErrorCodeReturnedEquals",
                        "name": "_cHttpErrorCodeReturnedEquals",
                        "shape": "HttpErrorCodeReturnedEquals",
                        "locationName": "HttpErrorCodeReturnedEquals",
                        "documentation": "The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element Condition is specified and sibling KeyPrefixEquals is not specified. If both are specified, then both must be true for the redirect to be applied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cKeyPrefixEquals",
                        "name": "_cKeyPrefixEquals",
                        "shape": "KeyPrefixEquals",
                        "locationName": "KeyPrefixEquals",
                        "documentation": "The object key name prefix when the redirect is applied. For example, to redirect requests for ExamplePage.html, the key prefix will be ExamplePage.html. To redirect request for all pages with the prefix docs/, the key prefix will be /docs, which identifies all objects in the docs/ folder. Required when the parent element Condition is specified and sibling HttpErrorCodeReturnedEquals is not specified. If both conditions are specified, both must be true for the redirect to be applied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 28,
                "name": "Condition",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cHttpErrorCodeReturnedEquals",
                        "name": "_cHttpErrorCodeReturnedEquals",
                        "shape": "HttpErrorCodeReturnedEquals",
                        "locationName": "HttpErrorCodeReturnedEquals",
                        "documentation": "The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element Condition is specified and sibling KeyPrefixEquals is not specified. If both are specified, then both must be true for the redirect to be applied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cKeyPrefixEquals",
                        "name": "_cKeyPrefixEquals",
                        "shape": "KeyPrefixEquals",
                        "locationName": "KeyPrefixEquals",
                        "documentation": "The object key name prefix when the redirect is applied. For example, to redirect requests for ExamplePage.html, the key prefix will be ExamplePage.html. To redirect request for all pages with the prefix docs/, the key prefix will be /docs, which identifies all objects in the docs/ folder. Required when the parent element Condition is specified and sibling HttpErrorCodeReturnedEquals is not specified. If both conditions are specified, both must be true for the redirect to be applied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cHttpErrorCodeReturnedEquals",
                        "name": "_cHttpErrorCodeReturnedEquals",
                        "shape": "HttpErrorCodeReturnedEquals",
                        "locationName": "HttpErrorCodeReturnedEquals",
                        "documentation": "The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element Condition is specified and sibling KeyPrefixEquals is not specified. If both are specified, then both must be true for the redirect to be applied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cKeyPrefixEquals",
                        "name": "_cKeyPrefixEquals",
                        "shape": "KeyPrefixEquals",
                        "locationName": "KeyPrefixEquals",
                        "documentation": "The object key name prefix when the redirect is applied. For example, to redirect requests for ExamplePage.html, the key prefix will be ExamplePage.html. To redirect request for all pages with the prefix docs/, the key prefix will be /docs, which identifies all objects in the docs/ folder. Required when the parent element Condition is specified and sibling HttpErrorCodeReturnedEquals is not specified. If both conditions are specified, both must be true for the redirect to be applied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "PFullControl": "FULL_CONTROL",
                    "PRead": "READ",
                    "PWrite": "WRITE",
                    "PReadAcp": "READ_ACP",
                    "PWriteAcp": "WRITE_ACP"
                },
                "valuePad": 13,
                "name": "Permission",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 10,
                "ctor": "accessControlPolicy",
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "acpGrants",
                        "name": "_acpGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "List \"Grant\" Grant"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "acpOwner",
                        "name": "_acpOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 18,
                "name": "AccessControlPolicy",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "acpGrants",
                        "name": "_acpGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "List \"Grant\" Grant"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "acpOwner",
                        "name": "_acpOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "acpGrants",
                        "name": "_acpGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "List \"Grant\" Grant"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "acpOwner",
                        "name": "_acpOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "CannedPublicReadWrite": "public-read-write",
                    "CannedPublicRead": "public-read",
                    "CannedAuthenticatedRead": "authenticated-read",
                    "CannedPrivate": "private"
                },
                "valuePad": 19,
                "name": "BucketCannedACL",
                "type": "nullary",
                "branchPad": 23
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "MFADDisabled": "Disabled",
                    "MFADEnabled": "Enabled"
                },
                "valuePad": 9,
                "name": "MFADelete",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "cloudFunctionConfiguration",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfcId",
                        "name": "_cfcId",
                        "shape": "NotificationId",
                        "locationName": "Id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfcEvent",
                        "name": "_cfcEvent",
                        "shape": "Event",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "cfcEvents",
                        "name": "_cfcEvents",
                        "shape": "Events",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"Event\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfcCloudFunction",
                        "name": "_cfcCloudFunction",
                        "shape": "CloudFunction",
                        "locationName": "CloudFunction",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfcInvocationRole",
                        "name": "_cfcInvocationRole",
                        "shape": "CloudFunctionInvocationRole",
                        "locationName": "InvocationRole",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "cfcEvents",
                        "name": "_cfcEvents",
                        "shape": "Events",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"Event\" Text"
                    }
                ],
                "contentPad": 15,
                "name": "CloudFunctionConfiguration",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfcId",
                        "name": "_cfcId",
                        "shape": "NotificationId",
                        "locationName": "Id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfcEvent",
                        "name": "_cfcEvent",
                        "shape": "Event",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfcCloudFunction",
                        "name": "_cfcCloudFunction",
                        "shape": "CloudFunction",
                        "locationName": "CloudFunction",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfcInvocationRole",
                        "name": "_cfcInvocationRole",
                        "shape": "CloudFunctionInvocationRole",
                        "locationName": "InvocationRole",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfcCloudFunction",
                        "name": "_cfcCloudFunction",
                        "shape": "CloudFunction",
                        "locationName": "CloudFunction",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfcEvent",
                        "name": "_cfcEvent",
                        "shape": "Event",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "cfcEvents",
                        "name": "_cfcEvents",
                        "shape": "Events",
                        "locationName": "Event",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"Event\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfcId",
                        "name": "_cfcId",
                        "shape": "NotificationId",
                        "locationName": "Id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfcInvocationRole",
                        "name": "_cfcInvocationRole",
                        "shape": "CloudFunctionInvocationRole",
                        "locationName": "InvocationRole",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "grantee",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gDisplayName",
                        "name": "_gDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": "Screen name of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gEmailAddress",
                        "name": "_gEmailAddress",
                        "shape": "EmailAddress",
                        "locationName": "EmailAddress",
                        "documentation": "Email address of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gID",
                        "name": "_gID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "The canonical user ID of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gType",
                        "name": "_gType",
                        "shape": "Type",
                        "locationName": "Type",
                        "documentation": "Type of grantee",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gURI",
                        "name": "_gURI",
                        "shape": "URI",
                        "locationName": "URI",
                        "documentation": "URI of the grantee group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gType",
                        "name": "_gType",
                        "shape": "Type",
                        "locationName": "Type",
                        "documentation": "Type of grantee",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 13,
                "name": "Grantee",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gDisplayName",
                        "name": "_gDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": "Screen name of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gEmailAddress",
                        "name": "_gEmailAddress",
                        "shape": "EmailAddress",
                        "locationName": "EmailAddress",
                        "documentation": "Email address of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gID",
                        "name": "_gID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "The canonical user ID of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gURI",
                        "name": "_gURI",
                        "shape": "URI",
                        "locationName": "URI",
                        "documentation": "URI of the grantee group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gDisplayName",
                        "name": "_gDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": "Screen name of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gEmailAddress",
                        "name": "_gEmailAddress",
                        "shape": "EmailAddress",
                        "locationName": "EmailAddress",
                        "documentation": "Email address of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gID",
                        "name": "_gID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "The canonical user ID of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gType",
                        "name": "_gType",
                        "shape": "Type",
                        "locationName": "Type",
                        "documentation": "Type of grantee",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gURI",
                        "name": "_gURI",
                        "shape": "URI",
                        "locationName": "URI",
                        "documentation": "URI of the grantee group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Semigroup"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "lifecycleConfiguration",
                "field": {
                    "location": null,
                    "iso": "_List",
                    "lensMapping": "_List . _List",
                    "default": "\u003cerror\u003e",
                    "flattened": true,
                    "required": true,
                    "lens": "lcRules",
                    "name": "_lcRules",
                    "shape": "Rules",
                    "locationName": "Rule",
                    "documentation": null,
                    "typeExposed": "[Rule]",
                    "type": "List \"Rule\" Rule"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lcRules",
                        "name": "_lcRules",
                        "shape": "Rules",
                        "locationName": "Rule",
                        "documentation": null,
                        "typeExposed": "[Rule]",
                        "type": "List \"Rule\" Rule"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lcRules",
                        "name": "_lcRules",
                        "shape": "Rules",
                        "locationName": "Rule",
                        "documentation": null,
                        "typeExposed": "[Rule]",
                        "type": "List \"Rule\" Rule"
                    }
                ],
                "contentPad": 0,
                "name": "LifecycleConfiguration",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lcRules",
                        "name": "_lcRules",
                        "shape": "Rules",
                        "locationName": "Rule",
                        "documentation": null,
                        "typeExposed": "[Rule]",
                        "type": "List \"Rule\" Rule"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "loggingEnabled",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "leTargetBucket",
                        "name": "_leTargetBucket",
                        "shape": "TargetBucket",
                        "locationName": "TargetBucket",
                        "documentation": "Specifies the bucket where you want Amazon S3 to store server access logs. You can have your logs delivered to any bucket that you own, including the same bucket that is being logged. You can also configure multiple buckets to deliver their logs to the same target bucket. In this case you should choose a different TargetPrefix for each source bucket so that the delivered log files can be distinguished by key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "leTargetGrants",
                        "name": "_leTargetGrants",
                        "shape": "TargetGrants",
                        "locationName": "TargetGrants",
                        "documentation": null,
                        "typeExposed": "[TargetGrant]",
                        "type": "List \"Grant\" TargetGrant"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "leTargetPrefix",
                        "name": "_leTargetPrefix",
                        "shape": "TargetPrefix",
                        "locationName": "TargetPrefix",
                        "documentation": "This element lets you specify a prefix for the keys that the log files will be stored under.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 13,
                "name": "LoggingEnabled",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "leTargetBucket",
                        "name": "_leTargetBucket",
                        "shape": "TargetBucket",
                        "locationName": "TargetBucket",
                        "documentation": "Specifies the bucket where you want Amazon S3 to store server access logs. You can have your logs delivered to any bucket that you own, including the same bucket that is being logged. You can also configure multiple buckets to deliver their logs to the same target bucket. In this case you should choose a different TargetPrefix for each source bucket so that the delivered log files can be distinguished by key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "leTargetGrants",
                        "name": "_leTargetGrants",
                        "shape": "TargetGrants",
                        "locationName": "TargetGrants",
                        "documentation": null,
                        "typeExposed": "[TargetGrant]",
                        "type": "List \"Grant\" TargetGrant"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "leTargetPrefix",
                        "name": "_leTargetPrefix",
                        "shape": "TargetPrefix",
                        "locationName": "TargetPrefix",
                        "documentation": "This element lets you specify a prefix for the keys that the log files will be stored under.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "leTargetBucket",
                        "name": "_leTargetBucket",
                        "shape": "TargetBucket",
                        "locationName": "TargetBucket",
                        "documentation": "Specifies the bucket where you want Amazon S3 to store server access logs. You can have your logs delivered to any bucket that you own, including the same bucket that is being logged. You can also configure multiple buckets to deliver their logs to the same target bucket. In this case you should choose a different TargetPrefix for each source bucket so that the delivered log files can be distinguished by key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "leTargetGrants",
                        "name": "_leTargetGrants",
                        "shape": "TargetGrants",
                        "locationName": "TargetGrants",
                        "documentation": null,
                        "typeExposed": "[TargetGrant]",
                        "type": "List \"Grant\" TargetGrant"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "leTargetPrefix",
                        "name": "_leTargetPrefix",
                        "shape": "TargetPrefix",
                        "locationName": "TargetPrefix",
                        "documentation": "This element lets you specify a prefix for the keys that the log files will be stored under.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "AES256": "AES256"
                },
                "valuePad": 7,
                "name": "ServerSideEncryption",
                "type": "nullary",
                "branchPad": 6
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "indexDocument",
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "idSuffix",
                    "name": "_idSuffix",
                    "shape": "Suffix",
                    "locationName": "Suffix",
                    "documentation": "A suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "idSuffix",
                        "name": "_idSuffix",
                        "shape": "Suffix",
                        "locationName": "Suffix",
                        "documentation": "A suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "idSuffix",
                        "name": "_idSuffix",
                        "shape": "Suffix",
                        "locationName": "Suffix",
                        "documentation": "A suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "IndexDocument",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "idSuffix",
                        "name": "_idSuffix",
                        "shape": "Suffix",
                        "locationName": "Suffix",
                        "documentation": "A suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "copyObjectResult",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corETag",
                        "name": "_corETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corLastModified",
                        "name": "_corLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": null,
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 13,
                "name": "CopyObjectResult",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corETag",
                        "name": "_corETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corLastModified",
                        "name": "_corLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": null,
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corETag",
                        "name": "_corETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corLastModified",
                        "name": "_corLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": null,
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 9,
                "ctor": "delete'",
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "dObjects",
                        "name": "_dObjects",
                        "shape": "ObjectIdentifierList",
                        "locationName": "Object",
                        "documentation": null,
                        "typeExposed": "[ObjectIdentifier]",
                        "type": "List \"Object\" ObjectIdentifier"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dQuiet",
                        "name": "_dQuiet",
                        "shape": "Quiet",
                        "locationName": "Quiet",
                        "documentation": "Element to enable quiet mode for the request. When you add this element, you must set its value to true.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "dObjects",
                        "name": "_dObjects",
                        "shape": "ObjectIdentifierList",
                        "locationName": "Object",
                        "documentation": null,
                        "typeExposed": "[ObjectIdentifier]",
                        "type": "List \"Object\" ObjectIdentifier"
                    }
                ],
                "contentPad": 7,
                "name": "Delete",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dQuiet",
                        "name": "_dQuiet",
                        "shape": "Quiet",
                        "locationName": "Quiet",
                        "documentation": "Element to enable quiet mode for the request. When you add this element, you must set its value to true.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "dObjects",
                        "name": "_dObjects",
                        "shape": "ObjectIdentifierList",
                        "locationName": "Object",
                        "documentation": null,
                        "typeExposed": "[ObjectIdentifier]",
                        "type": "List \"Object\" ObjectIdentifier"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dQuiet",
                        "name": "_dQuiet",
                        "shape": "Quiet",
                        "locationName": "Quiet",
                        "documentation": "Element to enable quiet mode for the request. When you add this element, you must set its value to true.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum",
                    "Num",
                    "Integral",
                    "Real"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "restoreRequest",
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "rDays",
                    "name": "_rDays",
                    "shape": "Days",
                    "locationName": "Days",
                    "documentation": "Lifetime of the active copy in days",
                    "typeExposed": "Int",
                    "type": "Int"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rDays",
                        "name": "_rDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Lifetime of the active copy in days",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rDays",
                        "name": "_rDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Lifetime of the active copy in days",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 0,
                "name": "RestoreRequest",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rDays",
                        "name": "_rDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Lifetime of the active copy in days",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            }
        ],
        "imports": [
            "Network.AWS.S3.Internal"
        ],
        "shared": [
            "S3ServiceError",
            "Grant",
            "Owner",
            "CommonPrefix",
            "AccessControlPolicy"
        ]
    },
    "operations": [
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "abortMultipartUploadResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AbortMultipartUploadResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/AbortMultipartUpload.html",
            "namespace": "Network.AWS.S3.AbortMultipartUpload",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "AbortMultipartUpload",
            "method": "delete",
            "documentation": "\u003cp\u003eAborts a multipart upload.\u003c/p\u003e \u003cp\u003eTo verify that all parts have been removed, so you don't get charged for the part storage, you should call the List Parts operation and ensure the parts list is empty.\u003c/p\u003e",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadAbort.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 12,
                "ctor": "abortMultipartUpload",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_amuBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_amuKey",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "amuBucket",
                        "name": "_amuBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "amuKey",
                        "name": "_amuKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "amuUploadId",
                        "name": "_amuUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "AbortMultipartUpload",
                "query": [
                    {
                        "field": "_amuUploadId",
                        "locationName": "uploadId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "amuBucket",
                        "name": "_amuBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "amuKey",
                        "name": "_amuKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "amuUploadId",
                        "name": "_amuUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 26,
                "ctor": "completeMultipartUploadResponse",
                "headerPad": 44,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1Location",
                        "name": "_cmur1Location",
                        "shape": "Location",
                        "locationName": "Location",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1Bucket",
                        "name": "_cmur1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1Key",
                        "name": "_cmur1Key",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1ETag",
                        "name": "_cmur1ETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_cmur1Expiration",
                        "locationName": "x-amz-expiration",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1VersionId",
                        "locationName": "x-amz-version-id",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 9,
                "name": "CompleteMultipartUploadResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1Location",
                        "name": "_cmur1Location",
                        "shape": "Location",
                        "locationName": "Location",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1Bucket",
                        "name": "_cmur1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1Key",
                        "name": "_cmur1Key",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1Expiration",
                        "name": "_cmur1Expiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured, this will contain the expiration date (expiry-date) and rule ID (rule-id). The value of rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1ETag",
                        "name": "_cmur1ETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1ServerSideEncryption",
                        "name": "_cmur1ServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1VersionId",
                        "name": "_cmur1VersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1SSEKMSKeyId",
                        "name": "_cmur1SSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1Bucket",
                        "name": "_cmur1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1ETag",
                        "name": "_cmur1ETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1Expiration",
                        "name": "_cmur1Expiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured, this will contain the expiration date (expiry-date) and rule ID (rule-id). The value of rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1Key",
                        "name": "_cmur1Key",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1Location",
                        "name": "_cmur1Location",
                        "shape": "Location",
                        "locationName": "Location",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1SSEKMSKeyId",
                        "name": "_cmur1SSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1ServerSideEncryption",
                        "name": "_cmur1ServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmur1VersionId",
                        "name": "_cmur1VersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/CompleteMultipartUpload.html",
            "namespace": "Network.AWS.S3.CompleteMultipartUpload",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "CompleteMultipartUpload",
            "method": "post",
            "documentation": "Completes a multipart upload by assembling previously uploaded parts.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadComplete.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 20,
                "ctor": "completeMultipartUpload",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmu1MultipartUpload",
                        "name": "_cmu1MultipartUpload",
                        "shape": "CompletedMultipartUpload",
                        "locationName": "CompleteMultipartUpload",
                        "documentation": null,
                        "typeExposed": "Maybe CompletedMultipartUpload",
                        "type": "Maybe CompletedMultipartUpload"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_cmu1Bucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_cmu1Key",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "cmu1MultipartUpload",
                    "name": "_cmu1MultipartUpload",
                    "shape": "CompletedMultipartUpload",
                    "locationName": "CompleteMultipartUpload",
                    "documentation": null,
                    "typeExposed": "Maybe CompletedMultipartUpload",
                    "type": "Maybe CompletedMultipartUpload"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cmu1Bucket",
                        "name": "_cmu1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cmu1Key",
                        "name": "_cmu1Key",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cmu1UploadId",
                        "name": "_cmu1UploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 24,
                "queryPad": 9,
                "name": "CompleteMultipartUpload",
                "query": [
                    {
                        "field": "_cmu1UploadId",
                        "locationName": "uploadId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmu1MultipartUpload",
                        "name": "_cmu1MultipartUpload",
                        "shape": "CompletedMultipartUpload",
                        "locationName": "CompleteMultipartUpload",
                        "documentation": null,
                        "typeExposed": "Maybe CompletedMultipartUpload",
                        "type": "Maybe CompletedMultipartUpload"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cmu1Bucket",
                        "name": "_cmu1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cmu1Key",
                        "name": "_cmu1Key",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmu1MultipartUpload",
                        "name": "_cmu1MultipartUpload",
                        "shape": "CompletedMultipartUpload",
                        "locationName": "CompleteMultipartUpload",
                        "documentation": null,
                        "typeExposed": "Maybe CompletedMultipartUpload",
                        "type": "Maybe CompletedMultipartUpload"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cmu1UploadId",
                        "name": "_cmu1UploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 24,
                "ctor": "copyObjectResponse",
                "headerPad": 48,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corCopyObjectResult",
                        "name": "_corCopyObjectResult",
                        "shape": "CopyObjectResult",
                        "locationName": "CopyObjectResult",
                        "documentation": null,
                        "typeExposed": "Maybe CopyObjectResult",
                        "type": "Maybe CopyObjectResult"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "corCopyObjectResult",
                    "name": "_corCopyObjectResult",
                    "shape": "CopyObjectResult",
                    "locationName": "CopyObjectResult",
                    "documentation": null,
                    "typeExposed": "Maybe CopyObjectResult",
                    "type": "Maybe CopyObjectResult"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_corExpiration",
                        "locationName": "x-amz-expiration",
                        "type": "field"
                    },
                    {
                        "field": "_corCopySourceVersionId",
                        "locationName": "x-amz-copy-source-version-id",
                        "type": "field"
                    },
                    {
                        "field": "_corServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "type": "field"
                    },
                    {
                        "field": "_corSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_corSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_corSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 17,
                "name": "CopyObjectResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corCopyObjectResult",
                        "name": "_corCopyObjectResult",
                        "shape": "CopyObjectResult",
                        "locationName": "CopyObjectResult",
                        "documentation": null,
                        "typeExposed": "Maybe CopyObjectResult",
                        "type": "Maybe CopyObjectResult"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corExpiration",
                        "name": "_corExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured, the response includes this header.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corCopySourceVersionId",
                        "name": "_corCopySourceVersionId",
                        "shape": "CopySourceVersionId",
                        "locationName": "x-amz-copy-source-version-id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corServerSideEncryption",
                        "name": "_corServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corSSECustomerAlgorithm",
                        "name": "_corSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corSSECustomerKeyMD5",
                        "name": "_corSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corSSEKMSKeyId",
                        "name": "_corSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corCopyObjectResult",
                        "name": "_corCopyObjectResult",
                        "shape": "CopyObjectResult",
                        "locationName": "CopyObjectResult",
                        "documentation": null,
                        "typeExposed": "Maybe CopyObjectResult",
                        "type": "Maybe CopyObjectResult"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corCopySourceVersionId",
                        "name": "_corCopySourceVersionId",
                        "shape": "CopySourceVersionId",
                        "locationName": "x-amz-copy-source-version-id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corExpiration",
                        "name": "_corExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured, the response includes this header.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corSSECustomerAlgorithm",
                        "name": "_corSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corSSECustomerKeyMD5",
                        "name": "_corSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corSSEKMSKeyId",
                        "name": "_corSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "corServerSideEncryption",
                        "name": "_corServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/CopyObject.html",
            "namespace": "Network.AWS.S3.CopyObject",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "CopyObject",
            "method": "put",
            "documentation": "Creates a copy of an object that is already stored in Amazon S3.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectCOPY.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 33,
                "ctor": "copyObject",
                "headerPad": 60,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_coBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_coKey",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "coBucket",
                        "name": "_coBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "coCopySource",
                        "name": "_coCopySource",
                        "shape": "CopySource",
                        "locationName": "x-amz-copy-source",
                        "documentation": "The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "coKey",
                        "name": "_coKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_coACL",
                        "locationName": "x-amz-acl",
                        "type": "field"
                    },
                    {
                        "field": "_coCacheControl",
                        "locationName": "Cache-Control",
                        "type": "field"
                    },
                    {
                        "field": "_coContentDisposition",
                        "locationName": "Content-Disposition",
                        "type": "field"
                    },
                    {
                        "field": "_coContentEncoding",
                        "locationName": "Content-Encoding",
                        "type": "field"
                    },
                    {
                        "field": "_coContentLanguage",
                        "locationName": "Content-Language",
                        "type": "field"
                    },
                    {
                        "field": "_coContentType",
                        "locationName": "Content-Type",
                        "type": "field"
                    },
                    {
                        "field": "_coCopySource",
                        "locationName": "x-amz-copy-source",
                        "type": "field"
                    },
                    {
                        "field": "_coCopySourceIfMatch",
                        "locationName": "x-amz-copy-source-if-match",
                        "type": "field"
                    },
                    {
                        "field": "_coCopySourceIfModifiedSince",
                        "locationName": "x-amz-copy-source-if-modified-since",
                        "type": "field"
                    },
                    {
                        "field": "_coCopySourceIfNoneMatch",
                        "locationName": "x-amz-copy-source-if-none-match",
                        "type": "field"
                    },
                    {
                        "field": "_coCopySourceIfUnmodifiedSince",
                        "locationName": "x-amz-copy-source-if-unmodified-since",
                        "type": "field"
                    },
                    {
                        "field": "_coExpires",
                        "locationName": "Expires",
                        "type": "field"
                    },
                    {
                        "field": "_coGrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "type": "field"
                    },
                    {
                        "field": "_coGrantRead",
                        "locationName": "x-amz-grant-read",
                        "type": "field"
                    },
                    {
                        "field": "_coGrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "type": "field"
                    },
                    {
                        "field": "_coGrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "type": "field"
                    },
                    {
                        "field": "_coMetadata",
                        "locationName": "x-amz-meta-",
                        "type": "field"
                    },
                    {
                        "field": "_coMetadataDirective",
                        "locationName": "x-amz-metadata-directive",
                        "type": "field"
                    },
                    {
                        "field": "_coServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "type": "field"
                    },
                    {
                        "field": "_coStorageClass",
                        "locationName": "x-amz-storage-class",
                        "type": "field"
                    },
                    {
                        "field": "_coWebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "type": "field"
                    },
                    {
                        "field": "_coSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_coSSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_coSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_coCopySourceSSECustomerAlgorithm",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_coCopySourceSSECustomerKey",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_coCopySourceSSECustomerKeyMD5",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_coCopySourceSSEKMSKeyId",
                        "locationName": "x-amz-copy-source-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 0,
                "queryPad": 0,
                "name": "CopyObject",
                "query": [],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coACL",
                        "name": "_coACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCacheControl",
                        "name": "_coCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coContentDisposition",
                        "name": "_coContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coContentEncoding",
                        "name": "_coContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coContentLanguage",
                        "name": "_coContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coContentType",
                        "name": "_coContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceIfMatch",
                        "name": "_coCopySourceIfMatch",
                        "shape": "CopySourceIfMatch",
                        "locationName": "x-amz-copy-source-if-match",
                        "documentation": "Copies the object if its entity tag (ETag) matches the specified tag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceIfModifiedSince",
                        "name": "_coCopySourceIfModifiedSince",
                        "shape": "CopySourceIfModifiedSince",
                        "locationName": "x-amz-copy-source-if-modified-since",
                        "documentation": "Copies the object if it has been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceIfNoneMatch",
                        "name": "_coCopySourceIfNoneMatch",
                        "shape": "CopySourceIfNoneMatch",
                        "locationName": "x-amz-copy-source-if-none-match",
                        "documentation": "Copies the object if its entity tag (ETag) is different than the specified ETag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceIfUnmodifiedSince",
                        "name": "_coCopySourceIfUnmodifiedSince",
                        "shape": "CopySourceIfUnmodifiedSince",
                        "locationName": "x-amz-copy-source-if-unmodified-since",
                        "documentation": "Copies the object if it hasn't been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coExpires",
                        "name": "_coExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coGrantFullControl",
                        "name": "_coGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coGrantRead",
                        "name": "_coGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to read the object data and its metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coGrantReadACP",
                        "name": "_coGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the object ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coGrantWriteACP",
                        "name": "_coGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "coMetadata",
                        "name": "_coMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map \"entry\" Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coMetadataDirective",
                        "name": "_coMetadataDirective",
                        "shape": "MetadataDirective",
                        "locationName": "x-amz-metadata-directive",
                        "documentation": "Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coServerSideEncryption",
                        "name": "_coServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coStorageClass",
                        "name": "_coStorageClass",
                        "shape": "StorageClass",
                        "locationName": "x-amz-storage-class",
                        "documentation": "The type of storage to use for the object. Defaults to 'STANDARD'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coWebsiteRedirectLocation",
                        "name": "_coWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coSSECustomerAlgorithm",
                        "name": "_coSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coSSECustomerKey",
                        "name": "_coSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coSSECustomerKeyMD5",
                        "name": "_coSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceSSECustomerAlgorithm",
                        "name": "_coCopySourceSSECustomerAlgorithm",
                        "shape": "CopySourceSSECustomerAlgorithm",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use when decrypting the source object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceSSECustomerKey",
                        "name": "_coCopySourceSSECustomerKey",
                        "shape": "CopySourceSSECustomerKey",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceSSECustomerKeyMD5",
                        "name": "_coCopySourceSSECustomerKeyMD5",
                        "shape": "CopySourceSSECustomerKeyMD5",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceSSEKMSKeyId",
                        "name": "_coCopySourceSSEKMSKeyId",
                        "shape": "CopySourceSSEKMSKeyId",
                        "locationName": "x-amz-copy-source-server-side-encryption-aws-kms-key-id",
                        "documentation": "Specifies the AWS KMS key ID to use for object encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coACL",
                        "name": "_coACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "coBucket",
                        "name": "_coBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCacheControl",
                        "name": "_coCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coContentDisposition",
                        "name": "_coContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coContentEncoding",
                        "name": "_coContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coContentLanguage",
                        "name": "_coContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coContentType",
                        "name": "_coContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "coCopySource",
                        "name": "_coCopySource",
                        "shape": "CopySource",
                        "locationName": "x-amz-copy-source",
                        "documentation": "The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceIfMatch",
                        "name": "_coCopySourceIfMatch",
                        "shape": "CopySourceIfMatch",
                        "locationName": "x-amz-copy-source-if-match",
                        "documentation": "Copies the object if its entity tag (ETag) matches the specified tag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceIfModifiedSince",
                        "name": "_coCopySourceIfModifiedSince",
                        "shape": "CopySourceIfModifiedSince",
                        "locationName": "x-amz-copy-source-if-modified-since",
                        "documentation": "Copies the object if it has been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceIfNoneMatch",
                        "name": "_coCopySourceIfNoneMatch",
                        "shape": "CopySourceIfNoneMatch",
                        "locationName": "x-amz-copy-source-if-none-match",
                        "documentation": "Copies the object if its entity tag (ETag) is different than the specified ETag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceIfUnmodifiedSince",
                        "name": "_coCopySourceIfUnmodifiedSince",
                        "shape": "CopySourceIfUnmodifiedSince",
                        "locationName": "x-amz-copy-source-if-unmodified-since",
                        "documentation": "Copies the object if it hasn't been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceSSECustomerAlgorithm",
                        "name": "_coCopySourceSSECustomerAlgorithm",
                        "shape": "CopySourceSSECustomerAlgorithm",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use when decrypting the source object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceSSECustomerKey",
                        "name": "_coCopySourceSSECustomerKey",
                        "shape": "CopySourceSSECustomerKey",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceSSECustomerKeyMD5",
                        "name": "_coCopySourceSSECustomerKeyMD5",
                        "shape": "CopySourceSSECustomerKeyMD5",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coCopySourceSSEKMSKeyId",
                        "name": "_coCopySourceSSEKMSKeyId",
                        "shape": "CopySourceSSEKMSKeyId",
                        "locationName": "x-amz-copy-source-server-side-encryption-aws-kms-key-id",
                        "documentation": "Specifies the AWS KMS key ID to use for object encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coExpires",
                        "name": "_coExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coGrantFullControl",
                        "name": "_coGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coGrantRead",
                        "name": "_coGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to read the object data and its metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coGrantReadACP",
                        "name": "_coGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the object ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coGrantWriteACP",
                        "name": "_coGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "coKey",
                        "name": "_coKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "coMetadata",
                        "name": "_coMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map \"entry\" Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coMetadataDirective",
                        "name": "_coMetadataDirective",
                        "shape": "MetadataDirective",
                        "locationName": "x-amz-metadata-directive",
                        "documentation": "Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coSSECustomerAlgorithm",
                        "name": "_coSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coSSECustomerKey",
                        "name": "_coSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coSSECustomerKeyMD5",
                        "name": "_coSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coServerSideEncryption",
                        "name": "_coServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coStorageClass",
                        "name": "_coStorageClass",
                        "shape": "StorageClass",
                        "locationName": "x-amz-storage-class",
                        "documentation": "The type of storage to use for the object. Defaults to 'STANDARD'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "coWebsiteRedirectLocation",
                        "name": "_coWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml-headers",
                "fieldPad": 0,
                "ctor": "createBucketResponse",
                "headerPad": 9,
                "field": {
                    "location": "header",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "cbrLocation",
                    "name": "_cbrLocation",
                    "shape": "Location",
                    "locationName": "Location",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_cbrLocation",
                        "locationName": "Location",
                        "type": "field"
                    }
                ],
                "contentPad": 0,
                "name": "CreateBucketResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": true,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbrLocation",
                        "name": "_cbrLocation",
                        "shape": "Location",
                        "locationName": "Location",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbrLocation",
                        "name": "_cbrLocation",
                        "shape": "Location",
                        "locationName": "Location",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/CreateBucket.html",
            "namespace": "Network.AWS.S3.CreateBucket",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "CreateBucket",
            "method": "put",
            "documentation": "Creates a new bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUT.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 28,
                "ctor": "createBucket",
                "headerPad": 25,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbCreateBucketConfiguration",
                        "name": "_cbCreateBucketConfiguration",
                        "shape": "CreateBucketConfiguration",
                        "locationName": "CreateBucketConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CreateBucketConfiguration",
                        "type": "Maybe CreateBucketConfiguration"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_cbBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "cbCreateBucketConfiguration",
                    "name": "_cbCreateBucketConfiguration",
                    "shape": "CreateBucketConfiguration",
                    "locationName": "CreateBucketConfiguration",
                    "documentation": null,
                    "typeExposed": "Maybe CreateBucketConfiguration",
                    "type": "Maybe CreateBucketConfiguration"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbBucket",
                        "name": "_cbBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_cbACL",
                        "locationName": "x-amz-acl",
                        "type": "field"
                    },
                    {
                        "field": "_cbGrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "type": "field"
                    },
                    {
                        "field": "_cbGrantRead",
                        "locationName": "x-amz-grant-read",
                        "type": "field"
                    },
                    {
                        "field": "_cbGrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "type": "field"
                    },
                    {
                        "field": "_cbGrantWrite",
                        "locationName": "x-amz-grant-write",
                        "type": "field"
                    },
                    {
                        "field": "_cbGrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "type": "field"
                    }
                ],
                "contentPad": 26,
                "queryPad": 0,
                "name": "CreateBucket",
                "query": [],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbACL",
                        "name": "_cbACL",
                        "shape": "BucketCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbCreateBucketConfiguration",
                        "name": "_cbCreateBucketConfiguration",
                        "shape": "CreateBucketConfiguration",
                        "locationName": "CreateBucketConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CreateBucketConfiguration",
                        "type": "Maybe CreateBucketConfiguration"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbGrantFullControl",
                        "name": "_cbGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbGrantRead",
                        "name": "_cbGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to list the objects in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbGrantReadACP",
                        "name": "_cbGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the bucket ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbGrantWrite",
                        "name": "_cbGrantWrite",
                        "shape": "GrantWrite",
                        "locationName": "x-amz-grant-write",
                        "documentation": "Allows grantee to create, overwrite, and delete any object in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbGrantWriteACP",
                        "name": "_cbGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbACL",
                        "name": "_cbACL",
                        "shape": "BucketCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbBucket",
                        "name": "_cbBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbCreateBucketConfiguration",
                        "name": "_cbCreateBucketConfiguration",
                        "shape": "CreateBucketConfiguration",
                        "locationName": "CreateBucketConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CreateBucketConfiguration",
                        "type": "Maybe CreateBucketConfiguration"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbGrantFullControl",
                        "name": "_cbGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbGrantRead",
                        "name": "_cbGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to list the objects in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbGrantReadACP",
                        "name": "_cbGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the bucket ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbGrantWrite",
                        "name": "_cbGrantWrite",
                        "shape": "GrantWrite",
                        "locationName": "x-amz-grant-write",
                        "documentation": "Allows grantee to create, overwrite, and delete any object in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbGrantWriteACP",
                        "name": "_cbGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 25,
                "ctor": "createMultipartUploadResponse",
                "headerPad": 48,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurBucket",
                        "name": "_cmurBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurKey",
                        "name": "_cmurKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Object key for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurUploadId",
                        "name": "_cmurUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "ID for the initiated multipart upload.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_cmurServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "type": "field"
                    },
                    {
                        "field": "_cmurSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_cmurSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_cmurSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 9,
                "name": "CreateMultipartUploadResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurBucket",
                        "name": "_cmurBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurKey",
                        "name": "_cmurKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Object key for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurUploadId",
                        "name": "_cmurUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "ID for the initiated multipart upload.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurServerSideEncryption",
                        "name": "_cmurServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurSSECustomerAlgorithm",
                        "name": "_cmurSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurSSECustomerKeyMD5",
                        "name": "_cmurSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurSSEKMSKeyId",
                        "name": "_cmurSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurBucket",
                        "name": "_cmurBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurKey",
                        "name": "_cmurKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Object key for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurSSECustomerAlgorithm",
                        "name": "_cmurSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurSSECustomerKeyMD5",
                        "name": "_cmurSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurSSEKMSKeyId",
                        "name": "_cmurSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurServerSideEncryption",
                        "name": "_cmurServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmurUploadId",
                        "name": "_cmurUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "ID for the initiated multipart upload.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/CreateMultipartUpload.html",
            "namespace": "Network.AWS.S3.CreateMultipartUpload",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "CreateMultipartUpload",
            "method": "post",
            "documentation": "\u003cp\u003eInitiates a multipart upload and returns an upload ID.\u003c/p\u003e \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e After you initiate multipart upload and upload one or more parts, you must either complete or abort multipart upload in order to stop getting charged for storage of the uploaded parts. Only after you either complete or abort multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts storage.\u003c/p\u003e",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadInitiate.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 27,
                "ctor": "createMultipartUpload",
                "headerPad": 48,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_cmuBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_cmuKey",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cmuBucket",
                        "name": "_cmuBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cmuKey",
                        "name": "_cmuKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_cmuACL",
                        "locationName": "x-amz-acl",
                        "type": "field"
                    },
                    {
                        "field": "_cmuCacheControl",
                        "locationName": "Cache-Control",
                        "type": "field"
                    },
                    {
                        "field": "_cmuContentDisposition",
                        "locationName": "Content-Disposition",
                        "type": "field"
                    },
                    {
                        "field": "_cmuContentEncoding",
                        "locationName": "Content-Encoding",
                        "type": "field"
                    },
                    {
                        "field": "_cmuContentLanguage",
                        "locationName": "Content-Language",
                        "type": "field"
                    },
                    {
                        "field": "_cmuContentType",
                        "locationName": "Content-Type",
                        "type": "field"
                    },
                    {
                        "field": "_cmuExpires",
                        "locationName": "Expires",
                        "type": "field"
                    },
                    {
                        "field": "_cmuGrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "type": "field"
                    },
                    {
                        "field": "_cmuGrantRead",
                        "locationName": "x-amz-grant-read",
                        "type": "field"
                    },
                    {
                        "field": "_cmuGrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "type": "field"
                    },
                    {
                        "field": "_cmuGrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "type": "field"
                    },
                    {
                        "field": "_cmuMetadata",
                        "locationName": "x-amz-meta-",
                        "type": "field"
                    },
                    {
                        "field": "_cmuServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "type": "field"
                    },
                    {
                        "field": "_cmuStorageClass",
                        "locationName": "x-amz-storage-class",
                        "type": "field"
                    },
                    {
                        "field": "_cmuWebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "type": "field"
                    },
                    {
                        "field": "_cmuSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_cmuSSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_cmuSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_cmuSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 0,
                "queryPad": 0,
                "name": "CreateMultipartUpload",
                "query": [
                    {
                        "value": "uploads",
                        "type": "const"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuACL",
                        "name": "_cmuACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuCacheControl",
                        "name": "_cmuCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuContentDisposition",
                        "name": "_cmuContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuContentEncoding",
                        "name": "_cmuContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuContentLanguage",
                        "name": "_cmuContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuContentType",
                        "name": "_cmuContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuExpires",
                        "name": "_cmuExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuGrantFullControl",
                        "name": "_cmuGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuGrantRead",
                        "name": "_cmuGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to read the object data and its metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuGrantReadACP",
                        "name": "_cmuGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the object ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuGrantWriteACP",
                        "name": "_cmuGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "cmuMetadata",
                        "name": "_cmuMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map \"entry\" Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuServerSideEncryption",
                        "name": "_cmuServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuStorageClass",
                        "name": "_cmuStorageClass",
                        "shape": "StorageClass",
                        "locationName": "x-amz-storage-class",
                        "documentation": "The type of storage to use for the object. Defaults to 'STANDARD'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuWebsiteRedirectLocation",
                        "name": "_cmuWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuSSECustomerAlgorithm",
                        "name": "_cmuSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuSSECustomerKey",
                        "name": "_cmuSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuSSECustomerKeyMD5",
                        "name": "_cmuSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuSSEKMSKeyId",
                        "name": "_cmuSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "Specifies the AWS KMS key ID to use for object encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuACL",
                        "name": "_cmuACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cmuBucket",
                        "name": "_cmuBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuCacheControl",
                        "name": "_cmuCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuContentDisposition",
                        "name": "_cmuContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuContentEncoding",
                        "name": "_cmuContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuContentLanguage",
                        "name": "_cmuContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuContentType",
                        "name": "_cmuContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuExpires",
                        "name": "_cmuExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuGrantFullControl",
                        "name": "_cmuGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuGrantRead",
                        "name": "_cmuGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to read the object data and its metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuGrantReadACP",
                        "name": "_cmuGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the object ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuGrantWriteACP",
                        "name": "_cmuGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cmuKey",
                        "name": "_cmuKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "cmuMetadata",
                        "name": "_cmuMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map \"entry\" Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuSSECustomerAlgorithm",
                        "name": "_cmuSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuSSECustomerKey",
                        "name": "_cmuSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuSSECustomerKeyMD5",
                        "name": "_cmuSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuSSEKMSKeyId",
                        "name": "_cmuSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "Specifies the AWS KMS key ID to use for object encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuServerSideEncryption",
                        "name": "_cmuServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuStorageClass",
                        "name": "_cmuStorageClass",
                        "shape": "StorageClass",
                        "locationName": "x-amz-storage-class",
                        "documentation": "The type of storage to use for the object. Defaults to 'STANDARD'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cmuWebsiteRedirectLocation",
                        "name": "_cmuWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteBucketResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteBucketResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteBucket.html",
            "namespace": "Network.AWS.S3.DeleteBucket",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "DeleteBucket",
            "method": "delete",
            "documentation": "Deletes the bucket. All objects (including all object versions and Delete Markers) in the bucket must be deleted before the bucket itself can be deleted.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETE.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "deleteBucket",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "dbBucket",
                    "name": "_dbBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dbBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dbBucket",
                        "name": "_dbBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteBucket",
                "query": [],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dbBucket",
                        "name": "_dbBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteBucketCorsResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteBucketCorsResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteBucketCors.html",
            "namespace": "Network.AWS.S3.DeleteBucketCors",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "DeleteBucketCors",
            "method": "delete",
            "documentation": "Deletes the cors configuration information set for the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEcors.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "deleteBucketCors",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "dbcBucket",
                    "name": "_dbcBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dbcBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dbcBucket",
                        "name": "_dbcBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteBucketCors",
                "query": [
                    {
                        "value": "cors",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dbcBucket",
                        "name": "_dbcBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteBucketLifecycleResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteBucketLifecycleResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteBucketLifecycle.html",
            "namespace": "Network.AWS.S3.DeleteBucketLifecycle",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "DeleteBucketLifecycle",
            "method": "delete",
            "documentation": "Deletes the lifecycle configuration from the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETElifecycle.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "deleteBucketLifecycle",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "dblBucket",
                    "name": "_dblBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dblBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dblBucket",
                        "name": "_dblBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteBucketLifecycle",
                "query": [
                    {
                        "value": "lifecycle",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dblBucket",
                        "name": "_dblBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteBucketPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteBucketPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteBucketPolicy.html",
            "namespace": "Network.AWS.S3.DeleteBucketPolicy",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "DeleteBucketPolicy",
            "method": "delete",
            "documentation": "Deletes the policy from the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEpolicy.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "deleteBucketPolicy",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "dbpBucket",
                    "name": "_dbpBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dbpBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dbpBucket",
                        "name": "_dbpBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteBucketPolicy",
                "query": [
                    {
                        "value": "policy",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dbpBucket",
                        "name": "_dbpBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteBucketTaggingResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteBucketTaggingResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteBucketTagging.html",
            "namespace": "Network.AWS.S3.DeleteBucketTagging",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "DeleteBucketTagging",
            "method": "delete",
            "documentation": "Deletes the tags from the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEtagging.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "deleteBucketTagging",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "dbtBucket",
                    "name": "_dbtBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dbtBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dbtBucket",
                        "name": "_dbtBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteBucketTagging",
                "query": [
                    {
                        "value": "tagging",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dbtBucket",
                        "name": "_dbtBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteBucketWebsiteResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteBucketWebsiteResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteBucketWebsite.html",
            "namespace": "Network.AWS.S3.DeleteBucketWebsite",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "DeleteBucketWebsite",
            "method": "delete",
            "documentation": "This operation removes the website configuration from the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEwebsite.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "deleteBucketWebsite",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "dbwBucket",
                    "name": "_dbwBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dbwBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dbwBucket",
                        "name": "_dbwBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteBucketWebsite",
                "query": [
                    {
                        "value": "website",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dbwBucket",
                        "name": "_dbwBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 16,
                "ctor": "deleteObjectResponse",
                "headerPad": 20,
                "contents": [],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_dorDeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "type": "field"
                    },
                    {
                        "field": "_dorVersionId",
                        "locationName": "x-amz-version-id",
                        "type": "field"
                    }
                ],
                "contentPad": 0,
                "name": "DeleteObjectResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": true,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dorDeleteMarker",
                        "name": "_dorDeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "documentation": "Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dorVersionId",
                        "name": "_dorVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Returns the version ID of the delete marker created as a result of the DELETE operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dorDeleteMarker",
                        "name": "_dorDeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "documentation": "Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dorVersionId",
                        "name": "_dorVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Returns the version ID of the delete marker created as a result of the DELETE operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteObject.html",
            "namespace": "Network.AWS.S3.DeleteObject",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "DeleteObject",
            "method": "delete",
            "documentation": "Removes the null version (if there is one) of an object and inserts a delete marker, which becomes the latest version of the object. If there isn't a null version, Amazon S3 does not remove any objects.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectDELETE.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 12,
                "ctor": "deleteObject",
                "headerPad": 10,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_doBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_doKey",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "doBucket",
                        "name": "_doBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "doKey",
                        "name": "_doKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_doMFA",
                        "locationName": "x-amz-mfa",
                        "type": "field"
                    }
                ],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DeleteObject",
                "query": [
                    {
                        "field": "_doVersionId",
                        "locationName": "versionId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "doMFA",
                        "name": "_doMFA",
                        "shape": "MFA",
                        "locationName": "x-amz-mfa",
                        "documentation": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "doVersionId",
                        "name": "_doVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "doBucket",
                        "name": "_doBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "doKey",
                        "name": "_doKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "doMFA",
                        "name": "_doMFA",
                        "shape": "MFA",
                        "locationName": "x-amz-mfa",
                        "documentation": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "doVersionId",
                        "name": "_doVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 11,
                "ctor": "deleteObjectsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "dorDeleted",
                        "name": "_dorDeleted",
                        "shape": "DeletedObjects",
                        "locationName": "Deleted",
                        "documentation": null,
                        "typeExposed": "S3ServiceError",
                        "type": "S3ServiceError"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "dorErrors",
                        "name": "_dorErrors",
                        "shape": "Errors",
                        "locationName": "Error",
                        "documentation": null,
                        "typeExposed": "S3ServiceError",
                        "type": "S3ServiceError"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "dorDeleted",
                        "name": "_dorDeleted",
                        "shape": "DeletedObjects",
                        "locationName": "Deleted",
                        "documentation": null,
                        "typeExposed": "S3ServiceError",
                        "type": "S3ServiceError"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "dorErrors",
                        "name": "_dorErrors",
                        "shape": "Errors",
                        "locationName": "Error",
                        "documentation": null,
                        "typeExposed": "S3ServiceError",
                        "type": "S3ServiceError"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 8,
                "name": "DeleteObjectsResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "dorDeleted",
                        "name": "_dorDeleted",
                        "shape": "DeletedObjects",
                        "locationName": "Deleted",
                        "documentation": null,
                        "typeExposed": "S3ServiceError",
                        "type": "S3ServiceError"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "dorErrors",
                        "name": "_dorErrors",
                        "shape": "Errors",
                        "locationName": "Error",
                        "documentation": null,
                        "typeExposed": "S3ServiceError",
                        "type": "S3ServiceError"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteObjects.html",
            "namespace": "Network.AWS.S3.DeleteObjects",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "DeleteObjects",
            "method": "post",
            "documentation": "This operation enables you to delete multiple objects from a bucket using a single HTTP request. You may specify up to 1000 keys.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/multiobjectdeleteapi.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 10,
                "ctor": "deleteObjects",
                "headerPad": 10,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "do1Delete",
                        "name": "_do1Delete",
                        "shape": "Delete",
                        "locationName": "Delete",
                        "documentation": null,
                        "typeExposed": "Delete",
                        "type": "Delete"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_do1Bucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "do1Delete",
                    "name": "_do1Delete",
                    "shape": "Delete",
                    "locationName": "Delete",
                    "documentation": null,
                    "typeExposed": "Delete",
                    "type": "Delete"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "do1Bucket",
                        "name": "_do1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "do1Delete",
                        "name": "_do1Delete",
                        "shape": "Delete",
                        "locationName": "Delete",
                        "documentation": null,
                        "typeExposed": "Delete",
                        "type": "Delete"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_do1MFA",
                        "locationName": "x-amz-mfa",
                        "type": "field"
                    }
                ],
                "contentPad": 7,
                "queryPad": 0,
                "name": "DeleteObjects",
                "query": [
                    {
                        "value": "delete",
                        "type": "const"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "do1MFA",
                        "name": "_do1MFA",
                        "shape": "MFA",
                        "locationName": "x-amz-mfa",
                        "documentation": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "do1Bucket",
                        "name": "_do1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "do1Delete",
                        "name": "_do1Delete",
                        "shape": "Delete",
                        "locationName": "Delete",
                        "documentation": null,
                        "typeExposed": "Delete",
                        "type": "Delete"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "do1MFA",
                        "name": "_do1MFA",
                        "shape": "MFA",
                        "locationName": "x-amz-mfa",
                        "documentation": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 11,
                "ctor": "getBucketAclResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbarOwner",
                        "name": "_gbarOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "gbarGrants",
                        "name": "_gbarGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "List \"Grant\" Grant"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 18,
                "name": "GetBucketAclResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbarOwner",
                        "name": "_gbarOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "gbarGrants",
                        "name": "_gbarGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "List \"Grant\" Grant"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "gbarGrants",
                        "name": "_gbarGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "List \"Grant\" Grant"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbarOwner",
                        "name": "_gbarOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketAcl.html",
            "namespace": "Network.AWS.S3.GetBucketAcl",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "GetBucketAcl",
            "method": "get",
            "documentation": "Gets the access control policy for the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETacl.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketAcl",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gbaBucket",
                    "name": "_gbaBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbaBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbaBucket",
                        "name": "_gbaBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetBucketAcl",
                "query": [
                    {
                        "value": "acl",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbaBucket",
                        "name": "_gbaBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketCorsResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": "_List",
                    "lensMapping": "_List . _List",
                    "default": "\u003cerror\u003e",
                    "flattened": true,
                    "required": true,
                    "lens": "gbcrCORSRules",
                    "name": "_gbcrCORSRules",
                    "shape": "CORSRules",
                    "locationName": "CORSRule",
                    "documentation": null,
                    "typeExposed": "[CORSRule]",
                    "type": "List \"CORSRule\" CORSRule"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "gbcrCORSRules",
                        "name": "_gbcrCORSRules",
                        "shape": "CORSRules",
                        "locationName": "CORSRule",
                        "documentation": null,
                        "typeExposed": "[CORSRule]",
                        "type": "List \"CORSRule\" CORSRule"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "gbcrCORSRules",
                        "name": "_gbcrCORSRules",
                        "shape": "CORSRules",
                        "locationName": "CORSRule",
                        "documentation": null,
                        "typeExposed": "[CORSRule]",
                        "type": "List \"CORSRule\" CORSRule"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetBucketCorsResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "gbcrCORSRules",
                        "name": "_gbcrCORSRules",
                        "shape": "CORSRules",
                        "locationName": "CORSRule",
                        "documentation": null,
                        "typeExposed": "[CORSRule]",
                        "type": "List \"CORSRule\" CORSRule"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketCors.html",
            "namespace": "Network.AWS.S3.GetBucketCors",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "GetBucketCors",
            "method": "get",
            "documentation": "Returns the cors configuration for the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETcors.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketCors",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gbcBucket",
                    "name": "_gbcBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbcBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbcBucket",
                        "name": "_gbcBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetBucketCors",
                "query": [
                    {
                        "value": "cors",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbcBucket",
                        "name": "_gbcBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketLifecycleResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": "_List",
                    "lensMapping": "_List . _List",
                    "default": "\u003cerror\u003e",
                    "flattened": true,
                    "required": true,
                    "lens": "gblrRules",
                    "name": "_gblrRules",
                    "shape": "Rules",
                    "locationName": "Rule",
                    "documentation": null,
                    "typeExposed": "[Rule]",
                    "type": "List \"Rule\" Rule"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "gblrRules",
                        "name": "_gblrRules",
                        "shape": "Rules",
                        "locationName": "Rule",
                        "documentation": null,
                        "typeExposed": "[Rule]",
                        "type": "List \"Rule\" Rule"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "gblrRules",
                        "name": "_gblrRules",
                        "shape": "Rules",
                        "locationName": "Rule",
                        "documentation": null,
                        "typeExposed": "[Rule]",
                        "type": "List \"Rule\" Rule"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetBucketLifecycleResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "gblrRules",
                        "name": "_gblrRules",
                        "shape": "Rules",
                        "locationName": "Rule",
                        "documentation": null,
                        "typeExposed": "[Rule]",
                        "type": "List \"Rule\" Rule"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketLifecycle.html",
            "namespace": "Network.AWS.S3.GetBucketLifecycle",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "GetBucketLifecycle",
            "method": "get",
            "documentation": "Returns the lifecycle configuration information set on the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlifecycle.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketLifecycle",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gbl1Bucket",
                    "name": "_gbl1Bucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbl1Bucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbl1Bucket",
                        "name": "_gbl1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetBucketLifecycle",
                "query": [
                    {
                        "value": "lifecycle",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbl1Bucket",
                        "name": "_gbl1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketLocationResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gblrLocationConstraint",
                    "name": "_gblrLocationConstraint",
                    "shape": "BucketLocationConstraint",
                    "locationName": "LocationConstraint",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gblrLocationConstraint",
                        "name": "_gblrLocationConstraint",
                        "shape": "BucketLocationConstraint",
                        "locationName": "LocationConstraint",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetBucketLocationResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gblrLocationConstraint",
                        "name": "_gblrLocationConstraint",
                        "shape": "BucketLocationConstraint",
                        "locationName": "LocationConstraint",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gblrLocationConstraint",
                        "name": "_gblrLocationConstraint",
                        "shape": "BucketLocationConstraint",
                        "locationName": "LocationConstraint",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketLocation.html",
            "namespace": "Network.AWS.S3.GetBucketLocation",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "GetBucketLocation",
            "method": "get",
            "documentation": "Returns the region the bucket resides in.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlocation.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketLocation",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gblBucket",
                    "name": "_gblBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gblBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gblBucket",
                        "name": "_gblBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetBucketLocation",
                "query": [
                    {
                        "value": "location",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gblBucket",
                        "name": "_gblBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketLoggingResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gblrLoggingEnabled",
                    "name": "_gblrLoggingEnabled",
                    "shape": "LoggingEnabled",
                    "locationName": "LoggingEnabled",
                    "documentation": null,
                    "typeExposed": "Maybe LoggingEnabled",
                    "type": "Maybe LoggingEnabled"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gblrLoggingEnabled",
                        "name": "_gblrLoggingEnabled",
                        "shape": "LoggingEnabled",
                        "locationName": "LoggingEnabled",
                        "documentation": null,
                        "typeExposed": "Maybe LoggingEnabled",
                        "type": "Maybe LoggingEnabled"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetBucketLoggingResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gblrLoggingEnabled",
                        "name": "_gblrLoggingEnabled",
                        "shape": "LoggingEnabled",
                        "locationName": "LoggingEnabled",
                        "documentation": null,
                        "typeExposed": "Maybe LoggingEnabled",
                        "type": "Maybe LoggingEnabled"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gblrLoggingEnabled",
                        "name": "_gblrLoggingEnabled",
                        "shape": "LoggingEnabled",
                        "locationName": "LoggingEnabled",
                        "documentation": null,
                        "typeExposed": "Maybe LoggingEnabled",
                        "type": "Maybe LoggingEnabled"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketLogging.html",
            "namespace": "Network.AWS.S3.GetBucketLogging",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "GetBucketLogging",
            "method": "get",
            "documentation": "Returns the logging status of a bucket and the permissions users have to view and modify that status. To use GET, you must be the bucket owner.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlogging.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketLogging",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gbl2Bucket",
                    "name": "_gbl2Bucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbl2Bucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbl2Bucket",
                        "name": "_gbl2Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetBucketLogging",
                "query": [
                    {
                        "value": "logging",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbl2Bucket",
                        "name": "_gbl2Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 31,
                "ctor": "getBucketNotificationResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbnrTopicConfiguration",
                        "name": "_gbnrTopicConfiguration",
                        "shape": "TopicConfiguration",
                        "locationName": "TopicConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe TopicConfiguration",
                        "type": "Maybe TopicConfiguration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbnrQueueConfiguration",
                        "name": "_gbnrQueueConfiguration",
                        "shape": "QueueConfiguration",
                        "locationName": "QueueConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe QueueConfiguration",
                        "type": "Maybe QueueConfiguration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbnrCloudFunctionConfiguration",
                        "name": "_gbnrCloudFunctionConfiguration",
                        "shape": "CloudFunctionConfiguration",
                        "locationName": "CloudFunctionConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CloudFunctionConfiguration",
                        "type": "Maybe CloudFunctionConfiguration"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 27,
                "name": "GetBucketNotificationResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbnrTopicConfiguration",
                        "name": "_gbnrTopicConfiguration",
                        "shape": "TopicConfiguration",
                        "locationName": "TopicConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe TopicConfiguration",
                        "type": "Maybe TopicConfiguration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbnrQueueConfiguration",
                        "name": "_gbnrQueueConfiguration",
                        "shape": "QueueConfiguration",
                        "locationName": "QueueConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe QueueConfiguration",
                        "type": "Maybe QueueConfiguration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbnrCloudFunctionConfiguration",
                        "name": "_gbnrCloudFunctionConfiguration",
                        "shape": "CloudFunctionConfiguration",
                        "locationName": "CloudFunctionConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CloudFunctionConfiguration",
                        "type": "Maybe CloudFunctionConfiguration"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbnrCloudFunctionConfiguration",
                        "name": "_gbnrCloudFunctionConfiguration",
                        "shape": "CloudFunctionConfiguration",
                        "locationName": "CloudFunctionConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CloudFunctionConfiguration",
                        "type": "Maybe CloudFunctionConfiguration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbnrQueueConfiguration",
                        "name": "_gbnrQueueConfiguration",
                        "shape": "QueueConfiguration",
                        "locationName": "QueueConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe QueueConfiguration",
                        "type": "Maybe QueueConfiguration"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbnrTopicConfiguration",
                        "name": "_gbnrTopicConfiguration",
                        "shape": "TopicConfiguration",
                        "locationName": "TopicConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe TopicConfiguration",
                        "type": "Maybe TopicConfiguration"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketNotification.html",
            "namespace": "Network.AWS.S3.GetBucketNotification",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "GetBucketNotification",
            "method": "get",
            "documentation": "Return the notification configuration of a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETnotification.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketNotification",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gbnBucket",
                    "name": "_gbnBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbnBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbnBucket",
                        "name": "_gbnBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetBucketNotification",
                "query": [
                    {
                        "value": "notification",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbnBucket",
                        "name": "_gbnBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketPolicyResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gbprPolicy",
                    "name": "_gbprPolicy",
                    "shape": "Policy",
                    "locationName": "Policy",
                    "documentation": "The bucket policy as a JSON document.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbprPolicy",
                        "name": "_gbprPolicy",
                        "shape": "Policy",
                        "locationName": "Policy",
                        "documentation": "The bucket policy as a JSON document.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gbprPolicy",
                    "name": "_gbprPolicy",
                    "shape": "Policy",
                    "locationName": "Policy",
                    "documentation": "The bucket policy as a JSON document.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetBucketPolicyResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbprPolicy",
                        "name": "_gbprPolicy",
                        "shape": "Policy",
                        "locationName": "Policy",
                        "documentation": "The bucket policy as a JSON document.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbprPolicy",
                        "name": "_gbprPolicy",
                        "shape": "Policy",
                        "locationName": "Policy",
                        "documentation": "The bucket policy as a JSON document.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketPolicy.html",
            "namespace": "Network.AWS.S3.GetBucketPolicy",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "GetBucketPolicy",
            "method": "get",
            "documentation": "Returns the policy of a specified bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETpolicy.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketPolicy",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gbpBucket",
                    "name": "_gbpBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbpBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbpBucket",
                        "name": "_gbpBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetBucketPolicy",
                "query": [
                    {
                        "value": "policy",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbpBucket",
                        "name": "_gbpBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketRequestPaymentResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gbrprPayer",
                    "name": "_gbrprPayer",
                    "shape": "Payer",
                    "locationName": "Payer",
                    "documentation": "Specifies who pays for the download and request fees.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbrprPayer",
                        "name": "_gbrprPayer",
                        "shape": "Payer",
                        "locationName": "Payer",
                        "documentation": "Specifies who pays for the download and request fees.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetBucketRequestPaymentResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbrprPayer",
                        "name": "_gbrprPayer",
                        "shape": "Payer",
                        "locationName": "Payer",
                        "documentation": "Specifies who pays for the download and request fees.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbrprPayer",
                        "name": "_gbrprPayer",
                        "shape": "Payer",
                        "locationName": "Payer",
                        "documentation": "Specifies who pays for the download and request fees.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketRequestPayment.html",
            "namespace": "Network.AWS.S3.GetBucketRequestPayment",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "GetBucketRequestPayment",
            "method": "get",
            "documentation": "Returns the request payment configuration of a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTrequestPaymentGET.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketRequestPayment",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gbrpBucket",
                    "name": "_gbrpBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbrpBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbrpBucket",
                        "name": "_gbrpBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetBucketRequestPayment",
                "query": [
                    {
                        "value": "requestPayment",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbrpBucket",
                        "name": "_gbrpBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "Tag",
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketTaggingResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "flattened": false,
                    "required": true,
                    "lens": "gbtrTagSet",
                    "name": "_gbtrTagSet",
                    "shape": "TagSet",
                    "locationName": "TagSet",
                    "documentation": null,
                    "typeExposed": "[Tag]",
                    "type": "List \"Tag\" Tag"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "gbtrTagSet",
                        "name": "_gbtrTagSet",
                        "shape": "TagSet",
                        "locationName": "TagSet",
                        "documentation": null,
                        "typeExposed": "[Tag]",
                        "type": "List \"Tag\" Tag"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetBucketTaggingResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "gbtrTagSet",
                        "name": "_gbtrTagSet",
                        "shape": "TagSet",
                        "locationName": "TagSet",
                        "documentation": null,
                        "typeExposed": "[Tag]",
                        "type": "List \"Tag\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "gbtrTagSet",
                        "name": "_gbtrTagSet",
                        "shape": "TagSet",
                        "locationName": "TagSet",
                        "documentation": null,
                        "typeExposed": "[Tag]",
                        "type": "List \"Tag\" Tag"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketTagging.html",
            "namespace": "Network.AWS.S3.GetBucketTagging",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "GetBucketTagging",
            "method": "get",
            "documentation": "Returns the tag set associated with the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETtagging.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketTagging",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gbtBucket",
                    "name": "_gbtBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbtBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbtBucket",
                        "name": "_gbtBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetBucketTagging",
                "query": [
                    {
                        "value": "tagging",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbtBucket",
                        "name": "_gbtBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 14,
                "ctor": "getBucketVersioningResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbvrStatus",
                        "name": "_gbvrStatus",
                        "shape": "BucketVersioningStatus",
                        "locationName": "Status",
                        "documentation": "The versioning state of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbvrMFADelete",
                        "name": "_gbvrMFADelete",
                        "shape": "MFADeleteStatus",
                        "locationName": "MfaDelete",
                        "documentation": "Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 10,
                "name": "GetBucketVersioningResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbvrStatus",
                        "name": "_gbvrStatus",
                        "shape": "BucketVersioningStatus",
                        "locationName": "Status",
                        "documentation": "The versioning state of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbvrMFADelete",
                        "name": "_gbvrMFADelete",
                        "shape": "MFADeleteStatus",
                        "locationName": "MfaDelete",
                        "documentation": "Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbvrMFADelete",
                        "name": "_gbvrMFADelete",
                        "shape": "MFADeleteStatus",
                        "locationName": "MfaDelete",
                        "documentation": "Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbvrStatus",
                        "name": "_gbvrStatus",
                        "shape": "BucketVersioningStatus",
                        "locationName": "Status",
                        "documentation": "The versioning state of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketVersioning.html",
            "namespace": "Network.AWS.S3.GetBucketVersioning",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "GetBucketVersioning",
            "method": "get",
            "documentation": "Returns the versioning state of a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETversioningStatus.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketVersioning",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gbvBucket",
                    "name": "_gbvBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbvBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbvBucket",
                        "name": "_gbvBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetBucketVersioning",
                "query": [
                    {
                        "value": "versioning",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbvBucket",
                        "name": "_gbvBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 26,
                "ctor": "getBucketWebsiteResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbwrRedirectAllRequestsTo",
                        "name": "_gbwrRedirectAllRequestsTo",
                        "shape": "RedirectAllRequestsTo",
                        "locationName": "RedirectAllRequestsTo",
                        "documentation": null,
                        "typeExposed": "Maybe RedirectAllRequestsTo",
                        "type": "Maybe RedirectAllRequestsTo"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbwrIndexDocument",
                        "name": "_gbwrIndexDocument",
                        "shape": "IndexDocument",
                        "locationName": "IndexDocument",
                        "documentation": null,
                        "typeExposed": "Maybe IndexDocument",
                        "type": "Maybe IndexDocument"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbwrErrorDocument",
                        "name": "_gbwrErrorDocument",
                        "shape": "ErrorDocument",
                        "locationName": "ErrorDocument",
                        "documentation": null,
                        "typeExposed": "Maybe ErrorDocument",
                        "type": "Maybe ErrorDocument"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "gbwrRoutingRules",
                        "name": "_gbwrRoutingRules",
                        "shape": "RoutingRules",
                        "locationName": "RoutingRules",
                        "documentation": null,
                        "typeExposed": "[RoutingRule]",
                        "type": "List \"RoutingRule\" RoutingRule"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 22,
                "name": "GetBucketWebsiteResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbwrRedirectAllRequestsTo",
                        "name": "_gbwrRedirectAllRequestsTo",
                        "shape": "RedirectAllRequestsTo",
                        "locationName": "RedirectAllRequestsTo",
                        "documentation": null,
                        "typeExposed": "Maybe RedirectAllRequestsTo",
                        "type": "Maybe RedirectAllRequestsTo"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbwrIndexDocument",
                        "name": "_gbwrIndexDocument",
                        "shape": "IndexDocument",
                        "locationName": "IndexDocument",
                        "documentation": null,
                        "typeExposed": "Maybe IndexDocument",
                        "type": "Maybe IndexDocument"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbwrErrorDocument",
                        "name": "_gbwrErrorDocument",
                        "shape": "ErrorDocument",
                        "locationName": "ErrorDocument",
                        "documentation": null,
                        "typeExposed": "Maybe ErrorDocument",
                        "type": "Maybe ErrorDocument"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "gbwrRoutingRules",
                        "name": "_gbwrRoutingRules",
                        "shape": "RoutingRules",
                        "locationName": "RoutingRules",
                        "documentation": null,
                        "typeExposed": "[RoutingRule]",
                        "type": "List \"RoutingRule\" RoutingRule"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbwrErrorDocument",
                        "name": "_gbwrErrorDocument",
                        "shape": "ErrorDocument",
                        "locationName": "ErrorDocument",
                        "documentation": null,
                        "typeExposed": "Maybe ErrorDocument",
                        "type": "Maybe ErrorDocument"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbwrIndexDocument",
                        "name": "_gbwrIndexDocument",
                        "shape": "IndexDocument",
                        "locationName": "IndexDocument",
                        "documentation": null,
                        "typeExposed": "Maybe IndexDocument",
                        "type": "Maybe IndexDocument"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gbwrRedirectAllRequestsTo",
                        "name": "_gbwrRedirectAllRequestsTo",
                        "shape": "RedirectAllRequestsTo",
                        "locationName": "RedirectAllRequestsTo",
                        "documentation": null,
                        "typeExposed": "Maybe RedirectAllRequestsTo",
                        "type": "Maybe RedirectAllRequestsTo"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "gbwrRoutingRules",
                        "name": "_gbwrRoutingRules",
                        "shape": "RoutingRules",
                        "locationName": "RoutingRules",
                        "documentation": null,
                        "typeExposed": "[RoutingRule]",
                        "type": "List \"RoutingRule\" RoutingRule"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketWebsite.html",
            "namespace": "Network.AWS.S3.GetBucketWebsite",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "GetBucketWebsite",
            "method": "get",
            "documentation": "Returns the website configuration for a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETwebsite.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getBucketWebsite",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gbwBucket",
                    "name": "_gbwBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbwBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbwBucket",
                        "name": "_gbwBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetBucketWebsite",
                "query": [
                    {
                        "value": "website",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gbwBucket",
                        "name": "_gbwBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": true,
                "style": "body-headers",
                "fieldPad": 27,
                "ctor": "getObjectResponse",
                "headerPad": 48,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorBody",
                        "name": "_gorBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": "Object data.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gorBody",
                    "name": "_gorBody",
                    "shape": "Body",
                    "locationName": "Body",
                    "documentation": "Object data.",
                    "typeExposed": "Maybe Base64",
                    "type": "Maybe Base64"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_gorDeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "type": "field"
                    },
                    {
                        "field": "_gorAcceptRanges",
                        "locationName": "accept-ranges",
                        "type": "field"
                    },
                    {
                        "field": "_gorExpiration",
                        "locationName": "x-amz-expiration",
                        "type": "field"
                    },
                    {
                        "field": "_gorRestore",
                        "locationName": "x-amz-restore",
                        "type": "field"
                    },
                    {
                        "field": "_gorLastModified",
                        "locationName": "Last-Modified",
                        "type": "field"
                    },
                    {
                        "field": "_gorContentLength",
                        "locationName": "Content-Length",
                        "type": "field"
                    },
                    {
                        "field": "_gorETag",
                        "locationName": "ETag",
                        "type": "field"
                    },
                    {
                        "field": "_gorMissingMeta",
                        "locationName": "x-amz-missing-meta",
                        "type": "field"
                    },
                    {
                        "field": "_gorVersionId",
                        "locationName": "x-amz-version-id",
                        "type": "field"
                    },
                    {
                        "field": "_gorCacheControl",
                        "locationName": "Cache-Control",
                        "type": "field"
                    },
                    {
                        "field": "_gorContentDisposition",
                        "locationName": "Content-Disposition",
                        "type": "field"
                    },
                    {
                        "field": "_gorContentEncoding",
                        "locationName": "Content-Encoding",
                        "type": "field"
                    },
                    {
                        "field": "_gorContentLanguage",
                        "locationName": "Content-Language",
                        "type": "field"
                    },
                    {
                        "field": "_gorContentType",
                        "locationName": "Content-Type",
                        "type": "field"
                    },
                    {
                        "field": "_gorExpires",
                        "locationName": "Expires",
                        "type": "field"
                    },
                    {
                        "field": "_gorWebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "type": "field"
                    },
                    {
                        "field": "_gorServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "type": "field"
                    },
                    {
                        "field": "_gorMetadata",
                        "locationName": "x-amz-meta-",
                        "type": "field"
                    },
                    {
                        "field": "_gorSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_gorSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_gorSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 5,
                "name": "GetObjectResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorBody",
                        "name": "_gorBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": "Object data.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorDeleteMarker",
                        "name": "_gorDeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "documentation": "Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the response.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorAcceptRanges",
                        "name": "_gorAcceptRanges",
                        "shape": "AcceptRanges",
                        "locationName": "accept-ranges",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorExpiration",
                        "name": "_gorExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorRestore",
                        "name": "_gorRestore",
                        "shape": "Restore",
                        "locationName": "x-amz-restore",
                        "documentation": "Provides information about object restoration operation and expiration time of the restored object copy.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorLastModified",
                        "name": "_gorLastModified",
                        "shape": "LastModified",
                        "locationName": "Last-Modified",
                        "documentation": "Last modified date of the object",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorContentLength",
                        "name": "_gorContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorETag",
                        "name": "_gorETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorMissingMeta",
                        "name": "_gorMissingMeta",
                        "shape": "MissingMeta",
                        "locationName": "x-amz-missing-meta",
                        "documentation": "This is set to the number of metadata entries not returned in x-amz-meta headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorVersionId",
                        "name": "_gorVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorCacheControl",
                        "name": "_gorCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorContentDisposition",
                        "name": "_gorContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorContentEncoding",
                        "name": "_gorContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorContentLanguage",
                        "name": "_gorContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorContentType",
                        "name": "_gorContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorExpires",
                        "name": "_gorExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorWebsiteRedirectLocation",
                        "name": "_gorWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorServerSideEncryption",
                        "name": "_gorServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "gorMetadata",
                        "name": "_gorMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map \"entry\" Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorSSECustomerAlgorithm",
                        "name": "_gorSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorSSECustomerKeyMD5",
                        "name": "_gorSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorSSEKMSKeyId",
                        "name": "_gorSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorAcceptRanges",
                        "name": "_gorAcceptRanges",
                        "shape": "AcceptRanges",
                        "locationName": "accept-ranges",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorBody",
                        "name": "_gorBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": "Object data.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorCacheControl",
                        "name": "_gorCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorContentDisposition",
                        "name": "_gorContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorContentEncoding",
                        "name": "_gorContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorContentLanguage",
                        "name": "_gorContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorContentLength",
                        "name": "_gorContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorContentType",
                        "name": "_gorContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorDeleteMarker",
                        "name": "_gorDeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "documentation": "Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the response.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorETag",
                        "name": "_gorETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorExpiration",
                        "name": "_gorExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorExpires",
                        "name": "_gorExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorLastModified",
                        "name": "_gorLastModified",
                        "shape": "LastModified",
                        "locationName": "Last-Modified",
                        "documentation": "Last modified date of the object",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "gorMetadata",
                        "name": "_gorMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map \"entry\" Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorMissingMeta",
                        "name": "_gorMissingMeta",
                        "shape": "MissingMeta",
                        "locationName": "x-amz-missing-meta",
                        "documentation": "This is set to the number of metadata entries not returned in x-amz-meta headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorRestore",
                        "name": "_gorRestore",
                        "shape": "Restore",
                        "locationName": "x-amz-restore",
                        "documentation": "Provides information about object restoration operation and expiration time of the restored object copy.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorSSECustomerAlgorithm",
                        "name": "_gorSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorSSECustomerKeyMD5",
                        "name": "_gorSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorSSEKMSKeyId",
                        "name": "_gorSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorServerSideEncryption",
                        "name": "_gorServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorVersionId",
                        "name": "_gorVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gorWebsiteRedirectLocation",
                        "name": "_gorWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/GetObject.html",
            "namespace": "Network.AWS.S3.GetObject",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "GetObject",
            "method": "get",
            "documentation": "Retrieves objects from Amazon S3.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGET.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 29,
                "ctor": "getObject",
                "headerPad": 48,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_goBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_goKey",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "goBucket",
                        "name": "_goBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "goKey",
                        "name": "_goKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_goIfMatch",
                        "locationName": "If-Match",
                        "type": "field"
                    },
                    {
                        "field": "_goIfModifiedSince",
                        "locationName": "If-Modified-Since",
                        "type": "field"
                    },
                    {
                        "field": "_goIfNoneMatch",
                        "locationName": "If-None-Match",
                        "type": "field"
                    },
                    {
                        "field": "_goIfUnmodifiedSince",
                        "locationName": "If-Unmodified-Since",
                        "type": "field"
                    },
                    {
                        "field": "_goRange",
                        "locationName": "Range",
                        "type": "field"
                    },
                    {
                        "field": "_goSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_goSSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_goSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_goSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 0,
                "queryPad": 29,
                "name": "GetObject",
                "query": [
                    {
                        "field": "_goResponseCacheControl",
                        "locationName": "response-cache-control",
                        "type": "field"
                    },
                    {
                        "field": "_goResponseContentDisposition",
                        "locationName": "response-content-disposition",
                        "type": "field"
                    },
                    {
                        "field": "_goResponseContentEncoding",
                        "locationName": "response-content-encoding",
                        "type": "field"
                    },
                    {
                        "field": "_goResponseContentLanguage",
                        "locationName": "response-content-language",
                        "type": "field"
                    },
                    {
                        "field": "_goResponseContentType",
                        "locationName": "response-content-type",
                        "type": "field"
                    },
                    {
                        "field": "_goResponseExpires",
                        "locationName": "response-expires",
                        "type": "field"
                    },
                    {
                        "field": "_goVersionId",
                        "locationName": "versionId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goIfMatch",
                        "name": "_goIfMatch",
                        "shape": "IfMatch",
                        "locationName": "If-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goIfModifiedSince",
                        "name": "_goIfModifiedSince",
                        "shape": "IfModifiedSince",
                        "locationName": "If-Modified-Since",
                        "documentation": "Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goIfNoneMatch",
                        "name": "_goIfNoneMatch",
                        "shape": "IfNoneMatch",
                        "locationName": "If-None-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goIfUnmodifiedSince",
                        "name": "_goIfUnmodifiedSince",
                        "shape": "IfUnmodifiedSince",
                        "locationName": "If-Unmodified-Since",
                        "documentation": "Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goRange",
                        "name": "_goRange",
                        "shape": "Range",
                        "locationName": "Range",
                        "documentation": "Downloads the specified range bytes of an object. For more information about the HTTP Range header, go to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goResponseCacheControl",
                        "name": "_goResponseCacheControl",
                        "shape": "ResponseCacheControl",
                        "locationName": "response-cache-control",
                        "documentation": "Sets the Cache-Control header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goResponseContentDisposition",
                        "name": "_goResponseContentDisposition",
                        "shape": "ResponseContentDisposition",
                        "locationName": "response-content-disposition",
                        "documentation": "Sets the Content-Disposition header of the response",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goResponseContentEncoding",
                        "name": "_goResponseContentEncoding",
                        "shape": "ResponseContentEncoding",
                        "locationName": "response-content-encoding",
                        "documentation": "Sets the Content-Encoding header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goResponseContentLanguage",
                        "name": "_goResponseContentLanguage",
                        "shape": "ResponseContentLanguage",
                        "locationName": "response-content-language",
                        "documentation": "Sets the Content-Language header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goResponseContentType",
                        "name": "_goResponseContentType",
                        "shape": "ResponseContentType",
                        "locationName": "response-content-type",
                        "documentation": "Sets the Content-Type header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goResponseExpires",
                        "name": "_goResponseExpires",
                        "shape": "ResponseExpires",
                        "locationName": "response-expires",
                        "documentation": "Sets the Expires header of the response.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goVersionId",
                        "name": "_goVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goSSECustomerAlgorithm",
                        "name": "_goSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goSSECustomerKey",
                        "name": "_goSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goSSECustomerKeyMD5",
                        "name": "_goSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goSSEKMSKeyId",
                        "name": "_goSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "Specifies the AWS KMS key ID to use for object encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "goBucket",
                        "name": "_goBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goIfMatch",
                        "name": "_goIfMatch",
                        "shape": "IfMatch",
                        "locationName": "If-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goIfModifiedSince",
                        "name": "_goIfModifiedSince",
                        "shape": "IfModifiedSince",
                        "locationName": "If-Modified-Since",
                        "documentation": "Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goIfNoneMatch",
                        "name": "_goIfNoneMatch",
                        "shape": "IfNoneMatch",
                        "locationName": "If-None-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goIfUnmodifiedSince",
                        "name": "_goIfUnmodifiedSince",
                        "shape": "IfUnmodifiedSince",
                        "locationName": "If-Unmodified-Since",
                        "documentation": "Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "goKey",
                        "name": "_goKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goRange",
                        "name": "_goRange",
                        "shape": "Range",
                        "locationName": "Range",
                        "documentation": "Downloads the specified range bytes of an object. For more information about the HTTP Range header, go to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goResponseCacheControl",
                        "name": "_goResponseCacheControl",
                        "shape": "ResponseCacheControl",
                        "locationName": "response-cache-control",
                        "documentation": "Sets the Cache-Control header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goResponseContentDisposition",
                        "name": "_goResponseContentDisposition",
                        "shape": "ResponseContentDisposition",
                        "locationName": "response-content-disposition",
                        "documentation": "Sets the Content-Disposition header of the response",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goResponseContentEncoding",
                        "name": "_goResponseContentEncoding",
                        "shape": "ResponseContentEncoding",
                        "locationName": "response-content-encoding",
                        "documentation": "Sets the Content-Encoding header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goResponseContentLanguage",
                        "name": "_goResponseContentLanguage",
                        "shape": "ResponseContentLanguage",
                        "locationName": "response-content-language",
                        "documentation": "Sets the Content-Language header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goResponseContentType",
                        "name": "_goResponseContentType",
                        "shape": "ResponseContentType",
                        "locationName": "response-content-type",
                        "documentation": "Sets the Content-Type header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goResponseExpires",
                        "name": "_goResponseExpires",
                        "shape": "ResponseExpires",
                        "locationName": "response-expires",
                        "documentation": "Sets the Expires header of the response.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goSSECustomerAlgorithm",
                        "name": "_goSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goSSECustomerKey",
                        "name": "_goSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goSSECustomerKeyMD5",
                        "name": "_goSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goSSEKMSKeyId",
                        "name": "_goSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "Specifies the AWS KMS key ID to use for object encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goVersionId",
                        "name": "_goVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 11,
                "ctor": "getObjectAclResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goarOwner",
                        "name": "_goarOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "goarGrants",
                        "name": "_goarGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "List \"Grant\" Grant"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 18,
                "name": "GetObjectAclResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goarOwner",
                        "name": "_goarOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "goarGrants",
                        "name": "_goarGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "List \"Grant\" Grant"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "goarGrants",
                        "name": "_goarGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "List \"Grant\" Grant"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goarOwner",
                        "name": "_goarOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/GetObjectAcl.html",
            "namespace": "Network.AWS.S3.GetObjectAcl",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "GetObjectAcl",
            "method": "get",
            "documentation": "Returns the access control list (ACL) of an object.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGETacl.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 13,
                "ctor": "getObjectAcl",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_goaBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_goaKey",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "goaBucket",
                        "name": "_goaBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "goaKey",
                        "name": "_goaKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "GetObjectAcl",
                "query": [
                    {
                        "value": "acl",
                        "type": "const"
                    },
                    {
                        "field": "_goaVersionId",
                        "locationName": "versionId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goaVersionId",
                        "name": "_goaVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "goaBucket",
                        "name": "_goaBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "goaKey",
                        "name": "_goaKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "goaVersionId",
                        "name": "_goaVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": true,
                "listElement": null,
                "style": "body",
                "fieldPad": 0,
                "ctor": "getObjectTorrentResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gotrBody",
                    "name": "_gotrBody",
                    "shape": "Body",
                    "locationName": "Body",
                    "documentation": null,
                    "typeExposed": "Maybe Base64",
                    "type": "Maybe Base64"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gotrBody",
                        "name": "_gotrBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": null,
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gotrBody",
                    "name": "_gotrBody",
                    "shape": "Body",
                    "locationName": "Body",
                    "documentation": null,
                    "typeExposed": "Maybe Base64",
                    "type": "Maybe Base64"
                },
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetObjectTorrentResponse",
                "resultWrapper": null,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gotrBody",
                        "name": "_gotrBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": null,
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gotrBody",
                        "name": "_gotrBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": null,
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/GetObjectTorrent.html",
            "namespace": "Network.AWS.S3.GetObjectTorrent",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "GetObjectTorrent",
            "method": "get",
            "documentation": "Return torrent files from a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGETtorrent.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 10,
                "ctor": "getObjectTorrent",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gotBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gotKey",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gotBucket",
                        "name": "_gotBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gotKey",
                        "name": "_gotKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetObjectTorrent",
                "query": [
                    {
                        "value": "torrent",
                        "type": "const"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gotBucket",
                        "name": "_gotBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gotKey",
                        "name": "_gotKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "headBucketResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "HeadBucketResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/HeadBucket.html",
            "namespace": "Network.AWS.S3.HeadBucket",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "HeadBucket",
            "method": "head",
            "documentation": "This operation is useful to determine if a bucket exists and you have permission to access it.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketHEAD.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "headBucket",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "hbBucket",
                    "name": "_hbBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_hbBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "hbBucket",
                        "name": "_hbBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "HeadBucket",
                "query": [],
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "hbBucket",
                        "name": "_hbBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 27,
                "ctor": "headObjectResponse",
                "headerPad": 48,
                "contents": [],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_horDeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "type": "field"
                    },
                    {
                        "field": "_horAcceptRanges",
                        "locationName": "accept-ranges",
                        "type": "field"
                    },
                    {
                        "field": "_horExpiration",
                        "locationName": "x-amz-expiration",
                        "type": "field"
                    },
                    {
                        "field": "_horRestore",
                        "locationName": "x-amz-restore",
                        "type": "field"
                    },
                    {
                        "field": "_horLastModified",
                        "locationName": "Last-Modified",
                        "type": "field"
                    },
                    {
                        "field": "_horContentLength",
                        "locationName": "Content-Length",
                        "type": "field"
                    },
                    {
                        "field": "_horETag",
                        "locationName": "ETag",
                        "type": "field"
                    },
                    {
                        "field": "_horMissingMeta",
                        "locationName": "x-amz-missing-meta",
                        "type": "field"
                    },
                    {
                        "field": "_horVersionId",
                        "locationName": "x-amz-version-id",
                        "type": "field"
                    },
                    {
                        "field": "_horCacheControl",
                        "locationName": "Cache-Control",
                        "type": "field"
                    },
                    {
                        "field": "_horContentDisposition",
                        "locationName": "Content-Disposition",
                        "type": "field"
                    },
                    {
                        "field": "_horContentEncoding",
                        "locationName": "Content-Encoding",
                        "type": "field"
                    },
                    {
                        "field": "_horContentLanguage",
                        "locationName": "Content-Language",
                        "type": "field"
                    },
                    {
                        "field": "_horContentType",
                        "locationName": "Content-Type",
                        "type": "field"
                    },
                    {
                        "field": "_horExpires",
                        "locationName": "Expires",
                        "type": "field"
                    },
                    {
                        "field": "_horWebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "type": "field"
                    },
                    {
                        "field": "_horServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "type": "field"
                    },
                    {
                        "field": "_horMetadata",
                        "locationName": "x-amz-meta-",
                        "type": "field"
                    },
                    {
                        "field": "_horSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_horSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_horSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 0,
                "name": "HeadObjectResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": true,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horDeleteMarker",
                        "name": "_horDeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "documentation": "Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the response.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horAcceptRanges",
                        "name": "_horAcceptRanges",
                        "shape": "AcceptRanges",
                        "locationName": "accept-ranges",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horExpiration",
                        "name": "_horExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horRestore",
                        "name": "_horRestore",
                        "shape": "Restore",
                        "locationName": "x-amz-restore",
                        "documentation": "Provides information about object restoration operation and expiration time of the restored object copy.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horLastModified",
                        "name": "_horLastModified",
                        "shape": "LastModified",
                        "locationName": "Last-Modified",
                        "documentation": "Last modified date of the object",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horContentLength",
                        "name": "_horContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horETag",
                        "name": "_horETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horMissingMeta",
                        "name": "_horMissingMeta",
                        "shape": "MissingMeta",
                        "locationName": "x-amz-missing-meta",
                        "documentation": "This is set to the number of metadata entries not returned in x-amz-meta headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horVersionId",
                        "name": "_horVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horCacheControl",
                        "name": "_horCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horContentDisposition",
                        "name": "_horContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horContentEncoding",
                        "name": "_horContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horContentLanguage",
                        "name": "_horContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horContentType",
                        "name": "_horContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horExpires",
                        "name": "_horExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horWebsiteRedirectLocation",
                        "name": "_horWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horServerSideEncryption",
                        "name": "_horServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "horMetadata",
                        "name": "_horMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map \"entry\" Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horSSECustomerAlgorithm",
                        "name": "_horSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horSSECustomerKeyMD5",
                        "name": "_horSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horSSEKMSKeyId",
                        "name": "_horSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horAcceptRanges",
                        "name": "_horAcceptRanges",
                        "shape": "AcceptRanges",
                        "locationName": "accept-ranges",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horCacheControl",
                        "name": "_horCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horContentDisposition",
                        "name": "_horContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horContentEncoding",
                        "name": "_horContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horContentLanguage",
                        "name": "_horContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horContentLength",
                        "name": "_horContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horContentType",
                        "name": "_horContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horDeleteMarker",
                        "name": "_horDeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "documentation": "Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the response.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horETag",
                        "name": "_horETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horExpiration",
                        "name": "_horExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horExpires",
                        "name": "_horExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horLastModified",
                        "name": "_horLastModified",
                        "shape": "LastModified",
                        "locationName": "Last-Modified",
                        "documentation": "Last modified date of the object",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "horMetadata",
                        "name": "_horMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map \"entry\" Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horMissingMeta",
                        "name": "_horMissingMeta",
                        "shape": "MissingMeta",
                        "locationName": "x-amz-missing-meta",
                        "documentation": "This is set to the number of metadata entries not returned in x-amz-meta headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horRestore",
                        "name": "_horRestore",
                        "shape": "Restore",
                        "locationName": "x-amz-restore",
                        "documentation": "Provides information about object restoration operation and expiration time of the restored object copy.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horSSECustomerAlgorithm",
                        "name": "_horSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horSSECustomerKeyMD5",
                        "name": "_horSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horSSEKMSKeyId",
                        "name": "_horSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horServerSideEncryption",
                        "name": "_horServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horVersionId",
                        "name": "_horVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "horWebsiteRedirectLocation",
                        "name": "_horWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/HeadObject.html",
            "namespace": "Network.AWS.S3.HeadObject",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "HeadObject",
            "method": "head",
            "documentation": "The HEAD operation retrieves metadata from an object without returning the object itself. This operation is useful if you're only interested in an object's metadata. To use HEAD, you must have READ access to the object.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectHEAD.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 23,
                "ctor": "headObject",
                "headerPad": 48,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_hoBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_hoKey",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "hoBucket",
                        "name": "_hoBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "hoKey",
                        "name": "_hoKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_hoIfMatch",
                        "locationName": "If-Match",
                        "type": "field"
                    },
                    {
                        "field": "_hoIfModifiedSince",
                        "locationName": "If-Modified-Since",
                        "type": "field"
                    },
                    {
                        "field": "_hoIfNoneMatch",
                        "locationName": "If-None-Match",
                        "type": "field"
                    },
                    {
                        "field": "_hoIfUnmodifiedSince",
                        "locationName": "If-Unmodified-Since",
                        "type": "field"
                    },
                    {
                        "field": "_hoRange",
                        "locationName": "Range",
                        "type": "field"
                    },
                    {
                        "field": "_hoSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_hoSSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_hoSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_hoSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 0,
                "queryPad": 10,
                "name": "HeadObject",
                "query": [
                    {
                        "field": "_hoVersionId",
                        "locationName": "versionId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoIfMatch",
                        "name": "_hoIfMatch",
                        "shape": "IfMatch",
                        "locationName": "If-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoIfModifiedSince",
                        "name": "_hoIfModifiedSince",
                        "shape": "IfModifiedSince",
                        "locationName": "If-Modified-Since",
                        "documentation": "Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoIfNoneMatch",
                        "name": "_hoIfNoneMatch",
                        "shape": "IfNoneMatch",
                        "locationName": "If-None-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoIfUnmodifiedSince",
                        "name": "_hoIfUnmodifiedSince",
                        "shape": "IfUnmodifiedSince",
                        "locationName": "If-Unmodified-Since",
                        "documentation": "Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoRange",
                        "name": "_hoRange",
                        "shape": "Range",
                        "locationName": "Range",
                        "documentation": "Downloads the specified range bytes of an object. For more information about the HTTP Range header, go to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoVersionId",
                        "name": "_hoVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoSSECustomerAlgorithm",
                        "name": "_hoSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoSSECustomerKey",
                        "name": "_hoSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoSSECustomerKeyMD5",
                        "name": "_hoSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoSSEKMSKeyId",
                        "name": "_hoSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "Specifies the AWS KMS key ID to use for object encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "hoBucket",
                        "name": "_hoBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoIfMatch",
                        "name": "_hoIfMatch",
                        "shape": "IfMatch",
                        "locationName": "If-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoIfModifiedSince",
                        "name": "_hoIfModifiedSince",
                        "shape": "IfModifiedSince",
                        "locationName": "If-Modified-Since",
                        "documentation": "Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoIfNoneMatch",
                        "name": "_hoIfNoneMatch",
                        "shape": "IfNoneMatch",
                        "locationName": "If-None-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoIfUnmodifiedSince",
                        "name": "_hoIfUnmodifiedSince",
                        "shape": "IfUnmodifiedSince",
                        "locationName": "If-Unmodified-Since",
                        "documentation": "Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "hoKey",
                        "name": "_hoKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoRange",
                        "name": "_hoRange",
                        "shape": "Range",
                        "locationName": "Range",
                        "documentation": "Downloads the specified range bytes of an object. For more information about the HTTP Range header, go to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoSSECustomerAlgorithm",
                        "name": "_hoSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoSSECustomerKey",
                        "name": "_hoSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoSSECustomerKeyMD5",
                        "name": "_hoSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoSSEKMSKeyId",
                        "name": "_hoSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "Specifies the AWS KMS key ID to use for object encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "hoVersionId",
                        "name": "_hoVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 11,
                "ctor": "listBucketsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "lbrBuckets",
                        "name": "_lbrBuckets",
                        "shape": "Buckets",
                        "locationName": "Buckets",
                        "documentation": null,
                        "typeExposed": "[Bucket]",
                        "type": "List \"Bucket\" Bucket"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lbrOwner",
                        "name": "_lbrOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 8,
                "name": "ListBucketsResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "lbrBuckets",
                        "name": "_lbrBuckets",
                        "shape": "Buckets",
                        "locationName": "Buckets",
                        "documentation": null,
                        "typeExposed": "[Bucket]",
                        "type": "List \"Bucket\" Bucket"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lbrOwner",
                        "name": "_lbrOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "lbrBuckets",
                        "name": "_lbrBuckets",
                        "shape": "Buckets",
                        "locationName": "Buckets",
                        "documentation": null,
                        "typeExposed": "[Bucket]",
                        "type": "List \"Bucket\" Bucket"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lbrOwner",
                        "name": "_lbrOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/ListBuckets.html",
            "namespace": "Network.AWS.S3.ListBuckets",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "ListBuckets",
            "method": "get",
            "documentation": "Returns a list of all buckets owned by the authenticated sender of the request.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTServiceGET.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "listBuckets",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "ListBuckets",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 23,
                "ctor": "listMultipartUploadsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurBucket",
                        "name": "_lmurBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurKeyMarker",
                        "name": "_lmurKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "KeyMarker",
                        "documentation": "The key at or after which the listing began.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurUploadIdMarker",
                        "name": "_lmurUploadIdMarker",
                        "shape": "UploadIdMarker",
                        "locationName": "UploadIdMarker",
                        "documentation": "Upload ID after which listing began.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurNextKeyMarker",
                        "name": "_lmurNextKeyMarker",
                        "shape": "NextKeyMarker",
                        "locationName": "NextKeyMarker",
                        "documentation": "When a list is truncated, this element specifies the value that should be used for the key-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurPrefix",
                        "name": "_lmurPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": "When a prefix is provided in the request, this field contains the specified prefix. The result contains only keys starting with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurDelimiter",
                        "name": "_lmurDelimiter",
                        "shape": "Delimiter",
                        "locationName": "Delimiter",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurNextUploadIdMarker",
                        "name": "_lmurNextUploadIdMarker",
                        "shape": "NextUploadIdMarker",
                        "locationName": "NextUploadIdMarker",
                        "documentation": "When a list is truncated, this element specifies the value that should be used for the upload-id-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurMaxUploads",
                        "name": "_lmurMaxUploads",
                        "shape": "MaxUploads",
                        "locationName": "MaxUploads",
                        "documentation": "Maximum number of multipart uploads that could have been included in the response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurIsTruncated",
                        "name": "_lmurIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "Indicates whether the returned list of multipart uploads is truncated. A value of true indicates that the list was truncated. The list can be truncated if the number of multipart uploads exceeds the limit allowed or specified by max uploads.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lmurUploads",
                        "name": "_lmurUploads",
                        "shape": "MultipartUploadList",
                        "locationName": "Upload",
                        "documentation": null,
                        "typeExposed": "[MultipartUpload]",
                        "type": "List \"Upload\" MultipartUpload"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lmurCommonPrefixes",
                        "name": "_lmurCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "List \"CommonPrefixes\" CommonPrefix"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurEncodingType",
                        "name": "_lmurEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lmurUploads",
                        "name": "_lmurUploads",
                        "shape": "MultipartUploadList",
                        "locationName": "Upload",
                        "documentation": null,
                        "typeExposed": "[MultipartUpload]",
                        "type": "List \"Upload\" MultipartUpload"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lmurCommonPrefixes",
                        "name": "_lmurCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "List \"CommonPrefixes\" CommonPrefix"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 19,
                "name": "ListMultipartUploadsResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurBucket",
                        "name": "_lmurBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurKeyMarker",
                        "name": "_lmurKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "KeyMarker",
                        "documentation": "The key at or after which the listing began.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurUploadIdMarker",
                        "name": "_lmurUploadIdMarker",
                        "shape": "UploadIdMarker",
                        "locationName": "UploadIdMarker",
                        "documentation": "Upload ID after which listing began.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurNextKeyMarker",
                        "name": "_lmurNextKeyMarker",
                        "shape": "NextKeyMarker",
                        "locationName": "NextKeyMarker",
                        "documentation": "When a list is truncated, this element specifies the value that should be used for the key-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurPrefix",
                        "name": "_lmurPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": "When a prefix is provided in the request, this field contains the specified prefix. The result contains only keys starting with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurDelimiter",
                        "name": "_lmurDelimiter",
                        "shape": "Delimiter",
                        "locationName": "Delimiter",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurNextUploadIdMarker",
                        "name": "_lmurNextUploadIdMarker",
                        "shape": "NextUploadIdMarker",
                        "locationName": "NextUploadIdMarker",
                        "documentation": "When a list is truncated, this element specifies the value that should be used for the upload-id-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurMaxUploads",
                        "name": "_lmurMaxUploads",
                        "shape": "MaxUploads",
                        "locationName": "MaxUploads",
                        "documentation": "Maximum number of multipart uploads that could have been included in the response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurIsTruncated",
                        "name": "_lmurIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "Indicates whether the returned list of multipart uploads is truncated. A value of true indicates that the list was truncated. The list can be truncated if the number of multipart uploads exceeds the limit allowed or specified by max uploads.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurEncodingType",
                        "name": "_lmurEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurBucket",
                        "name": "_lmurBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lmurCommonPrefixes",
                        "name": "_lmurCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "List \"CommonPrefixes\" CommonPrefix"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurDelimiter",
                        "name": "_lmurDelimiter",
                        "shape": "Delimiter",
                        "locationName": "Delimiter",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurEncodingType",
                        "name": "_lmurEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurIsTruncated",
                        "name": "_lmurIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "Indicates whether the returned list of multipart uploads is truncated. A value of true indicates that the list was truncated. The list can be truncated if the number of multipart uploads exceeds the limit allowed or specified by max uploads.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurKeyMarker",
                        "name": "_lmurKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "KeyMarker",
                        "documentation": "The key at or after which the listing began.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurMaxUploads",
                        "name": "_lmurMaxUploads",
                        "shape": "MaxUploads",
                        "locationName": "MaxUploads",
                        "documentation": "Maximum number of multipart uploads that could have been included in the response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurNextKeyMarker",
                        "name": "_lmurNextKeyMarker",
                        "shape": "NextKeyMarker",
                        "locationName": "NextKeyMarker",
                        "documentation": "When a list is truncated, this element specifies the value that should be used for the key-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurNextUploadIdMarker",
                        "name": "_lmurNextUploadIdMarker",
                        "shape": "NextUploadIdMarker",
                        "locationName": "NextUploadIdMarker",
                        "documentation": "When a list is truncated, this element specifies the value that should be used for the upload-id-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurPrefix",
                        "name": "_lmurPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": "When a prefix is provided in the request, this field contains the specified prefix. The result contains only keys starting with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmurUploadIdMarker",
                        "name": "_lmurUploadIdMarker",
                        "shape": "UploadIdMarker",
                        "locationName": "UploadIdMarker",
                        "documentation": "Upload ID after which listing began.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lmurUploads",
                        "name": "_lmurUploads",
                        "shape": "MultipartUploadList",
                        "locationName": "Upload",
                        "documentation": null,
                        "typeExposed": "[MultipartUpload]",
                        "type": "List \"Upload\" MultipartUpload"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/ListMultipartUploads.html",
            "namespace": "Network.AWS.S3.ListMultipartUploads",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": {
                "more": "lmurIsTruncated",
                "tokens": {
                    "p1": {
                        "input": "lmuKeyMarker",
                        "output": "lmurNextKeyMarker"
                    },
                    "p2": {
                        "input": "lmuUploadIdMarker",
                        "output": "lmurNextUploadIdMarker"
                    }
                },
                "negate": "isNothing p1 && isNothing p2",
                "type": "many"
            },
            "name": "ListMultipartUploads",
            "method": "get",
            "documentation": "This operation lists in-progress multipart uploads.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListMPUpload.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 18,
                "ctor": "listMultipartUploads",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_lmuBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lmuBucket",
                        "name": "_lmuBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "ListMultipartUploads",
                "query": [
                    {
                        "value": "uploads",
                        "type": "const"
                    },
                    {
                        "field": "_lmuDelimiter",
                        "locationName": "delimiter",
                        "type": "field"
                    },
                    {
                        "field": "_lmuEncodingType",
                        "locationName": "encoding-type",
                        "type": "field"
                    },
                    {
                        "field": "_lmuKeyMarker",
                        "locationName": "key-marker",
                        "type": "field"
                    },
                    {
                        "field": "_lmuMaxUploads",
                        "locationName": "max-uploads",
                        "type": "field"
                    },
                    {
                        "field": "_lmuPrefix",
                        "locationName": "prefix",
                        "type": "field"
                    },
                    {
                        "field": "_lmuUploadIdMarker",
                        "locationName": "upload-id-marker",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmuDelimiter",
                        "name": "_lmuDelimiter",
                        "shape": "Delimiter",
                        "locationName": "delimiter",
                        "documentation": "Character you use to group keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmuEncodingType",
                        "name": "_lmuEncodingType",
                        "shape": "EncodingType",
                        "locationName": "encoding-type",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmuKeyMarker",
                        "name": "_lmuKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "key-marker",
                        "documentation": "Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmuMaxUploads",
                        "name": "_lmuMaxUploads",
                        "shape": "MaxUploads",
                        "locationName": "max-uploads",
                        "documentation": "Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body. 1,000 is the maximum number of uploads that can be returned in a response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmuPrefix",
                        "name": "_lmuPrefix",
                        "shape": "Prefix",
                        "locationName": "prefix",
                        "documentation": "Lists in-progress uploads only for those keys that begin with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmuUploadIdMarker",
                        "name": "_lmuUploadIdMarker",
                        "shape": "UploadIdMarker",
                        "locationName": "upload-id-marker",
                        "documentation": "Together with key-marker, specifies the multipart upload after which listing should begin. If key-marker is not specified, the upload-id-marker parameter is ignored.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lmuBucket",
                        "name": "_lmuBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmuDelimiter",
                        "name": "_lmuDelimiter",
                        "shape": "Delimiter",
                        "locationName": "delimiter",
                        "documentation": "Character you use to group keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmuEncodingType",
                        "name": "_lmuEncodingType",
                        "shape": "EncodingType",
                        "locationName": "encoding-type",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmuKeyMarker",
                        "name": "_lmuKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "key-marker",
                        "documentation": "Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmuMaxUploads",
                        "name": "_lmuMaxUploads",
                        "shape": "MaxUploads",
                        "locationName": "max-uploads",
                        "documentation": "Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body. 1,000 is the maximum number of uploads that can be returned in a response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmuPrefix",
                        "name": "_lmuPrefix",
                        "shape": "Prefix",
                        "locationName": "prefix",
                        "documentation": "Lists in-progress uploads only for those keys that begin with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lmuUploadIdMarker",
                        "name": "_lmuUploadIdMarker",
                        "shape": "UploadIdMarker",
                        "locationName": "upload-id-marker",
                        "documentation": "Together with key-marker, specifies the multipart upload after which listing should begin. If key-marker is not specified, the upload-id-marker parameter is ignored.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 24,
                "ctor": "listObjectVersionsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrIsTruncated",
                        "name": "_lovrIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria. If your results were truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting place in another request to return the rest of the results.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrKeyMarker",
                        "name": "_lovrKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "KeyMarker",
                        "documentation": "Marks the last Key returned in a truncated response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrVersionIdMarker",
                        "name": "_lovrVersionIdMarker",
                        "shape": "VersionIdMarker",
                        "locationName": "VersionIdMarker",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrNextKeyMarker",
                        "name": "_lovrNextKeyMarker",
                        "shape": "NextKeyMarker",
                        "locationName": "NextKeyMarker",
                        "documentation": "Use this value for the key marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrNextVersionIdMarker",
                        "name": "_lovrNextVersionIdMarker",
                        "shape": "NextVersionIdMarker",
                        "locationName": "NextVersionIdMarker",
                        "documentation": "Use this value for the next version id marker parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lovrVersions",
                        "name": "_lovrVersions",
                        "shape": "ObjectVersionList",
                        "locationName": "Version",
                        "documentation": null,
                        "typeExposed": "[ObjectVersion]",
                        "type": "List \"Version\" ObjectVersion"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lovrDeleteMarkers",
                        "name": "_lovrDeleteMarkers",
                        "shape": "DeleteMarkers",
                        "locationName": "DeleteMarker",
                        "documentation": null,
                        "typeExposed": "[DeleteMarkerEntry]",
                        "type": "List \"DeleteMarker\" DeleteMarkerEntry"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrName",
                        "name": "_lovrName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrPrefix",
                        "name": "_lovrPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrDelimiter",
                        "name": "_lovrDelimiter",
                        "shape": "Delimiter",
                        "locationName": "Delimiter",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrMaxKeys",
                        "name": "_lovrMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "MaxKeys",
                        "documentation": null,
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lovrCommonPrefixes",
                        "name": "_lovrCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "List \"CommonPrefixes\" CommonPrefix"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrEncodingType",
                        "name": "_lovrEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lovrVersions",
                        "name": "_lovrVersions",
                        "shape": "ObjectVersionList",
                        "locationName": "Version",
                        "documentation": null,
                        "typeExposed": "[ObjectVersion]",
                        "type": "List \"Version\" ObjectVersion"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lovrDeleteMarkers",
                        "name": "_lovrDeleteMarkers",
                        "shape": "DeleteMarkers",
                        "locationName": "DeleteMarker",
                        "documentation": null,
                        "typeExposed": "[DeleteMarkerEntry]",
                        "type": "List \"DeleteMarker\" DeleteMarkerEntry"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lovrCommonPrefixes",
                        "name": "_lovrCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "List \"CommonPrefixes\" CommonPrefix"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 20,
                "name": "ListObjectVersionsResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrIsTruncated",
                        "name": "_lovrIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria. If your results were truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting place in another request to return the rest of the results.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrKeyMarker",
                        "name": "_lovrKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "KeyMarker",
                        "documentation": "Marks the last Key returned in a truncated response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrVersionIdMarker",
                        "name": "_lovrVersionIdMarker",
                        "shape": "VersionIdMarker",
                        "locationName": "VersionIdMarker",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrNextKeyMarker",
                        "name": "_lovrNextKeyMarker",
                        "shape": "NextKeyMarker",
                        "locationName": "NextKeyMarker",
                        "documentation": "Use this value for the key marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrNextVersionIdMarker",
                        "name": "_lovrNextVersionIdMarker",
                        "shape": "NextVersionIdMarker",
                        "locationName": "NextVersionIdMarker",
                        "documentation": "Use this value for the next version id marker parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrName",
                        "name": "_lovrName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrPrefix",
                        "name": "_lovrPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrDelimiter",
                        "name": "_lovrDelimiter",
                        "shape": "Delimiter",
                        "locationName": "Delimiter",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrMaxKeys",
                        "name": "_lovrMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "MaxKeys",
                        "documentation": null,
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrEncodingType",
                        "name": "_lovrEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lovrCommonPrefixes",
                        "name": "_lovrCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "List \"CommonPrefixes\" CommonPrefix"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lovrDeleteMarkers",
                        "name": "_lovrDeleteMarkers",
                        "shape": "DeleteMarkers",
                        "locationName": "DeleteMarker",
                        "documentation": null,
                        "typeExposed": "[DeleteMarkerEntry]",
                        "type": "List \"DeleteMarker\" DeleteMarkerEntry"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrDelimiter",
                        "name": "_lovrDelimiter",
                        "shape": "Delimiter",
                        "locationName": "Delimiter",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrEncodingType",
                        "name": "_lovrEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrIsTruncated",
                        "name": "_lovrIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria. If your results were truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting place in another request to return the rest of the results.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrKeyMarker",
                        "name": "_lovrKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "KeyMarker",
                        "documentation": "Marks the last Key returned in a truncated response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrMaxKeys",
                        "name": "_lovrMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "MaxKeys",
                        "documentation": null,
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrName",
                        "name": "_lovrName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrNextKeyMarker",
                        "name": "_lovrNextKeyMarker",
                        "shape": "NextKeyMarker",
                        "locationName": "NextKeyMarker",
                        "documentation": "Use this value for the key marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrNextVersionIdMarker",
                        "name": "_lovrNextVersionIdMarker",
                        "shape": "NextVersionIdMarker",
                        "locationName": "NextVersionIdMarker",
                        "documentation": "Use this value for the next version id marker parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrPrefix",
                        "name": "_lovrPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovrVersionIdMarker",
                        "name": "_lovrVersionIdMarker",
                        "shape": "VersionIdMarker",
                        "locationName": "VersionIdMarker",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lovrVersions",
                        "name": "_lovrVersions",
                        "shape": "ObjectVersionList",
                        "locationName": "Version",
                        "documentation": null,
                        "typeExposed": "[ObjectVersion]",
                        "type": "List \"Version\" ObjectVersion"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/ListObjectVersions.html",
            "namespace": "Network.AWS.S3.ListObjectVersions",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": {
                "more": "lovrIsTruncated",
                "tokens": {
                    "p1": {
                        "input": "lovKeyMarker",
                        "output": "lovrNextKeyMarker"
                    },
                    "p2": {
                        "input": "lovVersionIdMarker",
                        "output": "lovrNextVersionIdMarker"
                    }
                },
                "negate": "isNothing p1 && isNothing p2",
                "type": "many"
            },
            "name": "ListObjectVersions",
            "method": "get",
            "documentation": "Returns metadata about all of the versions of objects in a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETVersion.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "listObjectVersions",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_lovBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lovBucket",
                        "name": "_lovBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "ListObjectVersions",
                "query": [
                    {
                        "value": "versions",
                        "type": "const"
                    },
                    {
                        "field": "_lovDelimiter",
                        "locationName": "delimiter",
                        "type": "field"
                    },
                    {
                        "field": "_lovEncodingType",
                        "locationName": "encoding-type",
                        "type": "field"
                    },
                    {
                        "field": "_lovKeyMarker",
                        "locationName": "key-marker",
                        "type": "field"
                    },
                    {
                        "field": "_lovMaxKeys",
                        "locationName": "max-keys",
                        "type": "field"
                    },
                    {
                        "field": "_lovPrefix",
                        "locationName": "prefix",
                        "type": "field"
                    },
                    {
                        "field": "_lovVersionIdMarker",
                        "locationName": "version-id-marker",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovDelimiter",
                        "name": "_lovDelimiter",
                        "shape": "Delimiter",
                        "locationName": "delimiter",
                        "documentation": "A delimiter is a character you use to group keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovEncodingType",
                        "name": "_lovEncodingType",
                        "shape": "EncodingType",
                        "locationName": "encoding-type",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovKeyMarker",
                        "name": "_lovKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "key-marker",
                        "documentation": "Specifies the key to start with when listing objects in a bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovMaxKeys",
                        "name": "_lovMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "max-keys",
                        "documentation": "Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovPrefix",
                        "name": "_lovPrefix",
                        "shape": "Prefix",
                        "locationName": "prefix",
                        "documentation": "Limits the response to keys that begin with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovVersionIdMarker",
                        "name": "_lovVersionIdMarker",
                        "shape": "VersionIdMarker",
                        "locationName": "version-id-marker",
                        "documentation": "Specifies the object version you want to start listing from.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lovBucket",
                        "name": "_lovBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovDelimiter",
                        "name": "_lovDelimiter",
                        "shape": "Delimiter",
                        "locationName": "delimiter",
                        "documentation": "A delimiter is a character you use to group keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovEncodingType",
                        "name": "_lovEncodingType",
                        "shape": "EncodingType",
                        "locationName": "encoding-type",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovKeyMarker",
                        "name": "_lovKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "key-marker",
                        "documentation": "Specifies the key to start with when listing objects in a bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovMaxKeys",
                        "name": "_lovMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "max-keys",
                        "documentation": "Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovPrefix",
                        "name": "_lovPrefix",
                        "shape": "Prefix",
                        "locationName": "prefix",
                        "documentation": "Limits the response to keys that begin with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lovVersionIdMarker",
                        "name": "_lovVersionIdMarker",
                        "shape": "VersionIdMarker",
                        "locationName": "version-id-marker",
                        "documentation": "Specifies the object version you want to start listing from.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 18,
                "ctor": "listObjectsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorIsTruncated",
                        "name": "_lorIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorMarker",
                        "name": "_lorMarker",
                        "shape": "Marker",
                        "locationName": "Marker",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorNextMarker",
                        "name": "_lorNextMarker",
                        "shape": "NextMarker",
                        "locationName": "NextMarker",
                        "documentation": "When response is truncated (the IsTruncated element value in the response is true), you can use the key name in this field as marker in the subsequent request to get next set of objects. Amazon S3 lists objects in alphabetical order Note: This element is returned only if you have delimiter request parameter specified. If response does not include the NextMaker and it is truncated, you can use the value of the last Key in the response as the marker in the subsequent request to get the next set of object keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lorContents",
                        "name": "_lorContents",
                        "shape": "ObjectList",
                        "locationName": "Contents",
                        "documentation": null,
                        "typeExposed": "[Object]",
                        "type": "List \"Contents\" Object"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorName",
                        "name": "_lorName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorPrefix",
                        "name": "_lorPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorDelimiter",
                        "name": "_lorDelimiter",
                        "shape": "Delimiter",
                        "locationName": "Delimiter",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorMaxKeys",
                        "name": "_lorMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "MaxKeys",
                        "documentation": null,
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lorCommonPrefixes",
                        "name": "_lorCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "List \"CommonPrefixes\" CommonPrefix"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorEncodingType",
                        "name": "_lorEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lorContents",
                        "name": "_lorContents",
                        "shape": "ObjectList",
                        "locationName": "Contents",
                        "documentation": null,
                        "typeExposed": "[Object]",
                        "type": "List \"Contents\" Object"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lorCommonPrefixes",
                        "name": "_lorCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "List \"CommonPrefixes\" CommonPrefix"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "name": "ListObjectsResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorIsTruncated",
                        "name": "_lorIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorMarker",
                        "name": "_lorMarker",
                        "shape": "Marker",
                        "locationName": "Marker",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorNextMarker",
                        "name": "_lorNextMarker",
                        "shape": "NextMarker",
                        "locationName": "NextMarker",
                        "documentation": "When response is truncated (the IsTruncated element value in the response is true), you can use the key name in this field as marker in the subsequent request to get next set of objects. Amazon S3 lists objects in alphabetical order Note: This element is returned only if you have delimiter request parameter specified. If response does not include the NextMaker and it is truncated, you can use the value of the last Key in the response as the marker in the subsequent request to get the next set of object keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorName",
                        "name": "_lorName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorPrefix",
                        "name": "_lorPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorDelimiter",
                        "name": "_lorDelimiter",
                        "shape": "Delimiter",
                        "locationName": "Delimiter",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorMaxKeys",
                        "name": "_lorMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "MaxKeys",
                        "documentation": null,
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorEncodingType",
                        "name": "_lorEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lorCommonPrefixes",
                        "name": "_lorCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "List \"CommonPrefixes\" CommonPrefix"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lorContents",
                        "name": "_lorContents",
                        "shape": "ObjectList",
                        "locationName": "Contents",
                        "documentation": null,
                        "typeExposed": "[Object]",
                        "type": "List \"Contents\" Object"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorDelimiter",
                        "name": "_lorDelimiter",
                        "shape": "Delimiter",
                        "locationName": "Delimiter",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorEncodingType",
                        "name": "_lorEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorIsTruncated",
                        "name": "_lorIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorMarker",
                        "name": "_lorMarker",
                        "shape": "Marker",
                        "locationName": "Marker",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorMaxKeys",
                        "name": "_lorMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "MaxKeys",
                        "documentation": null,
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorName",
                        "name": "_lorName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorNextMarker",
                        "name": "_lorNextMarker",
                        "shape": "NextMarker",
                        "locationName": "NextMarker",
                        "documentation": "When response is truncated (the IsTruncated element value in the response is true), you can use the key name in this field as marker in the subsequent request to get next set of objects. Amazon S3 lists objects in alphabetical order Note: This element is returned only if you have delimiter request parameter specified. If response does not include the NextMaker and it is truncated, you can use the value of the last Key in the response as the marker in the subsequent request to get the next set of object keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lorPrefix",
                        "name": "_lorPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/ListObjects.html",
            "namespace": "Network.AWS.S3.ListObjects",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": {
                "more": "lorIsTruncated",
                "token": {
                    "input": "loMarker",
                    "output": "lorNextMarker"
                },
                "type": "one"
            },
            "name": "ListObjects",
            "method": "get",
            "documentation": "Returns some or all (up to 1000) of the objects in a bucket. You can use the request parameters as selection criteria to return a subset of the objects in a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGET.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 15,
                "ctor": "listObjects",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_loBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "loBucket",
                        "name": "_loBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 14,
                "name": "ListObjects",
                "query": [
                    {
                        "field": "_loDelimiter",
                        "locationName": "delimiter",
                        "type": "field"
                    },
                    {
                        "field": "_loEncodingType",
                        "locationName": "encoding-type",
                        "type": "field"
                    },
                    {
                        "field": "_loMarker",
                        "locationName": "marker",
                        "type": "field"
                    },
                    {
                        "field": "_loMaxKeys",
                        "locationName": "max-keys",
                        "type": "field"
                    },
                    {
                        "field": "_loPrefix",
                        "locationName": "prefix",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "loDelimiter",
                        "name": "_loDelimiter",
                        "shape": "Delimiter",
                        "locationName": "delimiter",
                        "documentation": "A delimiter is a character you use to group keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "loEncodingType",
                        "name": "_loEncodingType",
                        "shape": "EncodingType",
                        "locationName": "encoding-type",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "loMarker",
                        "name": "_loMarker",
                        "shape": "Marker",
                        "locationName": "marker",
                        "documentation": "Specifies the key to start with when listing objects in a bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "loMaxKeys",
                        "name": "_loMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "max-keys",
                        "documentation": "Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "loPrefix",
                        "name": "_loPrefix",
                        "shape": "Prefix",
                        "locationName": "prefix",
                        "documentation": "Limits the response to keys that begin with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "loBucket",
                        "name": "_loBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "loDelimiter",
                        "name": "_loDelimiter",
                        "shape": "Delimiter",
                        "locationName": "delimiter",
                        "documentation": "A delimiter is a character you use to group keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "loEncodingType",
                        "name": "_loEncodingType",
                        "shape": "EncodingType",
                        "locationName": "encoding-type",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "loMarker",
                        "name": "_loMarker",
                        "shape": "Marker",
                        "locationName": "marker",
                        "documentation": "Specifies the key to start with when listing objects in a bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "loMaxKeys",
                        "name": "_loMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "max-keys",
                        "documentation": "Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "loPrefix",
                        "name": "_loPrefix",
                        "shape": "Prefix",
                        "locationName": "prefix",
                        "documentation": "Limits the response to keys that begin with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 24,
                "ctor": "listPartsResponse",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprBucket",
                        "name": "_lprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprKey",
                        "name": "_lprKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Object key for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprUploadId",
                        "name": "_lprUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "Upload ID identifying the multipart upload whose parts are being listed.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprPartNumberMarker",
                        "name": "_lprPartNumberMarker",
                        "shape": "PartNumberMarker",
                        "locationName": "PartNumberMarker",
                        "documentation": "Part number after which listing begins.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprNextPartNumberMarker",
                        "name": "_lprNextPartNumberMarker",
                        "shape": "NextPartNumberMarker",
                        "locationName": "NextPartNumberMarker",
                        "documentation": "When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprMaxParts",
                        "name": "_lprMaxParts",
                        "shape": "MaxParts",
                        "locationName": "MaxParts",
                        "documentation": "Maximum number of parts that were allowed in the response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprIsTruncated",
                        "name": "_lprIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "Indicates whether the returned list of parts is truncated.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lprParts",
                        "name": "_lprParts",
                        "shape": "Parts",
                        "locationName": "Part",
                        "documentation": null,
                        "typeExposed": "[Part]",
                        "type": "List \"Part\" Part"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprInitiator",
                        "name": "_lprInitiator",
                        "shape": "Initiator",
                        "locationName": "Initiator",
                        "documentation": "Identifies who initiated the multipart upload.",
                        "typeExposed": "Maybe Initiator",
                        "type": "Maybe Initiator"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprOwner",
                        "name": "_lprOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprStorageClass",
                        "name": "_lprStorageClass",
                        "shape": "StorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lprParts",
                        "name": "_lprParts",
                        "shape": "Parts",
                        "locationName": "Part",
                        "documentation": null,
                        "typeExposed": "[Part]",
                        "type": "List \"Part\" Part"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 21,
                "name": "ListPartsResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprBucket",
                        "name": "_lprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprKey",
                        "name": "_lprKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Object key for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprUploadId",
                        "name": "_lprUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "Upload ID identifying the multipart upload whose parts are being listed.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprPartNumberMarker",
                        "name": "_lprPartNumberMarker",
                        "shape": "PartNumberMarker",
                        "locationName": "PartNumberMarker",
                        "documentation": "Part number after which listing begins.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprNextPartNumberMarker",
                        "name": "_lprNextPartNumberMarker",
                        "shape": "NextPartNumberMarker",
                        "locationName": "NextPartNumberMarker",
                        "documentation": "When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprMaxParts",
                        "name": "_lprMaxParts",
                        "shape": "MaxParts",
                        "locationName": "MaxParts",
                        "documentation": "Maximum number of parts that were allowed in the response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprIsTruncated",
                        "name": "_lprIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "Indicates whether the returned list of parts is truncated.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprInitiator",
                        "name": "_lprInitiator",
                        "shape": "Initiator",
                        "locationName": "Initiator",
                        "documentation": "Identifies who initiated the multipart upload.",
                        "typeExposed": "Maybe Initiator",
                        "type": "Maybe Initiator"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprOwner",
                        "name": "_lprOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprStorageClass",
                        "name": "_lprStorageClass",
                        "shape": "StorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprBucket",
                        "name": "_lprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprInitiator",
                        "name": "_lprInitiator",
                        "shape": "Initiator",
                        "locationName": "Initiator",
                        "documentation": "Identifies who initiated the multipart upload.",
                        "typeExposed": "Maybe Initiator",
                        "type": "Maybe Initiator"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprIsTruncated",
                        "name": "_lprIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "Indicates whether the returned list of parts is truncated.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprKey",
                        "name": "_lprKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Object key for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprMaxParts",
                        "name": "_lprMaxParts",
                        "shape": "MaxParts",
                        "locationName": "MaxParts",
                        "documentation": "Maximum number of parts that were allowed in the response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprNextPartNumberMarker",
                        "name": "_lprNextPartNumberMarker",
                        "shape": "NextPartNumberMarker",
                        "locationName": "NextPartNumberMarker",
                        "documentation": "When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprOwner",
                        "name": "_lprOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprPartNumberMarker",
                        "name": "_lprPartNumberMarker",
                        "shape": "PartNumberMarker",
                        "locationName": "PartNumberMarker",
                        "documentation": "Part number after which listing begins.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List . _List",
                        "default": "\u003cerror\u003e",
                        "flattened": true,
                        "required": true,
                        "lens": "lprParts",
                        "name": "_lprParts",
                        "shape": "Parts",
                        "locationName": "Part",
                        "documentation": null,
                        "typeExposed": "[Part]",
                        "type": "List \"Part\" Part"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprStorageClass",
                        "name": "_lprStorageClass",
                        "shape": "StorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lprUploadId",
                        "name": "_lprUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "Upload ID identifying the multipart upload whose parts are being listed.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/ListParts.html",
            "namespace": "Network.AWS.S3.ListParts",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": {
                "more": "lprIsTruncated",
                "token": {
                    "input": "lpPartNumberMarker",
                    "output": "lprNextPartNumberMarker"
                },
                "type": "one"
            },
            "name": "ListParts",
            "method": "get",
            "documentation": "Lists the parts that have been uploaded for a specific multipart upload.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListParts.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "listParts",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_lpBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_lpKey",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lpBucket",
                        "name": "_lpBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lpKey",
                        "name": "_lpKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lpUploadId",
                        "name": "_lpUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": "Upload ID identifying the multipart upload whose parts are being listed.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "ListParts",
                "query": [
                    {
                        "field": "_lpMaxParts",
                        "locationName": "max-parts",
                        "type": "field"
                    },
                    {
                        "field": "_lpPartNumberMarker",
                        "locationName": "part-number-marker",
                        "type": "field"
                    },
                    {
                        "field": "_lpUploadId",
                        "locationName": "uploadId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lpMaxParts",
                        "name": "_lpMaxParts",
                        "shape": "MaxParts",
                        "locationName": "max-parts",
                        "documentation": "Sets the maximum number of parts to return.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lpPartNumberMarker",
                        "name": "_lpPartNumberMarker",
                        "shape": "PartNumberMarker",
                        "locationName": "part-number-marker",
                        "documentation": "Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lpBucket",
                        "name": "_lpBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lpKey",
                        "name": "_lpKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lpMaxParts",
                        "name": "_lpMaxParts",
                        "shape": "MaxParts",
                        "locationName": "max-parts",
                        "documentation": "Sets the maximum number of parts to return.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lpPartNumberMarker",
                        "name": "_lpPartNumberMarker",
                        "shape": "PartNumberMarker",
                        "locationName": "part-number-marker",
                        "documentation": "Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lpUploadId",
                        "name": "_lpUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": "Upload ID identifying the multipart upload whose parts are being listed.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putBucketAclResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutBucketAclResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketAcl.html",
            "namespace": "Network.AWS.S3.PutBucketAcl",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "PutBucketAcl",
            "method": "put",
            "documentation": "Sets the permissions on a bucket using access control lists (ACL).",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTacl.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 23,
                "ctor": "putBucketAcl",
                "headerPad": 25,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaAccessControlPolicy",
                        "name": "_pbaAccessControlPolicy",
                        "shape": "AccessControlPolicy",
                        "locationName": "AccessControlPolicy",
                        "documentation": null,
                        "typeExposed": "Maybe AccessControlPolicy",
                        "type": "Maybe AccessControlPolicy"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbaBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "pbaAccessControlPolicy",
                    "name": "_pbaAccessControlPolicy",
                    "shape": "AccessControlPolicy",
                    "locationName": "AccessControlPolicy",
                    "documentation": null,
                    "typeExposed": "Maybe AccessControlPolicy",
                    "type": "Maybe AccessControlPolicy"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbaBucket",
                        "name": "_pbaBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_pbaACL",
                        "locationName": "x-amz-acl",
                        "type": "field"
                    },
                    {
                        "field": "_pbaContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_pbaGrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "type": "field"
                    },
                    {
                        "field": "_pbaGrantRead",
                        "locationName": "x-amz-grant-read",
                        "type": "field"
                    },
                    {
                        "field": "_pbaGrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "type": "field"
                    },
                    {
                        "field": "_pbaGrantWrite",
                        "locationName": "x-amz-grant-write",
                        "type": "field"
                    },
                    {
                        "field": "_pbaGrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "type": "field"
                    }
                ],
                "contentPad": 20,
                "queryPad": 0,
                "name": "PutBucketAcl",
                "query": [
                    {
                        "value": "acl",
                        "type": "const"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaACL",
                        "name": "_pbaACL",
                        "shape": "BucketCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaAccessControlPolicy",
                        "name": "_pbaAccessControlPolicy",
                        "shape": "AccessControlPolicy",
                        "locationName": "AccessControlPolicy",
                        "documentation": null,
                        "typeExposed": "Maybe AccessControlPolicy",
                        "type": "Maybe AccessControlPolicy"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaContentMD5",
                        "name": "_pbaContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaGrantFullControl",
                        "name": "_pbaGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaGrantRead",
                        "name": "_pbaGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to list the objects in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaGrantReadACP",
                        "name": "_pbaGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the bucket ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaGrantWrite",
                        "name": "_pbaGrantWrite",
                        "shape": "GrantWrite",
                        "locationName": "x-amz-grant-write",
                        "documentation": "Allows grantee to create, overwrite, and delete any object in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaGrantWriteACP",
                        "name": "_pbaGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaACL",
                        "name": "_pbaACL",
                        "shape": "BucketCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaAccessControlPolicy",
                        "name": "_pbaAccessControlPolicy",
                        "shape": "AccessControlPolicy",
                        "locationName": "AccessControlPolicy",
                        "documentation": null,
                        "typeExposed": "Maybe AccessControlPolicy",
                        "type": "Maybe AccessControlPolicy"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbaBucket",
                        "name": "_pbaBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaContentMD5",
                        "name": "_pbaContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaGrantFullControl",
                        "name": "_pbaGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaGrantRead",
                        "name": "_pbaGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to list the objects in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaGrantReadACP",
                        "name": "_pbaGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the bucket ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaGrantWrite",
                        "name": "_pbaGrantWrite",
                        "shape": "GrantWrite",
                        "locationName": "x-amz-grant-write",
                        "documentation": "Allows grantee to create, overwrite, and delete any object in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbaGrantWriteACP",
                        "name": "_pbaGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putBucketCorsResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutBucketCorsResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketCors.html",
            "namespace": "Network.AWS.S3.PutBucketCors",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "PutBucketCors",
            "method": "put",
            "documentation": "Sets the cors configuration for a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTcors.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 21,
                "ctor": "putBucketCors",
                "headerPad": 12,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbcCORSConfiguration",
                        "name": "_pbcCORSConfiguration",
                        "shape": "CORSConfiguration",
                        "locationName": "CORSConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CORSConfiguration",
                        "type": "Maybe CORSConfiguration"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbcBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "pbcCORSConfiguration",
                    "name": "_pbcCORSConfiguration",
                    "shape": "CORSConfiguration",
                    "locationName": "CORSConfiguration",
                    "documentation": null,
                    "typeExposed": "Maybe CORSConfiguration",
                    "type": "Maybe CORSConfiguration"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbcBucket",
                        "name": "_pbcBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_pbcContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "contentPad": 18,
                "queryPad": 0,
                "name": "PutBucketCors",
                "query": [
                    {
                        "value": "cors",
                        "type": "const"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbcCORSConfiguration",
                        "name": "_pbcCORSConfiguration",
                        "shape": "CORSConfiguration",
                        "locationName": "CORSConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CORSConfiguration",
                        "type": "Maybe CORSConfiguration"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbcContentMD5",
                        "name": "_pbcContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbcBucket",
                        "name": "_pbcBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbcCORSConfiguration",
                        "name": "_pbcCORSConfiguration",
                        "shape": "CORSConfiguration",
                        "locationName": "CORSConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CORSConfiguration",
                        "type": "Maybe CORSConfiguration"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbcContentMD5",
                        "name": "_pbcContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putBucketLifecycleResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutBucketLifecycleResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketLifecycle.html",
            "namespace": "Network.AWS.S3.PutBucketLifecycle",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "PutBucketLifecycle",
            "method": "put",
            "documentation": "Sets lifecycle configuration for your bucket. If a lifecycle configuration exists, it replaces it.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 27,
                "ctor": "putBucketLifecycle",
                "headerPad": 12,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbl1LifecycleConfiguration",
                        "name": "_pbl1LifecycleConfiguration",
                        "shape": "LifecycleConfiguration",
                        "locationName": "LifecycleConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe LifecycleConfiguration",
                        "type": "Maybe LifecycleConfiguration"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbl1Bucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "pbl1LifecycleConfiguration",
                    "name": "_pbl1LifecycleConfiguration",
                    "shape": "LifecycleConfiguration",
                    "locationName": "LifecycleConfiguration",
                    "documentation": null,
                    "typeExposed": "Maybe LifecycleConfiguration",
                    "type": "Maybe LifecycleConfiguration"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbl1Bucket",
                        "name": "_pbl1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_pbl1ContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "contentPad": 23,
                "queryPad": 0,
                "name": "PutBucketLifecycle",
                "query": [
                    {
                        "value": "lifecycle",
                        "type": "const"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbl1ContentMD5",
                        "name": "_pbl1ContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbl1LifecycleConfiguration",
                        "name": "_pbl1LifecycleConfiguration",
                        "shape": "LifecycleConfiguration",
                        "locationName": "LifecycleConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe LifecycleConfiguration",
                        "type": "Maybe LifecycleConfiguration"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbl1Bucket",
                        "name": "_pbl1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbl1ContentMD5",
                        "name": "_pbl1ContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbl1LifecycleConfiguration",
                        "name": "_pbl1LifecycleConfiguration",
                        "shape": "LifecycleConfiguration",
                        "locationName": "LifecycleConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe LifecycleConfiguration",
                        "type": "Maybe LifecycleConfiguration"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putBucketLoggingResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutBucketLoggingResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketLogging.html",
            "namespace": "Network.AWS.S3.PutBucketLogging",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "PutBucketLogging",
            "method": "put",
            "documentation": "Set the logging parameters for a bucket and to specify permissions for who can view and modify the logging parameters. To set the logging status of a bucket, you must be the bucket owner.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTlogging.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 23,
                "ctor": "putBucketLogging",
                "headerPad": 12,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pblBucketLoggingStatus",
                        "name": "_pblBucketLoggingStatus",
                        "shape": "BucketLoggingStatus",
                        "locationName": "BucketLoggingStatus",
                        "documentation": null,
                        "typeExposed": "BucketLoggingStatus",
                        "type": "BucketLoggingStatus"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pblBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "pblBucketLoggingStatus",
                    "name": "_pblBucketLoggingStatus",
                    "shape": "BucketLoggingStatus",
                    "locationName": "BucketLoggingStatus",
                    "documentation": null,
                    "typeExposed": "BucketLoggingStatus",
                    "type": "BucketLoggingStatus"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pblBucket",
                        "name": "_pblBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pblBucketLoggingStatus",
                        "name": "_pblBucketLoggingStatus",
                        "shape": "BucketLoggingStatus",
                        "locationName": "BucketLoggingStatus",
                        "documentation": null,
                        "typeExposed": "BucketLoggingStatus",
                        "type": "BucketLoggingStatus"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_pblContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "contentPad": 20,
                "queryPad": 0,
                "name": "PutBucketLogging",
                "query": [
                    {
                        "value": "logging",
                        "type": "const"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pblContentMD5",
                        "name": "_pblContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pblBucket",
                        "name": "_pblBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pblBucketLoggingStatus",
                        "name": "_pblBucketLoggingStatus",
                        "shape": "BucketLoggingStatus",
                        "locationName": "BucketLoggingStatus",
                        "documentation": null,
                        "typeExposed": "BucketLoggingStatus",
                        "type": "BucketLoggingStatus"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pblContentMD5",
                        "name": "_pblContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putBucketNotificationResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutBucketNotificationResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketNotification.html",
            "namespace": "Network.AWS.S3.PutBucketNotification",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "PutBucketNotification",
            "method": "put",
            "documentation": "Enables notifications of specified events for a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTnotification.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 29,
                "ctor": "putBucketNotification",
                "headerPad": 12,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbnNotificationConfiguration",
                        "name": "_pbnNotificationConfiguration",
                        "shape": "NotificationConfiguration",
                        "locationName": "NotificationConfiguration",
                        "documentation": null,
                        "typeExposed": "NotificationConfiguration",
                        "type": "NotificationConfiguration"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbnBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "pbnNotificationConfiguration",
                    "name": "_pbnNotificationConfiguration",
                    "shape": "NotificationConfiguration",
                    "locationName": "NotificationConfiguration",
                    "documentation": null,
                    "typeExposed": "NotificationConfiguration",
                    "type": "NotificationConfiguration"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbnBucket",
                        "name": "_pbnBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbnNotificationConfiguration",
                        "name": "_pbnNotificationConfiguration",
                        "shape": "NotificationConfiguration",
                        "locationName": "NotificationConfiguration",
                        "documentation": null,
                        "typeExposed": "NotificationConfiguration",
                        "type": "NotificationConfiguration"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_pbnContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "contentPad": 26,
                "queryPad": 0,
                "name": "PutBucketNotification",
                "query": [
                    {
                        "value": "notification",
                        "type": "const"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbnContentMD5",
                        "name": "_pbnContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbnBucket",
                        "name": "_pbnBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbnContentMD5",
                        "name": "_pbnContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbnNotificationConfiguration",
                        "name": "_pbnNotificationConfiguration",
                        "shape": "NotificationConfiguration",
                        "locationName": "NotificationConfiguration",
                        "documentation": null,
                        "typeExposed": "NotificationConfiguration",
                        "type": "NotificationConfiguration"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putBucketPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutBucketPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketPolicy.html",
            "namespace": "Network.AWS.S3.PutBucketPolicy",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "PutBucketPolicy",
            "method": "put",
            "documentation": "Replaces a policy on a bucket. If the bucket already has a policy, the one in this request completely replaces it.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTpolicy.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 14,
                "ctor": "putBucketPolicy",
                "headerPad": 12,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbpPolicy",
                        "name": "_pbpPolicy",
                        "shape": "Policy",
                        "locationName": "Policy",
                        "documentation": "The bucket policy as a JSON document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbpBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "pbpPolicy",
                    "name": "_pbpPolicy",
                    "shape": "Policy",
                    "locationName": "Policy",
                    "documentation": "The bucket policy as a JSON document.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbpBucket",
                        "name": "_pbpBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbpPolicy",
                        "name": "_pbpPolicy",
                        "shape": "Policy",
                        "locationName": "Policy",
                        "documentation": "The bucket policy as a JSON document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_pbpContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "contentPad": 7,
                "queryPad": 0,
                "name": "PutBucketPolicy",
                "query": [
                    {
                        "value": "policy",
                        "type": "const"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbpContentMD5",
                        "name": "_pbpContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbpBucket",
                        "name": "_pbpBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbpContentMD5",
                        "name": "_pbpContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbpPolicy",
                        "name": "_pbpPolicy",
                        "shape": "Policy",
                        "locationName": "Policy",
                        "documentation": "The bucket policy as a JSON document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putBucketRequestPaymentResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutBucketRequestPaymentResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketRequestPayment.html",
            "namespace": "Network.AWS.S3.PutBucketRequestPayment",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "PutBucketRequestPayment",
            "method": "put",
            "documentation": "Sets the request payment configuration for a bucket. By default, the bucket owner pays for downloads from the bucket. This configuration parameter enables the bucket owner (only) to specify that the person requesting the download will be charged for the download.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTrequestPaymentPUT.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 32,
                "ctor": "putBucketRequestPayment",
                "headerPad": 12,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbrpRequestPaymentConfiguration",
                        "name": "_pbrpRequestPaymentConfiguration",
                        "shape": "RequestPaymentConfiguration",
                        "locationName": "RequestPaymentConfiguration",
                        "documentation": null,
                        "typeExposed": "RequestPaymentConfiguration",
                        "type": "RequestPaymentConfiguration"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbrpBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "pbrpRequestPaymentConfiguration",
                    "name": "_pbrpRequestPaymentConfiguration",
                    "shape": "RequestPaymentConfiguration",
                    "locationName": "RequestPaymentConfiguration",
                    "documentation": null,
                    "typeExposed": "RequestPaymentConfiguration",
                    "type": "RequestPaymentConfiguration"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbrpBucket",
                        "name": "_pbrpBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbrpRequestPaymentConfiguration",
                        "name": "_pbrpRequestPaymentConfiguration",
                        "shape": "RequestPaymentConfiguration",
                        "locationName": "RequestPaymentConfiguration",
                        "documentation": null,
                        "typeExposed": "RequestPaymentConfiguration",
                        "type": "RequestPaymentConfiguration"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_pbrpContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "contentPad": 28,
                "queryPad": 0,
                "name": "PutBucketRequestPayment",
                "query": [
                    {
                        "value": "requestPayment",
                        "type": "const"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbrpContentMD5",
                        "name": "_pbrpContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbrpBucket",
                        "name": "_pbrpBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbrpContentMD5",
                        "name": "_pbrpContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbrpRequestPaymentConfiguration",
                        "name": "_pbrpRequestPaymentConfiguration",
                        "shape": "RequestPaymentConfiguration",
                        "locationName": "RequestPaymentConfiguration",
                        "documentation": null,
                        "typeExposed": "RequestPaymentConfiguration",
                        "type": "RequestPaymentConfiguration"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putBucketTaggingResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutBucketTaggingResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketTagging.html",
            "namespace": "Network.AWS.S3.PutBucketTagging",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "PutBucketTagging",
            "method": "put",
            "documentation": "Sets the tags for a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTtagging.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 14,
                "ctor": "putBucketTagging",
                "headerPad": 12,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbtTagging",
                        "name": "_pbtTagging",
                        "shape": "Tagging",
                        "locationName": "Tagging",
                        "documentation": null,
                        "typeExposed": "Tagging",
                        "type": "Tagging"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbtBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "pbtTagging",
                    "name": "_pbtTagging",
                    "shape": "Tagging",
                    "locationName": "Tagging",
                    "documentation": null,
                    "typeExposed": "Tagging",
                    "type": "Tagging"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbtBucket",
                        "name": "_pbtBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbtTagging",
                        "name": "_pbtTagging",
                        "shape": "Tagging",
                        "locationName": "Tagging",
                        "documentation": null,
                        "typeExposed": "Tagging",
                        "type": "Tagging"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_pbtContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "contentPad": 8,
                "queryPad": 0,
                "name": "PutBucketTagging",
                "query": [
                    {
                        "value": "tagging",
                        "type": "const"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbtContentMD5",
                        "name": "_pbtContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbtBucket",
                        "name": "_pbtBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbtContentMD5",
                        "name": "_pbtContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbtTagging",
                        "name": "_pbtTagging",
                        "shape": "Tagging",
                        "locationName": "Tagging",
                        "documentation": null,
                        "typeExposed": "Tagging",
                        "type": "Tagging"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putBucketVersioningResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutBucketVersioningResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketVersioning.html",
            "namespace": "Network.AWS.S3.PutBucketVersioning",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "PutBucketVersioning",
            "method": "put",
            "documentation": "Sets the versioning state of an existing bucket. To set the versioning state, you must be the bucket owner.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 27,
                "ctor": "putBucketVersioning",
                "headerPad": 12,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbvVersioningConfiguration",
                        "name": "_pbvVersioningConfiguration",
                        "shape": "VersioningConfiguration",
                        "locationName": "VersioningConfiguration",
                        "documentation": null,
                        "typeExposed": "VersioningConfiguration",
                        "type": "VersioningConfiguration"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbvBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "pbvVersioningConfiguration",
                    "name": "_pbvVersioningConfiguration",
                    "shape": "VersioningConfiguration",
                    "locationName": "VersioningConfiguration",
                    "documentation": null,
                    "typeExposed": "VersioningConfiguration",
                    "type": "VersioningConfiguration"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbvBucket",
                        "name": "_pbvBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbvVersioningConfiguration",
                        "name": "_pbvVersioningConfiguration",
                        "shape": "VersioningConfiguration",
                        "locationName": "VersioningConfiguration",
                        "documentation": null,
                        "typeExposed": "VersioningConfiguration",
                        "type": "VersioningConfiguration"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_pbvContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_pbvMFA",
                        "locationName": "x-amz-mfa",
                        "type": "field"
                    }
                ],
                "contentPad": 24,
                "queryPad": 0,
                "name": "PutBucketVersioning",
                "query": [
                    {
                        "value": "versioning",
                        "type": "const"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbvContentMD5",
                        "name": "_pbvContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbvMFA",
                        "name": "_pbvMFA",
                        "shape": "MFA",
                        "locationName": "x-amz-mfa",
                        "documentation": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbvBucket",
                        "name": "_pbvBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbvContentMD5",
                        "name": "_pbvContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbvMFA",
                        "name": "_pbvMFA",
                        "shape": "MFA",
                        "locationName": "x-amz-mfa",
                        "documentation": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbvVersioningConfiguration",
                        "name": "_pbvVersioningConfiguration",
                        "shape": "VersioningConfiguration",
                        "locationName": "VersioningConfiguration",
                        "documentation": null,
                        "typeExposed": "VersioningConfiguration",
                        "type": "VersioningConfiguration"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putBucketWebsiteResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutBucketWebsiteResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketWebsite.html",
            "namespace": "Network.AWS.S3.PutBucketWebsite",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "PutBucketWebsite",
            "method": "put",
            "documentation": "Set the website configuration for a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTwebsite.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 24,
                "ctor": "putBucketWebsite",
                "headerPad": 12,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbwWebsiteConfiguration",
                        "name": "_pbwWebsiteConfiguration",
                        "shape": "WebsiteConfiguration",
                        "locationName": "WebsiteConfiguration",
                        "documentation": null,
                        "typeExposed": "WebsiteConfiguration",
                        "type": "WebsiteConfiguration"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbwBucket",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "pbwWebsiteConfiguration",
                    "name": "_pbwWebsiteConfiguration",
                    "shape": "WebsiteConfiguration",
                    "locationName": "WebsiteConfiguration",
                    "documentation": null,
                    "typeExposed": "WebsiteConfiguration",
                    "type": "WebsiteConfiguration"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbwBucket",
                        "name": "_pbwBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbwWebsiteConfiguration",
                        "name": "_pbwWebsiteConfiguration",
                        "shape": "WebsiteConfiguration",
                        "locationName": "WebsiteConfiguration",
                        "documentation": null,
                        "typeExposed": "WebsiteConfiguration",
                        "type": "WebsiteConfiguration"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_pbwContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "contentPad": 21,
                "queryPad": 0,
                "name": "PutBucketWebsite",
                "query": [
                    {
                        "value": "website",
                        "type": "const"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbwContentMD5",
                        "name": "_pbwContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbwBucket",
                        "name": "_pbwBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "pbwContentMD5",
                        "name": "_pbwContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pbwWebsiteConfiguration",
                        "name": "_pbwWebsiteConfiguration",
                        "shape": "WebsiteConfiguration",
                        "locationName": "WebsiteConfiguration",
                        "documentation": null,
                        "typeExposed": "WebsiteConfiguration",
                        "type": "WebsiteConfiguration"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 24,
                "ctor": "putObjectResponse",
                "headerPad": 48,
                "contents": [],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_porExpiration",
                        "locationName": "x-amz-expiration",
                        "type": "field"
                    },
                    {
                        "field": "_porETag",
                        "locationName": "ETag",
                        "type": "field"
                    },
                    {
                        "field": "_porServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "type": "field"
                    },
                    {
                        "field": "_porVersionId",
                        "locationName": "x-amz-version-id",
                        "type": "field"
                    },
                    {
                        "field": "_porSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_porSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_porSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 0,
                "name": "PutObjectResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": true,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "porExpiration",
                        "name": "_porExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured, this will contain the expiration date (expiry-date) and rule ID (rule-id). The value of rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "porETag",
                        "name": "_porETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag for the uploaded object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "porServerSideEncryption",
                        "name": "_porServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "porVersionId",
                        "name": "_porVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "porSSECustomerAlgorithm",
                        "name": "_porSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "porSSECustomerKeyMD5",
                        "name": "_porSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "porSSEKMSKeyId",
                        "name": "_porSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "porETag",
                        "name": "_porETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag for the uploaded object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "porExpiration",
                        "name": "_porExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured, this will contain the expiration date (expiry-date) and rule ID (rule-id). The value of rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "porSSECustomerAlgorithm",
                        "name": "_porSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "porSSECustomerKeyMD5",
                        "name": "_porSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "porSSEKMSKeyId",
                        "name": "_porSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "porServerSideEncryption",
                        "name": "_porServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "porVersionId",
                        "name": "_porVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/PutObject.html",
            "namespace": "Network.AWS.S3.PutObject",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "PutObject",
            "method": "put",
            "documentation": "Adds an object to a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUT.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": true,
                "style": "body-headers",
                "fieldPad": 26,
                "ctor": "putObject",
                "headerPad": 48,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poBody",
                        "name": "_poBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": "Object data.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_poBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_poKey",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "poBody",
                    "name": "_poBody",
                    "shape": "Body",
                    "locationName": "Body",
                    "documentation": "Object data.",
                    "typeExposed": "Maybe Base64",
                    "type": "Maybe Base64"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "poBucket",
                        "name": "_poBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "poKey",
                        "name": "_poKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_poACL",
                        "locationName": "x-amz-acl",
                        "type": "field"
                    },
                    {
                        "field": "_poCacheControl",
                        "locationName": "Cache-Control",
                        "type": "field"
                    },
                    {
                        "field": "_poContentDisposition",
                        "locationName": "Content-Disposition",
                        "type": "field"
                    },
                    {
                        "field": "_poContentEncoding",
                        "locationName": "Content-Encoding",
                        "type": "field"
                    },
                    {
                        "field": "_poContentLanguage",
                        "locationName": "Content-Language",
                        "type": "field"
                    },
                    {
                        "field": "_poContentLength",
                        "locationName": "Content-Length",
                        "type": "field"
                    },
                    {
                        "field": "_poContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_poContentType",
                        "locationName": "Content-Type",
                        "type": "field"
                    },
                    {
                        "field": "_poExpires",
                        "locationName": "Expires",
                        "type": "field"
                    },
                    {
                        "field": "_poGrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "type": "field"
                    },
                    {
                        "field": "_poGrantRead",
                        "locationName": "x-amz-grant-read",
                        "type": "field"
                    },
                    {
                        "field": "_poGrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "type": "field"
                    },
                    {
                        "field": "_poGrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "type": "field"
                    },
                    {
                        "field": "_poMetadata",
                        "locationName": "x-amz-meta-",
                        "type": "field"
                    },
                    {
                        "field": "_poServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "type": "field"
                    },
                    {
                        "field": "_poStorageClass",
                        "locationName": "x-amz-storage-class",
                        "type": "field"
                    },
                    {
                        "field": "_poWebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "type": "field"
                    },
                    {
                        "field": "_poSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_poSSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_poSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_poSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 5,
                "queryPad": 0,
                "name": "PutObject",
                "query": [],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poACL",
                        "name": "_poACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poBody",
                        "name": "_poBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": "Object data.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poCacheControl",
                        "name": "_poCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poContentDisposition",
                        "name": "_poContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poContentEncoding",
                        "name": "_poContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poContentLanguage",
                        "name": "_poContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poContentLength",
                        "name": "_poContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poContentMD5",
                        "name": "_poContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poContentType",
                        "name": "_poContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poExpires",
                        "name": "_poExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poGrantFullControl",
                        "name": "_poGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poGrantRead",
                        "name": "_poGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to read the object data and its metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poGrantReadACP",
                        "name": "_poGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the object ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poGrantWriteACP",
                        "name": "_poGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "poMetadata",
                        "name": "_poMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map \"entry\" Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poServerSideEncryption",
                        "name": "_poServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poStorageClass",
                        "name": "_poStorageClass",
                        "shape": "StorageClass",
                        "locationName": "x-amz-storage-class",
                        "documentation": "The type of storage to use for the object. Defaults to 'STANDARD'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poWebsiteRedirectLocation",
                        "name": "_poWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poSSECustomerAlgorithm",
                        "name": "_poSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poSSECustomerKey",
                        "name": "_poSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poSSECustomerKeyMD5",
                        "name": "_poSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poSSEKMSKeyId",
                        "name": "_poSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "Specifies the AWS KMS key ID to use for object encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poACL",
                        "name": "_poACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poBody",
                        "name": "_poBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": "Object data.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "poBucket",
                        "name": "_poBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poCacheControl",
                        "name": "_poCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poContentDisposition",
                        "name": "_poContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poContentEncoding",
                        "name": "_poContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poContentLanguage",
                        "name": "_poContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poContentLength",
                        "name": "_poContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poContentMD5",
                        "name": "_poContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poContentType",
                        "name": "_poContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poExpires",
                        "name": "_poExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poGrantFullControl",
                        "name": "_poGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poGrantRead",
                        "name": "_poGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to read the object data and its metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poGrantReadACP",
                        "name": "_poGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the object ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poGrantWriteACP",
                        "name": "_poGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "poKey",
                        "name": "_poKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "flattened": false,
                        "required": true,
                        "lens": "poMetadata",
                        "name": "_poMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map \"entry\" Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poSSECustomerAlgorithm",
                        "name": "_poSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poSSECustomerKey",
                        "name": "_poSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poSSECustomerKeyMD5",
                        "name": "_poSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poSSEKMSKeyId",
                        "name": "_poSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "Specifies the AWS KMS key ID to use for object encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poServerSideEncryption",
                        "name": "_poServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poStorageClass",
                        "name": "_poStorageClass",
                        "shape": "StorageClass",
                        "locationName": "x-amz-storage-class",
                        "documentation": "The type of storage to use for the object. Defaults to 'STANDARD'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poWebsiteRedirectLocation",
                        "name": "_poWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putObjectAclResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutObjectAclResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/PutObjectAcl.html",
            "namespace": "Network.AWS.S3.PutObjectAcl",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "PutObjectAcl",
            "method": "put",
            "documentation": "uses the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUTacl.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 23,
                "ctor": "putObjectAcl",
                "headerPad": 25,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaAccessControlPolicy",
                        "name": "_poaAccessControlPolicy",
                        "shape": "AccessControlPolicy",
                        "locationName": "AccessControlPolicy",
                        "documentation": null,
                        "typeExposed": "Maybe AccessControlPolicy",
                        "type": "Maybe AccessControlPolicy"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_poaBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_poaKey",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "poaAccessControlPolicy",
                    "name": "_poaAccessControlPolicy",
                    "shape": "AccessControlPolicy",
                    "locationName": "AccessControlPolicy",
                    "documentation": null,
                    "typeExposed": "Maybe AccessControlPolicy",
                    "type": "Maybe AccessControlPolicy"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "poaBucket",
                        "name": "_poaBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "poaKey",
                        "name": "_poaKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_poaACL",
                        "locationName": "x-amz-acl",
                        "type": "field"
                    },
                    {
                        "field": "_poaContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_poaGrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "type": "field"
                    },
                    {
                        "field": "_poaGrantRead",
                        "locationName": "x-amz-grant-read",
                        "type": "field"
                    },
                    {
                        "field": "_poaGrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "type": "field"
                    },
                    {
                        "field": "_poaGrantWrite",
                        "locationName": "x-amz-grant-write",
                        "type": "field"
                    },
                    {
                        "field": "_poaGrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "type": "field"
                    }
                ],
                "contentPad": 20,
                "queryPad": 0,
                "name": "PutObjectAcl",
                "query": [
                    {
                        "value": "acl",
                        "type": "const"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaACL",
                        "name": "_poaACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaAccessControlPolicy",
                        "name": "_poaAccessControlPolicy",
                        "shape": "AccessControlPolicy",
                        "locationName": "AccessControlPolicy",
                        "documentation": null,
                        "typeExposed": "Maybe AccessControlPolicy",
                        "type": "Maybe AccessControlPolicy"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaContentMD5",
                        "name": "_poaContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaGrantFullControl",
                        "name": "_poaGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaGrantRead",
                        "name": "_poaGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to list the objects in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaGrantReadACP",
                        "name": "_poaGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the bucket ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaGrantWrite",
                        "name": "_poaGrantWrite",
                        "shape": "GrantWrite",
                        "locationName": "x-amz-grant-write",
                        "documentation": "Allows grantee to create, overwrite, and delete any object in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaGrantWriteACP",
                        "name": "_poaGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaACL",
                        "name": "_poaACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaAccessControlPolicy",
                        "name": "_poaAccessControlPolicy",
                        "shape": "AccessControlPolicy",
                        "locationName": "AccessControlPolicy",
                        "documentation": null,
                        "typeExposed": "Maybe AccessControlPolicy",
                        "type": "Maybe AccessControlPolicy"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "poaBucket",
                        "name": "_poaBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaContentMD5",
                        "name": "_poaContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaGrantFullControl",
                        "name": "_poaGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaGrantRead",
                        "name": "_poaGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to list the objects in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaGrantReadACP",
                        "name": "_poaGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the bucket ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaGrantWrite",
                        "name": "_poaGrantWrite",
                        "shape": "GrantWrite",
                        "locationName": "x-amz-grant-write",
                        "documentation": "Allows grantee to create, overwrite, and delete any object in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "poaGrantWriteACP",
                        "name": "_poaGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "poaKey",
                        "name": "_poaKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "restoreObjectResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "RestoreObjectResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/RestoreObject.html",
            "namespace": "Network.AWS.S3.RestoreObject",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "RestoreObject",
            "method": "post",
            "documentation": "Restores an archived copy of an object back into Amazon S3",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectRestore.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 17,
                "ctor": "restoreObject",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "roRestoreRequest",
                        "name": "_roRestoreRequest",
                        "shape": "RestoreRequest",
                        "locationName": "RestoreRequest",
                        "documentation": null,
                        "typeExposed": "Maybe RestoreRequest",
                        "type": "Maybe RestoreRequest"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_roBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_roKey",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "roRestoreRequest",
                    "name": "_roRestoreRequest",
                    "shape": "RestoreRequest",
                    "locationName": "RestoreRequest",
                    "documentation": null,
                    "typeExposed": "Maybe RestoreRequest",
                    "type": "Maybe RestoreRequest"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "roBucket",
                        "name": "_roBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "roKey",
                        "name": "_roKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 15,
                "queryPad": 10,
                "name": "RestoreObject",
                "query": [
                    {
                        "value": "restore",
                        "type": "const"
                    },
                    {
                        "field": "_roVersionId",
                        "locationName": "versionId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "roVersionId",
                        "name": "_roVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "roRestoreRequest",
                        "name": "_roRestoreRequest",
                        "shape": "RestoreRequest",
                        "locationName": "RestoreRequest",
                        "documentation": null,
                        "typeExposed": "Maybe RestoreRequest",
                        "type": "Maybe RestoreRequest"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "roBucket",
                        "name": "_roBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "roKey",
                        "name": "_roKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "roRestoreRequest",
                        "name": "_roRestoreRequest",
                        "shape": "RestoreRequest",
                        "locationName": "RestoreRequest",
                        "documentation": null,
                        "typeExposed": "Maybe RestoreRequest",
                        "type": "Maybe RestoreRequest"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "roVersionId",
                        "name": "_roVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 24,
                "ctor": "uploadPartResponse",
                "headerPad": 48,
                "contents": [],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_uprServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "type": "field"
                    },
                    {
                        "field": "_uprETag",
                        "locationName": "ETag",
                        "type": "field"
                    },
                    {
                        "field": "_uprSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_uprSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_uprSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 0,
                "name": "UploadPartResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": true,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "uprServerSideEncryption",
                        "name": "_uprServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "uprETag",
                        "name": "_uprETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag for the uploaded object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "uprSSECustomerAlgorithm",
                        "name": "_uprSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "uprSSECustomerKeyMD5",
                        "name": "_uprSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "uprSSEKMSKeyId",
                        "name": "_uprSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "uprETag",
                        "name": "_uprETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag for the uploaded object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "uprSSECustomerAlgorithm",
                        "name": "_uprSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "uprSSECustomerKeyMD5",
                        "name": "_uprSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "uprSSEKMSKeyId",
                        "name": "_uprSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "uprServerSideEncryption",
                        "name": "_uprServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/UploadPart.html",
            "namespace": "Network.AWS.S3.UploadPart",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "UploadPart",
            "method": "put",
            "documentation": "\u003cp\u003eUploads a part in a multipart upload.\u003c/p\u003e \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e After you initiate multipart upload and upload one or more parts, you must either complete or abort multipart upload in order to stop getting charged for storage of the uploaded parts. Only after you either complete or abort multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts storage.\u003c/p\u003e",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPart.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": true,
                "style": "body-headers",
                "fieldPad": 23,
                "ctor": "uploadPart",
                "headerPad": 48,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upBody",
                        "name": "_upBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": null,
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_upBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_upKey",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "upBody",
                    "name": "_upBody",
                    "shape": "Body",
                    "locationName": "Body",
                    "documentation": null,
                    "typeExposed": "Maybe Base64",
                    "type": "Maybe Base64"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upBucket",
                        "name": "_upBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upKey",
                        "name": "_upKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upPartNumber",
                        "name": "_upPartNumber",
                        "shape": "PartNumber",
                        "locationName": "partNumber",
                        "documentation": "Part number of part being uploaded.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upUploadId",
                        "name": "_upUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": "Upload ID identifying the multipart upload whose part is being uploaded.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_upContentLength",
                        "locationName": "Content-Length",
                        "type": "field"
                    },
                    {
                        "field": "_upContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_upSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_upSSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_upSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_upSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 5,
                "queryPad": 11,
                "name": "UploadPart",
                "query": [
                    {
                        "field": "_upPartNumber",
                        "locationName": "partNumber",
                        "type": "field"
                    },
                    {
                        "field": "_upUploadId",
                        "locationName": "uploadId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upBody",
                        "name": "_upBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": null,
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upContentLength",
                        "name": "_upContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upContentMD5",
                        "name": "_upContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upSSECustomerAlgorithm",
                        "name": "_upSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upSSECustomerKey",
                        "name": "_upSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upSSECustomerKeyMD5",
                        "name": "_upSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upSSEKMSKeyId",
                        "name": "_upSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "Specifies the AWS KMS key ID to use for object encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upBody",
                        "name": "_upBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": null,
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upBucket",
                        "name": "_upBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upContentLength",
                        "name": "_upContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upContentMD5",
                        "name": "_upContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upKey",
                        "name": "_upKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upPartNumber",
                        "name": "_upPartNumber",
                        "shape": "PartNumber",
                        "locationName": "partNumber",
                        "documentation": "Part number of part being uploaded.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upSSECustomerAlgorithm",
                        "name": "_upSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upSSECustomerKey",
                        "name": "_upSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upSSECustomerKeyMD5",
                        "name": "_upSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upSSEKMSKeyId",
                        "name": "_upSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "Specifies the AWS KMS key ID to use for object encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upUploadId",
                        "name": "_upUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": "Upload ID identifying the multipart upload whose part is being uploaded.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 25,
                "ctor": "uploadPartCopyResponse",
                "headerPad": 48,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcrCopyPartResult",
                        "name": "_upcrCopyPartResult",
                        "shape": "CopyPartResult",
                        "locationName": "CopyPartResult",
                        "documentation": null,
                        "typeExposed": "Maybe CopyPartResult",
                        "type": "Maybe CopyPartResult"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "upcrCopyPartResult",
                    "name": "_upcrCopyPartResult",
                    "shape": "CopyPartResult",
                    "locationName": "CopyPartResult",
                    "documentation": null,
                    "typeExposed": "Maybe CopyPartResult",
                    "type": "Maybe CopyPartResult"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_upcrCopySourceVersionId",
                        "locationName": "x-amz-copy-source-version-id",
                        "type": "field"
                    },
                    {
                        "field": "_upcrServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "type": "field"
                    },
                    {
                        "field": "_upcrSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_upcrSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_upcrSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 15,
                "name": "UploadPartCopyResponse",
                "resultWrapper": null,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcrCopySourceVersionId",
                        "name": "_upcrCopySourceVersionId",
                        "shape": "CopySourceVersionId",
                        "locationName": "x-amz-copy-source-version-id",
                        "documentation": "The version of the source object that was copied, if you have enabled versioning on the source bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcrCopyPartResult",
                        "name": "_upcrCopyPartResult",
                        "shape": "CopyPartResult",
                        "locationName": "CopyPartResult",
                        "documentation": null,
                        "typeExposed": "Maybe CopyPartResult",
                        "type": "Maybe CopyPartResult"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcrServerSideEncryption",
                        "name": "_upcrServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcrSSECustomerAlgorithm",
                        "name": "_upcrSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcrSSECustomerKeyMD5",
                        "name": "_upcrSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcrSSEKMSKeyId",
                        "name": "_upcrSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcrCopyPartResult",
                        "name": "_upcrCopyPartResult",
                        "shape": "CopyPartResult",
                        "locationName": "CopyPartResult",
                        "documentation": null,
                        "typeExposed": "Maybe CopyPartResult",
                        "type": "Maybe CopyPartResult"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcrCopySourceVersionId",
                        "name": "_upcrCopySourceVersionId",
                        "shape": "CopySourceVersionId",
                        "locationName": "x-amz-copy-source-version-id",
                        "documentation": "The version of the source object that was copied, if you have enabled versioning on the source bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcrSSECustomerAlgorithm",
                        "name": "_upcrSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcrSSECustomerKeyMD5",
                        "name": "_upcrSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcrSSEKMSKeyId",
                        "name": "_upcrSSEKMSKeyId",
                        "shape": "SSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "If present, specifies the AWS KMS key used to encrypt the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcrServerSideEncryption",
                        "name": "_upcrServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/UploadPartCopy.html",
            "namespace": "Network.AWS.S3.UploadPartCopy",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.S3.Types"
            ],
            "pager": null,
            "name": "UploadPartCopy",
            "method": "put",
            "documentation": "Uploads a part by copying data from an existing object as data source.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPartCopy.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 34,
                "ctor": "uploadPartCopy",
                "headerPad": 60,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_upcBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_upcKey",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upcBucket",
                        "name": "_upcBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upcCopySource",
                        "name": "_upcCopySource",
                        "shape": "CopySource",
                        "locationName": "x-amz-copy-source",
                        "documentation": "The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upcKey",
                        "name": "_upcKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upcPartNumber",
                        "name": "_upcPartNumber",
                        "shape": "PartNumber",
                        "locationName": "partNumber",
                        "documentation": "Part number of part being copied.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upcUploadId",
                        "name": "_upcUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": "Upload ID identifying the multipart upload whose part is being copied.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_upcCopySource",
                        "locationName": "x-amz-copy-source",
                        "type": "field"
                    },
                    {
                        "field": "_upcCopySourceIfMatch",
                        "locationName": "x-amz-copy-source-if-match",
                        "type": "field"
                    },
                    {
                        "field": "_upcCopySourceIfModifiedSince",
                        "locationName": "x-amz-copy-source-if-modified-since",
                        "type": "field"
                    },
                    {
                        "field": "_upcCopySourceIfNoneMatch",
                        "locationName": "x-amz-copy-source-if-none-match",
                        "type": "field"
                    },
                    {
                        "field": "_upcCopySourceIfUnmodifiedSince",
                        "locationName": "x-amz-copy-source-if-unmodified-since",
                        "type": "field"
                    },
                    {
                        "field": "_upcCopySourceRange",
                        "locationName": "x-amz-copy-source-range",
                        "type": "field"
                    },
                    {
                        "field": "_upcSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_upcSSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_upcSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_upcCopySourceSSECustomerAlgorithm",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_upcCopySourceSSECustomerKey",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_upcCopySourceSSECustomerKeyMD5",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_upcCopySourceSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "type": "field"
                    }
                ],
                "contentPad": 0,
                "queryPad": 11,
                "name": "UploadPartCopy",
                "query": [
                    {
                        "field": "_upcPartNumber",
                        "locationName": "partNumber",
                        "type": "field"
                    },
                    {
                        "field": "_upcUploadId",
                        "locationName": "uploadId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceIfMatch",
                        "name": "_upcCopySourceIfMatch",
                        "shape": "CopySourceIfMatch",
                        "locationName": "x-amz-copy-source-if-match",
                        "documentation": "Copies the object if its entity tag (ETag) matches the specified tag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceIfModifiedSince",
                        "name": "_upcCopySourceIfModifiedSince",
                        "shape": "CopySourceIfModifiedSince",
                        "locationName": "x-amz-copy-source-if-modified-since",
                        "documentation": "Copies the object if it has been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceIfNoneMatch",
                        "name": "_upcCopySourceIfNoneMatch",
                        "shape": "CopySourceIfNoneMatch",
                        "locationName": "x-amz-copy-source-if-none-match",
                        "documentation": "Copies the object if its entity tag (ETag) is different than the specified ETag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceIfUnmodifiedSince",
                        "name": "_upcCopySourceIfUnmodifiedSince",
                        "shape": "CopySourceIfUnmodifiedSince",
                        "locationName": "x-amz-copy-source-if-unmodified-since",
                        "documentation": "Copies the object if it hasn't been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceRange",
                        "name": "_upcCopySourceRange",
                        "shape": "CopySourceRange",
                        "locationName": "x-amz-copy-source-range",
                        "documentation": "The range of bytes to copy from the source object. The range value must use the form bytes=first-last, where the first and last are the zero-based byte offsets to copy. For example, bytes=0-9 indicates that you want to copy the first ten bytes of the source. You can copy a range only if the source object is greater than 5 GB.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcSSECustomerAlgorithm",
                        "name": "_upcSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcSSECustomerKey",
                        "name": "_upcSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcSSECustomerKeyMD5",
                        "name": "_upcSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceSSECustomerAlgorithm",
                        "name": "_upcCopySourceSSECustomerAlgorithm",
                        "shape": "CopySourceSSECustomerAlgorithm",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use when decrypting the source object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceSSECustomerKey",
                        "name": "_upcCopySourceSSECustomerKey",
                        "shape": "CopySourceSSECustomerKey",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceSSECustomerKeyMD5",
                        "name": "_upcCopySourceSSECustomerKeyMD5",
                        "shape": "CopySourceSSECustomerKeyMD5",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceSSEKMSKeyId",
                        "name": "_upcCopySourceSSEKMSKeyId",
                        "shape": "CopySourceSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "Specifies the AWS KMS key ID to use for object encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upcBucket",
                        "name": "_upcBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upcCopySource",
                        "name": "_upcCopySource",
                        "shape": "CopySource",
                        "locationName": "x-amz-copy-source",
                        "documentation": "The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceIfMatch",
                        "name": "_upcCopySourceIfMatch",
                        "shape": "CopySourceIfMatch",
                        "locationName": "x-amz-copy-source-if-match",
                        "documentation": "Copies the object if its entity tag (ETag) matches the specified tag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceIfModifiedSince",
                        "name": "_upcCopySourceIfModifiedSince",
                        "shape": "CopySourceIfModifiedSince",
                        "locationName": "x-amz-copy-source-if-modified-since",
                        "documentation": "Copies the object if it has been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceIfNoneMatch",
                        "name": "_upcCopySourceIfNoneMatch",
                        "shape": "CopySourceIfNoneMatch",
                        "locationName": "x-amz-copy-source-if-none-match",
                        "documentation": "Copies the object if its entity tag (ETag) is different than the specified ETag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceIfUnmodifiedSince",
                        "name": "_upcCopySourceIfUnmodifiedSince",
                        "shape": "CopySourceIfUnmodifiedSince",
                        "locationName": "x-amz-copy-source-if-unmodified-since",
                        "documentation": "Copies the object if it hasn't been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceRange",
                        "name": "_upcCopySourceRange",
                        "shape": "CopySourceRange",
                        "locationName": "x-amz-copy-source-range",
                        "documentation": "The range of bytes to copy from the source object. The range value must use the form bytes=first-last, where the first and last are the zero-based byte offsets to copy. For example, bytes=0-9 indicates that you want to copy the first ten bytes of the source. You can copy a range only if the source object is greater than 5 GB.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceSSECustomerAlgorithm",
                        "name": "_upcCopySourceSSECustomerAlgorithm",
                        "shape": "CopySourceSSECustomerAlgorithm",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use when decrypting the source object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceSSECustomerKey",
                        "name": "_upcCopySourceSSECustomerKey",
                        "shape": "CopySourceSSECustomerKey",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceSSECustomerKeyMD5",
                        "name": "_upcCopySourceSSECustomerKeyMD5",
                        "shape": "CopySourceSSECustomerKeyMD5",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcCopySourceSSEKMSKeyId",
                        "name": "_upcCopySourceSSEKMSKeyId",
                        "shape": "CopySourceSSEKMSKeyId",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id",
                        "documentation": "Specifies the AWS KMS key ID to use for object encryption.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upcKey",
                        "name": "_upcKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upcPartNumber",
                        "name": "_upcPartNumber",
                        "shape": "PartNumber",
                        "locationName": "partNumber",
                        "documentation": "Part number of part being copied.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcSSECustomerAlgorithm",
                        "name": "_upcSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256, aws:kms).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcSSECustomerKey",
                        "name": "_upcSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "upcSSECustomerKeyMD5",
                        "name": "_upcSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "upcUploadId",
                        "name": "_upcUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": "Upload ID identifying the multipart upload whose part is being copied.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        }
    ]
}