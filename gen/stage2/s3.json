{
    "service": {
        "signature": "V4",
        "checksum": "md5",
        "abbrev": "S3",
        "error": "S3Error",
        "namespace": "Network.AWS.S3",
        "protocol": "xml",
        "imports": [
            "Network.AWS.S3.AbortMultipartUpload",
            "Network.AWS.S3.CompleteMultipartUpload",
            "Network.AWS.S3.CopyObject",
            "Network.AWS.S3.CreateBucket",
            "Network.AWS.S3.CreateMultipartUpload",
            "Network.AWS.S3.DeleteBucket",
            "Network.AWS.S3.DeleteBucketCors",
            "Network.AWS.S3.DeleteBucketLifecycle",
            "Network.AWS.S3.DeleteBucketPolicy",
            "Network.AWS.S3.DeleteBucketTagging",
            "Network.AWS.S3.DeleteBucketWebsite",
            "Network.AWS.S3.DeleteObject",
            "Network.AWS.S3.DeleteObjects",
            "Network.AWS.S3.GetBucketAcl",
            "Network.AWS.S3.GetBucketCors",
            "Network.AWS.S3.GetBucketLifecycle",
            "Network.AWS.S3.GetBucketLocation",
            "Network.AWS.S3.GetBucketLogging",
            "Network.AWS.S3.GetBucketNotification",
            "Network.AWS.S3.GetBucketPolicy",
            "Network.AWS.S3.GetBucketRequestPayment",
            "Network.AWS.S3.GetBucketTagging",
            "Network.AWS.S3.GetBucketVersioning",
            "Network.AWS.S3.GetBucketWebsite",
            "Network.AWS.S3.GetObject",
            "Network.AWS.S3.GetObjectAcl",
            "Network.AWS.S3.GetObjectTorrent",
            "Network.AWS.S3.HeadBucket",
            "Network.AWS.S3.HeadObject",
            "Network.AWS.S3.ListBuckets",
            "Network.AWS.S3.ListMultipartUploads",
            "Network.AWS.S3.ListObjectVersions",
            "Network.AWS.S3.ListObjects",
            "Network.AWS.S3.ListParts",
            "Network.AWS.S3.PutBucketAcl",
            "Network.AWS.S3.PutBucketCors",
            "Network.AWS.S3.PutBucketLifecycle",
            "Network.AWS.S3.PutBucketLogging",
            "Network.AWS.S3.PutBucketNotification",
            "Network.AWS.S3.PutBucketPolicy",
            "Network.AWS.S3.PutBucketRequestPayment",
            "Network.AWS.S3.PutBucketTagging",
            "Network.AWS.S3.PutBucketVersioning",
            "Network.AWS.S3.PutBucketWebsite",
            "Network.AWS.S3.PutObject",
            "Network.AWS.S3.PutObjectAcl",
            "Network.AWS.S3.RestoreObject",
            "Network.AWS.S3.Types",
            "Network.AWS.S3.UploadPart",
            "Network.AWS.S3.UploadPartCopy"
        ],
        "name": "Amazon Simple Storage Service",
        "version": "2006-03-01",
        "documentation": "Amazon Simple Storage Service is storage for the Internet. Amazon S3 has a simple web services interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. It gives any developer access to the same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses to run its own global network of web sites. The service aims to maximize benefits of scale and to pass those benefits on to developers.",
        "xmlNamespace": "https://s3.amazonaws.com/doc/2006-03-01/",
        "endpoint": "Global",
        "endpointPrefix": "s3"
    },
    "cabal": {
        "other": [
            "Network.AWS.S3.Internal"
        ],
        "library": "amazonka-s3",
        "exposed": [
            "Network.AWS.S3",
            "Network.AWS.S3.AbortMultipartUpload",
            "Network.AWS.S3.CompleteMultipartUpload",
            "Network.AWS.S3.CopyObject",
            "Network.AWS.S3.CreateBucket",
            "Network.AWS.S3.CreateMultipartUpload",
            "Network.AWS.S3.DeleteBucket",
            "Network.AWS.S3.DeleteBucketCors",
            "Network.AWS.S3.DeleteBucketLifecycle",
            "Network.AWS.S3.DeleteBucketPolicy",
            "Network.AWS.S3.DeleteBucketTagging",
            "Network.AWS.S3.DeleteBucketWebsite",
            "Network.AWS.S3.DeleteObject",
            "Network.AWS.S3.DeleteObjects",
            "Network.AWS.S3.GetBucketAcl",
            "Network.AWS.S3.GetBucketCors",
            "Network.AWS.S3.GetBucketLifecycle",
            "Network.AWS.S3.GetBucketLocation",
            "Network.AWS.S3.GetBucketLogging",
            "Network.AWS.S3.GetBucketNotification",
            "Network.AWS.S3.GetBucketPolicy",
            "Network.AWS.S3.GetBucketRequestPayment",
            "Network.AWS.S3.GetBucketTagging",
            "Network.AWS.S3.GetBucketVersioning",
            "Network.AWS.S3.GetBucketWebsite",
            "Network.AWS.S3.GetObject",
            "Network.AWS.S3.GetObjectAcl",
            "Network.AWS.S3.GetObjectTorrent",
            "Network.AWS.S3.HeadBucket",
            "Network.AWS.S3.HeadObject",
            "Network.AWS.S3.ListBuckets",
            "Network.AWS.S3.ListMultipartUploads",
            "Network.AWS.S3.ListObjectVersions",
            "Network.AWS.S3.ListObjects",
            "Network.AWS.S3.ListParts",
            "Network.AWS.S3.PutBucketAcl",
            "Network.AWS.S3.PutBucketCors",
            "Network.AWS.S3.PutBucketLifecycle",
            "Network.AWS.S3.PutBucketLogging",
            "Network.AWS.S3.PutBucketNotification",
            "Network.AWS.S3.PutBucketPolicy",
            "Network.AWS.S3.PutBucketRequestPayment",
            "Network.AWS.S3.PutBucketTagging",
            "Network.AWS.S3.PutBucketVersioning",
            "Network.AWS.S3.PutBucketWebsite",
            "Network.AWS.S3.PutObject",
            "Network.AWS.S3.PutObjectAcl",
            "Network.AWS.S3.RestoreObject",
            "Network.AWS.S3.Types",
            "Network.AWS.S3.UploadPart",
            "Network.AWS.S3.UploadPartCopy"
        ],
        "dependencies": [],
        "version": "0.0.0",
        "synopsis": "",
        "description": ""
    },
    "types": {
        "service": {
            "signature": "V4",
            "checksum": "md5",
            "abbrev": "S3",
            "error": "S3Error",
            "namespace": "Network.AWS.S3",
            "protocol": "xml",
            "imports": [
                "Network.AWS.S3.AbortMultipartUpload",
                "Network.AWS.S3.CompleteMultipartUpload",
                "Network.AWS.S3.CopyObject",
                "Network.AWS.S3.CreateBucket",
                "Network.AWS.S3.CreateMultipartUpload",
                "Network.AWS.S3.DeleteBucket",
                "Network.AWS.S3.DeleteBucketCors",
                "Network.AWS.S3.DeleteBucketLifecycle",
                "Network.AWS.S3.DeleteBucketPolicy",
                "Network.AWS.S3.DeleteBucketTagging",
                "Network.AWS.S3.DeleteBucketWebsite",
                "Network.AWS.S3.DeleteObject",
                "Network.AWS.S3.DeleteObjects",
                "Network.AWS.S3.GetBucketAcl",
                "Network.AWS.S3.GetBucketCors",
                "Network.AWS.S3.GetBucketLifecycle",
                "Network.AWS.S3.GetBucketLocation",
                "Network.AWS.S3.GetBucketLogging",
                "Network.AWS.S3.GetBucketNotification",
                "Network.AWS.S3.GetBucketPolicy",
                "Network.AWS.S3.GetBucketRequestPayment",
                "Network.AWS.S3.GetBucketTagging",
                "Network.AWS.S3.GetBucketVersioning",
                "Network.AWS.S3.GetBucketWebsite",
                "Network.AWS.S3.GetObject",
                "Network.AWS.S3.GetObjectAcl",
                "Network.AWS.S3.GetObjectTorrent",
                "Network.AWS.S3.HeadBucket",
                "Network.AWS.S3.HeadObject",
                "Network.AWS.S3.ListBuckets",
                "Network.AWS.S3.ListMultipartUploads",
                "Network.AWS.S3.ListObjectVersions",
                "Network.AWS.S3.ListObjects",
                "Network.AWS.S3.ListParts",
                "Network.AWS.S3.PutBucketAcl",
                "Network.AWS.S3.PutBucketCors",
                "Network.AWS.S3.PutBucketLifecycle",
                "Network.AWS.S3.PutBucketLogging",
                "Network.AWS.S3.PutBucketNotification",
                "Network.AWS.S3.PutBucketPolicy",
                "Network.AWS.S3.PutBucketRequestPayment",
                "Network.AWS.S3.PutBucketTagging",
                "Network.AWS.S3.PutBucketVersioning",
                "Network.AWS.S3.PutBucketWebsite",
                "Network.AWS.S3.PutObject",
                "Network.AWS.S3.PutObjectAcl",
                "Network.AWS.S3.RestoreObject",
                "Network.AWS.S3.Types",
                "Network.AWS.S3.UploadPart",
                "Network.AWS.S3.UploadPartCopy"
            ],
            "name": "Amazon Simple Storage Service",
            "version": "2006-03-01",
            "documentation": "Amazon Simple Storage Service is storage for the Internet. Amazon S3 has a simple web services interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. It gives any developer access to the same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses to run its own global network of web sites. The service aims to maximize benefits of scale and to pass those benefits on to developers.",
            "xmlNamespace": "https://s3.amazonaws.com/doc/2006-03-01/",
            "endpoint": "Global",
            "endpointPrefix": "s3"
        },
        "namespace": "Network.AWS.S3.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "S3ReducedRedundancyLostObject": "s3:ReducedRedundancyLostObject"
                },
                "valuePad": 31,
                "name": "Event",
                "type": "nullary",
                "branchPad": 29
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum",
                    "Num"
                ],
                "fieldPad": 0,
                "ctor": "noncurrentVersionExpiration",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "nveNoncurrentDays",
                    "name": "_nveNoncurrentDays",
                    "shape": "Days",
                    "locationName": "NoncurrentDays",
                    "documentation": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see \u003ca href=\"/AmazonS3/latest/dev/s3-access-control.html\"\u003eHow Amazon S3 Calculates When an Object Became Noncurrent\u003c/a\u003e in the Amazon Simple Storage Service Developer Guide.",
                    "typeExposed": "Int",
                    "type": "Int"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "nveNoncurrentDays",
                    "name": "_nveNoncurrentDays",
                    "shape": "Days",
                    "locationName": "NoncurrentDays",
                    "documentation": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see \u003ca href=\"/AmazonS3/latest/dev/s3-access-control.html\"\u003eHow Amazon S3 Calculates When an Object Became Noncurrent\u003c/a\u003e in the Amazon Simple Storage Service Developer Guide.",
                    "typeExposed": "Int",
                    "type": "Int"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "nveNoncurrentDays",
                        "name": "_nveNoncurrentDays",
                        "shape": "Days",
                        "locationName": "NoncurrentDays",
                        "documentation": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see \u003ca href=\"/AmazonS3/latest/dev/s3-access-control.html\"\u003eHow Amazon S3 Calculates When an Object Became Noncurrent\u003c/a\u003e in the Amazon Simple Storage Service Developer Guide.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "name": "NoncurrentVersionExpiration",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "nveNoncurrentDays",
                        "name": "_nveNoncurrentDays",
                        "shape": "Days",
                        "locationName": "NoncurrentDays",
                        "documentation": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see \u003ca href=\"/AmazonS3/latest/dev/s3-access-control.html\"\u003eHow Amazon S3 Calculates When an Object Became Noncurrent\u003c/a\u003e in the Amazon Simple Storage Service Developer Guide.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "transition",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": "mapping _Time",
                    "default": "Nothing",
                    "required": false,
                    "lens": "tDate",
                    "name": "_tDate",
                    "shape": "Date",
                    "locationName": "Date",
                    "documentation": "Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.",
                    "typeExposed": "Maybe UTCTime",
                    "type": "Maybe ISO8601"
                },
                "required": [],
                "name": "Transition",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "tDate",
                        "name": "_tDate",
                        "shape": "Date",
                        "locationName": "Date",
                        "documentation": "Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tDays",
                        "name": "_tDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tStorageClass",
                        "name": "_tStorageClass",
                        "shape": "TransitionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "tDate",
                        "name": "_tDate",
                        "shape": "Date",
                        "locationName": "Date",
                        "documentation": "Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tDays",
                        "name": "_tDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tStorageClass",
                        "name": "_tStorageClass",
                        "shape": "TransitionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "deleteMarkerEntry",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dmeOwner",
                    "name": "_dmeOwner",
                    "shape": "Owner",
                    "locationName": "Owner",
                    "documentation": null,
                    "typeExposed": "Maybe Owner",
                    "type": "Maybe Owner"
                },
                "required": [],
                "name": "DeleteMarkerEntry",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dmeOwner",
                        "name": "_dmeOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dmeKey",
                        "name": "_dmeKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dmeVersionId",
                        "name": "_dmeVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "Version ID of an object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dmeIsLatest",
                        "name": "_dmeIsLatest",
                        "shape": "IsLatest",
                        "locationName": "IsLatest",
                        "documentation": "Specifies whether the object is (true) or is not (false) the latest version of an object.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "dmeLastModified",
                        "name": "_dmeLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time the object was last modified.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dmeIsLatest",
                        "name": "_dmeIsLatest",
                        "shape": "IsLatest",
                        "locationName": "IsLatest",
                        "documentation": "Specifies whether the object is (true) or is not (false) the latest version of an object.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dmeKey",
                        "name": "_dmeKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "dmeLastModified",
                        "name": "_dmeLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time the object was last modified.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dmeOwner",
                        "name": "_dmeOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dmeVersionId",
                        "name": "_dmeVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "Version ID of an object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Enabled": "Enabled",
                    "Disabled": "Disabled"
                },
                "valuePad": 9,
                "name": "ExpirationStatus",
                "type": "nullary",
                "branchPad": 8
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "part",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "pPartNumber",
                    "name": "_pPartNumber",
                    "shape": "PartNumber",
                    "locationName": "PartNumber",
                    "documentation": "Part number identifying the part.",
                    "typeExposed": "Maybe Int",
                    "type": "Maybe Int"
                },
                "required": [],
                "name": "Part",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pPartNumber",
                        "name": "_pPartNumber",
                        "shape": "PartNumber",
                        "locationName": "PartNumber",
                        "documentation": "Part number identifying the part.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "pLastModified",
                        "name": "_pLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time at which the part was uploaded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pETag",
                        "name": "_pETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag returned when the part was uploaded.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pSize",
                        "name": "_pSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": "Size of the uploaded part data.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pETag",
                        "name": "_pETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag returned when the part was uploaded.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "pLastModified",
                        "name": "_pLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time at which the part was uploaded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pPartNumber",
                        "name": "_pPartNumber",
                        "shape": "PartNumber",
                        "locationName": "PartNumber",
                        "documentation": "Part number identifying the part.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pSize",
                        "name": "_pSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": "Size of the uploaded part data.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "versioningConfiguration",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vcMFADelete",
                    "name": "_vcMFADelete",
                    "shape": "MFADelete",
                    "locationName": "MfaDelete",
                    "documentation": "Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VersioningConfiguration",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcMFADelete",
                        "name": "_vcMFADelete",
                        "shape": "MFADelete",
                        "locationName": "MfaDelete",
                        "documentation": "Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcStatus",
                        "name": "_vcStatus",
                        "shape": "BucketVersioningStatus",
                        "locationName": "Status",
                        "documentation": "The versioning state of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcMFADelete",
                        "name": "_vcMFADelete",
                        "shape": "MFADelete",
                        "locationName": "MfaDelete",
                        "documentation": "Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcStatus",
                        "name": "_vcStatus",
                        "shape": "BucketVersioningStatus",
                        "locationName": "Status",
                        "documentation": "The versioning state of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 7,
                "ctor": "tag",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "tKey",
                    "name": "_tKey",
                    "shape": "ObjectKey",
                    "locationName": "Key",
                    "documentation": "Name of the tag.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tKey",
                        "name": "_tKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Name of the tag.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tValue",
                        "name": "_tValue",
                        "shape": "Value",
                        "locationName": "Value",
                        "documentation": "Value of the tag.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "Tag",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tKey",
                        "name": "_tKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Name of the tag.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tValue",
                        "name": "_tValue",
                        "shape": "Value",
                        "locationName": "Value",
                        "documentation": "Value of the tag.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Glacier": "GLACIER",
                    "Standard": "STANDARD",
                    "ReducedRedundancy": "REDUCED_REDUNDANCY"
                },
                "valuePad": 19,
                "name": "ObjectStorageClass",
                "type": "nullary",
                "branchPad": 17
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Replace": "REPLACE",
                    "Copy": "COPY"
                },
                "valuePad": 8,
                "name": "MetadataDirective",
                "type": "nullary",
                "branchPad": 7
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "redirectAllRequestsTo",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rartHostName",
                    "name": "_rartHostName",
                    "shape": "HostName",
                    "locationName": "HostName",
                    "documentation": "Name of the host where requests will be redirected.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rartHostName",
                        "name": "_rartHostName",
                        "shape": "HostName",
                        "locationName": "HostName",
                        "documentation": "Name of the host where requests will be redirected.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "RedirectAllRequestsTo",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rartProtocol",
                        "name": "_rartProtocol",
                        "shape": "Protocol",
                        "locationName": "Protocol",
                        "documentation": "Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rartHostName",
                        "name": "_rartHostName",
                        "shape": "HostName",
                        "locationName": "HostName",
                        "documentation": "Name of the host where requests will be redirected.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rartProtocol",
                        "name": "_rartProtocol",
                        "shape": "Protocol",
                        "locationName": "Protocol",
                        "documentation": "Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "routingRule",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rrCondition",
                    "name": "_rrCondition",
                    "shape": "Condition",
                    "locationName": "Condition",
                    "documentation": "A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the /docs folder, redirect to the /documents folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.",
                    "typeExposed": "Maybe Condition",
                    "type": "Maybe Condition"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrRedirect",
                        "name": "_rrRedirect",
                        "shape": "Redirect",
                        "locationName": "Redirect",
                        "documentation": "Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can can specify a different error code to return.",
                        "typeExposed": "Redirect",
                        "type": "Redirect"
                    }
                ],
                "name": "RoutingRule",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrCondition",
                        "name": "_rrCondition",
                        "shape": "Condition",
                        "locationName": "Condition",
                        "documentation": "A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the /docs folder, redirect to the /documents folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.",
                        "typeExposed": "Maybe Condition",
                        "type": "Maybe Condition"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrCondition",
                        "name": "_rrCondition",
                        "shape": "Condition",
                        "locationName": "Condition",
                        "documentation": "A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the /docs folder, redirect to the /documents folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.",
                        "typeExposed": "Maybe Condition",
                        "type": "Maybe Condition"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrRedirect",
                        "name": "_rrRedirect",
                        "shape": "Redirect",
                        "locationName": "Redirect",
                        "documentation": "Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can can specify a different error code to return.",
                        "typeExposed": "Redirect",
                        "type": "Redirect"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 0,
                "ctor": "notificationConfiguration",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ncTopicConfiguration",
                    "name": "_ncTopicConfiguration",
                    "shape": "TopicConfiguration",
                    "locationName": "TopicConfiguration",
                    "documentation": null,
                    "typeExposed": "TopicConfiguration",
                    "type": "TopicConfiguration"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ncTopicConfiguration",
                    "name": "_ncTopicConfiguration",
                    "shape": "TopicConfiguration",
                    "locationName": "TopicConfiguration",
                    "documentation": null,
                    "typeExposed": "TopicConfiguration",
                    "type": "TopicConfiguration"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ncTopicConfiguration",
                        "name": "_ncTopicConfiguration",
                        "shape": "TopicConfiguration",
                        "locationName": "TopicConfiguration",
                        "documentation": null,
                        "typeExposed": "TopicConfiguration",
                        "type": "TopicConfiguration"
                    }
                ],
                "name": "NotificationConfiguration",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ncTopicConfiguration",
                        "name": "_ncTopicConfiguration",
                        "shape": "TopicConfiguration",
                        "locationName": "TopicConfiguration",
                        "documentation": null,
                        "typeExposed": "TopicConfiguration",
                        "type": "TopicConfiguration"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "s3ServiceError",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "sseKey",
                    "name": "_sseKey",
                    "shape": "ObjectKey",
                    "locationName": "Key",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "S3ServiceError",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sseKey",
                        "name": "_sseKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sseVersionId",
                        "name": "_sseVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sseCode",
                        "name": "_sseCode",
                        "shape": "Code",
                        "locationName": "Code",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sseMessage",
                        "name": "_sseMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sseCode",
                        "name": "_sseCode",
                        "shape": "Code",
                        "locationName": "Code",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sseKey",
                        "name": "_sseKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sseMessage",
                        "name": "_sseMessage",
                        "shape": "Message",
                        "locationName": "Message",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sseVersionId",
                        "name": "_sseVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Private": "private",
                    "BucketOwnerFullControl": "bucket-owner-full-control",
                    "BucketOwnerRead": "bucket-owner-read",
                    "PublicRead": "public-read",
                    "AuthenticatedRead": "authenticated-read",
                    "PublicReadWrite": "public-read-write"
                },
                "valuePad": 26,
                "name": "ObjectCannedACL",
                "type": "nullary",
                "branchPad": 22
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "BVSSuspended": "Suspended",
                    "BVSEnabled": "Enabled"
                },
                "valuePad": 10,
                "name": "BucketVersioningStatus",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 24,
                "ctor": "deletedObject",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "doKey",
                    "name": "_doKey",
                    "shape": "ObjectKey",
                    "locationName": "Key",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "DeletedObject",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doKey",
                        "name": "_doKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doVersionId",
                        "name": "_doVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doDeleteMarker",
                        "name": "_doDeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "DeleteMarker",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doDeleteMarkerVersionId",
                        "name": "_doDeleteMarkerVersionId",
                        "shape": "DeleteMarkerVersionId",
                        "locationName": "DeleteMarkerVersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doDeleteMarker",
                        "name": "_doDeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "DeleteMarker",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doDeleteMarkerVersionId",
                        "name": "_doDeleteMarkerVersionId",
                        "shape": "DeleteMarkerVersionId",
                        "locationName": "DeleteMarkerVersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doKey",
                        "name": "_doKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doVersionId",
                        "name": "_doVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "OVSCStandard": "STANDARD"
                },
                "valuePad": 9,
                "name": "ObjectVersionStorageClass",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "copyPartResult",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cprETag",
                    "name": "_cprETag",
                    "shape": "ETag",
                    "locationName": "ETag",
                    "documentation": "Entity tag of the object.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "CopyPartResult",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cprETag",
                        "name": "_cprETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "cprLastModified",
                        "name": "_cprLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time at which the object was uploaded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cprETag",
                        "name": "_cprETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "cprLastModified",
                        "name": "_cprLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time at which the object was uploaded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Url": "url"
                },
                "valuePad": 4,
                "name": "EncodingType",
                "type": "nullary",
                "branchPad": 3
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "requestPaymentConfiguration",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rpcPayer",
                    "name": "_rpcPayer",
                    "shape": "Payer",
                    "locationName": "Payer",
                    "documentation": "Specifies who pays for the download and request fees.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rpcPayer",
                    "name": "_rpcPayer",
                    "shape": "Payer",
                    "locationName": "Payer",
                    "documentation": "Specifies who pays for the download and request fees.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rpcPayer",
                        "name": "_rpcPayer",
                        "shape": "Payer",
                        "locationName": "Payer",
                        "documentation": "Specifies who pays for the download and request fees.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "RequestPaymentConfiguration",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rpcPayer",
                        "name": "_rpcPayer",
                        "shape": "Payer",
                        "locationName": "Payer",
                        "documentation": "Specifies who pays for the download and request fees.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 20,
                "ctor": "corsrule",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "corsrAllowedHeaders",
                    "name": "_corsrAllowedHeaders",
                    "shape": "AllowedHeaders",
                    "locationName": "AllowedHeader",
                    "documentation": "Specifies which headers are allowed in a pre-flight OPTIONS request.",
                    "typeExposed": "[Text]",
                    "type": "[Text]"
                },
                "required": [],
                "name": "CORSRule",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "corsrAllowedHeaders",
                        "name": "_corsrAllowedHeaders",
                        "shape": "AllowedHeaders",
                        "locationName": "AllowedHeader",
                        "documentation": "Specifies which headers are allowed in a pre-flight OPTIONS request.",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "corsrAllowedMethods",
                        "name": "_corsrAllowedMethods",
                        "shape": "AllowedMethods",
                        "locationName": "AllowedMethod",
                        "documentation": "Identifies HTTP methods that the domain/origin specified in the rule is allowed to execute.",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "corsrAllowedOrigins",
                        "name": "_corsrAllowedOrigins",
                        "shape": "AllowedOrigins",
                        "locationName": "AllowedOrigin",
                        "documentation": "One or more origins you want customers to be able to access the bucket from.",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "corsrExposeHeaders",
                        "name": "_corsrExposeHeaders",
                        "shape": "ExposeHeaders",
                        "locationName": "ExposeHeader",
                        "documentation": "One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corsrMaxAgeSeconds",
                        "name": "_corsrMaxAgeSeconds",
                        "shape": "MaxAgeSeconds",
                        "locationName": "MaxAgeSeconds",
                        "documentation": "The time in seconds that your browser is to cache the preflight response for the specified resource.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "corsrAllowedHeaders",
                        "name": "_corsrAllowedHeaders",
                        "shape": "AllowedHeaders",
                        "locationName": "AllowedHeader",
                        "documentation": "Specifies which headers are allowed in a pre-flight OPTIONS request.",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "corsrAllowedMethods",
                        "name": "_corsrAllowedMethods",
                        "shape": "AllowedMethods",
                        "locationName": "AllowedMethod",
                        "documentation": "Identifies HTTP methods that the domain/origin specified in the rule is allowed to execute.",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "corsrAllowedOrigins",
                        "name": "_corsrAllowedOrigins",
                        "shape": "AllowedOrigins",
                        "locationName": "AllowedOrigin",
                        "documentation": "One or more origins you want customers to be able to access the bucket from.",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "corsrExposeHeaders",
                        "name": "_corsrExposeHeaders",
                        "shape": "ExposeHeaders",
                        "locationName": "ExposeHeader",
                        "documentation": "One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corsrMaxAgeSeconds",
                        "name": "_corsrMaxAgeSeconds",
                        "shape": "MaxAgeSeconds",
                        "locationName": "MaxAgeSeconds",
                        "documentation": "The time in seconds that your browser is to cache the preflight response for the specified resource.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 24,
                "ctor": "websiteConfiguration",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "wcErrorDocument",
                    "name": "_wcErrorDocument",
                    "shape": "ErrorDocument",
                    "locationName": "ErrorDocument",
                    "documentation": null,
                    "typeExposed": "Maybe ErrorDocument",
                    "type": "Maybe ErrorDocument"
                },
                "required": [],
                "name": "WebsiteConfiguration",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "wcErrorDocument",
                        "name": "_wcErrorDocument",
                        "shape": "ErrorDocument",
                        "locationName": "ErrorDocument",
                        "documentation": null,
                        "typeExposed": "Maybe ErrorDocument",
                        "type": "Maybe ErrorDocument"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "wcIndexDocument",
                        "name": "_wcIndexDocument",
                        "shape": "IndexDocument",
                        "locationName": "IndexDocument",
                        "documentation": null,
                        "typeExposed": "Maybe IndexDocument",
                        "type": "Maybe IndexDocument"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "wcRedirectAllRequestsTo",
                        "name": "_wcRedirectAllRequestsTo",
                        "shape": "RedirectAllRequestsTo",
                        "locationName": "RedirectAllRequestsTo",
                        "documentation": null,
                        "typeExposed": "Maybe RedirectAllRequestsTo",
                        "type": "Maybe RedirectAllRequestsTo"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "wcRoutingRules",
                        "name": "_wcRoutingRules",
                        "shape": "RoutingRules",
                        "locationName": "RoutingRules",
                        "documentation": null,
                        "typeExposed": "[RoutingRule]",
                        "type": "[RoutingRule]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "wcErrorDocument",
                        "name": "_wcErrorDocument",
                        "shape": "ErrorDocument",
                        "locationName": "ErrorDocument",
                        "documentation": null,
                        "typeExposed": "Maybe ErrorDocument",
                        "type": "Maybe ErrorDocument"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "wcIndexDocument",
                        "name": "_wcIndexDocument",
                        "shape": "IndexDocument",
                        "locationName": "IndexDocument",
                        "documentation": null,
                        "typeExposed": "Maybe IndexDocument",
                        "type": "Maybe IndexDocument"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "wcRedirectAllRequestsTo",
                        "name": "_wcRedirectAllRequestsTo",
                        "shape": "RedirectAllRequestsTo",
                        "locationName": "RedirectAllRequestsTo",
                        "documentation": null,
                        "typeExposed": "Maybe RedirectAllRequestsTo",
                        "type": "Maybe RedirectAllRequestsTo"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "wcRoutingRules",
                        "name": "_wcRoutingRules",
                        "shape": "RoutingRules",
                        "locationName": "RoutingRules",
                        "documentation": null,
                        "typeExposed": "[RoutingRule]",
                        "type": "[RoutingRule]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "noncurrentVersionTransition",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "nvtNoncurrentDays",
                    "name": "_nvtNoncurrentDays",
                    "shape": "Days",
                    "locationName": "NoncurrentDays",
                    "documentation": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see \u003ca href=\"/AmazonS3/latest/dev/s3-access-control.html\"\u003eHow Amazon S3 Calculates When an Object Became Noncurrent\u003c/a\u003e in the Amazon Simple Storage Service Developer Guide.",
                    "typeExposed": "Int",
                    "type": "Int"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "nvtNoncurrentDays",
                        "name": "_nvtNoncurrentDays",
                        "shape": "Days",
                        "locationName": "NoncurrentDays",
                        "documentation": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see \u003ca href=\"/AmazonS3/latest/dev/s3-access-control.html\"\u003eHow Amazon S3 Calculates When an Object Became Noncurrent\u003c/a\u003e in the Amazon Simple Storage Service Developer Guide.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "nvtStorageClass",
                        "name": "_nvtStorageClass",
                        "shape": "TransitionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "NoncurrentVersionTransition",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "nvtNoncurrentDays",
                        "name": "_nvtNoncurrentDays",
                        "shape": "Days",
                        "locationName": "NoncurrentDays",
                        "documentation": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see \u003ca href=\"/AmazonS3/latest/dev/s3-access-control.html\"\u003eHow Amazon S3 Calculates When an Object Became Noncurrent\u003c/a\u003e in the Amazon Simple Storage Service Developer Guide.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "nvtStorageClass",
                        "name": "_nvtStorageClass",
                        "shape": "TransitionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "initiator",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "iID",
                    "name": "_iID",
                    "shape": "ID",
                    "locationName": "ID",
                    "documentation": "If the principal is an AWS account, it provides the Canonical User ID. If the principal is an IAM User, it provides a user ARN value.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Initiator",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iID",
                        "name": "_iID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "If the principal is an AWS account, it provides the Canonical User ID. If the principal is an IAM User, it provides a user ARN value.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iDisplayName",
                        "name": "_iDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": "Name of the Principal.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iDisplayName",
                        "name": "_iDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": "Name of the Principal.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iID",
                        "name": "_iID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "If the principal is an AWS account, it provides the Canonical User ID. If the principal is an IAM User, it provides a user ARN value.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "objectIdentifier",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "oiKey",
                    "name": "_oiKey",
                    "shape": "ObjectKey",
                    "locationName": "Key",
                    "documentation": "Key name of the object to delete.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "oiKey",
                        "name": "_oiKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Key name of the object to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "ObjectIdentifier",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "oiVersionId",
                        "name": "_oiVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "VersionId for the specific version of the object to delete.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "oiKey",
                        "name": "_oiKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Key name of the object to delete.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "oiVersionId",
                        "name": "_oiVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "VersionId for the specific version of the object to delete.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "bucket",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "bName",
                    "name": "_bName",
                    "shape": "BucketName",
                    "locationName": "Name",
                    "documentation": "The name of the bucket.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Bucket",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "bName",
                        "name": "_bName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": "The name of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "bCreationDate",
                        "name": "_bCreationDate",
                        "shape": "CreationDate",
                        "locationName": "CreationDate",
                        "documentation": "Date the bucket was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "bCreationDate",
                        "name": "_bCreationDate",
                        "shape": "CreationDate",
                        "locationName": "CreationDate",
                        "documentation": "Date the bucket was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "bName",
                        "name": "_bName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": "The name of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Https": "https",
                    "Http": "http"
                },
                "valuePad": 6,
                "name": "Protocol",
                "type": "nullary",
                "branchPad": 5
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "grant",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gGrantee",
                    "name": "_gGrantee",
                    "shape": "Grantee",
                    "locationName": "Grantee",
                    "documentation": null,
                    "typeExposed": "Maybe Grantee",
                    "type": "Maybe Grantee"
                },
                "required": [],
                "name": "Grant",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gGrantee",
                        "name": "_gGrantee",
                        "shape": "Grantee",
                        "locationName": "Grantee",
                        "documentation": null,
                        "typeExposed": "Maybe Grantee",
                        "type": "Maybe Grantee"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gPermission",
                        "name": "_gPermission",
                        "shape": "Permission",
                        "locationName": "Permission",
                        "documentation": "Specifies the permission given to the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gGrantee",
                        "name": "_gGrantee",
                        "shape": "Grantee",
                        "locationName": "Grantee",
                        "documentation": null,
                        "typeExposed": "Maybe Grantee",
                        "type": "Maybe Grantee"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gPermission",
                        "name": "_gPermission",
                        "shape": "Permission",
                        "locationName": "Permission",
                        "documentation": "Specifies the permission given to the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 29,
                "ctor": "rule",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rExpiration",
                    "name": "_rExpiration",
                    "shape": "LifecycleExpiration",
                    "locationName": "Expiration",
                    "documentation": null,
                    "typeExposed": "Maybe LifecycleExpiration",
                    "type": "Maybe LifecycleExpiration"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rPrefix",
                        "name": "_rPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": "Prefix identifying one or more objects to which the rule applies.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rStatus",
                        "name": "_rStatus",
                        "shape": "ExpirationStatus",
                        "locationName": "Status",
                        "documentation": "If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not currently being applied.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "Rule",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rExpiration",
                        "name": "_rExpiration",
                        "shape": "LifecycleExpiration",
                        "locationName": "Expiration",
                        "documentation": null,
                        "typeExposed": "Maybe LifecycleExpiration",
                        "type": "Maybe LifecycleExpiration"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rID",
                        "name": "_rID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "Unique identifier for the rule. The value cannot be longer than 255 characters.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rTransition",
                        "name": "_rTransition",
                        "shape": "Transition",
                        "locationName": "Transition",
                        "documentation": null,
                        "typeExposed": "Maybe Transition",
                        "type": "Maybe Transition"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rNoncurrentVersionTransition",
                        "name": "_rNoncurrentVersionTransition",
                        "shape": "NoncurrentVersionTransition",
                        "locationName": "NoncurrentVersionTransition",
                        "documentation": null,
                        "typeExposed": "Maybe NoncurrentVersionTransition",
                        "type": "Maybe NoncurrentVersionTransition"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rNoncurrentVersionExpiration",
                        "name": "_rNoncurrentVersionExpiration",
                        "shape": "NoncurrentVersionExpiration",
                        "locationName": "NoncurrentVersionExpiration",
                        "documentation": null,
                        "typeExposed": "Maybe NoncurrentVersionExpiration",
                        "type": "Maybe NoncurrentVersionExpiration"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rExpiration",
                        "name": "_rExpiration",
                        "shape": "LifecycleExpiration",
                        "locationName": "Expiration",
                        "documentation": null,
                        "typeExposed": "Maybe LifecycleExpiration",
                        "type": "Maybe LifecycleExpiration"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rID",
                        "name": "_rID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "Unique identifier for the rule. The value cannot be longer than 255 characters.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rNoncurrentVersionExpiration",
                        "name": "_rNoncurrentVersionExpiration",
                        "shape": "NoncurrentVersionExpiration",
                        "locationName": "NoncurrentVersionExpiration",
                        "documentation": null,
                        "typeExposed": "Maybe NoncurrentVersionExpiration",
                        "type": "Maybe NoncurrentVersionExpiration"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rNoncurrentVersionTransition",
                        "name": "_rNoncurrentVersionTransition",
                        "shape": "NoncurrentVersionTransition",
                        "locationName": "NoncurrentVersionTransition",
                        "documentation": null,
                        "typeExposed": "Maybe NoncurrentVersionTransition",
                        "type": "Maybe NoncurrentVersionTransition"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rPrefix",
                        "name": "_rPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": "Prefix identifying one or more objects to which the rule applies.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rStatus",
                        "name": "_rStatus",
                        "shape": "ExpirationStatus",
                        "locationName": "Status",
                        "documentation": "If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not currently being applied.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rTransition",
                        "name": "_rTransition",
                        "shape": "Transition",
                        "locationName": "Transition",
                        "documentation": null,
                        "typeExposed": "Maybe Transition",
                        "type": "Maybe Transition"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 8,
                "ctor": "topicConfiguration",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "tcEvent",
                    "name": "_tcEvent",
                    "shape": "Event",
                    "locationName": "Event",
                    "documentation": "Bucket event for which to send notifications.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "TopicConfiguration",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tcEvent",
                        "name": "_tcEvent",
                        "shape": "Event",
                        "locationName": "Event",
                        "documentation": "Bucket event for which to send notifications.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tcTopic",
                        "name": "_tcTopic",
                        "shape": "Topic",
                        "locationName": "Topic",
                        "documentation": "Amazon SNS topic to which Amazon S3 will publish a message to report the specified events for the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tcEvent",
                        "name": "_tcEvent",
                        "shape": "Event",
                        "locationName": "Event",
                        "documentation": "Bucket event for which to send notifications.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tcTopic",
                        "name": "_tcTopic",
                        "shape": "Topic",
                        "locationName": "Topic",
                        "documentation": "Amazon SNS topic to which Amazon S3 will publish a message to report the specified events for the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "owner",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "oDisplayName",
                    "name": "_oDisplayName",
                    "shape": "DisplayName",
                    "locationName": "DisplayName",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Owner",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "oDisplayName",
                        "name": "_oDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "oID",
                        "name": "_oID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "oDisplayName",
                        "name": "_oDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "oID",
                        "name": "_oID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 0,
                "ctor": "bucketLoggingStatus",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "blsLoggingEnabled",
                    "name": "_blsLoggingEnabled",
                    "shape": "LoggingEnabled",
                    "locationName": "LoggingEnabled",
                    "documentation": null,
                    "typeExposed": "Maybe LoggingEnabled",
                    "type": "Maybe LoggingEnabled"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "blsLoggingEnabled",
                    "name": "_blsLoggingEnabled",
                    "shape": "LoggingEnabled",
                    "locationName": "LoggingEnabled",
                    "documentation": null,
                    "typeExposed": "Maybe LoggingEnabled",
                    "type": "Maybe LoggingEnabled"
                },
                "required": [],
                "name": "BucketLoggingStatus",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "blsLoggingEnabled",
                        "name": "_blsLoggingEnabled",
                        "shape": "LoggingEnabled",
                        "locationName": "LoggingEnabled",
                        "documentation": null,
                        "typeExposed": "Maybe LoggingEnabled",
                        "type": "Maybe LoggingEnabled"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "blsLoggingEnabled",
                        "name": "_blsLoggingEnabled",
                        "shape": "LoggingEnabled",
                        "locationName": "LoggingEnabled",
                        "documentation": null,
                        "typeExposed": "Maybe LoggingEnabled",
                        "type": "Maybe LoggingEnabled"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "errorDocument",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "edKey",
                    "name": "_edKey",
                    "shape": "ObjectKey",
                    "locationName": "Key",
                    "documentation": "The object key name to use when a 4XX class error occurs.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "edKey",
                    "name": "_edKey",
                    "shape": "ObjectKey",
                    "locationName": "Key",
                    "documentation": "The object key name to use when a 4XX class error occurs.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "edKey",
                        "name": "_edKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key name to use when a 4XX class error occurs.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "ErrorDocument",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "edKey",
                        "name": "_edKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key name to use when a 4XX class error occurs.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "SCReducedRedundancy": "REDUCED_REDUNDANCY",
                    "SCStandard": "STANDARD"
                },
                "valuePad": 19,
                "name": "StorageClass",
                "type": "nullary",
                "branchPad": 19
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "objectVersion",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ovETag",
                    "name": "_ovETag",
                    "shape": "ETag",
                    "locationName": "ETag",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ObjectVersion",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovETag",
                        "name": "_ovETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovSize",
                        "name": "_ovSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": "Size in bytes of the object.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovStorageClass",
                        "name": "_ovStorageClass",
                        "shape": "ObjectVersionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovKey",
                        "name": "_ovKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovVersionId",
                        "name": "_ovVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "Version ID of an object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovIsLatest",
                        "name": "_ovIsLatest",
                        "shape": "IsLatest",
                        "locationName": "IsLatest",
                        "documentation": "Specifies whether the object is (true) or is not (false) the latest version of an object.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovLastModified",
                        "name": "_ovLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time the object was last modified.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovOwner",
                        "name": "_ovOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovETag",
                        "name": "_ovETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovIsLatest",
                        "name": "_ovIsLatest",
                        "shape": "IsLatest",
                        "locationName": "IsLatest",
                        "documentation": "Specifies whether the object is (true) or is not (false) the latest version of an object.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovKey",
                        "name": "_ovKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "The object key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovLastModified",
                        "name": "_ovLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": "Date and time the object was last modified.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovOwner",
                        "name": "_ovOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovSize",
                        "name": "_ovSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": "Size in bytes of the object.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovStorageClass",
                        "name": "_ovStorageClass",
                        "shape": "ObjectVersionStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ovVersionId",
                        "name": "_ovVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "VersionId",
                        "documentation": "Version ID of an object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "targetGrant",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "tgGrantee",
                    "name": "_tgGrantee",
                    "shape": "Grantee",
                    "locationName": "Grantee",
                    "documentation": null,
                    "typeExposed": "Maybe Grantee",
                    "type": "Maybe Grantee"
                },
                "required": [],
                "name": "TargetGrant",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tgGrantee",
                        "name": "_tgGrantee",
                        "shape": "Grantee",
                        "locationName": "Grantee",
                        "documentation": null,
                        "typeExposed": "Maybe Grantee",
                        "type": "Maybe Grantee"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tgPermission",
                        "name": "_tgPermission",
                        "shape": "BucketLogsPermission",
                        "locationName": "Permission",
                        "documentation": "Logging permissions assigned to the Grantee for the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tgGrantee",
                        "name": "_tgGrantee",
                        "shape": "Grantee",
                        "locationName": "Grantee",
                        "documentation": null,
                        "typeExposed": "Maybe Grantee",
                        "type": "Maybe Grantee"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tgPermission",
                        "name": "_tgPermission",
                        "shape": "BucketLogsPermission",
                        "locationName": "Permission",
                        "documentation": "Logging permissions assigned to the Grantee for the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "MFADSDisabled": "Disabled",
                    "MFADSEnabled": "Enabled"
                },
                "valuePad": 9,
                "name": "MFADeleteStatus",
                "type": "nullary",
                "branchPad": 13
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "BucketOwner": "BucketOwner",
                    "Requester": "Requester"
                },
                "valuePad": 12,
                "name": "Payer",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 22,
                "ctor": "redirect",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rHostName",
                    "name": "_rHostName",
                    "shape": "HostName",
                    "locationName": "HostName",
                    "documentation": "The host name to use in the redirect request.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Redirect",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rHostName",
                        "name": "_rHostName",
                        "shape": "HostName",
                        "locationName": "HostName",
                        "documentation": "The host name to use in the redirect request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rHttpRedirectCode",
                        "name": "_rHttpRedirectCode",
                        "shape": "HttpRedirectCode",
                        "locationName": "HttpRedirectCode",
                        "documentation": "The HTTP redirect code to use on the response. Not required if one of the siblings is present.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rProtocol",
                        "name": "_rProtocol",
                        "shape": "Protocol",
                        "locationName": "Protocol",
                        "documentation": "Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rReplaceKeyPrefixWith",
                        "name": "_rReplaceKeyPrefixWith",
                        "shape": "ReplaceKeyPrefixWith",
                        "locationName": "ReplaceKeyPrefixWith",
                        "documentation": "The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the docs/ folder) to documents/, you can set a condition block with KeyPrefixEquals set to docs/ and in the Redirect set ReplaceKeyPrefixWith to /documents. Not required if one of the siblings is present. Can be present only if ReplaceKeyWith is not provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rReplaceKeyWith",
                        "name": "_rReplaceKeyWith",
                        "shape": "ReplaceKeyWith",
                        "locationName": "ReplaceKeyWith",
                        "documentation": "The specific object key to use in the redirect request. For example, redirect request to error.html. Not required if one of the sibling is present. Can be present only if ReplaceKeyPrefixWith is not provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rHostName",
                        "name": "_rHostName",
                        "shape": "HostName",
                        "locationName": "HostName",
                        "documentation": "The host name to use in the redirect request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rHttpRedirectCode",
                        "name": "_rHttpRedirectCode",
                        "shape": "HttpRedirectCode",
                        "locationName": "HttpRedirectCode",
                        "documentation": "The HTTP redirect code to use on the response. Not required if one of the siblings is present.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rProtocol",
                        "name": "_rProtocol",
                        "shape": "Protocol",
                        "locationName": "Protocol",
                        "documentation": "Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rReplaceKeyPrefixWith",
                        "name": "_rReplaceKeyPrefixWith",
                        "shape": "ReplaceKeyPrefixWith",
                        "locationName": "ReplaceKeyPrefixWith",
                        "documentation": "The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the docs/ folder) to documents/, you can set a condition block with KeyPrefixEquals set to docs/ and in the Redirect set ReplaceKeyPrefixWith to /documents. Not required if one of the siblings is present. Can be present only if ReplaceKeyWith is not provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rReplaceKeyWith",
                        "name": "_rReplaceKeyWith",
                        "shape": "ReplaceKeyWith",
                        "locationName": "ReplaceKeyWith",
                        "documentation": "The specific object key to use in the redirect request. For example, redirect request to error.html. Not required if one of the sibling is present. Can be present only if ReplaceKeyPrefixWith is not provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "FullControl": "FULL_CONTROL",
                    "Read": "READ",
                    "Write": "WRITE"
                },
                "valuePad": 13,
                "name": "BucketLogsPermission",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "completedPart",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cpETag",
                    "name": "_cpETag",
                    "shape": "ETag",
                    "locationName": "ETag",
                    "documentation": "Entity tag returned when the part was uploaded.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "CompletedPart",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpETag",
                        "name": "_cpETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag returned when the part was uploaded.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpPartNumber",
                        "name": "_cpPartNumber",
                        "shape": "PartNumber",
                        "locationName": "PartNumber",
                        "documentation": "Part number that identifies the part.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpETag",
                        "name": "_cpETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag returned when the part was uploaded.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpPartNumber",
                        "name": "_cpPartNumber",
                        "shape": "PartNumber",
                        "locationName": "PartNumber",
                        "documentation": "Part number that identifies the part.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "createBucketConfiguration",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cbcLocationConstraint",
                    "name": "_cbcLocationConstraint",
                    "shape": "BucketLocationConstraint",
                    "locationName": "LocationConstraint",
                    "documentation": "Specifies the region where the bucket will be created.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cbcLocationConstraint",
                    "name": "_cbcLocationConstraint",
                    "shape": "BucketLocationConstraint",
                    "locationName": "LocationConstraint",
                    "documentation": "Specifies the region where the bucket will be created.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "CreateBucketConfiguration",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbcLocationConstraint",
                        "name": "_cbcLocationConstraint",
                        "shape": "BucketLocationConstraint",
                        "locationName": "LocationConstraint",
                        "documentation": "Specifies the region where the bucket will be created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbcLocationConstraint",
                        "name": "_cbcLocationConstraint",
                        "shape": "BucketLocationConstraint",
                        "locationName": "LocationConstraint",
                        "documentation": "Specifies the region where the bucket will be created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "tagging",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "tTagSet",
                    "name": "_tTagSet",
                    "shape": "TagSet",
                    "locationName": "TagSet",
                    "documentation": null,
                    "typeExposed": "[Tag]",
                    "type": "[Tag]"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "tTagSet",
                    "name": "_tTagSet",
                    "shape": "TagSet",
                    "locationName": "TagSet",
                    "documentation": null,
                    "typeExposed": "[Tag]",
                    "type": "[Tag]"
                },
                "required": [],
                "name": "Tagging",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "tTagSet",
                        "name": "_tTagSet",
                        "shape": "TagSet",
                        "locationName": "TagSet",
                        "documentation": null,
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "tTagSet",
                        "name": "_tTagSet",
                        "shape": "TagSet",
                        "locationName": "TagSet",
                        "documentation": null,
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 7,
                "ctor": "lifecycleExpiration",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": "mapping _Time",
                    "default": "Nothing",
                    "required": false,
                    "lens": "leDate",
                    "name": "_leDate",
                    "shape": "Date",
                    "locationName": "Date",
                    "documentation": "Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.",
                    "typeExposed": "Maybe UTCTime",
                    "type": "Maybe ISO8601"
                },
                "required": [],
                "name": "LifecycleExpiration",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "leDate",
                        "name": "_leDate",
                        "shape": "Date",
                        "locationName": "Date",
                        "documentation": "Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "leDays",
                        "name": "_leDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "leDate",
                        "name": "_leDate",
                        "shape": "Date",
                        "locationName": "Date",
                        "documentation": "Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "leDays",
                        "name": "_leDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "corsconfiguration",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "corscCORSRules",
                    "name": "_corscCORSRules",
                    "shape": "CORSRules",
                    "locationName": "CORSRule",
                    "documentation": null,
                    "typeExposed": "[CORSRule]",
                    "type": "[CORSRule]"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "corscCORSRules",
                    "name": "_corscCORSRules",
                    "shape": "CORSRules",
                    "locationName": "CORSRule",
                    "documentation": null,
                    "typeExposed": "[CORSRule]",
                    "type": "[CORSRule]"
                },
                "required": [],
                "name": "CORSConfiguration",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "corscCORSRules",
                        "name": "_corscCORSRules",
                        "shape": "CORSRules",
                        "locationName": "CORSRule",
                        "documentation": null,
                        "typeExposed": "[CORSRule]",
                        "type": "[CORSRule]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "corscCORSRules",
                        "name": "_corscCORSRules",
                        "shape": "CORSRules",
                        "locationName": "CORSRule",
                        "documentation": null,
                        "typeExposed": "[CORSRule]",
                        "type": "[CORSRule]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "object",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "oKey",
                    "name": "_oKey",
                    "shape": "ObjectKey",
                    "locationName": "Key",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "oKey",
                        "name": "_oKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "oLastModified",
                        "name": "_oLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": null,
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "oETag",
                        "name": "_oETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "oSize",
                        "name": "_oSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": null,
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "oStorageClass",
                        "name": "_oStorageClass",
                        "shape": "ObjectStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "oOwner",
                        "name": "_oOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Owner",
                        "type": "Owner"
                    }
                ],
                "name": "Object",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "oETag",
                        "name": "_oETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "oKey",
                        "name": "_oKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "oLastModified",
                        "name": "_oLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": null,
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "oOwner",
                        "name": "_oOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Owner",
                        "type": "Owner"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "oSize",
                        "name": "_oSize",
                        "shape": "Size",
                        "locationName": "Size",
                        "documentation": null,
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "oStorageClass",
                        "name": "_oStorageClass",
                        "shape": "ObjectStorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "commonPrefix",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cpPrefix",
                    "name": "_cpPrefix",
                    "shape": "Prefix",
                    "locationName": "Prefix",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cpPrefix",
                    "name": "_cpPrefix",
                    "shape": "Prefix",
                    "locationName": "Prefix",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "CommonPrefix",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpPrefix",
                        "name": "_cpPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpPrefix",
                        "name": "_cpPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "multipartUpload",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "muUploadId",
                    "name": "_muUploadId",
                    "shape": "MultipartUploadId",
                    "locationName": "UploadId",
                    "documentation": "Upload ID that identifies the multipart upload.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "MultipartUpload",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "muUploadId",
                        "name": "_muUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "Upload ID that identifies the multipart upload.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "muKey",
                        "name": "_muKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Key of the object for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "muInitiated",
                        "name": "_muInitiated",
                        "shape": "Initiated",
                        "locationName": "Initiated",
                        "documentation": "Date and time at which the multipart upload was initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "muStorageClass",
                        "name": "_muStorageClass",
                        "shape": "StorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "muOwner",
                        "name": "_muOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "muInitiator",
                        "name": "_muInitiator",
                        "shape": "Initiator",
                        "locationName": "Initiator",
                        "documentation": "Identifies who initiated the multipart upload.",
                        "typeExposed": "Maybe Initiator",
                        "type": "Maybe Initiator"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "muInitiated",
                        "name": "_muInitiated",
                        "shape": "Initiated",
                        "locationName": "Initiated",
                        "documentation": "Date and time at which the multipart upload was initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "muInitiator",
                        "name": "_muInitiator",
                        "shape": "Initiator",
                        "locationName": "Initiator",
                        "documentation": "Identifies who initiated the multipart upload.",
                        "typeExposed": "Maybe Initiator",
                        "type": "Maybe Initiator"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "muKey",
                        "name": "_muKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Key of the object for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "muOwner",
                        "name": "_muOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "muStorageClass",
                        "name": "_muStorageClass",
                        "shape": "StorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "muUploadId",
                        "name": "_muUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "Upload ID that identifies the multipart upload.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Group": "Group",
                    "CanonicalUser": "CanonicalUser",
                    "AmazonCustomerByEmail": "AmazonCustomerByEmail"
                },
                "valuePad": 22,
                "name": "Type",
                "type": "nullary",
                "branchPad": 21
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "TSCGlacier": "GLACIER"
                },
                "valuePad": 8,
                "name": "TransitionStorageClass",
                "type": "nullary",
                "branchPad": 10
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "completedMultipartUpload",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "cmuParts",
                    "name": "_cmuParts",
                    "shape": "CompletedPartList",
                    "locationName": "Part",
                    "documentation": null,
                    "typeExposed": "[CompletedPart]",
                    "type": "[CompletedPart]"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "cmuParts",
                    "name": "_cmuParts",
                    "shape": "CompletedPartList",
                    "locationName": "Part",
                    "documentation": null,
                    "typeExposed": "[CompletedPart]",
                    "type": "[CompletedPart]"
                },
                "required": [],
                "name": "CompletedMultipartUpload",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cmuParts",
                        "name": "_cmuParts",
                        "shape": "CompletedPartList",
                        "locationName": "Part",
                        "documentation": null,
                        "typeExposed": "[CompletedPart]",
                        "type": "[CompletedPart]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cmuParts",
                        "name": "_cmuParts",
                        "shape": "CompletedPartList",
                        "locationName": "Part",
                        "documentation": null,
                        "typeExposed": "[CompletedPart]",
                        "type": "[CompletedPart]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 29,
                "ctor": "condition",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cHttpErrorCodeReturnedEquals",
                    "name": "_cHttpErrorCodeReturnedEquals",
                    "shape": "HttpErrorCodeReturnedEquals",
                    "locationName": "HttpErrorCodeReturnedEquals",
                    "documentation": "The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element Condition is specified and sibling KeyPrefixEquals is not specified. If both are specified, then both must be true for the redirect to be applied.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Condition",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cHttpErrorCodeReturnedEquals",
                        "name": "_cHttpErrorCodeReturnedEquals",
                        "shape": "HttpErrorCodeReturnedEquals",
                        "locationName": "HttpErrorCodeReturnedEquals",
                        "documentation": "The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element Condition is specified and sibling KeyPrefixEquals is not specified. If both are specified, then both must be true for the redirect to be applied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cKeyPrefixEquals",
                        "name": "_cKeyPrefixEquals",
                        "shape": "KeyPrefixEquals",
                        "locationName": "KeyPrefixEquals",
                        "documentation": "The object key name prefix when the redirect is applied. For example, to redirect requests for ExamplePage.html, the key prefix will be ExamplePage.html. To redirect request for all pages with the prefix docs/, the key prefix will be /docs, which identifies all objects in the docs/ folder. Required when the parent element Condition is specified and sibling HttpErrorCodeReturnedEquals is not specified. If both conditions are specified, both must be true for the redirect to be applied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cHttpErrorCodeReturnedEquals",
                        "name": "_cHttpErrorCodeReturnedEquals",
                        "shape": "HttpErrorCodeReturnedEquals",
                        "locationName": "HttpErrorCodeReturnedEquals",
                        "documentation": "The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element Condition is specified and sibling KeyPrefixEquals is not specified. If both are specified, then both must be true for the redirect to be applied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cKeyPrefixEquals",
                        "name": "_cKeyPrefixEquals",
                        "shape": "KeyPrefixEquals",
                        "locationName": "KeyPrefixEquals",
                        "documentation": "The object key name prefix when the redirect is applied. For example, to redirect requests for ExamplePage.html, the key prefix will be ExamplePage.html. To redirect request for all pages with the prefix docs/, the key prefix will be /docs, which identifies all objects in the docs/ folder. Required when the parent element Condition is specified and sibling HttpErrorCodeReturnedEquals is not specified. If both conditions are specified, both must be true for the redirect to be applied.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "PFullControl": "FULL_CONTROL",
                    "PRead": "READ",
                    "PWrite": "WRITE",
                    "PReadAcp": "READ_ACP",
                    "PWriteAcp": "WRITE_ACP"
                },
                "valuePad": 13,
                "name": "Permission",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 10,
                "ctor": "accessControlPolicy",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "acpGrants",
                    "name": "_acpGrants",
                    "shape": "Grants",
                    "locationName": "AccessControlList",
                    "documentation": "A list of grants.",
                    "typeExposed": "[Grant]",
                    "type": "[Grant]"
                },
                "required": [],
                "name": "AccessControlPolicy",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "acpGrants",
                        "name": "_acpGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "[Grant]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "acpOwner",
                        "name": "_acpOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "acpGrants",
                        "name": "_acpGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "[Grant]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "acpOwner",
                        "name": "_acpOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "CannedpublicReadWrite": "public-read-write",
                    "CannedpublicRead": "public-read",
                    "CannedauthenticatedRead": "authenticated-read",
                    "Cannedprivate": "private"
                },
                "valuePad": 19,
                "name": "BucketCannedACL",
                "type": "nullary",
                "branchPad": 23
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "MFADDisabled": "Disabled",
                    "MFADEnabled": "Enabled"
                },
                "valuePad": 9,
                "name": "MFADelete",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "grantee",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gDisplayName",
                    "name": "_gDisplayName",
                    "shape": "DisplayName",
                    "locationName": "DisplayName",
                    "documentation": "Screen name of the grantee.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gType",
                        "name": "_gType",
                        "shape": "Type",
                        "locationName": "Type",
                        "documentation": "Type of grantee",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "Grantee",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gDisplayName",
                        "name": "_gDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": "Screen name of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gEmailAddress",
                        "name": "_gEmailAddress",
                        "shape": "EmailAddress",
                        "locationName": "EmailAddress",
                        "documentation": "Email address of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gID",
                        "name": "_gID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "The canonical user ID of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gURI",
                        "name": "_gURI",
                        "shape": "URI",
                        "locationName": "URI",
                        "documentation": "URI of the grantee group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gDisplayName",
                        "name": "_gDisplayName",
                        "shape": "DisplayName",
                        "locationName": "DisplayName",
                        "documentation": "Screen name of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gEmailAddress",
                        "name": "_gEmailAddress",
                        "shape": "EmailAddress",
                        "locationName": "EmailAddress",
                        "documentation": "Email address of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gID",
                        "name": "_gID",
                        "shape": "ID",
                        "locationName": "ID",
                        "documentation": "The canonical user ID of the grantee.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gType",
                        "name": "_gType",
                        "shape": "Type",
                        "locationName": "Type",
                        "documentation": "Type of grantee",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gURI",
                        "name": "_gURI",
                        "shape": "URI",
                        "locationName": "URI",
                        "documentation": "URI of the grantee group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "lifecycleConfiguration",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "lcRules",
                    "name": "_lcRules",
                    "shape": "Rules",
                    "locationName": "Rule",
                    "documentation": null,
                    "typeExposed": "[Rule]",
                    "type": "[Rule]"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "lcRules",
                    "name": "_lcRules",
                    "shape": "Rules",
                    "locationName": "Rule",
                    "documentation": null,
                    "typeExposed": "[Rule]",
                    "type": "[Rule]"
                },
                "required": [],
                "name": "LifecycleConfiguration",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lcRules",
                        "name": "_lcRules",
                        "shape": "Rules",
                        "locationName": "Rule",
                        "documentation": null,
                        "typeExposed": "[Rule]",
                        "type": "[Rule]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lcRules",
                        "name": "_lcRules",
                        "shape": "Rules",
                        "locationName": "Rule",
                        "documentation": null,
                        "typeExposed": "[Rule]",
                        "type": "[Rule]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "loggingEnabled",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "leTargetBucket",
                    "name": "_leTargetBucket",
                    "shape": "TargetBucket",
                    "locationName": "TargetBucket",
                    "documentation": "Specifies the bucket where you want Amazon S3 to store server access logs. You can have your logs delivered to any bucket that you own, including the same bucket that is being logged. You can also configure multiple buckets to deliver their logs to the same target bucket. In this case you should choose a different TargetPrefix for each source bucket so that the delivered log files can be distinguished by key.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "LoggingEnabled",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "leTargetBucket",
                        "name": "_leTargetBucket",
                        "shape": "TargetBucket",
                        "locationName": "TargetBucket",
                        "documentation": "Specifies the bucket where you want Amazon S3 to store server access logs. You can have your logs delivered to any bucket that you own, including the same bucket that is being logged. You can also configure multiple buckets to deliver their logs to the same target bucket. In this case you should choose a different TargetPrefix for each source bucket so that the delivered log files can be distinguished by key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "leTargetGrants",
                        "name": "_leTargetGrants",
                        "shape": "TargetGrants",
                        "locationName": "TargetGrants",
                        "documentation": null,
                        "typeExposed": "[TargetGrant]",
                        "type": "[TargetGrant]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "leTargetPrefix",
                        "name": "_leTargetPrefix",
                        "shape": "TargetPrefix",
                        "locationName": "TargetPrefix",
                        "documentation": "This element lets you specify a prefix for the keys that the log files will be stored under.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "leTargetBucket",
                        "name": "_leTargetBucket",
                        "shape": "TargetBucket",
                        "locationName": "TargetBucket",
                        "documentation": "Specifies the bucket where you want Amazon S3 to store server access logs. You can have your logs delivered to any bucket that you own, including the same bucket that is being logged. You can also configure multiple buckets to deliver their logs to the same target bucket. In this case you should choose a different TargetPrefix for each source bucket so that the delivered log files can be distinguished by key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "leTargetGrants",
                        "name": "_leTargetGrants",
                        "shape": "TargetGrants",
                        "locationName": "TargetGrants",
                        "documentation": null,
                        "typeExposed": "[TargetGrant]",
                        "type": "[TargetGrant]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "leTargetPrefix",
                        "name": "_leTargetPrefix",
                        "shape": "TargetPrefix",
                        "locationName": "TargetPrefix",
                        "documentation": "This element lets you specify a prefix for the keys that the log files will be stored under.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "AES256": "AES256"
                },
                "valuePad": 7,
                "name": "ServerSideEncryption",
                "type": "nullary",
                "branchPad": 6
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "indexDocument",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "idSuffix",
                    "name": "_idSuffix",
                    "shape": "Suffix",
                    "locationName": "Suffix",
                    "documentation": "A suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "idSuffix",
                    "name": "_idSuffix",
                    "shape": "Suffix",
                    "locationName": "Suffix",
                    "documentation": "A suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "idSuffix",
                        "name": "_idSuffix",
                        "shape": "Suffix",
                        "locationName": "Suffix",
                        "documentation": "A suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "IndexDocument",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "idSuffix",
                        "name": "_idSuffix",
                        "shape": "Suffix",
                        "locationName": "Suffix",
                        "documentation": "A suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "copyObjectResult",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "corETag",
                    "name": "_corETag",
                    "shape": "ETag",
                    "locationName": "ETag",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "CopyObjectResult",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corETag",
                        "name": "_corETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "corLastModified",
                        "name": "_corLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": null,
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corETag",
                        "name": "_corETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "corLastModified",
                        "name": "_corLastModified",
                        "shape": "LastModified",
                        "locationName": "LastModified",
                        "documentation": null,
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 9,
                "ctor": "delete",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dObjects",
                    "name": "_dObjects",
                    "shape": "ObjectIdentifierList",
                    "locationName": "Object",
                    "documentation": null,
                    "typeExposed": "[ObjectIdentifier]",
                    "type": "[ObjectIdentifier]"
                },
                "required": [],
                "name": "Delete",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dObjects",
                        "name": "_dObjects",
                        "shape": "ObjectIdentifierList",
                        "locationName": "Object",
                        "documentation": null,
                        "typeExposed": "[ObjectIdentifier]",
                        "type": "[ObjectIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dQuiet",
                        "name": "_dQuiet",
                        "shape": "Quiet",
                        "locationName": "Quiet",
                        "documentation": "Element to enable quiet mode for the request. When you add this element, you must set its value to true.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dObjects",
                        "name": "_dObjects",
                        "shape": "ObjectIdentifierList",
                        "locationName": "Object",
                        "documentation": null,
                        "typeExposed": "[ObjectIdentifier]",
                        "type": "[ObjectIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dQuiet",
                        "name": "_dQuiet",
                        "shape": "Quiet",
                        "locationName": "Quiet",
                        "documentation": "Element to enable quiet mode for the request. When you add this element, you must set its value to true.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum",
                    "Num"
                ],
                "fieldPad": 0,
                "ctor": "restoreRequest",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rrDays",
                    "name": "_rrDays",
                    "shape": "Days",
                    "locationName": "Days",
                    "documentation": "Lifetime of the active copy in days",
                    "typeExposed": "Int",
                    "type": "Int"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rrDays",
                    "name": "_rrDays",
                    "shape": "Days",
                    "locationName": "Days",
                    "documentation": "Lifetime of the active copy in days",
                    "typeExposed": "Int",
                    "type": "Int"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrDays",
                        "name": "_rrDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Lifetime of the active copy in days",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "name": "RestoreRequest",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrDays",
                        "name": "_rrDays",
                        "shape": "Days",
                        "locationName": "Days",
                        "documentation": "Lifetime of the active copy in days",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            }
        ],
        "imports": [
            "Network.AWS.S3.Internal"
        ]
    },
    "operations": [
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "abortMultipartUploadResponse",
                "wrapper": false,
                "required": [],
                "name": "AbortMultipartUploadResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.AbortMultipartUpload",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "AbortMultipartUpload",
            "method": "delete",
            "documentation": "\u003cp\u003eAborts a multipart upload.\u003c/p\u003e \u003cp\u003eTo verify that all parts have been removed, so you don't get charged for the part storage, you should call the List Parts operation and ensure the parts list is empty.\u003c/p\u003e",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadAbort.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 13,
                "ctor": "abortMultipartUpload",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_amurBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_amurKey",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "amurBucket",
                        "name": "_amurBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "amurKey",
                        "name": "_amurKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "amurUploadId",
                        "name": "_amurUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 9,
                "name": "AbortMultipartUpload",
                "query": [
                    {
                        "field": "_amurUploadId",
                        "locationName": "uploadId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "amurBucket",
                        "name": "_amurBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "amurKey",
                        "name": "_amurKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "amurUploadId",
                        "name": "_amurUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 25,
                "ctor": "completeMultipartUploadOutput",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cmuoLocation",
                    "name": "_cmuoLocation",
                    "shape": "Location",
                    "locationName": "Location",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "CompleteMultipartUploadOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuoLocation",
                        "name": "_cmuoLocation",
                        "shape": "Location",
                        "locationName": "Location",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuoBucket",
                        "name": "_cmuoBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuoKey",
                        "name": "_cmuoKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuoExpiration",
                        "name": "_cmuoExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured, this will contain the expiration date (expiry-date) and rule ID (rule-id). The value of rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuoETag",
                        "name": "_cmuoETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuoServerSideEncryption",
                        "name": "_cmuoServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuoVersionId",
                        "name": "_cmuoVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuoBucket",
                        "name": "_cmuoBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuoETag",
                        "name": "_cmuoETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuoExpiration",
                        "name": "_cmuoExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured, this will contain the expiration date (expiry-date) and rule ID (rule-id). The value of rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuoKey",
                        "name": "_cmuoKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuoLocation",
                        "name": "_cmuoLocation",
                        "shape": "Location",
                        "locationName": "Location",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuoServerSideEncryption",
                        "name": "_cmuoServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuoVersionId",
                        "name": "_cmuoVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.CompleteMultipartUpload",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "CompleteMultipartUpload",
            "method": "post",
            "documentation": "Completes a multipart upload by assembling previously uploaded parts.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadComplete.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "completeMultipartUpload",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_cmurBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_cmurKey",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cmurMultipartUpload",
                    "name": "_cmurMultipartUpload",
                    "shape": "CompletedMultipartUpload",
                    "locationName": "CompleteMultipartUpload",
                    "documentation": null,
                    "typeExposed": "Maybe CompletedMultipartUpload",
                    "type": "Maybe CompletedMultipartUpload"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cmurBucket",
                        "name": "_cmurBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cmurKey",
                        "name": "_cmurKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cmurUploadId",
                        "name": "_cmurUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 9,
                "name": "CompleteMultipartUpload",
                "query": [
                    {
                        "field": "_cmurUploadId",
                        "locationName": "uploadId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmurMultipartUpload",
                        "name": "_cmurMultipartUpload",
                        "shape": "CompletedMultipartUpload",
                        "locationName": "CompleteMultipartUpload",
                        "documentation": null,
                        "typeExposed": "Maybe CompletedMultipartUpload",
                        "type": "Maybe CompletedMultipartUpload"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cmurBucket",
                        "name": "_cmurBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cmurKey",
                        "name": "_cmurKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmurMultipartUpload",
                        "name": "_cmurMultipartUpload",
                        "shape": "CompletedMultipartUpload",
                        "locationName": "CompleteMultipartUpload",
                        "documentation": null,
                        "typeExposed": "Maybe CompletedMultipartUpload",
                        "type": "Maybe CompletedMultipartUpload"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cmurUploadId",
                        "name": "_cmurUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "copyObjectOutput",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cooCopyObjectResult",
                    "name": "_cooCopyObjectResult",
                    "shape": "CopyObjectResult",
                    "locationName": "CopyObjectResult",
                    "documentation": null,
                    "typeExposed": "Maybe CopyObjectResult",
                    "type": "Maybe CopyObjectResult"
                },
                "required": [],
                "name": "CopyObjectOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cooCopyObjectResult",
                        "name": "_cooCopyObjectResult",
                        "shape": "CopyObjectResult",
                        "locationName": "CopyObjectResult",
                        "documentation": null,
                        "typeExposed": "Maybe CopyObjectResult",
                        "type": "Maybe CopyObjectResult"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "cooExpiration",
                        "name": "_cooExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured, the response includes this header.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cooCopySourceVersionId",
                        "name": "_cooCopySourceVersionId",
                        "shape": "CopySourceVersionId",
                        "locationName": "x-amz-copy-source-version-id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cooServerSideEncryption",
                        "name": "_cooServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cooSSECustomerAlgorithm",
                        "name": "_cooSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cooSSECustomerKeyMD5",
                        "name": "_cooSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cooCopyObjectResult",
                        "name": "_cooCopyObjectResult",
                        "shape": "CopyObjectResult",
                        "locationName": "CopyObjectResult",
                        "documentation": null,
                        "typeExposed": "Maybe CopyObjectResult",
                        "type": "Maybe CopyObjectResult"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cooCopySourceVersionId",
                        "name": "_cooCopySourceVersionId",
                        "shape": "CopySourceVersionId",
                        "locationName": "x-amz-copy-source-version-id",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "cooExpiration",
                        "name": "_cooExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured, the response includes this header.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cooSSECustomerAlgorithm",
                        "name": "_cooSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cooSSECustomerKeyMD5",
                        "name": "_cooSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cooServerSideEncryption",
                        "name": "_cooServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.CopyObject",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "CopyObject",
            "method": "put",
            "documentation": "Creates a copy of an object that is already stored in Amazon S3.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectCOPY.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 34,
                "ctor": "copyObject",
                "headerPad": 60,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_corBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_corKey",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "corBucket",
                        "name": "_corBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "corCopySource",
                        "name": "_corCopySource",
                        "shape": "CopySource",
                        "locationName": "x-amz-copy-source",
                        "documentation": "The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "corKey",
                        "name": "_corKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [
                    {
                        "field": "_corACL",
                        "locationName": "x-amz-acl",
                        "type": "field"
                    },
                    {
                        "field": "_corCacheControl",
                        "locationName": "Cache-Control",
                        "type": "field"
                    },
                    {
                        "field": "_corContentDisposition",
                        "locationName": "Content-Disposition",
                        "type": "field"
                    },
                    {
                        "field": "_corContentEncoding",
                        "locationName": "Content-Encoding",
                        "type": "field"
                    },
                    {
                        "field": "_corContentLanguage",
                        "locationName": "Content-Language",
                        "type": "field"
                    },
                    {
                        "field": "_corContentType",
                        "locationName": "Content-Type",
                        "type": "field"
                    },
                    {
                        "field": "_corCopySource",
                        "locationName": "x-amz-copy-source",
                        "type": "field"
                    },
                    {
                        "field": "_corCopySourceIfMatch",
                        "locationName": "x-amz-copy-source-if-match",
                        "type": "field"
                    },
                    {
                        "field": "_corCopySourceIfModifiedSince",
                        "locationName": "x-amz-copy-source-if-modified-since",
                        "type": "field"
                    },
                    {
                        "field": "_corCopySourceIfNoneMatch",
                        "locationName": "x-amz-copy-source-if-none-match",
                        "type": "field"
                    },
                    {
                        "field": "_corCopySourceIfUnmodifiedSince",
                        "locationName": "x-amz-copy-source-if-unmodified-since",
                        "type": "field"
                    },
                    {
                        "field": "_corExpires",
                        "locationName": "Expires",
                        "type": "field"
                    },
                    {
                        "field": "_corGrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "type": "field"
                    },
                    {
                        "field": "_corGrantRead",
                        "locationName": "x-amz-grant-read",
                        "type": "field"
                    },
                    {
                        "field": "_corGrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "type": "field"
                    },
                    {
                        "field": "_corGrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "type": "field"
                    },
                    {
                        "field": "_corMetadata",
                        "locationName": "x-amz-meta-",
                        "type": "field"
                    },
                    {
                        "field": "_corMetadataDirective",
                        "locationName": "x-amz-metadata-directive",
                        "type": "field"
                    },
                    {
                        "field": "_corServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "type": "field"
                    },
                    {
                        "field": "_corStorageClass",
                        "locationName": "x-amz-storage-class",
                        "type": "field"
                    },
                    {
                        "field": "_corWebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "type": "field"
                    },
                    {
                        "field": "_corSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_corSSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_corSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_corCopySourceSSECustomerAlgorithm",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_corCopySourceSSECustomerKey",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_corCopySourceSSECustomerKeyMD5",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "CopyObject",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corACL",
                        "name": "_corACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCacheControl",
                        "name": "_corCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corContentDisposition",
                        "name": "_corContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corContentEncoding",
                        "name": "_corContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corContentLanguage",
                        "name": "_corContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corContentType",
                        "name": "_corContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCopySourceIfMatch",
                        "name": "_corCopySourceIfMatch",
                        "shape": "CopySourceIfMatch",
                        "locationName": "x-amz-copy-source-if-match",
                        "documentation": "Copies the object if its entity tag (ETag) matches the specified tag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCopySourceIfModifiedSince",
                        "name": "_corCopySourceIfModifiedSince",
                        "shape": "CopySourceIfModifiedSince",
                        "locationName": "x-amz-copy-source-if-modified-since",
                        "documentation": "Copies the object if it has been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCopySourceIfNoneMatch",
                        "name": "_corCopySourceIfNoneMatch",
                        "shape": "CopySourceIfNoneMatch",
                        "locationName": "x-amz-copy-source-if-none-match",
                        "documentation": "Copies the object if its entity tag (ETag) is different than the specified ETag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCopySourceIfUnmodifiedSince",
                        "name": "_corCopySourceIfUnmodifiedSince",
                        "shape": "CopySourceIfUnmodifiedSince",
                        "locationName": "x-amz-copy-source-if-unmodified-since",
                        "documentation": "Copies the object if it hasn't been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "corExpires",
                        "name": "_corExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corGrantFullControl",
                        "name": "_corGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corGrantRead",
                        "name": "_corGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to read the object data and its metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corGrantReadACP",
                        "name": "_corGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the object ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corGrantWriteACP",
                        "name": "_corGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "corMetadata",
                        "name": "_corMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corMetadataDirective",
                        "name": "_corMetadataDirective",
                        "shape": "MetadataDirective",
                        "locationName": "x-amz-metadata-directive",
                        "documentation": "Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corServerSideEncryption",
                        "name": "_corServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corStorageClass",
                        "name": "_corStorageClass",
                        "shape": "StorageClass",
                        "locationName": "x-amz-storage-class",
                        "documentation": "The type of storage to use for the object. Defaults to 'STANDARD'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corWebsiteRedirectLocation",
                        "name": "_corWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corSSECustomerAlgorithm",
                        "name": "_corSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "corSSECustomerKey",
                        "name": "_corSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corSSECustomerKeyMD5",
                        "name": "_corSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCopySourceSSECustomerAlgorithm",
                        "name": "_corCopySourceSSECustomerAlgorithm",
                        "shape": "CopySourceSSECustomerAlgorithm",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use when decrypting the source object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCopySourceSSECustomerKey",
                        "name": "_corCopySourceSSECustomerKey",
                        "shape": "CopySourceSSECustomerKey",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCopySourceSSECustomerKeyMD5",
                        "name": "_corCopySourceSSECustomerKeyMD5",
                        "shape": "CopySourceSSECustomerKeyMD5",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corACL",
                        "name": "_corACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "corBucket",
                        "name": "_corBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCacheControl",
                        "name": "_corCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corContentDisposition",
                        "name": "_corContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corContentEncoding",
                        "name": "_corContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corContentLanguage",
                        "name": "_corContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corContentType",
                        "name": "_corContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "corCopySource",
                        "name": "_corCopySource",
                        "shape": "CopySource",
                        "locationName": "x-amz-copy-source",
                        "documentation": "The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCopySourceIfMatch",
                        "name": "_corCopySourceIfMatch",
                        "shape": "CopySourceIfMatch",
                        "locationName": "x-amz-copy-source-if-match",
                        "documentation": "Copies the object if its entity tag (ETag) matches the specified tag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCopySourceIfModifiedSince",
                        "name": "_corCopySourceIfModifiedSince",
                        "shape": "CopySourceIfModifiedSince",
                        "locationName": "x-amz-copy-source-if-modified-since",
                        "documentation": "Copies the object if it has been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCopySourceIfNoneMatch",
                        "name": "_corCopySourceIfNoneMatch",
                        "shape": "CopySourceIfNoneMatch",
                        "locationName": "x-amz-copy-source-if-none-match",
                        "documentation": "Copies the object if its entity tag (ETag) is different than the specified ETag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCopySourceIfUnmodifiedSince",
                        "name": "_corCopySourceIfUnmodifiedSince",
                        "shape": "CopySourceIfUnmodifiedSince",
                        "locationName": "x-amz-copy-source-if-unmodified-since",
                        "documentation": "Copies the object if it hasn't been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCopySourceSSECustomerAlgorithm",
                        "name": "_corCopySourceSSECustomerAlgorithm",
                        "shape": "CopySourceSSECustomerAlgorithm",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use when decrypting the source object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCopySourceSSECustomerKey",
                        "name": "_corCopySourceSSECustomerKey",
                        "shape": "CopySourceSSECustomerKey",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corCopySourceSSECustomerKeyMD5",
                        "name": "_corCopySourceSSECustomerKeyMD5",
                        "shape": "CopySourceSSECustomerKeyMD5",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "corExpires",
                        "name": "_corExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corGrantFullControl",
                        "name": "_corGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corGrantRead",
                        "name": "_corGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to read the object data and its metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corGrantReadACP",
                        "name": "_corGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the object ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corGrantWriteACP",
                        "name": "_corGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "corKey",
                        "name": "_corKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "corMetadata",
                        "name": "_corMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corMetadataDirective",
                        "name": "_corMetadataDirective",
                        "shape": "MetadataDirective",
                        "locationName": "x-amz-metadata-directive",
                        "documentation": "Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corSSECustomerAlgorithm",
                        "name": "_corSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "corSSECustomerKey",
                        "name": "_corSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corSSECustomerKeyMD5",
                        "name": "_corSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corServerSideEncryption",
                        "name": "_corServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corStorageClass",
                        "name": "_corStorageClass",
                        "shape": "StorageClass",
                        "locationName": "x-amz-storage-class",
                        "documentation": "The type of storage to use for the object. Defaults to 'STANDARD'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "corWebsiteRedirectLocation",
                        "name": "_corWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createBucketOutput",
                "field": {
                    "location": "header",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cboLocation",
                    "name": "_cboLocation",
                    "shape": "Location",
                    "locationName": "Location",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "CreateBucketOutput",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cboLocation",
                        "name": "_cboLocation",
                        "shape": "Location",
                        "locationName": "Location",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cboLocation",
                        "name": "_cboLocation",
                        "shape": "Location",
                        "locationName": "Location",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.CreateBucket",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "CreateBucket",
            "method": "put",
            "documentation": "Creates a new bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUT.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 29,
                "ctor": "createBucket",
                "headerPad": 25,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_cbrBucket",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cbrCreateBucketConfiguration",
                    "name": "_cbrCreateBucketConfiguration",
                    "shape": "CreateBucketConfiguration",
                    "locationName": "CreateBucketConfiguration",
                    "documentation": null,
                    "typeExposed": "Maybe CreateBucketConfiguration",
                    "type": "Maybe CreateBucketConfiguration"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cbrBucket",
                        "name": "_cbrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [
                    {
                        "field": "_cbrACL",
                        "locationName": "x-amz-acl",
                        "type": "field"
                    },
                    {
                        "field": "_cbrGrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "type": "field"
                    },
                    {
                        "field": "_cbrGrantRead",
                        "locationName": "x-amz-grant-read",
                        "type": "field"
                    },
                    {
                        "field": "_cbrGrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "type": "field"
                    },
                    {
                        "field": "_cbrGrantWrite",
                        "locationName": "x-amz-grant-write",
                        "type": "field"
                    },
                    {
                        "field": "_cbrGrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "CreateBucket",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbrACL",
                        "name": "_cbrACL",
                        "shape": "BucketCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbrCreateBucketConfiguration",
                        "name": "_cbrCreateBucketConfiguration",
                        "shape": "CreateBucketConfiguration",
                        "locationName": "CreateBucketConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CreateBucketConfiguration",
                        "type": "Maybe CreateBucketConfiguration"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbrGrantFullControl",
                        "name": "_cbrGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbrGrantRead",
                        "name": "_cbrGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to list the objects in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbrGrantReadACP",
                        "name": "_cbrGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the bucket ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbrGrantWrite",
                        "name": "_cbrGrantWrite",
                        "shape": "GrantWrite",
                        "locationName": "x-amz-grant-write",
                        "documentation": "Allows grantee to create, overwrite, and delete any object in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbrGrantWriteACP",
                        "name": "_cbrGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbrACL",
                        "name": "_cbrACL",
                        "shape": "BucketCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cbrBucket",
                        "name": "_cbrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbrCreateBucketConfiguration",
                        "name": "_cbrCreateBucketConfiguration",
                        "shape": "CreateBucketConfiguration",
                        "locationName": "CreateBucketConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CreateBucketConfiguration",
                        "type": "Maybe CreateBucketConfiguration"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbrGrantFullControl",
                        "name": "_cbrGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbrGrantRead",
                        "name": "_cbrGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to list the objects in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbrGrantReadACP",
                        "name": "_cbrGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the bucket ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbrGrantWrite",
                        "name": "_cbrGrantWrite",
                        "shape": "GrantWrite",
                        "locationName": "x-amz-grant-write",
                        "documentation": "Allows grantee to create, overwrite, and delete any object in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbrGrantWriteACP",
                        "name": "_cbrGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 26,
                "ctor": "createMultipartUploadOutput",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cmuo1Bucket",
                    "name": "_cmuo1Bucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": "Name of the bucket to which the multipart upload was initiated.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "CreateMultipartUploadOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuo1Bucket",
                        "name": "_cmuo1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuo1Key",
                        "name": "_cmuo1Key",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Object key for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuo1UploadId",
                        "name": "_cmuo1UploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "ID for the initiated multipart upload.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuo1ServerSideEncryption",
                        "name": "_cmuo1ServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuo1SSECustomerAlgorithm",
                        "name": "_cmuo1SSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuo1SSECustomerKeyMD5",
                        "name": "_cmuo1SSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuo1Bucket",
                        "name": "_cmuo1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuo1Key",
                        "name": "_cmuo1Key",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Object key for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuo1SSECustomerAlgorithm",
                        "name": "_cmuo1SSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuo1SSECustomerKeyMD5",
                        "name": "_cmuo1SSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuo1ServerSideEncryption",
                        "name": "_cmuo1ServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmuo1UploadId",
                        "name": "_cmuo1UploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "ID for the initiated multipart upload.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.CreateMultipartUpload",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "CreateMultipartUpload",
            "method": "post",
            "documentation": "\u003cp\u003eInitiates a multipart upload and returns an upload ID.\u003c/p\u003e \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e After you initiate multipart upload and upload one or more parts, you must either complete or abort multipart upload in order to stop getting charged for storage of the uploaded parts. Only after you either complete or abort multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts storage.\u003c/p\u003e",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadInitiate.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 29,
                "ctor": "createMultipartUpload",
                "headerPad": 48,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_cmur1Bucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_cmur1Key",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cmur1Bucket",
                        "name": "_cmur1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cmur1Key",
                        "name": "_cmur1Key",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [
                    {
                        "field": "_cmur1ACL",
                        "locationName": "x-amz-acl",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1CacheControl",
                        "locationName": "Cache-Control",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1ContentDisposition",
                        "locationName": "Content-Disposition",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1ContentEncoding",
                        "locationName": "Content-Encoding",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1ContentLanguage",
                        "locationName": "Content-Language",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1ContentType",
                        "locationName": "Content-Type",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1Expires",
                        "locationName": "Expires",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1GrantRead",
                        "locationName": "x-amz-grant-read",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1Metadata",
                        "locationName": "x-amz-meta-",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1StorageClass",
                        "locationName": "x-amz-storage-class",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_cmur1SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "CreateMultipartUpload",
                "query": [
                    {
                        "value": "uploads",
                        "type": "const"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1ACL",
                        "name": "_cmur1ACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1CacheControl",
                        "name": "_cmur1CacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1ContentDisposition",
                        "name": "_cmur1ContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1ContentEncoding",
                        "name": "_cmur1ContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1ContentLanguage",
                        "name": "_cmur1ContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1ContentType",
                        "name": "_cmur1ContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1Expires",
                        "name": "_cmur1Expires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1GrantFullControl",
                        "name": "_cmur1GrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1GrantRead",
                        "name": "_cmur1GrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to read the object data and its metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1GrantReadACP",
                        "name": "_cmur1GrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the object ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1GrantWriteACP",
                        "name": "_cmur1GrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "cmur1Metadata",
                        "name": "_cmur1Metadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1ServerSideEncryption",
                        "name": "_cmur1ServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1StorageClass",
                        "name": "_cmur1StorageClass",
                        "shape": "StorageClass",
                        "locationName": "x-amz-storage-class",
                        "documentation": "The type of storage to use for the object. Defaults to 'STANDARD'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1WebsiteRedirectLocation",
                        "name": "_cmur1WebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1SSECustomerAlgorithm",
                        "name": "_cmur1SSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1SSECustomerKey",
                        "name": "_cmur1SSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1SSECustomerKeyMD5",
                        "name": "_cmur1SSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1ACL",
                        "name": "_cmur1ACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cmur1Bucket",
                        "name": "_cmur1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1CacheControl",
                        "name": "_cmur1CacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1ContentDisposition",
                        "name": "_cmur1ContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1ContentEncoding",
                        "name": "_cmur1ContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1ContentLanguage",
                        "name": "_cmur1ContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1ContentType",
                        "name": "_cmur1ContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1Expires",
                        "name": "_cmur1Expires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1GrantFullControl",
                        "name": "_cmur1GrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1GrantRead",
                        "name": "_cmur1GrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to read the object data and its metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1GrantReadACP",
                        "name": "_cmur1GrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the object ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1GrantWriteACP",
                        "name": "_cmur1GrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cmur1Key",
                        "name": "_cmur1Key",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "cmur1Metadata",
                        "name": "_cmur1Metadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1SSECustomerAlgorithm",
                        "name": "_cmur1SSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1SSECustomerKey",
                        "name": "_cmur1SSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1SSECustomerKeyMD5",
                        "name": "_cmur1SSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1ServerSideEncryption",
                        "name": "_cmur1ServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1StorageClass",
                        "name": "_cmur1StorageClass",
                        "shape": "StorageClass",
                        "locationName": "x-amz-storage-class",
                        "documentation": "The type of storage to use for the object. Defaults to 'STANDARD'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cmur1WebsiteRedirectLocation",
                        "name": "_cmur1WebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteBucketResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteBucketResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.DeleteBucket",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "DeleteBucket",
            "method": "delete",
            "documentation": "Deletes the bucket. All objects (including all object versions and Delete Markers) in the bucket must be deleted before the bucket itself can be deleted.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETE.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteBucket",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dbrBucket",
                    "name": "_dbrBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dbrBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dbrBucket",
                        "name": "_dbrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteBucket",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dbrBucket",
                        "name": "_dbrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteBucketCorsResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteBucketCorsResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.DeleteBucketCors",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "DeleteBucketCors",
            "method": "delete",
            "documentation": "Deletes the cors configuration information set for the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEcors.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteBucketCors",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dbcrBucket",
                    "name": "_dbcrBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dbcrBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dbcrBucket",
                        "name": "_dbcrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteBucketCors",
                "query": [
                    {
                        "value": "cors",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dbcrBucket",
                        "name": "_dbcrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteBucketLifecycleResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteBucketLifecycleResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.DeleteBucketLifecycle",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "DeleteBucketLifecycle",
            "method": "delete",
            "documentation": "Deletes the lifecycle configuration from the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETElifecycle.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteBucketLifecycle",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dblrBucket",
                    "name": "_dblrBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dblrBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dblrBucket",
                        "name": "_dblrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteBucketLifecycle",
                "query": [
                    {
                        "value": "lifecycle",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dblrBucket",
                        "name": "_dblrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteBucketPolicyResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteBucketPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.DeleteBucketPolicy",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "DeleteBucketPolicy",
            "method": "delete",
            "documentation": "Deletes the policy from the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEpolicy.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteBucketPolicy",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dbprBucket",
                    "name": "_dbprBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dbprBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dbprBucket",
                        "name": "_dbprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteBucketPolicy",
                "query": [
                    {
                        "value": "policy",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dbprBucket",
                        "name": "_dbprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteBucketTaggingResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteBucketTaggingResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.DeleteBucketTagging",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "DeleteBucketTagging",
            "method": "delete",
            "documentation": "Deletes the tags from the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEtagging.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteBucketTagging",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dbtrBucket",
                    "name": "_dbtrBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dbtrBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dbtrBucket",
                        "name": "_dbtrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteBucketTagging",
                "query": [
                    {
                        "value": "tagging",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dbtrBucket",
                        "name": "_dbtrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteBucketWebsiteResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteBucketWebsiteResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.DeleteBucketWebsite",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "DeleteBucketWebsite",
            "method": "delete",
            "documentation": "This operation removes the website configuration from the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEwebsite.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteBucketWebsite",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dbwrBucket",
                    "name": "_dbwrBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dbwrBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dbwrBucket",
                        "name": "_dbwrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteBucketWebsite",
                "query": [
                    {
                        "value": "website",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dbwrBucket",
                        "name": "_dbwrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "deleteObjectOutput",
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "DeleteObjectOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dooDeleteMarker",
                        "name": "_dooDeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "documentation": "Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dooVersionId",
                        "name": "_dooVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Returns the version ID of the delete marker created as a result of the DELETE operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dooDeleteMarker",
                        "name": "_dooDeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "documentation": "Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dooVersionId",
                        "name": "_dooVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Returns the version ID of the delete marker created as a result of the DELETE operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.DeleteObject",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "DeleteObject",
            "method": "delete",
            "documentation": "Removes the null version (if there is one) of an object and inserts a delete marker, which becomes the latest version of the object. If there isn't a null version, Amazon S3 does not remove any objects.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectDELETE.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "deleteObject",
                "headerPad": 10,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dor1Bucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dor1Key",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dor1Bucket",
                        "name": "_dor1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dor1Key",
                        "name": "_dor1Key",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [
                    {
                        "field": "_dor1MFA",
                        "locationName": "x-amz-mfa",
                        "type": "field"
                    }
                ],
                "queryPad": 10,
                "name": "DeleteObject",
                "query": [
                    {
                        "field": "_dor1VersionId",
                        "locationName": "versionId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dor1MFA",
                        "name": "_dor1MFA",
                        "shape": "MFA",
                        "locationName": "x-amz-mfa",
                        "documentation": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dor1VersionId",
                        "name": "_dor1VersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dor1Bucket",
                        "name": "_dor1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dor1Key",
                        "name": "_dor1Key",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dor1MFA",
                        "name": "_dor1MFA",
                        "shape": "MFA",
                        "locationName": "x-amz-mfa",
                        "documentation": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dor1VersionId",
                        "name": "_dor1VersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 11,
                "ctor": "deleteObjectsOutput",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dooDeleted",
                    "name": "_dooDeleted",
                    "shape": "DeletedObjects",
                    "locationName": "Deleted",
                    "documentation": null,
                    "typeExposed": "[S3ServiceError]",
                    "type": "[S3ServiceError]"
                },
                "required": [],
                "name": "DeleteObjectsOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dooDeleted",
                        "name": "_dooDeleted",
                        "shape": "DeletedObjects",
                        "locationName": "Deleted",
                        "documentation": null,
                        "typeExposed": "[S3ServiceError]",
                        "type": "[S3ServiceError]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dooErrors",
                        "name": "_dooErrors",
                        "shape": "Errors",
                        "locationName": "Error",
                        "documentation": null,
                        "typeExposed": "[S3ServiceError]",
                        "type": "[S3ServiceError]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dooDeleted",
                        "name": "_dooDeleted",
                        "shape": "DeletedObjects",
                        "locationName": "Deleted",
                        "documentation": null,
                        "typeExposed": "[S3ServiceError]",
                        "type": "[S3ServiceError]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dooErrors",
                        "name": "_dooErrors",
                        "shape": "Errors",
                        "locationName": "Error",
                        "documentation": null,
                        "typeExposed": "[S3ServiceError]",
                        "type": "[S3ServiceError]"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.DeleteObjects",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "DeleteObjects",
            "method": "post",
            "documentation": "This operation enables you to delete multiple objects from a bucket using a single HTTP request. You may specify up to 1000 keys.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/multiobjectdeleteapi.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 10,
                "ctor": "deleteObjects",
                "headerPad": 10,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_dorBucket",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dorDelete",
                    "name": "_dorDelete",
                    "shape": "Delete",
                    "locationName": "Delete",
                    "documentation": null,
                    "typeExposed": "Delete",
                    "type": "Delete"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dorBucket",
                        "name": "_dorBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dorDelete",
                        "name": "_dorDelete",
                        "shape": "Delete",
                        "locationName": "Delete",
                        "documentation": null,
                        "typeExposed": "Delete",
                        "type": "Delete"
                    }
                ],
                "headers": [
                    {
                        "field": "_dorMFA",
                        "locationName": "x-amz-mfa",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "DeleteObjects",
                "query": [
                    {
                        "value": "delete",
                        "type": "const"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dorMFA",
                        "name": "_dorMFA",
                        "shape": "MFA",
                        "locationName": "x-amz-mfa",
                        "documentation": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dorBucket",
                        "name": "_dorBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dorDelete",
                        "name": "_dorDelete",
                        "shape": "Delete",
                        "locationName": "Delete",
                        "documentation": null,
                        "typeExposed": "Delete",
                        "type": "Delete"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dorMFA",
                        "name": "_dorMFA",
                        "shape": "MFA",
                        "locationName": "x-amz-mfa",
                        "documentation": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 11,
                "ctor": "getBucketAclOutput",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gbaoOwner",
                    "name": "_gbaoOwner",
                    "shape": "Owner",
                    "locationName": "Owner",
                    "documentation": null,
                    "typeExposed": "Maybe Owner",
                    "type": "Maybe Owner"
                },
                "required": [],
                "name": "GetBucketAclOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbaoOwner",
                        "name": "_gbaoOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gbaoGrants",
                        "name": "_gbaoGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "[Grant]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gbaoGrants",
                        "name": "_gbaoGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "[Grant]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbaoOwner",
                        "name": "_gbaoOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.GetBucketAcl",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "GetBucketAcl",
            "method": "get",
            "documentation": "Gets the access control policy for the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETacl.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketAcl",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gbarBucket",
                    "name": "_gbarBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbarBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbarBucket",
                        "name": "_gbarBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "GetBucketAcl",
                "query": [
                    {
                        "value": "acl",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbarBucket",
                        "name": "_gbarBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketCorsOutput",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "gbcoCORSRules",
                    "name": "_gbcoCORSRules",
                    "shape": "CORSRules",
                    "locationName": "CORSRule",
                    "documentation": null,
                    "typeExposed": "[CORSRule]",
                    "type": "[CORSRule]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "gbcoCORSRules",
                    "name": "_gbcoCORSRules",
                    "shape": "CORSRules",
                    "locationName": "CORSRule",
                    "documentation": null,
                    "typeExposed": "[CORSRule]",
                    "type": "[CORSRule]"
                },
                "required": [],
                "name": "GetBucketCorsOutput",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gbcoCORSRules",
                        "name": "_gbcoCORSRules",
                        "shape": "CORSRules",
                        "locationName": "CORSRule",
                        "documentation": null,
                        "typeExposed": "[CORSRule]",
                        "type": "[CORSRule]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gbcoCORSRules",
                        "name": "_gbcoCORSRules",
                        "shape": "CORSRules",
                        "locationName": "CORSRule",
                        "documentation": null,
                        "typeExposed": "[CORSRule]",
                        "type": "[CORSRule]"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.GetBucketCors",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "GetBucketCors",
            "method": "get",
            "documentation": "Returns the cors configuration for the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETcors.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketCors",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gbcrBucket",
                    "name": "_gbcrBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbcrBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbcrBucket",
                        "name": "_gbcrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "GetBucketCors",
                "query": [
                    {
                        "value": "cors",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbcrBucket",
                        "name": "_gbcrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketLifecycleOutput",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "gbloRules",
                    "name": "_gbloRules",
                    "shape": "Rules",
                    "locationName": "Rule",
                    "documentation": null,
                    "typeExposed": "[Rule]",
                    "type": "[Rule]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "gbloRules",
                    "name": "_gbloRules",
                    "shape": "Rules",
                    "locationName": "Rule",
                    "documentation": null,
                    "typeExposed": "[Rule]",
                    "type": "[Rule]"
                },
                "required": [],
                "name": "GetBucketLifecycleOutput",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gbloRules",
                        "name": "_gbloRules",
                        "shape": "Rules",
                        "locationName": "Rule",
                        "documentation": null,
                        "typeExposed": "[Rule]",
                        "type": "[Rule]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gbloRules",
                        "name": "_gbloRules",
                        "shape": "Rules",
                        "locationName": "Rule",
                        "documentation": null,
                        "typeExposed": "[Rule]",
                        "type": "[Rule]"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.GetBucketLifecycle",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "GetBucketLifecycle",
            "method": "get",
            "documentation": "Returns the lifecycle configuration information set on the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlifecycle.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketLifecycle",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gblr1Bucket",
                    "name": "_gblr1Bucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gblr1Bucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gblr1Bucket",
                        "name": "_gblr1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "GetBucketLifecycle",
                "query": [
                    {
                        "value": "lifecycle",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gblr1Bucket",
                        "name": "_gblr1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketLocationOutput",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gbloLocationConstraint",
                    "name": "_gbloLocationConstraint",
                    "shape": "BucketLocationConstraint",
                    "locationName": "LocationConstraint",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gbloLocationConstraint",
                    "name": "_gbloLocationConstraint",
                    "shape": "BucketLocationConstraint",
                    "locationName": "LocationConstraint",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "GetBucketLocationOutput",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbloLocationConstraint",
                        "name": "_gbloLocationConstraint",
                        "shape": "BucketLocationConstraint",
                        "locationName": "LocationConstraint",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbloLocationConstraint",
                        "name": "_gbloLocationConstraint",
                        "shape": "BucketLocationConstraint",
                        "locationName": "LocationConstraint",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.GetBucketLocation",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "GetBucketLocation",
            "method": "get",
            "documentation": "Returns the region the bucket resides in.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlocation.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketLocation",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gblrBucket",
                    "name": "_gblrBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gblrBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gblrBucket",
                        "name": "_gblrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "GetBucketLocation",
                "query": [
                    {
                        "value": "location",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gblrBucket",
                        "name": "_gblrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketLoggingOutput",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gbloLoggingEnabled",
                    "name": "_gbloLoggingEnabled",
                    "shape": "LoggingEnabled",
                    "locationName": "LoggingEnabled",
                    "documentation": null,
                    "typeExposed": "Maybe LoggingEnabled",
                    "type": "Maybe LoggingEnabled"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gbloLoggingEnabled",
                    "name": "_gbloLoggingEnabled",
                    "shape": "LoggingEnabled",
                    "locationName": "LoggingEnabled",
                    "documentation": null,
                    "typeExposed": "Maybe LoggingEnabled",
                    "type": "Maybe LoggingEnabled"
                },
                "required": [],
                "name": "GetBucketLoggingOutput",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbloLoggingEnabled",
                        "name": "_gbloLoggingEnabled",
                        "shape": "LoggingEnabled",
                        "locationName": "LoggingEnabled",
                        "documentation": null,
                        "typeExposed": "Maybe LoggingEnabled",
                        "type": "Maybe LoggingEnabled"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbloLoggingEnabled",
                        "name": "_gbloLoggingEnabled",
                        "shape": "LoggingEnabled",
                        "locationName": "LoggingEnabled",
                        "documentation": null,
                        "typeExposed": "Maybe LoggingEnabled",
                        "type": "Maybe LoggingEnabled"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.GetBucketLogging",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "GetBucketLogging",
            "method": "get",
            "documentation": "Returns the logging status of a bucket and the permissions users have to view and modify that status. To use GET, you must be the bucket owner.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlogging.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketLogging",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gblr2Bucket",
                    "name": "_gblr2Bucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gblr2Bucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gblr2Bucket",
                        "name": "_gblr2Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "GetBucketLogging",
                "query": [
                    {
                        "value": "logging",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gblr2Bucket",
                        "name": "_gblr2Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketNotificationOutput",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gbnoTopicConfiguration",
                    "name": "_gbnoTopicConfiguration",
                    "shape": "TopicConfiguration",
                    "locationName": "TopicConfiguration",
                    "documentation": null,
                    "typeExposed": "Maybe TopicConfiguration",
                    "type": "Maybe TopicConfiguration"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gbnoTopicConfiguration",
                    "name": "_gbnoTopicConfiguration",
                    "shape": "TopicConfiguration",
                    "locationName": "TopicConfiguration",
                    "documentation": null,
                    "typeExposed": "Maybe TopicConfiguration",
                    "type": "Maybe TopicConfiguration"
                },
                "required": [],
                "name": "GetBucketNotificationOutput",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbnoTopicConfiguration",
                        "name": "_gbnoTopicConfiguration",
                        "shape": "TopicConfiguration",
                        "locationName": "TopicConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe TopicConfiguration",
                        "type": "Maybe TopicConfiguration"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbnoTopicConfiguration",
                        "name": "_gbnoTopicConfiguration",
                        "shape": "TopicConfiguration",
                        "locationName": "TopicConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe TopicConfiguration",
                        "type": "Maybe TopicConfiguration"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.GetBucketNotification",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "GetBucketNotification",
            "method": "get",
            "documentation": "Return the notification configuration of a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETnotification.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketNotification",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gbnrBucket",
                    "name": "_gbnrBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbnrBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbnrBucket",
                        "name": "_gbnrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "GetBucketNotification",
                "query": [
                    {
                        "value": "notification",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbnrBucket",
                        "name": "_gbnrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketPolicyOutput",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gbpoPolicy",
                    "name": "_gbpoPolicy",
                    "shape": "Policy",
                    "locationName": "Policy",
                    "documentation": "The bucket policy as a JSON document.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gbpoPolicy",
                    "name": "_gbpoPolicy",
                    "shape": "Policy",
                    "locationName": "Policy",
                    "documentation": "The bucket policy as a JSON document.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "GetBucketPolicyOutput",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbpoPolicy",
                        "name": "_gbpoPolicy",
                        "shape": "Policy",
                        "locationName": "Policy",
                        "documentation": "The bucket policy as a JSON document.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbpoPolicy",
                        "name": "_gbpoPolicy",
                        "shape": "Policy",
                        "locationName": "Policy",
                        "documentation": "The bucket policy as a JSON document.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.GetBucketPolicy",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "GetBucketPolicy",
            "method": "get",
            "documentation": "Returns the policy of a specified bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETpolicy.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketPolicy",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gbprBucket",
                    "name": "_gbprBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbprBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbprBucket",
                        "name": "_gbprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "GetBucketPolicy",
                "query": [
                    {
                        "value": "policy",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbprBucket",
                        "name": "_gbprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketRequestPaymentOutput",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gbrpoPayer",
                    "name": "_gbrpoPayer",
                    "shape": "Payer",
                    "locationName": "Payer",
                    "documentation": "Specifies who pays for the download and request fees.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gbrpoPayer",
                    "name": "_gbrpoPayer",
                    "shape": "Payer",
                    "locationName": "Payer",
                    "documentation": "Specifies who pays for the download and request fees.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "GetBucketRequestPaymentOutput",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbrpoPayer",
                        "name": "_gbrpoPayer",
                        "shape": "Payer",
                        "locationName": "Payer",
                        "documentation": "Specifies who pays for the download and request fees.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbrpoPayer",
                        "name": "_gbrpoPayer",
                        "shape": "Payer",
                        "locationName": "Payer",
                        "documentation": "Specifies who pays for the download and request fees.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.GetBucketRequestPayment",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "GetBucketRequestPayment",
            "method": "get",
            "documentation": "Returns the request payment configuration of a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTrequestPaymentGET.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketRequestPayment",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gbrprBucket",
                    "name": "_gbrprBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbrprBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbrprBucket",
                        "name": "_gbrprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "GetBucketRequestPayment",
                "query": [
                    {
                        "value": "requestPayment",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbrprBucket",
                        "name": "_gbrprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketTaggingOutput",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "gbtoTagSet",
                    "name": "_gbtoTagSet",
                    "shape": "TagSet",
                    "locationName": "TagSet",
                    "documentation": null,
                    "typeExposed": "[Tag]",
                    "type": "[Tag]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "gbtoTagSet",
                    "name": "_gbtoTagSet",
                    "shape": "TagSet",
                    "locationName": "TagSet",
                    "documentation": null,
                    "typeExposed": "[Tag]",
                    "type": "[Tag]"
                },
                "required": [],
                "name": "GetBucketTaggingOutput",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gbtoTagSet",
                        "name": "_gbtoTagSet",
                        "shape": "TagSet",
                        "locationName": "TagSet",
                        "documentation": null,
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gbtoTagSet",
                        "name": "_gbtoTagSet",
                        "shape": "TagSet",
                        "locationName": "TagSet",
                        "documentation": null,
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.GetBucketTagging",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "GetBucketTagging",
            "method": "get",
            "documentation": "Returns the tag set associated with the bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETtagging.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketTagging",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gbtrBucket",
                    "name": "_gbtrBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbtrBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbtrBucket",
                        "name": "_gbtrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "GetBucketTagging",
                "query": [
                    {
                        "value": "tagging",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbtrBucket",
                        "name": "_gbtrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "getBucketVersioningOutput",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gbvoStatus",
                    "name": "_gbvoStatus",
                    "shape": "BucketVersioningStatus",
                    "locationName": "Status",
                    "documentation": "The versioning state of the bucket.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "GetBucketVersioningOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbvoStatus",
                        "name": "_gbvoStatus",
                        "shape": "BucketVersioningStatus",
                        "locationName": "Status",
                        "documentation": "The versioning state of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbvoMFADelete",
                        "name": "_gbvoMFADelete",
                        "shape": "MFADeleteStatus",
                        "locationName": "MfaDelete",
                        "documentation": "Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbvoMFADelete",
                        "name": "_gbvoMFADelete",
                        "shape": "MFADeleteStatus",
                        "locationName": "MfaDelete",
                        "documentation": "Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbvoStatus",
                        "name": "_gbvoStatus",
                        "shape": "BucketVersioningStatus",
                        "locationName": "Status",
                        "documentation": "The versioning state of the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.GetBucketVersioning",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "GetBucketVersioning",
            "method": "get",
            "documentation": "Returns the versioning state of a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETversioningStatus.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketVersioning",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gbvrBucket",
                    "name": "_gbvrBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbvrBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbvrBucket",
                        "name": "_gbvrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "GetBucketVersioning",
                "query": [
                    {
                        "value": "versioning",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbvrBucket",
                        "name": "_gbvrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 26,
                "ctor": "getBucketWebsiteOutput",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gbwoRedirectAllRequestsTo",
                    "name": "_gbwoRedirectAllRequestsTo",
                    "shape": "RedirectAllRequestsTo",
                    "locationName": "RedirectAllRequestsTo",
                    "documentation": null,
                    "typeExposed": "Maybe RedirectAllRequestsTo",
                    "type": "Maybe RedirectAllRequestsTo"
                },
                "required": [],
                "name": "GetBucketWebsiteOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbwoRedirectAllRequestsTo",
                        "name": "_gbwoRedirectAllRequestsTo",
                        "shape": "RedirectAllRequestsTo",
                        "locationName": "RedirectAllRequestsTo",
                        "documentation": null,
                        "typeExposed": "Maybe RedirectAllRequestsTo",
                        "type": "Maybe RedirectAllRequestsTo"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbwoIndexDocument",
                        "name": "_gbwoIndexDocument",
                        "shape": "IndexDocument",
                        "locationName": "IndexDocument",
                        "documentation": null,
                        "typeExposed": "Maybe IndexDocument",
                        "type": "Maybe IndexDocument"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbwoErrorDocument",
                        "name": "_gbwoErrorDocument",
                        "shape": "ErrorDocument",
                        "locationName": "ErrorDocument",
                        "documentation": null,
                        "typeExposed": "Maybe ErrorDocument",
                        "type": "Maybe ErrorDocument"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gbwoRoutingRules",
                        "name": "_gbwoRoutingRules",
                        "shape": "RoutingRules",
                        "locationName": "RoutingRules",
                        "documentation": null,
                        "typeExposed": "[RoutingRule]",
                        "type": "[RoutingRule]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbwoErrorDocument",
                        "name": "_gbwoErrorDocument",
                        "shape": "ErrorDocument",
                        "locationName": "ErrorDocument",
                        "documentation": null,
                        "typeExposed": "Maybe ErrorDocument",
                        "type": "Maybe ErrorDocument"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbwoIndexDocument",
                        "name": "_gbwoIndexDocument",
                        "shape": "IndexDocument",
                        "locationName": "IndexDocument",
                        "documentation": null,
                        "typeExposed": "Maybe IndexDocument",
                        "type": "Maybe IndexDocument"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gbwoRedirectAllRequestsTo",
                        "name": "_gbwoRedirectAllRequestsTo",
                        "shape": "RedirectAllRequestsTo",
                        "locationName": "RedirectAllRequestsTo",
                        "documentation": null,
                        "typeExposed": "Maybe RedirectAllRequestsTo",
                        "type": "Maybe RedirectAllRequestsTo"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "gbwoRoutingRules",
                        "name": "_gbwoRoutingRules",
                        "shape": "RoutingRules",
                        "locationName": "RoutingRules",
                        "documentation": null,
                        "typeExposed": "[RoutingRule]",
                        "type": "[RoutingRule]"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.GetBucketWebsite",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "GetBucketWebsite",
            "method": "get",
            "documentation": "Returns the website configuration for a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETwebsite.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "getBucketWebsite",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gbwrBucket",
                    "name": "_gbwrBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gbwrBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbwrBucket",
                        "name": "_gbwrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "GetBucketWebsite",
                "query": [
                    {
                        "value": "website",
                        "type": "const"
                    }
                ],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gbwrBucket",
                        "name": "_gbwrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Show",
                    "Generic"
                ],
                "streaming": true,
                "fieldPad": 27,
                "ctor": "getObjectOutput",
                "wrapper": false,
                "payload": {
                    "location": "body",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gooBody",
                    "name": "_gooBody",
                    "shape": "Body",
                    "locationName": "Body",
                    "documentation": "Object data.",
                    "typeExposed": "RsBody",
                    "type": "RsBody"
                },
                "required": [
                    {
                        "location": "body",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gooBody",
                        "name": "_gooBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": "Object data.",
                        "typeExposed": "RsBody",
                        "type": "RsBody"
                    }
                ],
                "name": "GetObjectOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooDeleteMarker",
                        "name": "_gooDeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "documentation": "Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the response.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooAcceptRanges",
                        "name": "_gooAcceptRanges",
                        "shape": "AcceptRanges",
                        "locationName": "accept-ranges",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooExpiration",
                        "name": "_gooExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooRestore",
                        "name": "_gooRestore",
                        "shape": "Restore",
                        "locationName": "x-amz-restore",
                        "documentation": "Provides information about object restoration operation and expiration time of the restored object copy.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooLastModified",
                        "name": "_gooLastModified",
                        "shape": "LastModified",
                        "locationName": "Last-Modified",
                        "documentation": "Last modified date of the object",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooContentLength",
                        "name": "_gooContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooETag",
                        "name": "_gooETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooMissingMeta",
                        "name": "_gooMissingMeta",
                        "shape": "MissingMeta",
                        "locationName": "x-amz-missing-meta",
                        "documentation": "This is set to the number of metadata entries not returned in x-amz-meta headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooVersionId",
                        "name": "_gooVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooCacheControl",
                        "name": "_gooCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooContentDisposition",
                        "name": "_gooContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooContentEncoding",
                        "name": "_gooContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooContentLanguage",
                        "name": "_gooContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooContentType",
                        "name": "_gooContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooExpires",
                        "name": "_gooExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooWebsiteRedirectLocation",
                        "name": "_gooWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooServerSideEncryption",
                        "name": "_gooServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "gooMetadata",
                        "name": "_gooMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooSSECustomerAlgorithm",
                        "name": "_gooSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooSSECustomerKeyMD5",
                        "name": "_gooSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooAcceptRanges",
                        "name": "_gooAcceptRanges",
                        "shape": "AcceptRanges",
                        "locationName": "accept-ranges",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gooBody",
                        "name": "_gooBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": "Object data.",
                        "typeExposed": "RsBody",
                        "type": "RsBody"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooCacheControl",
                        "name": "_gooCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooContentDisposition",
                        "name": "_gooContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooContentEncoding",
                        "name": "_gooContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooContentLanguage",
                        "name": "_gooContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooContentLength",
                        "name": "_gooContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooContentType",
                        "name": "_gooContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooDeleteMarker",
                        "name": "_gooDeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "documentation": "Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the response.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooETag",
                        "name": "_gooETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooExpiration",
                        "name": "_gooExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooExpires",
                        "name": "_gooExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooLastModified",
                        "name": "_gooLastModified",
                        "shape": "LastModified",
                        "locationName": "Last-Modified",
                        "documentation": "Last modified date of the object",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "gooMetadata",
                        "name": "_gooMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooMissingMeta",
                        "name": "_gooMissingMeta",
                        "shape": "MissingMeta",
                        "locationName": "x-amz-missing-meta",
                        "documentation": "This is set to the number of metadata entries not returned in x-amz-meta headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooRestore",
                        "name": "_gooRestore",
                        "shape": "Restore",
                        "locationName": "x-amz-restore",
                        "documentation": "Provides information about object restoration operation and expiration time of the restored object copy.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooSSECustomerAlgorithm",
                        "name": "_gooSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooSSECustomerKeyMD5",
                        "name": "_gooSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooServerSideEncryption",
                        "name": "_gooServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooVersionId",
                        "name": "_gooVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gooWebsiteRedirectLocation",
                        "name": "_gooWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.GetObject",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "GetObject",
            "method": "get",
            "documentation": "Retrieves objects from Amazon S3.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGET.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 30,
                "ctor": "getObject",
                "headerPad": 48,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gorBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gorKey",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gorBucket",
                        "name": "_gorBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gorKey",
                        "name": "_gorKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [
                    {
                        "field": "_gorIfMatch",
                        "locationName": "If-Match",
                        "type": "field"
                    },
                    {
                        "field": "_gorIfModifiedSince",
                        "locationName": "If-Modified-Since",
                        "type": "field"
                    },
                    {
                        "field": "_gorIfNoneMatch",
                        "locationName": "If-None-Match",
                        "type": "field"
                    },
                    {
                        "field": "_gorIfUnmodifiedSince",
                        "locationName": "If-Unmodified-Since",
                        "type": "field"
                    },
                    {
                        "field": "_gorRange",
                        "locationName": "Range",
                        "type": "field"
                    },
                    {
                        "field": "_gorSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_gorSSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_gorSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 29,
                "name": "GetObject",
                "query": [
                    {
                        "field": "_gorResponseCacheControl",
                        "locationName": "response-cache-control",
                        "type": "field"
                    },
                    {
                        "field": "_gorResponseContentDisposition",
                        "locationName": "response-content-disposition",
                        "type": "field"
                    },
                    {
                        "field": "_gorResponseContentEncoding",
                        "locationName": "response-content-encoding",
                        "type": "field"
                    },
                    {
                        "field": "_gorResponseContentLanguage",
                        "locationName": "response-content-language",
                        "type": "field"
                    },
                    {
                        "field": "_gorResponseContentType",
                        "locationName": "response-content-type",
                        "type": "field"
                    },
                    {
                        "field": "_gorResponseExpires",
                        "locationName": "response-expires",
                        "type": "field"
                    },
                    {
                        "field": "_gorVersionId",
                        "locationName": "versionId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorIfMatch",
                        "name": "_gorIfMatch",
                        "shape": "IfMatch",
                        "locationName": "If-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorIfModifiedSince",
                        "name": "_gorIfModifiedSince",
                        "shape": "IfModifiedSince",
                        "locationName": "If-Modified-Since",
                        "documentation": "Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorIfNoneMatch",
                        "name": "_gorIfNoneMatch",
                        "shape": "IfNoneMatch",
                        "locationName": "If-None-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorIfUnmodifiedSince",
                        "name": "_gorIfUnmodifiedSince",
                        "shape": "IfUnmodifiedSince",
                        "locationName": "If-Unmodified-Since",
                        "documentation": "Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorRange",
                        "name": "_gorRange",
                        "shape": "Range",
                        "locationName": "Range",
                        "documentation": "Downloads the specified range bytes of an object. For more information about the HTTP Range header, go to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorResponseCacheControl",
                        "name": "_gorResponseCacheControl",
                        "shape": "ResponseCacheControl",
                        "locationName": "response-cache-control",
                        "documentation": "Sets the Cache-Control header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorResponseContentDisposition",
                        "name": "_gorResponseContentDisposition",
                        "shape": "ResponseContentDisposition",
                        "locationName": "response-content-disposition",
                        "documentation": "Sets the Content-Disposition header of the response",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorResponseContentEncoding",
                        "name": "_gorResponseContentEncoding",
                        "shape": "ResponseContentEncoding",
                        "locationName": "response-content-encoding",
                        "documentation": "Sets the Content-Encoding header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorResponseContentLanguage",
                        "name": "_gorResponseContentLanguage",
                        "shape": "ResponseContentLanguage",
                        "locationName": "response-content-language",
                        "documentation": "Sets the Content-Language header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorResponseContentType",
                        "name": "_gorResponseContentType",
                        "shape": "ResponseContentType",
                        "locationName": "response-content-type",
                        "documentation": "Sets the Content-Type header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorResponseExpires",
                        "name": "_gorResponseExpires",
                        "shape": "ResponseExpires",
                        "locationName": "response-expires",
                        "documentation": "Sets the Expires header of the response.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorVersionId",
                        "name": "_gorVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorSSECustomerAlgorithm",
                        "name": "_gorSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorSSECustomerKey",
                        "name": "_gorSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorSSECustomerKeyMD5",
                        "name": "_gorSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gorBucket",
                        "name": "_gorBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorIfMatch",
                        "name": "_gorIfMatch",
                        "shape": "IfMatch",
                        "locationName": "If-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorIfModifiedSince",
                        "name": "_gorIfModifiedSince",
                        "shape": "IfModifiedSince",
                        "locationName": "If-Modified-Since",
                        "documentation": "Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorIfNoneMatch",
                        "name": "_gorIfNoneMatch",
                        "shape": "IfNoneMatch",
                        "locationName": "If-None-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorIfUnmodifiedSince",
                        "name": "_gorIfUnmodifiedSince",
                        "shape": "IfUnmodifiedSince",
                        "locationName": "If-Unmodified-Since",
                        "documentation": "Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gorKey",
                        "name": "_gorKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorRange",
                        "name": "_gorRange",
                        "shape": "Range",
                        "locationName": "Range",
                        "documentation": "Downloads the specified range bytes of an object. For more information about the HTTP Range header, go to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorResponseCacheControl",
                        "name": "_gorResponseCacheControl",
                        "shape": "ResponseCacheControl",
                        "locationName": "response-cache-control",
                        "documentation": "Sets the Cache-Control header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorResponseContentDisposition",
                        "name": "_gorResponseContentDisposition",
                        "shape": "ResponseContentDisposition",
                        "locationName": "response-content-disposition",
                        "documentation": "Sets the Content-Disposition header of the response",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorResponseContentEncoding",
                        "name": "_gorResponseContentEncoding",
                        "shape": "ResponseContentEncoding",
                        "locationName": "response-content-encoding",
                        "documentation": "Sets the Content-Encoding header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorResponseContentLanguage",
                        "name": "_gorResponseContentLanguage",
                        "shape": "ResponseContentLanguage",
                        "locationName": "response-content-language",
                        "documentation": "Sets the Content-Language header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorResponseContentType",
                        "name": "_gorResponseContentType",
                        "shape": "ResponseContentType",
                        "locationName": "response-content-type",
                        "documentation": "Sets the Content-Type header of the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorResponseExpires",
                        "name": "_gorResponseExpires",
                        "shape": "ResponseExpires",
                        "locationName": "response-expires",
                        "documentation": "Sets the Expires header of the response.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorSSECustomerAlgorithm",
                        "name": "_gorSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorSSECustomerKey",
                        "name": "_gorSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorSSECustomerKeyMD5",
                        "name": "_gorSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gorVersionId",
                        "name": "_gorVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 11,
                "ctor": "getObjectAclOutput",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "goaoOwner",
                    "name": "_goaoOwner",
                    "shape": "Owner",
                    "locationName": "Owner",
                    "documentation": null,
                    "typeExposed": "Maybe Owner",
                    "type": "Maybe Owner"
                },
                "required": [],
                "name": "GetObjectAclOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "goaoOwner",
                        "name": "_goaoOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "goaoGrants",
                        "name": "_goaoGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "[Grant]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "goaoGrants",
                        "name": "_goaoGrants",
                        "shape": "Grants",
                        "locationName": "AccessControlList",
                        "documentation": "A list of grants.",
                        "typeExposed": "[Grant]",
                        "type": "[Grant]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "goaoOwner",
                        "name": "_goaoOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.GetObjectAcl",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "GetObjectAcl",
            "method": "get",
            "documentation": "Returns the access control list (ACL) of an object.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGETacl.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "getObjectAcl",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_goarBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_goarKey",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "goarBucket",
                        "name": "_goarBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "goarKey",
                        "name": "_goarKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 10,
                "name": "GetObjectAcl",
                "query": [
                    {
                        "value": "acl",
                        "type": "const"
                    },
                    {
                        "field": "_goarVersionId",
                        "locationName": "versionId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "goarVersionId",
                        "name": "_goarVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "goarBucket",
                        "name": "_goarBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "goarKey",
                        "name": "_goarKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "goarVersionId",
                        "name": "_goarVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Show",
                    "Generic"
                ],
                "streaming": true,
                "fieldPad": 0,
                "ctor": "getObjectTorrentOutput",
                "field": {
                    "location": "body",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gotoBody",
                    "name": "_gotoBody",
                    "shape": "Body",
                    "locationName": "Body",
                    "documentation": null,
                    "typeExposed": "RsBody",
                    "type": "RsBody"
                },
                "wrapper": false,
                "payload": {
                    "location": "body",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gotoBody",
                    "name": "_gotoBody",
                    "shape": "Body",
                    "locationName": "Body",
                    "documentation": null,
                    "typeExposed": "RsBody",
                    "type": "RsBody"
                },
                "required": [
                    {
                        "location": "body",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gotoBody",
                        "name": "_gotoBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": null,
                        "typeExposed": "RsBody",
                        "type": "RsBody"
                    }
                ],
                "name": "GetObjectTorrentOutput",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gotoBody",
                        "name": "_gotoBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": null,
                        "typeExposed": "RsBody",
                        "type": "RsBody"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.GetObjectTorrent",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "GetObjectTorrent",
            "method": "get",
            "documentation": "Return torrent files from a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGETtorrent.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 11,
                "ctor": "getObjectTorrent",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gotrBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_gotrKey",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gotrBucket",
                        "name": "_gotrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gotrKey",
                        "name": "_gotrKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "GetObjectTorrent",
                "query": [
                    {
                        "value": "torrent",
                        "type": "const"
                    }
                ],
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gotrBucket",
                        "name": "_gotrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gotrKey",
                        "name": "_gotrKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "headBucketResponse",
                "wrapper": false,
                "required": [],
                "name": "HeadBucketResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.HeadBucket",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "HeadBucket",
            "method": "head",
            "documentation": "This operation is useful to determine if a bucket exists and you have permission to access it.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketHEAD.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "headBucket",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "hbrBucket",
                    "name": "_hbrBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": null,
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_hbrBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hbrBucket",
                        "name": "_hbrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "HeadBucket",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "hbrBucket",
                        "name": "_hbrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 27,
                "ctor": "headObjectOutput",
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "HeadObjectOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooDeleteMarker",
                        "name": "_hooDeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "documentation": "Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the response.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooAcceptRanges",
                        "name": "_hooAcceptRanges",
                        "shape": "AcceptRanges",
                        "locationName": "accept-ranges",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooExpiration",
                        "name": "_hooExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooRestore",
                        "name": "_hooRestore",
                        "shape": "Restore",
                        "locationName": "x-amz-restore",
                        "documentation": "Provides information about object restoration operation and expiration time of the restored object copy.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooLastModified",
                        "name": "_hooLastModified",
                        "shape": "LastModified",
                        "locationName": "Last-Modified",
                        "documentation": "Last modified date of the object",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooContentLength",
                        "name": "_hooContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooETag",
                        "name": "_hooETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooMissingMeta",
                        "name": "_hooMissingMeta",
                        "shape": "MissingMeta",
                        "locationName": "x-amz-missing-meta",
                        "documentation": "This is set to the number of metadata entries not returned in x-amz-meta headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooVersionId",
                        "name": "_hooVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooCacheControl",
                        "name": "_hooCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooContentDisposition",
                        "name": "_hooContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooContentEncoding",
                        "name": "_hooContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooContentLanguage",
                        "name": "_hooContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooContentType",
                        "name": "_hooContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooExpires",
                        "name": "_hooExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooWebsiteRedirectLocation",
                        "name": "_hooWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooServerSideEncryption",
                        "name": "_hooServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "hooMetadata",
                        "name": "_hooMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooSSECustomerAlgorithm",
                        "name": "_hooSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooSSECustomerKeyMD5",
                        "name": "_hooSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooAcceptRanges",
                        "name": "_hooAcceptRanges",
                        "shape": "AcceptRanges",
                        "locationName": "accept-ranges",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooCacheControl",
                        "name": "_hooCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooContentDisposition",
                        "name": "_hooContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooContentEncoding",
                        "name": "_hooContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooContentLanguage",
                        "name": "_hooContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooContentLength",
                        "name": "_hooContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooContentType",
                        "name": "_hooContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooDeleteMarker",
                        "name": "_hooDeleteMarker",
                        "shape": "DeleteMarker",
                        "locationName": "x-amz-delete-marker",
                        "documentation": "Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the response.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooETag",
                        "name": "_hooETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooExpiration",
                        "name": "_hooExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooExpires",
                        "name": "_hooExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooLastModified",
                        "name": "_hooLastModified",
                        "shape": "LastModified",
                        "locationName": "Last-Modified",
                        "documentation": "Last modified date of the object",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "hooMetadata",
                        "name": "_hooMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooMissingMeta",
                        "name": "_hooMissingMeta",
                        "shape": "MissingMeta",
                        "locationName": "x-amz-missing-meta",
                        "documentation": "This is set to the number of metadata entries not returned in x-amz-meta headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooRestore",
                        "name": "_hooRestore",
                        "shape": "Restore",
                        "locationName": "x-amz-restore",
                        "documentation": "Provides information about object restoration operation and expiration time of the restored object copy.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooSSECustomerAlgorithm",
                        "name": "_hooSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooSSECustomerKeyMD5",
                        "name": "_hooSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooServerSideEncryption",
                        "name": "_hooServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooVersionId",
                        "name": "_hooVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "hooWebsiteRedirectLocation",
                        "name": "_hooWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.HeadObject",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "HeadObject",
            "method": "head",
            "documentation": "The HEAD operation retrieves metadata from an object without returning the object itself. This operation is useful if you're only interested in an object's metadata. To use HEAD, you must have READ access to the object.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectHEAD.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "headObject",
                "headerPad": 48,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_horBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_horKey",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "horBucket",
                        "name": "_horBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "horKey",
                        "name": "_horKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [
                    {
                        "field": "_horIfMatch",
                        "locationName": "If-Match",
                        "type": "field"
                    },
                    {
                        "field": "_horIfModifiedSince",
                        "locationName": "If-Modified-Since",
                        "type": "field"
                    },
                    {
                        "field": "_horIfNoneMatch",
                        "locationName": "If-None-Match",
                        "type": "field"
                    },
                    {
                        "field": "_horIfUnmodifiedSince",
                        "locationName": "If-Unmodified-Since",
                        "type": "field"
                    },
                    {
                        "field": "_horRange",
                        "locationName": "Range",
                        "type": "field"
                    },
                    {
                        "field": "_horSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_horSSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_horSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 10,
                "name": "HeadObject",
                "query": [
                    {
                        "field": "_horVersionId",
                        "locationName": "versionId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "horIfMatch",
                        "name": "_horIfMatch",
                        "shape": "IfMatch",
                        "locationName": "If-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "horIfModifiedSince",
                        "name": "_horIfModifiedSince",
                        "shape": "IfModifiedSince",
                        "locationName": "If-Modified-Since",
                        "documentation": "Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "horIfNoneMatch",
                        "name": "_horIfNoneMatch",
                        "shape": "IfNoneMatch",
                        "locationName": "If-None-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "horIfUnmodifiedSince",
                        "name": "_horIfUnmodifiedSince",
                        "shape": "IfUnmodifiedSince",
                        "locationName": "If-Unmodified-Since",
                        "documentation": "Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "horRange",
                        "name": "_horRange",
                        "shape": "Range",
                        "locationName": "Range",
                        "documentation": "Downloads the specified range bytes of an object. For more information about the HTTP Range header, go to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "horVersionId",
                        "name": "_horVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "horSSECustomerAlgorithm",
                        "name": "_horSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "horSSECustomerKey",
                        "name": "_horSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "horSSECustomerKeyMD5",
                        "name": "_horSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "horBucket",
                        "name": "_horBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "horIfMatch",
                        "name": "_horIfMatch",
                        "shape": "IfMatch",
                        "locationName": "If-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "horIfModifiedSince",
                        "name": "_horIfModifiedSince",
                        "shape": "IfModifiedSince",
                        "locationName": "If-Modified-Since",
                        "documentation": "Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "horIfNoneMatch",
                        "name": "_horIfNoneMatch",
                        "shape": "IfNoneMatch",
                        "locationName": "If-None-Match",
                        "documentation": "Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "horIfUnmodifiedSince",
                        "name": "_horIfUnmodifiedSince",
                        "shape": "IfUnmodifiedSince",
                        "locationName": "If-Unmodified-Since",
                        "documentation": "Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "horKey",
                        "name": "_horKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "horRange",
                        "name": "_horRange",
                        "shape": "Range",
                        "locationName": "Range",
                        "documentation": "Downloads the specified range bytes of an object. For more information about the HTTP Range header, go to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "horSSECustomerAlgorithm",
                        "name": "_horSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "horSSECustomerKey",
                        "name": "_horSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "horSSECustomerKeyMD5",
                        "name": "_horSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "horVersionId",
                        "name": "_horVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 11,
                "ctor": "listBucketsOutput",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "lboBuckets",
                    "name": "_lboBuckets",
                    "shape": "Buckets",
                    "locationName": "Buckets",
                    "documentation": null,
                    "typeExposed": "[Bucket]",
                    "type": "[Bucket]"
                },
                "required": [],
                "name": "ListBucketsOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lboBuckets",
                        "name": "_lboBuckets",
                        "shape": "Buckets",
                        "locationName": "Buckets",
                        "documentation": null,
                        "typeExposed": "[Bucket]",
                        "type": "[Bucket]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lboOwner",
                        "name": "_lboOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lboBuckets",
                        "name": "_lboBuckets",
                        "shape": "Buckets",
                        "locationName": "Buckets",
                        "documentation": null,
                        "typeExposed": "[Bucket]",
                        "type": "[Bucket]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lboOwner",
                        "name": "_lboOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.ListBuckets",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "ListBuckets",
            "method": "get",
            "documentation": "Returns a list of all buckets owned by the authenticated sender of the request.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTServiceGET.html",
            "request": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "listBuckets",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "ListBuckets",
                "query": [],
                "type": "empty",
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "listMultipartUploadsOutput",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "lmuoBucket",
                    "name": "_lmuoBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": "Name of the bucket to which the multipart upload was initiated.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ListMultipartUploadsOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoBucket",
                        "name": "_lmuoBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoKeyMarker",
                        "name": "_lmuoKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "KeyMarker",
                        "documentation": "The key at or after which the listing began.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoUploadIdMarker",
                        "name": "_lmuoUploadIdMarker",
                        "shape": "UploadIdMarker",
                        "locationName": "UploadIdMarker",
                        "documentation": "Upload ID after which listing began.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoNextKeyMarker",
                        "name": "_lmuoNextKeyMarker",
                        "shape": "NextKeyMarker",
                        "locationName": "NextKeyMarker",
                        "documentation": "When a list is truncated, this element specifies the value that should be used for the key-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoPrefix",
                        "name": "_lmuoPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": "When a prefix is provided in the request, this field contains the specified prefix. The result contains only keys starting with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoNextUploadIdMarker",
                        "name": "_lmuoNextUploadIdMarker",
                        "shape": "NextUploadIdMarker",
                        "locationName": "NextUploadIdMarker",
                        "documentation": "When a list is truncated, this element specifies the value that should be used for the upload-id-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoMaxUploads",
                        "name": "_lmuoMaxUploads",
                        "shape": "MaxUploads",
                        "locationName": "MaxUploads",
                        "documentation": "Maximum number of multipart uploads that could have been included in the response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoIsTruncated",
                        "name": "_lmuoIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "Indicates whether the returned list of multipart uploads is truncated. A value of true indicates that the list was truncated. The list can be truncated if the number of multipart uploads exceeds the limit allowed or specified by max uploads.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lmuoUploads",
                        "name": "_lmuoUploads",
                        "shape": "MultipartUploadList",
                        "locationName": "Upload",
                        "documentation": null,
                        "typeExposed": "[MultipartUpload]",
                        "type": "[MultipartUpload]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lmuoCommonPrefixes",
                        "name": "_lmuoCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "[CommonPrefix]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoEncodingType",
                        "name": "_lmuoEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoBucket",
                        "name": "_lmuoBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lmuoCommonPrefixes",
                        "name": "_lmuoCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "[CommonPrefix]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoEncodingType",
                        "name": "_lmuoEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoIsTruncated",
                        "name": "_lmuoIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "Indicates whether the returned list of multipart uploads is truncated. A value of true indicates that the list was truncated. The list can be truncated if the number of multipart uploads exceeds the limit allowed or specified by max uploads.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoKeyMarker",
                        "name": "_lmuoKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "KeyMarker",
                        "documentation": "The key at or after which the listing began.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoMaxUploads",
                        "name": "_lmuoMaxUploads",
                        "shape": "MaxUploads",
                        "locationName": "MaxUploads",
                        "documentation": "Maximum number of multipart uploads that could have been included in the response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoNextKeyMarker",
                        "name": "_lmuoNextKeyMarker",
                        "shape": "NextKeyMarker",
                        "locationName": "NextKeyMarker",
                        "documentation": "When a list is truncated, this element specifies the value that should be used for the key-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoNextUploadIdMarker",
                        "name": "_lmuoNextUploadIdMarker",
                        "shape": "NextUploadIdMarker",
                        "locationName": "NextUploadIdMarker",
                        "documentation": "When a list is truncated, this element specifies the value that should be used for the upload-id-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoPrefix",
                        "name": "_lmuoPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": "When a prefix is provided in the request, this field contains the specified prefix. The result contains only keys starting with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmuoUploadIdMarker",
                        "name": "_lmuoUploadIdMarker",
                        "shape": "UploadIdMarker",
                        "locationName": "UploadIdMarker",
                        "documentation": "Upload ID after which listing began.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lmuoUploads",
                        "name": "_lmuoUploads",
                        "shape": "MultipartUploadList",
                        "locationName": "Upload",
                        "documentation": null,
                        "typeExposed": "[MultipartUpload]",
                        "type": "[MultipartUpload]"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.ListMultipartUploads",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "ListMultipartUploads",
            "method": "get",
            "documentation": "This operation lists in-progress multipart uploads.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListMPUpload.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 19,
                "ctor": "listMultipartUploads",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_lmurBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lmurBucket",
                        "name": "_lmurBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 17,
                "name": "ListMultipartUploads",
                "query": [
                    {
                        "value": "uploads",
                        "type": "const"
                    },
                    {
                        "field": "_lmurDelimiter",
                        "locationName": "delimiter",
                        "type": "field"
                    },
                    {
                        "field": "_lmurEncodingType",
                        "locationName": "encoding-type",
                        "type": "field"
                    },
                    {
                        "field": "_lmurKeyMarker",
                        "locationName": "key-marker",
                        "type": "field"
                    },
                    {
                        "field": "_lmurMaxUploads",
                        "locationName": "max-uploads",
                        "type": "field"
                    },
                    {
                        "field": "_lmurPrefix",
                        "locationName": "prefix",
                        "type": "field"
                    },
                    {
                        "field": "_lmurUploadIdMarker",
                        "locationName": "upload-id-marker",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmurDelimiter",
                        "name": "_lmurDelimiter",
                        "shape": "Delimiter",
                        "locationName": "delimiter",
                        "documentation": "Character you use to group keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmurEncodingType",
                        "name": "_lmurEncodingType",
                        "shape": "EncodingType",
                        "locationName": "encoding-type",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmurKeyMarker",
                        "name": "_lmurKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "key-marker",
                        "documentation": "Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmurMaxUploads",
                        "name": "_lmurMaxUploads",
                        "shape": "MaxUploads",
                        "locationName": "max-uploads",
                        "documentation": "Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body. 1,000 is the maximum number of uploads that can be returned in a response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmurPrefix",
                        "name": "_lmurPrefix",
                        "shape": "Prefix",
                        "locationName": "prefix",
                        "documentation": "Lists in-progress uploads only for those keys that begin with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmurUploadIdMarker",
                        "name": "_lmurUploadIdMarker",
                        "shape": "UploadIdMarker",
                        "locationName": "upload-id-marker",
                        "documentation": "Together with key-marker, specifies the multipart upload after which listing should begin. If key-marker is not specified, the upload-id-marker parameter is ignored.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lmurBucket",
                        "name": "_lmurBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmurDelimiter",
                        "name": "_lmurDelimiter",
                        "shape": "Delimiter",
                        "locationName": "delimiter",
                        "documentation": "Character you use to group keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmurEncodingType",
                        "name": "_lmurEncodingType",
                        "shape": "EncodingType",
                        "locationName": "encoding-type",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmurKeyMarker",
                        "name": "_lmurKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "key-marker",
                        "documentation": "Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmurMaxUploads",
                        "name": "_lmurMaxUploads",
                        "shape": "MaxUploads",
                        "locationName": "max-uploads",
                        "documentation": "Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body. 1,000 is the maximum number of uploads that can be returned in a response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmurPrefix",
                        "name": "_lmurPrefix",
                        "shape": "Prefix",
                        "locationName": "prefix",
                        "documentation": "Lists in-progress uploads only for those keys that begin with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmurUploadIdMarker",
                        "name": "_lmurUploadIdMarker",
                        "shape": "UploadIdMarker",
                        "locationName": "upload-id-marker",
                        "documentation": "Together with key-marker, specifies the multipart upload after which listing should begin. If key-marker is not specified, the upload-id-marker parameter is ignored.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "listObjectVersionsOutput",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "lovoIsTruncated",
                    "name": "_lovoIsTruncated",
                    "shape": "IsTruncated",
                    "locationName": "IsTruncated",
                    "documentation": "A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria. If your results were truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting place in another request to return the rest of the results.",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "name": "ListObjectVersionsOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoIsTruncated",
                        "name": "_lovoIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria. If your results were truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting place in another request to return the rest of the results.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoKeyMarker",
                        "name": "_lovoKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "KeyMarker",
                        "documentation": "Marks the last Key returned in a truncated response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoVersionIdMarker",
                        "name": "_lovoVersionIdMarker",
                        "shape": "VersionIdMarker",
                        "locationName": "VersionIdMarker",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoNextKeyMarker",
                        "name": "_lovoNextKeyMarker",
                        "shape": "NextKeyMarker",
                        "locationName": "NextKeyMarker",
                        "documentation": "Use this value for the key marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoNextVersionIdMarker",
                        "name": "_lovoNextVersionIdMarker",
                        "shape": "NextVersionIdMarker",
                        "locationName": "NextVersionIdMarker",
                        "documentation": "Use this value for the next version id marker parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lovoVersions",
                        "name": "_lovoVersions",
                        "shape": "ObjectVersionList",
                        "locationName": "Version",
                        "documentation": null,
                        "typeExposed": "[ObjectVersion]",
                        "type": "[ObjectVersion]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lovoDeleteMarkers",
                        "name": "_lovoDeleteMarkers",
                        "shape": "DeleteMarkers",
                        "locationName": "DeleteMarker",
                        "documentation": null,
                        "typeExposed": "[DeleteMarkerEntry]",
                        "type": "[DeleteMarkerEntry]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoName",
                        "name": "_lovoName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoPrefix",
                        "name": "_lovoPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoMaxKeys",
                        "name": "_lovoMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "MaxKeys",
                        "documentation": null,
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lovoCommonPrefixes",
                        "name": "_lovoCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "[CommonPrefix]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoEncodingType",
                        "name": "_lovoEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lovoCommonPrefixes",
                        "name": "_lovoCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "[CommonPrefix]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lovoDeleteMarkers",
                        "name": "_lovoDeleteMarkers",
                        "shape": "DeleteMarkers",
                        "locationName": "DeleteMarker",
                        "documentation": null,
                        "typeExposed": "[DeleteMarkerEntry]",
                        "type": "[DeleteMarkerEntry]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoEncodingType",
                        "name": "_lovoEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoIsTruncated",
                        "name": "_lovoIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria. If your results were truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting place in another request to return the rest of the results.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoKeyMarker",
                        "name": "_lovoKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "KeyMarker",
                        "documentation": "Marks the last Key returned in a truncated response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoMaxKeys",
                        "name": "_lovoMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "MaxKeys",
                        "documentation": null,
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoName",
                        "name": "_lovoName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoNextKeyMarker",
                        "name": "_lovoNextKeyMarker",
                        "shape": "NextKeyMarker",
                        "locationName": "NextKeyMarker",
                        "documentation": "Use this value for the key marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoNextVersionIdMarker",
                        "name": "_lovoNextVersionIdMarker",
                        "shape": "NextVersionIdMarker",
                        "locationName": "NextVersionIdMarker",
                        "documentation": "Use this value for the next version id marker parameter in a subsequent request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoPrefix",
                        "name": "_lovoPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovoVersionIdMarker",
                        "name": "_lovoVersionIdMarker",
                        "shape": "VersionIdMarker",
                        "locationName": "VersionIdMarker",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lovoVersions",
                        "name": "_lovoVersions",
                        "shape": "ObjectVersionList",
                        "locationName": "Version",
                        "documentation": null,
                        "typeExposed": "[ObjectVersion]",
                        "type": "[ObjectVersion]"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.ListObjectVersions",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "ListObjectVersions",
            "method": "get",
            "documentation": "Returns metadata about all of the versions of objects in a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETVersion.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "listObjectVersions",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_lovrBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lovrBucket",
                        "name": "_lovrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 18,
                "name": "ListObjectVersions",
                "query": [
                    {
                        "value": "versions",
                        "type": "const"
                    },
                    {
                        "field": "_lovrDelimiter",
                        "locationName": "delimiter",
                        "type": "field"
                    },
                    {
                        "field": "_lovrEncodingType",
                        "locationName": "encoding-type",
                        "type": "field"
                    },
                    {
                        "field": "_lovrKeyMarker",
                        "locationName": "key-marker",
                        "type": "field"
                    },
                    {
                        "field": "_lovrMaxKeys",
                        "locationName": "max-keys",
                        "type": "field"
                    },
                    {
                        "field": "_lovrPrefix",
                        "locationName": "prefix",
                        "type": "field"
                    },
                    {
                        "field": "_lovrVersionIdMarker",
                        "locationName": "version-id-marker",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovrDelimiter",
                        "name": "_lovrDelimiter",
                        "shape": "Delimiter",
                        "locationName": "delimiter",
                        "documentation": "A delimiter is a character you use to group keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovrEncodingType",
                        "name": "_lovrEncodingType",
                        "shape": "EncodingType",
                        "locationName": "encoding-type",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovrKeyMarker",
                        "name": "_lovrKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "key-marker",
                        "documentation": "Specifies the key to start with when listing objects in a bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovrMaxKeys",
                        "name": "_lovrMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "max-keys",
                        "documentation": "Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovrPrefix",
                        "name": "_lovrPrefix",
                        "shape": "Prefix",
                        "locationName": "prefix",
                        "documentation": "Limits the response to keys that begin with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovrVersionIdMarker",
                        "name": "_lovrVersionIdMarker",
                        "shape": "VersionIdMarker",
                        "locationName": "version-id-marker",
                        "documentation": "Specifies the object version you want to start listing from.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lovrBucket",
                        "name": "_lovrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovrDelimiter",
                        "name": "_lovrDelimiter",
                        "shape": "Delimiter",
                        "locationName": "delimiter",
                        "documentation": "A delimiter is a character you use to group keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovrEncodingType",
                        "name": "_lovrEncodingType",
                        "shape": "EncodingType",
                        "locationName": "encoding-type",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovrKeyMarker",
                        "name": "_lovrKeyMarker",
                        "shape": "KeyMarker",
                        "locationName": "key-marker",
                        "documentation": "Specifies the key to start with when listing objects in a bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovrMaxKeys",
                        "name": "_lovrMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "max-keys",
                        "documentation": "Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovrPrefix",
                        "name": "_lovrPrefix",
                        "shape": "Prefix",
                        "locationName": "prefix",
                        "documentation": "Limits the response to keys that begin with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lovrVersionIdMarker",
                        "name": "_lovrVersionIdMarker",
                        "shape": "VersionIdMarker",
                        "locationName": "version-id-marker",
                        "documentation": "Specifies the object version you want to start listing from.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "listObjectsOutput",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "looIsTruncated",
                    "name": "_looIsTruncated",
                    "shape": "IsTruncated",
                    "locationName": "IsTruncated",
                    "documentation": "A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria.",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "name": "ListObjectsOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "looIsTruncated",
                        "name": "_looIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "looMarker",
                        "name": "_looMarker",
                        "shape": "Marker",
                        "locationName": "Marker",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "looNextMarker",
                        "name": "_looNextMarker",
                        "shape": "NextMarker",
                        "locationName": "NextMarker",
                        "documentation": "When response is truncated (the IsTruncated element value in the response is true), you can use the key name in this field as marker in the subsequent request to get next set of objects. Amazon S3 lists objects in alphabetical order Note: This element is returned only if you have delimiter request parameter specified. If response does not include the NextMaker and it is truncated, you can use the value of the last Key in the response as the marker in the subsequent request to get the next set of object keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "looContents",
                        "name": "_looContents",
                        "shape": "ObjectList",
                        "locationName": "Contents",
                        "documentation": null,
                        "typeExposed": "[Object]",
                        "type": "[Object]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "looName",
                        "name": "_looName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "looPrefix",
                        "name": "_looPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "looMaxKeys",
                        "name": "_looMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "MaxKeys",
                        "documentation": null,
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "looCommonPrefixes",
                        "name": "_looCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "[CommonPrefix]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "looEncodingType",
                        "name": "_looEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "looCommonPrefixes",
                        "name": "_looCommonPrefixes",
                        "shape": "CommonPrefixList",
                        "locationName": "CommonPrefixes",
                        "documentation": null,
                        "typeExposed": "[CommonPrefix]",
                        "type": "[CommonPrefix]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "looContents",
                        "name": "_looContents",
                        "shape": "ObjectList",
                        "locationName": "Contents",
                        "documentation": null,
                        "typeExposed": "[Object]",
                        "type": "[Object]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "looEncodingType",
                        "name": "_looEncodingType",
                        "shape": "EncodingType",
                        "locationName": "EncodingType",
                        "documentation": "Encoding type used by Amazon S3 to encode object keys in the response.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "looIsTruncated",
                        "name": "_looIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "looMarker",
                        "name": "_looMarker",
                        "shape": "Marker",
                        "locationName": "Marker",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "looMaxKeys",
                        "name": "_looMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "MaxKeys",
                        "documentation": null,
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "looName",
                        "name": "_looName",
                        "shape": "BucketName",
                        "locationName": "Name",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "looNextMarker",
                        "name": "_looNextMarker",
                        "shape": "NextMarker",
                        "locationName": "NextMarker",
                        "documentation": "When response is truncated (the IsTruncated element value in the response is true), you can use the key name in this field as marker in the subsequent request to get next set of objects. Amazon S3 lists objects in alphabetical order Note: This element is returned only if you have delimiter request parameter specified. If response does not include the NextMaker and it is truncated, you can use the value of the last Key in the response as the marker in the subsequent request to get the next set of object keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "looPrefix",
                        "name": "_looPrefix",
                        "shape": "Prefix",
                        "locationName": "Prefix",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.ListObjects",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "ListObjects",
            "method": "get",
            "documentation": "Returns some or all (up to 1000) of the objects in a bucket. You can use the request parameters as selection criteria to return a subset of the objects in a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGET.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "listObjects",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_lorBucket",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lorBucket",
                        "name": "_lorBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 14,
                "name": "ListObjects",
                "query": [
                    {
                        "field": "_lorDelimiter",
                        "locationName": "delimiter",
                        "type": "field"
                    },
                    {
                        "field": "_lorEncodingType",
                        "locationName": "encoding-type",
                        "type": "field"
                    },
                    {
                        "field": "_lorMarker",
                        "locationName": "marker",
                        "type": "field"
                    },
                    {
                        "field": "_lorMaxKeys",
                        "locationName": "max-keys",
                        "type": "field"
                    },
                    {
                        "field": "_lorPrefix",
                        "locationName": "prefix",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lorDelimiter",
                        "name": "_lorDelimiter",
                        "shape": "Delimiter",
                        "locationName": "delimiter",
                        "documentation": "A delimiter is a character you use to group keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lorEncodingType",
                        "name": "_lorEncodingType",
                        "shape": "EncodingType",
                        "locationName": "encoding-type",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lorMarker",
                        "name": "_lorMarker",
                        "shape": "Marker",
                        "locationName": "marker",
                        "documentation": "Specifies the key to start with when listing objects in a bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lorMaxKeys",
                        "name": "_lorMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "max-keys",
                        "documentation": "Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lorPrefix",
                        "name": "_lorPrefix",
                        "shape": "Prefix",
                        "locationName": "prefix",
                        "documentation": "Limits the response to keys that begin with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lorBucket",
                        "name": "_lorBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lorDelimiter",
                        "name": "_lorDelimiter",
                        "shape": "Delimiter",
                        "locationName": "delimiter",
                        "documentation": "A delimiter is a character you use to group keys.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lorEncodingType",
                        "name": "_lorEncodingType",
                        "shape": "EncodingType",
                        "locationName": "encoding-type",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lorMarker",
                        "name": "_lorMarker",
                        "shape": "Marker",
                        "locationName": "marker",
                        "documentation": "Specifies the key to start with when listing objects in a bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lorMaxKeys",
                        "name": "_lorMaxKeys",
                        "shape": "MaxKeys",
                        "locationName": "max-keys",
                        "documentation": "Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lorPrefix",
                        "name": "_lorPrefix",
                        "shape": "Prefix",
                        "locationName": "prefix",
                        "documentation": "Limits the response to keys that begin with the specified prefix.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "listPartsOutput",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "lpoBucket",
                    "name": "_lpoBucket",
                    "shape": "BucketName",
                    "locationName": "Bucket",
                    "documentation": "Name of the bucket to which the multipart upload was initiated.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ListPartsOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoBucket",
                        "name": "_lpoBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoKey",
                        "name": "_lpoKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Object key for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoUploadId",
                        "name": "_lpoUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "Upload ID identifying the multipart upload whose parts are being listed.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoPartNumberMarker",
                        "name": "_lpoPartNumberMarker",
                        "shape": "PartNumberMarker",
                        "locationName": "PartNumberMarker",
                        "documentation": "Part number after which listing begins.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoNextPartNumberMarker",
                        "name": "_lpoNextPartNumberMarker",
                        "shape": "NextPartNumberMarker",
                        "locationName": "NextPartNumberMarker",
                        "documentation": "When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoMaxParts",
                        "name": "_lpoMaxParts",
                        "shape": "MaxParts",
                        "locationName": "MaxParts",
                        "documentation": "Maximum number of parts that were allowed in the response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoIsTruncated",
                        "name": "_lpoIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "Indicates whether the returned list of parts is truncated.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lpoParts",
                        "name": "_lpoParts",
                        "shape": "Parts",
                        "locationName": "Part",
                        "documentation": null,
                        "typeExposed": "[Part]",
                        "type": "[Part]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoInitiator",
                        "name": "_lpoInitiator",
                        "shape": "Initiator",
                        "locationName": "Initiator",
                        "documentation": "Identifies who initiated the multipart upload.",
                        "typeExposed": "Maybe Initiator",
                        "type": "Maybe Initiator"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoOwner",
                        "name": "_lpoOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoStorageClass",
                        "name": "_lpoStorageClass",
                        "shape": "StorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoBucket",
                        "name": "_lpoBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "Name of the bucket to which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoInitiator",
                        "name": "_lpoInitiator",
                        "shape": "Initiator",
                        "locationName": "Initiator",
                        "documentation": "Identifies who initiated the multipart upload.",
                        "typeExposed": "Maybe Initiator",
                        "type": "Maybe Initiator"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoIsTruncated",
                        "name": "_lpoIsTruncated",
                        "shape": "IsTruncated",
                        "locationName": "IsTruncated",
                        "documentation": "Indicates whether the returned list of parts is truncated.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoKey",
                        "name": "_lpoKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": "Object key for which the multipart upload was initiated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoMaxParts",
                        "name": "_lpoMaxParts",
                        "shape": "MaxParts",
                        "locationName": "MaxParts",
                        "documentation": "Maximum number of parts that were allowed in the response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoNextPartNumberMarker",
                        "name": "_lpoNextPartNumberMarker",
                        "shape": "NextPartNumberMarker",
                        "locationName": "NextPartNumberMarker",
                        "documentation": "When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoOwner",
                        "name": "_lpoOwner",
                        "shape": "Owner",
                        "locationName": "Owner",
                        "documentation": null,
                        "typeExposed": "Maybe Owner",
                        "type": "Maybe Owner"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoPartNumberMarker",
                        "name": "_lpoPartNumberMarker",
                        "shape": "PartNumberMarker",
                        "locationName": "PartNumberMarker",
                        "documentation": "Part number after which listing begins.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lpoParts",
                        "name": "_lpoParts",
                        "shape": "Parts",
                        "locationName": "Part",
                        "documentation": null,
                        "typeExposed": "[Part]",
                        "type": "[Part]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoStorageClass",
                        "name": "_lpoStorageClass",
                        "shape": "StorageClass",
                        "locationName": "StorageClass",
                        "documentation": "The class of storage used to store the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpoUploadId",
                        "name": "_lpoUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "UploadId",
                        "documentation": "Upload ID identifying the multipart upload whose parts are being listed.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.ListParts",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "ListParts",
            "method": "get",
            "documentation": "Lists the parts that have been uploaded for a specific multipart upload.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListParts.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "listParts",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_lprBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_lprKey",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lprBucket",
                        "name": "_lprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lprKey",
                        "name": "_lprKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lprUploadId",
                        "name": "_lprUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": "Upload ID identifying the multipart upload whose parts are being listed.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 19,
                "name": "ListParts",
                "query": [
                    {
                        "field": "_lprMaxParts",
                        "locationName": "max-parts",
                        "type": "field"
                    },
                    {
                        "field": "_lprPartNumberMarker",
                        "locationName": "part-number-marker",
                        "type": "field"
                    },
                    {
                        "field": "_lprUploadId",
                        "locationName": "uploadId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lprMaxParts",
                        "name": "_lprMaxParts",
                        "shape": "MaxParts",
                        "locationName": "max-parts",
                        "documentation": "Sets the maximum number of parts to return.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lprPartNumberMarker",
                        "name": "_lprPartNumberMarker",
                        "shape": "PartNumberMarker",
                        "locationName": "part-number-marker",
                        "documentation": "Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lprBucket",
                        "name": "_lprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lprKey",
                        "name": "_lprKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lprMaxParts",
                        "name": "_lprMaxParts",
                        "shape": "MaxParts",
                        "locationName": "max-parts",
                        "documentation": "Sets the maximum number of parts to return.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lprPartNumberMarker",
                        "name": "_lprPartNumberMarker",
                        "shape": "PartNumberMarker",
                        "locationName": "part-number-marker",
                        "documentation": "Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lprUploadId",
                        "name": "_lprUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": "Upload ID identifying the multipart upload whose parts are being listed.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "putBucketAclResponse",
                "wrapper": false,
                "required": [],
                "name": "PutBucketAclResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.PutBucketAcl",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "PutBucketAcl",
            "method": "put",
            "documentation": "Sets the permissions on a bucket using access control lists (ACL).",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTacl.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "putBucketAcl",
                "headerPad": 25,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbarBucket",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "pbarAccessControlPolicy",
                    "name": "_pbarAccessControlPolicy",
                    "shape": "AccessControlPolicy",
                    "locationName": "AccessControlPolicy",
                    "documentation": null,
                    "typeExposed": "Maybe AccessControlPolicy",
                    "type": "Maybe AccessControlPolicy"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbarBucket",
                        "name": "_pbarBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [
                    {
                        "field": "_pbarACL",
                        "locationName": "x-amz-acl",
                        "type": "field"
                    },
                    {
                        "field": "_pbarContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_pbarGrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "type": "field"
                    },
                    {
                        "field": "_pbarGrantRead",
                        "locationName": "x-amz-grant-read",
                        "type": "field"
                    },
                    {
                        "field": "_pbarGrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "type": "field"
                    },
                    {
                        "field": "_pbarGrantWrite",
                        "locationName": "x-amz-grant-write",
                        "type": "field"
                    },
                    {
                        "field": "_pbarGrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "PutBucketAcl",
                "query": [
                    {
                        "value": "acl",
                        "type": "const"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarACL",
                        "name": "_pbarACL",
                        "shape": "BucketCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarAccessControlPolicy",
                        "name": "_pbarAccessControlPolicy",
                        "shape": "AccessControlPolicy",
                        "locationName": "AccessControlPolicy",
                        "documentation": null,
                        "typeExposed": "Maybe AccessControlPolicy",
                        "type": "Maybe AccessControlPolicy"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarContentMD5",
                        "name": "_pbarContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarGrantFullControl",
                        "name": "_pbarGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarGrantRead",
                        "name": "_pbarGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to list the objects in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarGrantReadACP",
                        "name": "_pbarGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the bucket ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarGrantWrite",
                        "name": "_pbarGrantWrite",
                        "shape": "GrantWrite",
                        "locationName": "x-amz-grant-write",
                        "documentation": "Allows grantee to create, overwrite, and delete any object in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarGrantWriteACP",
                        "name": "_pbarGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarACL",
                        "name": "_pbarACL",
                        "shape": "BucketCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarAccessControlPolicy",
                        "name": "_pbarAccessControlPolicy",
                        "shape": "AccessControlPolicy",
                        "locationName": "AccessControlPolicy",
                        "documentation": null,
                        "typeExposed": "Maybe AccessControlPolicy",
                        "type": "Maybe AccessControlPolicy"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbarBucket",
                        "name": "_pbarBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarContentMD5",
                        "name": "_pbarContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarGrantFullControl",
                        "name": "_pbarGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarGrantRead",
                        "name": "_pbarGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to list the objects in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarGrantReadACP",
                        "name": "_pbarGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the bucket ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarGrantWrite",
                        "name": "_pbarGrantWrite",
                        "shape": "GrantWrite",
                        "locationName": "x-amz-grant-write",
                        "documentation": "Allows grantee to create, overwrite, and delete any object in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbarGrantWriteACP",
                        "name": "_pbarGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "putBucketCorsResponse",
                "wrapper": false,
                "required": [],
                "name": "PutBucketCorsResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.PutBucketCors",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "PutBucketCors",
            "method": "put",
            "documentation": "Sets the cors configuration for a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTcors.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 22,
                "ctor": "putBucketCors",
                "headerPad": 12,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbcrBucket",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "pbcrCORSConfiguration",
                    "name": "_pbcrCORSConfiguration",
                    "shape": "CORSConfiguration",
                    "locationName": "CORSConfiguration",
                    "documentation": null,
                    "typeExposed": "Maybe CORSConfiguration",
                    "type": "Maybe CORSConfiguration"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbcrBucket",
                        "name": "_pbcrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [
                    {
                        "field": "_pbcrContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "PutBucketCors",
                "query": [
                    {
                        "value": "cors",
                        "type": "const"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbcrCORSConfiguration",
                        "name": "_pbcrCORSConfiguration",
                        "shape": "CORSConfiguration",
                        "locationName": "CORSConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CORSConfiguration",
                        "type": "Maybe CORSConfiguration"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbcrContentMD5",
                        "name": "_pbcrContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbcrBucket",
                        "name": "_pbcrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbcrCORSConfiguration",
                        "name": "_pbcrCORSConfiguration",
                        "shape": "CORSConfiguration",
                        "locationName": "CORSConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe CORSConfiguration",
                        "type": "Maybe CORSConfiguration"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbcrContentMD5",
                        "name": "_pbcrContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "putBucketLifecycleResponse",
                "wrapper": false,
                "required": [],
                "name": "PutBucketLifecycleResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.PutBucketLifecycle",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "PutBucketLifecycle",
            "method": "put",
            "documentation": "Sets lifecycle configuration for your bucket. If a lifecycle configuration exists, it replaces it.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 27,
                "ctor": "putBucketLifecycle",
                "headerPad": 12,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pblrBucket",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "pblrLifecycleConfiguration",
                    "name": "_pblrLifecycleConfiguration",
                    "shape": "LifecycleConfiguration",
                    "locationName": "LifecycleConfiguration",
                    "documentation": null,
                    "typeExposed": "Maybe LifecycleConfiguration",
                    "type": "Maybe LifecycleConfiguration"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pblrBucket",
                        "name": "_pblrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [
                    {
                        "field": "_pblrContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "PutBucketLifecycle",
                "query": [
                    {
                        "value": "lifecycle",
                        "type": "const"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pblrContentMD5",
                        "name": "_pblrContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pblrLifecycleConfiguration",
                        "name": "_pblrLifecycleConfiguration",
                        "shape": "LifecycleConfiguration",
                        "locationName": "LifecycleConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe LifecycleConfiguration",
                        "type": "Maybe LifecycleConfiguration"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pblrBucket",
                        "name": "_pblrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pblrContentMD5",
                        "name": "_pblrContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pblrLifecycleConfiguration",
                        "name": "_pblrLifecycleConfiguration",
                        "shape": "LifecycleConfiguration",
                        "locationName": "LifecycleConfiguration",
                        "documentation": null,
                        "typeExposed": "Maybe LifecycleConfiguration",
                        "type": "Maybe LifecycleConfiguration"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "putBucketLoggingResponse",
                "wrapper": false,
                "required": [],
                "name": "PutBucketLoggingResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.PutBucketLogging",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "PutBucketLogging",
            "method": "put",
            "documentation": "Set the logging parameters for a bucket and to specify permissions for who can view and modify the logging parameters. To set the logging status of a bucket, you must be the bucket owner.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTlogging.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 25,
                "ctor": "putBucketLogging",
                "headerPad": 12,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pblr1Bucket",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "pblr1BucketLoggingStatus",
                    "name": "_pblr1BucketLoggingStatus",
                    "shape": "BucketLoggingStatus",
                    "locationName": "BucketLoggingStatus",
                    "documentation": null,
                    "typeExposed": "BucketLoggingStatus",
                    "type": "BucketLoggingStatus"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pblr1Bucket",
                        "name": "_pblr1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pblr1BucketLoggingStatus",
                        "name": "_pblr1BucketLoggingStatus",
                        "shape": "BucketLoggingStatus",
                        "locationName": "BucketLoggingStatus",
                        "documentation": null,
                        "typeExposed": "BucketLoggingStatus",
                        "type": "BucketLoggingStatus"
                    }
                ],
                "headers": [
                    {
                        "field": "_pblr1ContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "PutBucketLogging",
                "query": [
                    {
                        "value": "logging",
                        "type": "const"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pblr1ContentMD5",
                        "name": "_pblr1ContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pblr1Bucket",
                        "name": "_pblr1Bucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pblr1BucketLoggingStatus",
                        "name": "_pblr1BucketLoggingStatus",
                        "shape": "BucketLoggingStatus",
                        "locationName": "BucketLoggingStatus",
                        "documentation": null,
                        "typeExposed": "BucketLoggingStatus",
                        "type": "BucketLoggingStatus"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pblr1ContentMD5",
                        "name": "_pblr1ContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "putBucketNotificationResponse",
                "wrapper": false,
                "required": [],
                "name": "PutBucketNotificationResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.PutBucketNotification",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "PutBucketNotification",
            "method": "put",
            "documentation": "Enables notifications of specified events for a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTnotification.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 30,
                "ctor": "putBucketNotification",
                "headerPad": 12,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbnrBucket",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "pbnrNotificationConfiguration",
                    "name": "_pbnrNotificationConfiguration",
                    "shape": "NotificationConfiguration",
                    "locationName": "NotificationConfiguration",
                    "documentation": null,
                    "typeExposed": "NotificationConfiguration",
                    "type": "NotificationConfiguration"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbnrBucket",
                        "name": "_pbnrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbnrNotificationConfiguration",
                        "name": "_pbnrNotificationConfiguration",
                        "shape": "NotificationConfiguration",
                        "locationName": "NotificationConfiguration",
                        "documentation": null,
                        "typeExposed": "NotificationConfiguration",
                        "type": "NotificationConfiguration"
                    }
                ],
                "headers": [
                    {
                        "field": "_pbnrContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "PutBucketNotification",
                "query": [
                    {
                        "value": "notification",
                        "type": "const"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbnrContentMD5",
                        "name": "_pbnrContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbnrBucket",
                        "name": "_pbnrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbnrContentMD5",
                        "name": "_pbnrContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbnrNotificationConfiguration",
                        "name": "_pbnrNotificationConfiguration",
                        "shape": "NotificationConfiguration",
                        "locationName": "NotificationConfiguration",
                        "documentation": null,
                        "typeExposed": "NotificationConfiguration",
                        "type": "NotificationConfiguration"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "putBucketPolicyResponse",
                "wrapper": false,
                "required": [],
                "name": "PutBucketPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.PutBucketPolicy",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "PutBucketPolicy",
            "method": "put",
            "documentation": "Replaces a policy on a bucket. If the bucket already has a policy, the one in this request completely replaces it.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTpolicy.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "putBucketPolicy",
                "headerPad": 12,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbprBucket",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "pbprPolicy",
                    "name": "_pbprPolicy",
                    "shape": "Policy",
                    "locationName": "Policy",
                    "documentation": "The bucket policy as a JSON document.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbprBucket",
                        "name": "_pbprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbprPolicy",
                        "name": "_pbprPolicy",
                        "shape": "Policy",
                        "locationName": "Policy",
                        "documentation": "The bucket policy as a JSON document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [
                    {
                        "field": "_pbprContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "PutBucketPolicy",
                "query": [
                    {
                        "value": "policy",
                        "type": "const"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbprContentMD5",
                        "name": "_pbprContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbprBucket",
                        "name": "_pbprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbprContentMD5",
                        "name": "_pbprContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbprPolicy",
                        "name": "_pbprPolicy",
                        "shape": "Policy",
                        "locationName": "Policy",
                        "documentation": "The bucket policy as a JSON document.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "putBucketRequestPaymentResponse",
                "wrapper": false,
                "required": [],
                "name": "PutBucketRequestPaymentResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.PutBucketRequestPayment",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "PutBucketRequestPayment",
            "method": "put",
            "documentation": "Sets the request payment configuration for a bucket. By default, the bucket owner pays for downloads from the bucket. This configuration parameter enables the bucket owner (only) to specify that the person requesting the download will be charged for the download.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTrequestPaymentPUT.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 33,
                "ctor": "putBucketRequestPayment",
                "headerPad": 12,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbrprBucket",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "pbrprRequestPaymentConfiguration",
                    "name": "_pbrprRequestPaymentConfiguration",
                    "shape": "RequestPaymentConfiguration",
                    "locationName": "RequestPaymentConfiguration",
                    "documentation": null,
                    "typeExposed": "RequestPaymentConfiguration",
                    "type": "RequestPaymentConfiguration"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbrprBucket",
                        "name": "_pbrprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbrprRequestPaymentConfiguration",
                        "name": "_pbrprRequestPaymentConfiguration",
                        "shape": "RequestPaymentConfiguration",
                        "locationName": "RequestPaymentConfiguration",
                        "documentation": null,
                        "typeExposed": "RequestPaymentConfiguration",
                        "type": "RequestPaymentConfiguration"
                    }
                ],
                "headers": [
                    {
                        "field": "_pbrprContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "PutBucketRequestPayment",
                "query": [
                    {
                        "value": "requestPayment",
                        "type": "const"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbrprContentMD5",
                        "name": "_pbrprContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbrprBucket",
                        "name": "_pbrprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbrprContentMD5",
                        "name": "_pbrprContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbrprRequestPaymentConfiguration",
                        "name": "_pbrprRequestPaymentConfiguration",
                        "shape": "RequestPaymentConfiguration",
                        "locationName": "RequestPaymentConfiguration",
                        "documentation": null,
                        "typeExposed": "RequestPaymentConfiguration",
                        "type": "RequestPaymentConfiguration"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "putBucketTaggingResponse",
                "wrapper": false,
                "required": [],
                "name": "PutBucketTaggingResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.PutBucketTagging",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "PutBucketTagging",
            "method": "put",
            "documentation": "Sets the tags for a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTtagging.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "putBucketTagging",
                "headerPad": 12,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbtrBucket",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "pbtrTagging",
                    "name": "_pbtrTagging",
                    "shape": "Tagging",
                    "locationName": "Tagging",
                    "documentation": null,
                    "typeExposed": "Tagging",
                    "type": "Tagging"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbtrBucket",
                        "name": "_pbtrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbtrTagging",
                        "name": "_pbtrTagging",
                        "shape": "Tagging",
                        "locationName": "Tagging",
                        "documentation": null,
                        "typeExposed": "Tagging",
                        "type": "Tagging"
                    }
                ],
                "headers": [
                    {
                        "field": "_pbtrContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "PutBucketTagging",
                "query": [
                    {
                        "value": "tagging",
                        "type": "const"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbtrContentMD5",
                        "name": "_pbtrContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbtrBucket",
                        "name": "_pbtrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbtrContentMD5",
                        "name": "_pbtrContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbtrTagging",
                        "name": "_pbtrTagging",
                        "shape": "Tagging",
                        "locationName": "Tagging",
                        "documentation": null,
                        "typeExposed": "Tagging",
                        "type": "Tagging"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "putBucketVersioningResponse",
                "wrapper": false,
                "required": [],
                "name": "PutBucketVersioningResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.PutBucketVersioning",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "PutBucketVersioning",
            "method": "put",
            "documentation": "Sets the versioning state of an existing bucket. To set the versioning state, you must be the bucket owner.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 28,
                "ctor": "putBucketVersioning",
                "headerPad": 12,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbvrBucket",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "pbvrVersioningConfiguration",
                    "name": "_pbvrVersioningConfiguration",
                    "shape": "VersioningConfiguration",
                    "locationName": "VersioningConfiguration",
                    "documentation": null,
                    "typeExposed": "VersioningConfiguration",
                    "type": "VersioningConfiguration"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbvrBucket",
                        "name": "_pbvrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbvrVersioningConfiguration",
                        "name": "_pbvrVersioningConfiguration",
                        "shape": "VersioningConfiguration",
                        "locationName": "VersioningConfiguration",
                        "documentation": null,
                        "typeExposed": "VersioningConfiguration",
                        "type": "VersioningConfiguration"
                    }
                ],
                "headers": [
                    {
                        "field": "_pbvrContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_pbvrMFA",
                        "locationName": "x-amz-mfa",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "PutBucketVersioning",
                "query": [
                    {
                        "value": "versioning",
                        "type": "const"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbvrContentMD5",
                        "name": "_pbvrContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbvrMFA",
                        "name": "_pbvrMFA",
                        "shape": "MFA",
                        "locationName": "x-amz-mfa",
                        "documentation": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbvrBucket",
                        "name": "_pbvrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbvrContentMD5",
                        "name": "_pbvrContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbvrMFA",
                        "name": "_pbvrMFA",
                        "shape": "MFA",
                        "locationName": "x-amz-mfa",
                        "documentation": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbvrVersioningConfiguration",
                        "name": "_pbvrVersioningConfiguration",
                        "shape": "VersioningConfiguration",
                        "locationName": "VersioningConfiguration",
                        "documentation": null,
                        "typeExposed": "VersioningConfiguration",
                        "type": "VersioningConfiguration"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "putBucketWebsiteResponse",
                "wrapper": false,
                "required": [],
                "name": "PutBucketWebsiteResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.PutBucketWebsite",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "PutBucketWebsite",
            "method": "put",
            "documentation": "Set the website configuration for a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTwebsite.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 25,
                "ctor": "putBucketWebsite",
                "headerPad": 12,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_pbwrBucket",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "pbwrWebsiteConfiguration",
                    "name": "_pbwrWebsiteConfiguration",
                    "shape": "WebsiteConfiguration",
                    "locationName": "WebsiteConfiguration",
                    "documentation": null,
                    "typeExposed": "WebsiteConfiguration",
                    "type": "WebsiteConfiguration"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbwrBucket",
                        "name": "_pbwrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbwrWebsiteConfiguration",
                        "name": "_pbwrWebsiteConfiguration",
                        "shape": "WebsiteConfiguration",
                        "locationName": "WebsiteConfiguration",
                        "documentation": null,
                        "typeExposed": "WebsiteConfiguration",
                        "type": "WebsiteConfiguration"
                    }
                ],
                "headers": [
                    {
                        "field": "_pbwrContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "PutBucketWebsite",
                "query": [
                    {
                        "value": "website",
                        "type": "const"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbwrContentMD5",
                        "name": "_pbwrContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbwrBucket",
                        "name": "_pbwrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pbwrContentMD5",
                        "name": "_pbwrContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pbwrWebsiteConfiguration",
                        "name": "_pbwrWebsiteConfiguration",
                        "shape": "WebsiteConfiguration",
                        "locationName": "WebsiteConfiguration",
                        "documentation": null,
                        "typeExposed": "WebsiteConfiguration",
                        "type": "WebsiteConfiguration"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "putObjectOutput",
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "PutObjectOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "pooExpiration",
                        "name": "_pooExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured, this will contain the expiration date (expiry-date) and rule ID (rule-id). The value of rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pooETag",
                        "name": "_pooETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag for the uploaded object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pooServerSideEncryption",
                        "name": "_pooServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pooVersionId",
                        "name": "_pooVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pooSSECustomerAlgorithm",
                        "name": "_pooSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pooSSECustomerKeyMD5",
                        "name": "_pooSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pooETag",
                        "name": "_pooETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag for the uploaded object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "pooExpiration",
                        "name": "_pooExpiration",
                        "shape": "Expiration",
                        "locationName": "x-amz-expiration",
                        "documentation": "If the object expiration is configured, this will contain the expiration date (expiry-date) and rule ID (rule-id). The value of rule-id is URL encoded.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pooSSECustomerAlgorithm",
                        "name": "_pooSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pooSSECustomerKeyMD5",
                        "name": "_pooSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pooServerSideEncryption",
                        "name": "_pooServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pooVersionId",
                        "name": "_pooVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "x-amz-version-id",
                        "documentation": "Version of the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.PutObject",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "PutObject",
            "method": "put",
            "documentation": "Adds an object to a bucket.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUT.html",
            "request": {
                "deriving": [
                    "Show",
                    "Generic"
                ],
                "streaming": true,
                "fieldPad": 27,
                "ctor": "putObject",
                "headerPad": 48,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_porBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_porKey",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "porBody",
                    "name": "_porBody",
                    "shape": "Body",
                    "locationName": "Body",
                    "documentation": null,
                    "typeExposed": "RqBody",
                    "type": "RqBody"
                },
                "required": [
                    {
                        "location": "body",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "porBody",
                        "name": "_porBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": null,
                        "typeExposed": "RqBody",
                        "type": "RqBody"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "porBucket",
                        "name": "_porBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "porKey",
                        "name": "_porKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [
                    {
                        "field": "_porACL",
                        "locationName": "x-amz-acl",
                        "type": "field"
                    },
                    {
                        "field": "_porCacheControl",
                        "locationName": "Cache-Control",
                        "type": "field"
                    },
                    {
                        "field": "_porContentDisposition",
                        "locationName": "Content-Disposition",
                        "type": "field"
                    },
                    {
                        "field": "_porContentEncoding",
                        "locationName": "Content-Encoding",
                        "type": "field"
                    },
                    {
                        "field": "_porContentLanguage",
                        "locationName": "Content-Language",
                        "type": "field"
                    },
                    {
                        "field": "_porContentLength",
                        "locationName": "Content-Length",
                        "type": "field"
                    },
                    {
                        "field": "_porContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_porContentType",
                        "locationName": "Content-Type",
                        "type": "field"
                    },
                    {
                        "field": "_porExpires",
                        "locationName": "Expires",
                        "type": "field"
                    },
                    {
                        "field": "_porGrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "type": "field"
                    },
                    {
                        "field": "_porGrantRead",
                        "locationName": "x-amz-grant-read",
                        "type": "field"
                    },
                    {
                        "field": "_porGrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "type": "field"
                    },
                    {
                        "field": "_porGrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "type": "field"
                    },
                    {
                        "field": "_porMetadata",
                        "locationName": "x-amz-meta-",
                        "type": "field"
                    },
                    {
                        "field": "_porServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "type": "field"
                    },
                    {
                        "field": "_porStorageClass",
                        "locationName": "x-amz-storage-class",
                        "type": "field"
                    },
                    {
                        "field": "_porWebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "type": "field"
                    },
                    {
                        "field": "_porSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_porSSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_porSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "PutObject",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porACL",
                        "name": "_porACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porCacheControl",
                        "name": "_porCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porContentDisposition",
                        "name": "_porContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porContentEncoding",
                        "name": "_porContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porContentLanguage",
                        "name": "_porContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porContentLength",
                        "name": "_porContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porContentMD5",
                        "name": "_porContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porContentType",
                        "name": "_porContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "porExpires",
                        "name": "_porExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porGrantFullControl",
                        "name": "_porGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porGrantRead",
                        "name": "_porGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to read the object data and its metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porGrantReadACP",
                        "name": "_porGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the object ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porGrantWriteACP",
                        "name": "_porGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "porMetadata",
                        "name": "_porMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porServerSideEncryption",
                        "name": "_porServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porStorageClass",
                        "name": "_porStorageClass",
                        "shape": "StorageClass",
                        "locationName": "x-amz-storage-class",
                        "documentation": "The type of storage to use for the object. Defaults to 'STANDARD'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porWebsiteRedirectLocation",
                        "name": "_porWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porSSECustomerAlgorithm",
                        "name": "_porSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "porSSECustomerKey",
                        "name": "_porSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porSSECustomerKeyMD5",
                        "name": "_porSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porACL",
                        "name": "_porACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "porBody",
                        "name": "_porBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": null,
                        "typeExposed": "RqBody",
                        "type": "RqBody"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "porBucket",
                        "name": "_porBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porCacheControl",
                        "name": "_porCacheControl",
                        "shape": "CacheControl",
                        "locationName": "Cache-Control",
                        "documentation": "Specifies caching behavior along the request/reply chain.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porContentDisposition",
                        "name": "_porContentDisposition",
                        "shape": "ContentDisposition",
                        "locationName": "Content-Disposition",
                        "documentation": "Specifies presentational information for the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porContentEncoding",
                        "name": "_porContentEncoding",
                        "shape": "ContentEncoding",
                        "locationName": "Content-Encoding",
                        "documentation": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porContentLanguage",
                        "name": "_porContentLanguage",
                        "shape": "ContentLanguage",
                        "locationName": "Content-Language",
                        "documentation": "The language the content is in.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porContentLength",
                        "name": "_porContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porContentMD5",
                        "name": "_porContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porContentType",
                        "name": "_porContentType",
                        "shape": "ContentType",
                        "locationName": "Content-Type",
                        "documentation": "A standard MIME type describing the format of the object data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "porExpires",
                        "name": "_porExpires",
                        "shape": "Expires",
                        "locationName": "Expires",
                        "documentation": "The date and time at which the object is no longer cacheable.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porGrantFullControl",
                        "name": "_porGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porGrantRead",
                        "name": "_porGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to read the object data and its metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porGrantReadACP",
                        "name": "_porGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the object ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porGrantWriteACP",
                        "name": "_porGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "porKey",
                        "name": "_porKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "headers",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "porMetadata",
                        "name": "_porMetadata",
                        "shape": "Metadata",
                        "locationName": "x-amz-meta-",
                        "documentation": "A map of metadata to store with the object in S3.",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porSSECustomerAlgorithm",
                        "name": "_porSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "porSSECustomerKey",
                        "name": "_porSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porSSECustomerKeyMD5",
                        "name": "_porSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porServerSideEncryption",
                        "name": "_porServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porStorageClass",
                        "name": "_porStorageClass",
                        "shape": "StorageClass",
                        "locationName": "x-amz-storage-class",
                        "documentation": "The type of storage to use for the object. Defaults to 'STANDARD'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "porWebsiteRedirectLocation",
                        "name": "_porWebsiteRedirectLocation",
                        "shape": "WebsiteRedirectLocation",
                        "locationName": "x-amz-website-redirect-location",
                        "documentation": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "putObjectAclResponse",
                "wrapper": false,
                "required": [],
                "name": "PutObjectAclResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.PutObjectAcl",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "PutObjectAcl",
            "method": "put",
            "documentation": "uses the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUTacl.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "putObjectAcl",
                "headerPad": 25,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_poarBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_poarKey",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "poarAccessControlPolicy",
                    "name": "_poarAccessControlPolicy",
                    "shape": "AccessControlPolicy",
                    "locationName": "AccessControlPolicy",
                    "documentation": null,
                    "typeExposed": "Maybe AccessControlPolicy",
                    "type": "Maybe AccessControlPolicy"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "poarBucket",
                        "name": "_poarBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "poarKey",
                        "name": "_poarKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [
                    {
                        "field": "_poarACL",
                        "locationName": "x-amz-acl",
                        "type": "field"
                    },
                    {
                        "field": "_poarContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_poarGrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "type": "field"
                    },
                    {
                        "field": "_poarGrantRead",
                        "locationName": "x-amz-grant-read",
                        "type": "field"
                    },
                    {
                        "field": "_poarGrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "type": "field"
                    },
                    {
                        "field": "_poarGrantWrite",
                        "locationName": "x-amz-grant-write",
                        "type": "field"
                    },
                    {
                        "field": "_poarGrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "type": "field"
                    }
                ],
                "queryPad": 0,
                "name": "PutObjectAcl",
                "query": [
                    {
                        "value": "acl",
                        "type": "const"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarACL",
                        "name": "_poarACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarAccessControlPolicy",
                        "name": "_poarAccessControlPolicy",
                        "shape": "AccessControlPolicy",
                        "locationName": "AccessControlPolicy",
                        "documentation": null,
                        "typeExposed": "Maybe AccessControlPolicy",
                        "type": "Maybe AccessControlPolicy"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarContentMD5",
                        "name": "_poarContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarGrantFullControl",
                        "name": "_poarGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarGrantRead",
                        "name": "_poarGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to list the objects in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarGrantReadACP",
                        "name": "_poarGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the bucket ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarGrantWrite",
                        "name": "_poarGrantWrite",
                        "shape": "GrantWrite",
                        "locationName": "x-amz-grant-write",
                        "documentation": "Allows grantee to create, overwrite, and delete any object in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarGrantWriteACP",
                        "name": "_poarGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarACL",
                        "name": "_poarACL",
                        "shape": "ObjectCannedACL",
                        "locationName": "x-amz-acl",
                        "documentation": "The canned ACL to apply to the object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarAccessControlPolicy",
                        "name": "_poarAccessControlPolicy",
                        "shape": "AccessControlPolicy",
                        "locationName": "AccessControlPolicy",
                        "documentation": null,
                        "typeExposed": "Maybe AccessControlPolicy",
                        "type": "Maybe AccessControlPolicy"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "poarBucket",
                        "name": "_poarBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarContentMD5",
                        "name": "_poarContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarGrantFullControl",
                        "name": "_poarGrantFullControl",
                        "shape": "GrantFullControl",
                        "locationName": "x-amz-grant-full-control",
                        "documentation": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarGrantRead",
                        "name": "_poarGrantRead",
                        "shape": "GrantRead",
                        "locationName": "x-amz-grant-read",
                        "documentation": "Allows grantee to list the objects in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarGrantReadACP",
                        "name": "_poarGrantReadACP",
                        "shape": "GrantReadACP",
                        "locationName": "x-amz-grant-read-acp",
                        "documentation": "Allows grantee to read the bucket ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarGrantWrite",
                        "name": "_poarGrantWrite",
                        "shape": "GrantWrite",
                        "locationName": "x-amz-grant-write",
                        "documentation": "Allows grantee to create, overwrite, and delete any object in the bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "poarGrantWriteACP",
                        "name": "_poarGrantWriteACP",
                        "shape": "GrantWriteACP",
                        "locationName": "x-amz-grant-write-acp",
                        "documentation": "Allows grantee to write the ACL for the applicable bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "poarKey",
                        "name": "_poarKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "restoreObjectResponse",
                "wrapper": false,
                "required": [],
                "name": "RestoreObjectResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.S3.RestoreObject",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "RestoreObject",
            "method": "post",
            "documentation": "Restores an archived copy of an object back into Amazon S3",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectRestore.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "restoreObject",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_rorBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_rorKey",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rorRestoreRequest",
                    "name": "_rorRestoreRequest",
                    "shape": "RestoreRequest",
                    "locationName": "RestoreRequest",
                    "documentation": null,
                    "typeExposed": "Maybe RestoreRequest",
                    "type": "Maybe RestoreRequest"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rorBucket",
                        "name": "_rorBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rorKey",
                        "name": "_rorKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 10,
                "name": "RestoreObject",
                "query": [
                    {
                        "value": "restore",
                        "type": "const"
                    },
                    {
                        "field": "_rorVersionId",
                        "locationName": "versionId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rorVersionId",
                        "name": "_rorVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rorRestoreRequest",
                        "name": "_rorRestoreRequest",
                        "shape": "RestoreRequest",
                        "locationName": "RestoreRequest",
                        "documentation": null,
                        "typeExposed": "Maybe RestoreRequest",
                        "type": "Maybe RestoreRequest"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rorBucket",
                        "name": "_rorBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rorKey",
                        "name": "_rorKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rorRestoreRequest",
                        "name": "_rorRestoreRequest",
                        "shape": "RestoreRequest",
                        "locationName": "RestoreRequest",
                        "documentation": null,
                        "typeExposed": "Maybe RestoreRequest",
                        "type": "Maybe RestoreRequest"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rorVersionId",
                        "name": "_rorVersionId",
                        "shape": "ObjectVersionId",
                        "locationName": "versionId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "uploadPartOutput",
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "UploadPartOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upoServerSideEncryption",
                        "name": "_upoServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upoETag",
                        "name": "_upoETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag for the uploaded object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upoSSECustomerAlgorithm",
                        "name": "_upoSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upoSSECustomerKeyMD5",
                        "name": "_upoSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upoETag",
                        "name": "_upoETag",
                        "shape": "ETag",
                        "locationName": "ETag",
                        "documentation": "Entity tag for the uploaded object.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upoSSECustomerAlgorithm",
                        "name": "_upoSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upoSSECustomerKeyMD5",
                        "name": "_upoSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upoServerSideEncryption",
                        "name": "_upoServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.UploadPart",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "UploadPart",
            "method": "put",
            "documentation": "\u003cp\u003eUploads a part in a multipart upload.\u003c/p\u003e \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e After you initiate multipart upload and upload one or more parts, you must either complete or abort multipart upload in order to stop getting charged for storage of the uploaded parts. Only after you either complete or abort multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts storage.\u003c/p\u003e",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPart.html",
            "request": {
                "deriving": [
                    "Show",
                    "Generic"
                ],
                "streaming": true,
                "fieldPad": 24,
                "ctor": "uploadPart",
                "headerPad": 48,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_uprBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_uprKey",
                        "type": "var"
                    }
                ],
                "payload": {
                    "location": "body",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "uprBody",
                    "name": "_uprBody",
                    "shape": "Body",
                    "locationName": "Body",
                    "documentation": null,
                    "typeExposed": "RqBody",
                    "type": "RqBody"
                },
                "required": [
                    {
                        "location": "body",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uprBody",
                        "name": "_uprBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": null,
                        "typeExposed": "RqBody",
                        "type": "RqBody"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uprBucket",
                        "name": "_uprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uprKey",
                        "name": "_uprKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uprPartNumber",
                        "name": "_uprPartNumber",
                        "shape": "PartNumber",
                        "locationName": "partNumber",
                        "documentation": "Part number of part being uploaded.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uprUploadId",
                        "name": "_uprUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": "Upload ID identifying the multipart upload whose part is being uploaded.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [
                    {
                        "field": "_uprContentLength",
                        "locationName": "Content-Length",
                        "type": "field"
                    },
                    {
                        "field": "_uprContentMD5",
                        "locationName": "Content-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_uprSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_uprSSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_uprSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 11,
                "name": "UploadPart",
                "query": [
                    {
                        "field": "_uprPartNumber",
                        "locationName": "partNumber",
                        "type": "field"
                    },
                    {
                        "field": "_uprUploadId",
                        "locationName": "uploadId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uprContentLength",
                        "name": "_uprContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uprContentMD5",
                        "name": "_uprContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uprSSECustomerAlgorithm",
                        "name": "_uprSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "uprSSECustomerKey",
                        "name": "_uprSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uprSSECustomerKeyMD5",
                        "name": "_uprSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uprBody",
                        "name": "_uprBody",
                        "shape": "Body",
                        "locationName": "Body",
                        "documentation": null,
                        "typeExposed": "RqBody",
                        "type": "RqBody"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uprBucket",
                        "name": "_uprBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uprContentLength",
                        "name": "_uprContentLength",
                        "shape": "ContentLength",
                        "locationName": "Content-Length",
                        "documentation": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uprContentMD5",
                        "name": "_uprContentMD5",
                        "shape": "ContentMD5",
                        "locationName": "Content-MD5",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uprKey",
                        "name": "_uprKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uprPartNumber",
                        "name": "_uprPartNumber",
                        "shape": "PartNumber",
                        "locationName": "partNumber",
                        "documentation": "Part number of part being uploaded.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uprSSECustomerAlgorithm",
                        "name": "_uprSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "uprSSECustomerKey",
                        "name": "_uprSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uprSSECustomerKeyMD5",
                        "name": "_uprSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uprUploadId",
                        "name": "_uprUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": "Upload ID identifying the multipart upload whose part is being uploaded.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "S3",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 25,
                "ctor": "uploadPartCopyOutput",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "upcoCopyPartResult",
                    "name": "_upcoCopyPartResult",
                    "shape": "CopyPartResult",
                    "locationName": "CopyPartResult",
                    "documentation": null,
                    "typeExposed": "Maybe CopyPartResult",
                    "type": "Maybe CopyPartResult"
                },
                "required": [],
                "name": "UploadPartCopyOutput",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcoCopySourceVersionId",
                        "name": "_upcoCopySourceVersionId",
                        "shape": "CopySourceVersionId",
                        "locationName": "x-amz-copy-source-version-id",
                        "documentation": "The version of the source object that was copied, if you have enabled versioning on the source bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcoCopyPartResult",
                        "name": "_upcoCopyPartResult",
                        "shape": "CopyPartResult",
                        "locationName": "CopyPartResult",
                        "documentation": null,
                        "typeExposed": "Maybe CopyPartResult",
                        "type": "Maybe CopyPartResult"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcoServerSideEncryption",
                        "name": "_upcoServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcoSSECustomerAlgorithm",
                        "name": "_upcoSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcoSSECustomerKeyMD5",
                        "name": "_upcoSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcoCopyPartResult",
                        "name": "_upcoCopyPartResult",
                        "shape": "CopyPartResult",
                        "locationName": "CopyPartResult",
                        "documentation": null,
                        "typeExposed": "Maybe CopyPartResult",
                        "type": "Maybe CopyPartResult"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcoCopySourceVersionId",
                        "name": "_upcoCopySourceVersionId",
                        "shape": "CopySourceVersionId",
                        "locationName": "x-amz-copy-source-version-id",
                        "documentation": "The version of the source object that was copied, if you have enabled versioning on the source bucket.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcoSSECustomerAlgorithm",
                        "name": "_upcoSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcoSSECustomerKeyMD5",
                        "name": "_upcoSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcoServerSideEncryption",
                        "name": "_upcoServerSideEncryption",
                        "shape": "ServerSideEncryption",
                        "locationName": "x-amz-server-side-encryption",
                        "documentation": "The Server-side encryption algorithm used when storing this object in S3.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.S3.UploadPartCopy",
            "protocol": "xml",
            "imports": [
                "Network.AWS.Request",
                "Network.AWS.S3.Types"
            ],
            "name": "UploadPartCopy",
            "method": "put",
            "documentation": "Uploads a part by copying data from an existing object as data source.",
            "documentationUrl": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPartCopy.html",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 35,
                "ctor": "uploadPartCopy",
                "headerPad": 60,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_upcrBucket",
                        "type": "var"
                    },
                    {
                        "value": "/",
                        "type": "const"
                    },
                    {
                        "value": "_upcrKey",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upcrBucket",
                        "name": "_upcrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upcrCopySource",
                        "name": "_upcrCopySource",
                        "shape": "CopySource",
                        "locationName": "x-amz-copy-source",
                        "documentation": "The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upcrKey",
                        "name": "_upcrKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upcrPartNumber",
                        "name": "_upcrPartNumber",
                        "shape": "PartNumber",
                        "locationName": "partNumber",
                        "documentation": "Part number of part being copied.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upcrUploadId",
                        "name": "_upcrUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": "Upload ID identifying the multipart upload whose part is being copied.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [
                    {
                        "field": "_upcrCopySource",
                        "locationName": "x-amz-copy-source",
                        "type": "field"
                    },
                    {
                        "field": "_upcrCopySourceIfMatch",
                        "locationName": "x-amz-copy-source-if-match",
                        "type": "field"
                    },
                    {
                        "field": "_upcrCopySourceIfModifiedSince",
                        "locationName": "x-amz-copy-source-if-modified-since",
                        "type": "field"
                    },
                    {
                        "field": "_upcrCopySourceIfNoneMatch",
                        "locationName": "x-amz-copy-source-if-none-match",
                        "type": "field"
                    },
                    {
                        "field": "_upcrCopySourceIfUnmodifiedSince",
                        "locationName": "x-amz-copy-source-if-unmodified-since",
                        "type": "field"
                    },
                    {
                        "field": "_upcrCopySourceRange",
                        "locationName": "x-amz-copy-source-range",
                        "type": "field"
                    },
                    {
                        "field": "_upcrSSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_upcrSSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_upcrSSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    },
                    {
                        "field": "_upcrCopySourceSSECustomerAlgorithm",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-algorithm",
                        "type": "field"
                    },
                    {
                        "field": "_upcrCopySourceSSECustomerKey",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key",
                        "type": "field"
                    },
                    {
                        "field": "_upcrCopySourceSSECustomerKeyMD5",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key-MD5",
                        "type": "field"
                    }
                ],
                "queryPad": 11,
                "name": "UploadPartCopy",
                "query": [
                    {
                        "field": "_upcrPartNumber",
                        "locationName": "partNumber",
                        "type": "field"
                    },
                    {
                        "field": "_upcrUploadId",
                        "locationName": "uploadId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceIfMatch",
                        "name": "_upcrCopySourceIfMatch",
                        "shape": "CopySourceIfMatch",
                        "locationName": "x-amz-copy-source-if-match",
                        "documentation": "Copies the object if its entity tag (ETag) matches the specified tag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceIfModifiedSince",
                        "name": "_upcrCopySourceIfModifiedSince",
                        "shape": "CopySourceIfModifiedSince",
                        "locationName": "x-amz-copy-source-if-modified-since",
                        "documentation": "Copies the object if it has been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceIfNoneMatch",
                        "name": "_upcrCopySourceIfNoneMatch",
                        "shape": "CopySourceIfNoneMatch",
                        "locationName": "x-amz-copy-source-if-none-match",
                        "documentation": "Copies the object if its entity tag (ETag) is different than the specified ETag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceIfUnmodifiedSince",
                        "name": "_upcrCopySourceIfUnmodifiedSince",
                        "shape": "CopySourceIfUnmodifiedSince",
                        "locationName": "x-amz-copy-source-if-unmodified-since",
                        "documentation": "Copies the object if it hasn't been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceRange",
                        "name": "_upcrCopySourceRange",
                        "shape": "CopySourceRange",
                        "locationName": "x-amz-copy-source-range",
                        "documentation": "The range of bytes to copy from the source object. The range value must use the form bytes=first-last, where the first and last are the zero-based byte offsets to copy. For example, bytes=0-9 indicates that you want to copy the first ten bytes of the source. You can copy a range only if the source object is greater than 5 GB.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrSSECustomerAlgorithm",
                        "name": "_upcrSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrSSECustomerKey",
                        "name": "_upcrSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrSSECustomerKeyMD5",
                        "name": "_upcrSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceSSECustomerAlgorithm",
                        "name": "_upcrCopySourceSSECustomerAlgorithm",
                        "shape": "CopySourceSSECustomerAlgorithm",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use when decrypting the source object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceSSECustomerKey",
                        "name": "_upcrCopySourceSSECustomerKey",
                        "shape": "CopySourceSSECustomerKey",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceSSECustomerKeyMD5",
                        "name": "_upcrCopySourceSSECustomerKeyMD5",
                        "shape": "CopySourceSSECustomerKeyMD5",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upcrBucket",
                        "name": "_upcrBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upcrCopySource",
                        "name": "_upcrCopySource",
                        "shape": "CopySource",
                        "locationName": "x-amz-copy-source",
                        "documentation": "The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceIfMatch",
                        "name": "_upcrCopySourceIfMatch",
                        "shape": "CopySourceIfMatch",
                        "locationName": "x-amz-copy-source-if-match",
                        "documentation": "Copies the object if its entity tag (ETag) matches the specified tag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceIfModifiedSince",
                        "name": "_upcrCopySourceIfModifiedSince",
                        "shape": "CopySourceIfModifiedSince",
                        "locationName": "x-amz-copy-source-if-modified-since",
                        "documentation": "Copies the object if it has been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceIfNoneMatch",
                        "name": "_upcrCopySourceIfNoneMatch",
                        "shape": "CopySourceIfNoneMatch",
                        "locationName": "x-amz-copy-source-if-none-match",
                        "documentation": "Copies the object if its entity tag (ETag) is different than the specified ETag.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceIfUnmodifiedSince",
                        "name": "_upcrCopySourceIfUnmodifiedSince",
                        "shape": "CopySourceIfUnmodifiedSince",
                        "locationName": "x-amz-copy-source-if-unmodified-since",
                        "documentation": "Copies the object if it hasn't been modified since the specified time.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceRange",
                        "name": "_upcrCopySourceRange",
                        "shape": "CopySourceRange",
                        "locationName": "x-amz-copy-source-range",
                        "documentation": "The range of bytes to copy from the source object. The range value must use the form bytes=first-last, where the first and last are the zero-based byte offsets to copy. For example, bytes=0-9 indicates that you want to copy the first ten bytes of the source. You can copy a range only if the source object is greater than 5 GB.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceSSECustomerAlgorithm",
                        "name": "_upcrCopySourceSSECustomerAlgorithm",
                        "shape": "CopySourceSSECustomerAlgorithm",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use when decrypting the source object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceSSECustomerKey",
                        "name": "_upcrCopySourceSSECustomerKey",
                        "shape": "CopySourceSSECustomerKey",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrCopySourceSSECustomerKeyMD5",
                        "name": "_upcrCopySourceSSECustomerKeyMD5",
                        "shape": "CopySourceSSECustomerKeyMD5",
                        "locationName": "x-amz-copy-source-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upcrKey",
                        "name": "_upcrKey",
                        "shape": "ObjectKey",
                        "locationName": "Key",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upcrPartNumber",
                        "name": "_upcrPartNumber",
                        "shape": "PartNumber",
                        "locationName": "partNumber",
                        "documentation": "Part number of part being copied.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrSSECustomerAlgorithm",
                        "name": "_upcrSSECustomerAlgorithm",
                        "shape": "SSECustomerAlgorithm",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm",
                        "documentation": "Specifies the algorithm to use to when encrypting the object (e.g., AES256).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrSSECustomerKey",
                        "name": "_upcrSSECustomerKey",
                        "shape": "SSECustomerKey",
                        "locationName": "x-amz-server-side-encryption-customer-key",
                        "documentation": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side&#x200B;-encryption&#x200B;-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upcrSSECustomerKeyMD5",
                        "name": "_upcrSSECustomerKeyMD5",
                        "shape": "SSECustomerKeyMD5",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5",
                        "documentation": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upcrUploadId",
                        "name": "_upcrUploadId",
                        "shape": "MultipartUploadId",
                        "locationName": "uploadId",
                        "documentation": "Upload ID identifying the multipart upload whose part is being copied.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        }
    ]
}