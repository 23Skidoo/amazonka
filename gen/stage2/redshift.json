{
    "service": {
        "signature": "v4",
        "checksum": "sha256",
        "abbrev": "Redshift",
        "error": "RedshiftError",
        "namespace": "Network.AWS.Redshift",
        "protocol": "query",
        "imports": [
            "Network.AWS.Redshift.AuthorizeClusterSecurityGroupIngress",
            "Network.AWS.Redshift.AuthorizeSnapshotAccess",
            "Network.AWS.Redshift.CopyClusterSnapshot",
            "Network.AWS.Redshift.CreateCluster",
            "Network.AWS.Redshift.CreateClusterParameterGroup",
            "Network.AWS.Redshift.CreateClusterSecurityGroup",
            "Network.AWS.Redshift.CreateClusterSnapshot",
            "Network.AWS.Redshift.CreateClusterSubnetGroup",
            "Network.AWS.Redshift.CreateEventSubscription",
            "Network.AWS.Redshift.CreateHsmClientCertificate",
            "Network.AWS.Redshift.CreateHsmConfiguration",
            "Network.AWS.Redshift.DeleteCluster",
            "Network.AWS.Redshift.DeleteClusterParameterGroup",
            "Network.AWS.Redshift.DeleteClusterSecurityGroup",
            "Network.AWS.Redshift.DeleteClusterSnapshot",
            "Network.AWS.Redshift.DeleteClusterSubnetGroup",
            "Network.AWS.Redshift.DeleteEventSubscription",
            "Network.AWS.Redshift.DeleteHsmClientCertificate",
            "Network.AWS.Redshift.DeleteHsmConfiguration",
            "Network.AWS.Redshift.DescribeClusterParameterGroups",
            "Network.AWS.Redshift.DescribeClusterParameters",
            "Network.AWS.Redshift.DescribeClusterSecurityGroups",
            "Network.AWS.Redshift.DescribeClusterSnapshots",
            "Network.AWS.Redshift.DescribeClusterSubnetGroups",
            "Network.AWS.Redshift.DescribeClusterVersions",
            "Network.AWS.Redshift.DescribeClusters",
            "Network.AWS.Redshift.DescribeDefaultClusterParameters",
            "Network.AWS.Redshift.DescribeEventCategories",
            "Network.AWS.Redshift.DescribeEventSubscriptions",
            "Network.AWS.Redshift.DescribeEvents",
            "Network.AWS.Redshift.DescribeHsmClientCertificates",
            "Network.AWS.Redshift.DescribeHsmConfigurations",
            "Network.AWS.Redshift.DescribeLoggingStatus",
            "Network.AWS.Redshift.DescribeOrderableClusterOptions",
            "Network.AWS.Redshift.DescribeReservedNodeOfferings",
            "Network.AWS.Redshift.DescribeReservedNodes",
            "Network.AWS.Redshift.DescribeResize",
            "Network.AWS.Redshift.DisableLogging",
            "Network.AWS.Redshift.DisableSnapshotCopy",
            "Network.AWS.Redshift.EnableLogging",
            "Network.AWS.Redshift.EnableSnapshotCopy",
            "Network.AWS.Redshift.ModifyCluster",
            "Network.AWS.Redshift.ModifyClusterParameterGroup",
            "Network.AWS.Redshift.ModifyClusterSubnetGroup",
            "Network.AWS.Redshift.ModifyEventSubscription",
            "Network.AWS.Redshift.ModifySnapshotCopyRetentionPeriod",
            "Network.AWS.Redshift.PurchaseReservedNodeOffering",
            "Network.AWS.Redshift.RebootCluster",
            "Network.AWS.Redshift.ResetClusterParameterGroup",
            "Network.AWS.Redshift.RestoreFromClusterSnapshot",
            "Network.AWS.Redshift.RevokeClusterSecurityGroupIngress",
            "Network.AWS.Redshift.RevokeSnapshotAccess",
            "Network.AWS.Redshift.RotateEncryptionKey",
            "Network.AWS.Redshift.Types"
        ],
        "name": "Amazon Redshift",
        "version": "2012-12-01",
        "documentation": "\u003cfullname\u003eAmazon Redshift\u003c/fullname\u003e \u003cb\u003eOverview\u003c/b\u003e \u003cp\u003e This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\"\u003eUsing the Amazon Redshift Management Interfaces \u003c/a\u003e.\u003c/p\u003e \u003cp\u003e Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers. \u003c/p\u003e \u003cp\u003eIf you are a first-time user of Amazon Redshift, we recommend that you begin by reading the The \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\"\u003eAmazon Redshift Getting Started Guide\u003c/a\u003e\u003c/p\u003e \u003cp\u003eIf you are a database developer, the \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/dg/welcome.html\"\u003eAmazon Redshift Database Developer Guide\u003c/a\u003e explains how to design, build, query, and maintain the databases that make up your data warehouse. \u003c/p\u003e",
        "xmlNamespace": "http://redshift.amazonaws.com/doc/2012-12-01/",
        "endpoint": "regional",
        "endpointPrefix": "redshift"
    },
    "cabal": {
        "library": "amazonka-redshift",
        "modules": [
            "Network.AWS.Redshift",
            "Network.AWS.Redshift.AuthorizeClusterSecurityGroupIngress",
            "Network.AWS.Redshift.AuthorizeSnapshotAccess",
            "Network.AWS.Redshift.CopyClusterSnapshot",
            "Network.AWS.Redshift.CreateCluster",
            "Network.AWS.Redshift.CreateClusterParameterGroup",
            "Network.AWS.Redshift.CreateClusterSecurityGroup",
            "Network.AWS.Redshift.CreateClusterSnapshot",
            "Network.AWS.Redshift.CreateClusterSubnetGroup",
            "Network.AWS.Redshift.CreateEventSubscription",
            "Network.AWS.Redshift.CreateHsmClientCertificate",
            "Network.AWS.Redshift.CreateHsmConfiguration",
            "Network.AWS.Redshift.DeleteCluster",
            "Network.AWS.Redshift.DeleteClusterParameterGroup",
            "Network.AWS.Redshift.DeleteClusterSecurityGroup",
            "Network.AWS.Redshift.DeleteClusterSnapshot",
            "Network.AWS.Redshift.DeleteClusterSubnetGroup",
            "Network.AWS.Redshift.DeleteEventSubscription",
            "Network.AWS.Redshift.DeleteHsmClientCertificate",
            "Network.AWS.Redshift.DeleteHsmConfiguration",
            "Network.AWS.Redshift.DescribeClusterParameterGroups",
            "Network.AWS.Redshift.DescribeClusterParameters",
            "Network.AWS.Redshift.DescribeClusterSecurityGroups",
            "Network.AWS.Redshift.DescribeClusterSnapshots",
            "Network.AWS.Redshift.DescribeClusterSubnetGroups",
            "Network.AWS.Redshift.DescribeClusterVersions",
            "Network.AWS.Redshift.DescribeClusters",
            "Network.AWS.Redshift.DescribeDefaultClusterParameters",
            "Network.AWS.Redshift.DescribeEventCategories",
            "Network.AWS.Redshift.DescribeEventSubscriptions",
            "Network.AWS.Redshift.DescribeEvents",
            "Network.AWS.Redshift.DescribeHsmClientCertificates",
            "Network.AWS.Redshift.DescribeHsmConfigurations",
            "Network.AWS.Redshift.DescribeLoggingStatus",
            "Network.AWS.Redshift.DescribeOrderableClusterOptions",
            "Network.AWS.Redshift.DescribeReservedNodeOfferings",
            "Network.AWS.Redshift.DescribeReservedNodes",
            "Network.AWS.Redshift.DescribeResize",
            "Network.AWS.Redshift.DisableLogging",
            "Network.AWS.Redshift.DisableSnapshotCopy",
            "Network.AWS.Redshift.EnableLogging",
            "Network.AWS.Redshift.EnableSnapshotCopy",
            "Network.AWS.Redshift.ModifyCluster",
            "Network.AWS.Redshift.ModifyClusterParameterGroup",
            "Network.AWS.Redshift.ModifyClusterSubnetGroup",
            "Network.AWS.Redshift.ModifyEventSubscription",
            "Network.AWS.Redshift.ModifySnapshotCopyRetentionPeriod",
            "Network.AWS.Redshift.PurchaseReservedNodeOffering",
            "Network.AWS.Redshift.RebootCluster",
            "Network.AWS.Redshift.ResetClusterParameterGroup",
            "Network.AWS.Redshift.RestoreFromClusterSnapshot",
            "Network.AWS.Redshift.RevokeClusterSecurityGroupIngress",
            "Network.AWS.Redshift.RevokeSnapshotAccess",
            "Network.AWS.Redshift.RotateEncryptionKey",
            "Network.AWS.Redshift.Types"
        ],
        "dependencies": [],
        "version": "0.0.0",
        "synopsis": "",
        "description": ""
    },
    "types": {
        "Snapshot": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaAccountsWithRestoreAccess",
                    "type": "List AccountWithRestoreAccess"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaSnapshotIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaClusterIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaSnapshotCreateTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaPort",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaAvailabilityZone",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaClusterCreateTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaMasterUsername",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaClusterVersion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaSnapshotType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaNodeType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaNumberOfNodes",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaDBName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaVpcId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaEncrypted",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaEncryptedWithHSM",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaOwnerAccount",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaTotalBackupSizeInMegaBytes",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaActualIncrementalBackupSizeInMegaBytes",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaBackupProgressInMegaBytes",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaCurrentBackupRateInMegaBytesPerSecond",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaEstimatedSecondsToCompletion",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaElapsedTimeInSeconds",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "snaSourceRegion",
                    "type": "Maybe Text"
                }
            ]
        },
        "ClusterParameterGroup": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cpgParameterGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cpgParameterGroupFamily",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cpgDescription",
                    "type": "Maybe Text"
                }
            ]
        },
        "RestoreStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rsStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rsCurrentRestoreRateInMegaBytesPerSecond",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rsSnapshotSizeInMegaBytes",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rsProgressInMegaBytes",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rsElapsedTimeInSeconds",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rsEstimatedTimeToCompletionInSeconds",
                    "type": "Maybe Integer"
                }
            ]
        },
        "Event": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eveEventCategories",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eveSourceIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eveSourceType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eveMessage",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eveSeverity",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eveDate",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eveEventId",
                    "type": "Maybe Text"
                }
            ]
        },
        "ClusterSnapshotCopyStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cscsDestinationRegion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cscsRetentionPeriod",
                    "type": "Maybe Integer"
                }
            ]
        },
        "HsmClientCertificate": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hccHsmClientCertificateIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hccHsmClientCertificatePublicKey",
                    "type": "Maybe Text"
                }
            ]
        },
        "Cluster": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluClusterSecurityGroups",
                    "type": "List ClusterSecurityGroupMembership"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluVpcSecurityGroups",
                    "type": "List VpcSecurityGroupMembership"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluClusterParameterGroups",
                    "type": "List ClusterParameterGroupStatus"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluClusterNodes",
                    "type": "List ClusterNode"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluClusterIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluNodeType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluClusterStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluModifyStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluMasterUsername",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluDBName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluEndpoint",
                    "type": "Maybe Endpoint"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluClusterCreateTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluAutomatedSnapshotRetentionPeriod",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluClusterSubnetGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluVpcId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluAvailabilityZone",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluPreferredMaintenanceWindow",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluPendingModifiedValues",
                    "type": "Maybe PendingModifiedValues"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluClusterVersion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluAllowVersionUpgrade",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluNumberOfNodes",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluPubliclyAccessible",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluEncrypted",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluRestoreStatus",
                    "type": "Maybe RestoreStatus"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluHsmStatus",
                    "type": "Maybe HsmStatus"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluClusterSnapshotCopyStatus",
                    "type": "Maybe ClusterSnapshotCopyStatus"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluClusterPublicKey",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluElasticIpStatus",
                    "type": "Maybe ElasticIpStatus"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cluClusterRevisionNumber",
                    "type": "Maybe Text"
                }
            ]
        },
        "ClusterNode": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cnNodeRole",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cnPrivateIPAddress",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cnPublicIPAddress",
                    "type": "Maybe Text"
                }
            ]
        },
        "EC2SecurityGroup": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ecsgStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ecsgEC2SecurityGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ecsgEC2SecurityGroupOwnerId",
                    "type": "Maybe Text"
                }
            ]
        },
        "OrderableClusterOption": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ocoAvailabilityZones",
                    "type": "List AvailabilityZone"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ocoClusterVersion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ocoClusterType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ocoNodeType",
                    "type": "Maybe Text"
                }
            ]
        },
        "ClusterParameterGroupStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cpgsParameterGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cpgsParameterApplyStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "Subnet": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "subSubnetIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "subSubnetAvailabilityZone",
                    "type": "Maybe AvailabilityZone"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "subSubnetStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "ClusterSecurityGroup": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "csgEC2SecurityGroups",
                    "type": "List EC2SecurityGroup"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "csgIPRanges",
                    "type": "List IPRange"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "csgClusterSecurityGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "csgDescription",
                    "type": "Maybe Text"
                }
            ]
        },
        "DefaultClusterParameters": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dcpParameters",
                    "type": "List Parameter"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dcpParameterGroupFamily",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dcpMarker",
                    "type": "Maybe Text"
                }
            ]
        },
        "namespace": "Network.AWS.Redshift.Types",
        "ClusterSubnetGroup": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "csg1Subnets",
                    "type": "List Subnet"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "csg1ClusterSubnetGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "csg1Description",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "csg1VpcId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "csg1SubnetGroupStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "EventInfoMap": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eimEventCategories",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eimEventId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eimEventDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eimSeverity",
                    "type": "Maybe Text"
                }
            ]
        },
        "imports": [],
        "ClusterSecurityGroupMembership": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "csgmClusterSecurityGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "csgmStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "ReservedNodeOffering": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnoRecurringCharges",
                    "type": "List RecurringCharge"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnoReservedNodeOfferingId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnoNodeType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnoDuration",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnoFixedPrice",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnoUsagePrice",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnoCurrencyCode",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnoOfferingType",
                    "type": "Maybe Text"
                }
            ]
        },
        "ReservedNode": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnRecurringCharges",
                    "type": "List RecurringCharge"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnReservedNodeId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnReservedNodeOfferingId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnNodeType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnStartTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnDuration",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnFixedPrice",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnUsagePrice",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnCurrencyCode",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnNodeCount",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnState",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rnOfferingType",
                    "type": "Maybe Text"
                }
            ]
        },
        "AccountWithRestoreAccess": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "awraAccountId",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "AvailabilityZone": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "azName",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "EventSubscription": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esSourceIdsList",
                    "type": "List Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esEventCategoriesList",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esCustomerAwsId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esCustSubscriptionId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esSnsTopicArn",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esSubscriptionCreationTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esSourceType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esSeverity",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esEnabled",
                    "type": "Maybe Bool"
                }
            ]
        },
        "HsmStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hsHsmClientCertificateIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hsHsmConfigurationIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hsStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "ElasticIpStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eisElasticIp",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eisStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "ClusterVersion": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cvClusterVersion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cvClusterParameterGroupFamily",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cvDescription",
                    "type": "Maybe Text"
                }
            ]
        },
        "RecurringCharge": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcRecurringChargeAmount",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcRecurringChargeFrequency",
                    "type": "Maybe Text"
                }
            ]
        },
        "Endpoint": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "endAddress",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "endPort",
                    "type": "Maybe Int"
                }
            ]
        },
        "IPRange": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "iprStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "iprCIDRIP",
                    "type": "Maybe Text"
                }
            ]
        },
        "EventCategoriesMap": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ecmEvents",
                    "type": "List EventInfoMap"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ecmSourceType",
                    "type": "Maybe Text"
                }
            ]
        },
        "HsmConfiguration": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hcHsmConfigurationIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hcDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hcHsmIpAddress",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "hcHsmPartitionName",
                    "type": "Maybe Text"
                }
            ]
        },
        "PendingModifiedValues": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvMasterUserPassword",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvNodeType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvNumberOfNodes",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvClusterType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvClusterVersion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvAutomatedSnapshotRetentionPeriod",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvClusterIdentifier",
                    "type": "Maybe Text"
                }
            ]
        },
        "VpcSecurityGroupMembership": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vsgmVpcSecurityGroupId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vsgmStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "Parameter": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parParameterName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parParameterValue",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parSource",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parDataType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parAllowedValues",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parIsModifiable",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parMinimumEngineVersion",
                    "type": "Maybe Text"
                }
            ]
        }
    },
    "operations": [
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cmClusters",
                        "type": "List Cluster"
                    }
                ],
                "name": "ClustersMessage",
                "resultWrapper": "DescribeClustersResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cmMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeClusters",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeClusters",
            "method": "post",
            "documentation": "\u003cp\u003e Returns properties of provisioned clusters including general cluster properties, cluster database properties, maintenance and backup properties, and security and access properties. This operation supports pagination. For more information about managing clusters, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html\"\u003eAmazon Redshift Clusters\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e . \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "DescribeClustersMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcm1ClusterIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcm1MaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcm1Marker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.Redshift.DeleteClusterSubnetGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DeleteClusterSubnetGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes the specified cluster subnet group. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dcsgmClusterSubnetGroupName",
                    "type": "Text"
                },
                "name": "DeleteClusterSubnetGroupMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "LoggingStatus",
                "resultWrapper": "DisableLoggingResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lsLoggingEnabled",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lsBucketName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lsS3KeyPrefix",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lsLastSuccessfulDeliveryTime",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lsLastFailureTime",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lsLastFailureMessage",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DisableLogging",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DisableLogging",
            "method": "post",
            "documentation": "\u003cp\u003eStops logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dlmClusterIdentifier",
                    "type": "Text"
                },
                "name": "DisableLoggingMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "mesrEventSubscription",
                    "type": "Maybe EventSubscription"
                },
                "wrapper": true,
                "name": "ModifyEventSubscriptionResult",
                "resultWrapper": "ModifyEventSubscriptionResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.ModifyEventSubscription",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "ModifyEventSubscription",
            "method": "post",
            "documentation": "\u003cp\u003e Modifies an existing Amazon Redshift event notification subscription. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mesmSubscriptionName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mesmSourceIds",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mesmEventCategories",
                        "type": "List Text"
                    }
                ],
                "name": "ModifyEventSubscriptionMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mesmSnsTopicArn",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mesmSourceType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mesmSeverity",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mesmEnabled",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dcsrSnapshot",
                    "type": "Maybe Snapshot"
                },
                "wrapper": true,
                "name": "DeleteClusterSnapshotResult",
                "resultWrapper": "DeleteClusterSnapshotResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.DeleteClusterSnapshot",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DeleteClusterSnapshot",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes the specified manual snapshot. The snapshot must be in the \u003ccode\u003eavailable\u003c/code\u003e state, with no other users authorized to access the snapshot. \u003c/p\u003e \u003cp\u003e Unlike automated snapshots, manual snapshots are retained even after you delete your cluster. Amazon Redshift does not delete your manual snapshots. You must delete manual snapshot explicitly to avoid getting charged. If other accounts are authorized to access the snapshot, you must revoke all of the authorizations before you can delete the snapshot. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsmSnapshotIdentifier",
                        "type": "Text"
                    }
                ],
                "name": "DeleteClusterSnapshotMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsmSnapshotClusterIdentifier",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "prnorReservedNode",
                    "type": "Maybe ReservedNode"
                },
                "wrapper": true,
                "name": "PurchaseReservedNodeOfferingResult",
                "resultWrapper": "PurchaseReservedNodeOfferingResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.PurchaseReservedNodeOffering",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "PurchaseReservedNodeOffering",
            "method": "post",
            "documentation": "\u003cp\u003e Allows you to purchase reserved nodes. Amazon Redshift offers a predefined set of reserved node offerings. You can purchase one of the offerings. You can call the \u003ca\u003eDescribeReservedNodeOfferings\u003c/a\u003e API to obtain the available reserved node offerings. You can call this API by providing a specific reserved node offering and the number of nodes you want to reserve. \u003c/p\u003e \u003cp\u003e For more information about managing parameter groups, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html\"\u003ePurchasing Reserved Nodes\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "prnomReservedNodeOfferingId",
                        "type": "Text"
                    }
                ],
                "name": "PurchaseReservedNodeOfferingMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "prnomNodeCount",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rnomReservedNodeOfferings",
                        "type": "List ReservedNodeOffering"
                    }
                ],
                "name": "ReservedNodeOfferingsMessage",
                "resultWrapper": "DescribeReservedNodeOfferingsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rnomMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeReservedNodeOfferings",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeReservedNodeOfferings",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of the available reserved node offerings by Amazon Redshift with their descriptions including the node type, the fixed and recurring costs of reserving the node and duration the node will be reserved for you. These descriptions help you determine which reserve node offering you want to purchase. You then use the unique offering ID in you call to \u003ca\u003ePurchaseReservedNodeOffering\u003c/a\u003e to reserve one or more nodes for your Amazon Redshift cluster. \u003c/p\u003e \u003cp\u003e For more information about managing parameter groups, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html\"\u003ePurchasing Reserved Nodes\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "DescribeReservedNodeOfferingsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drnomReservedNodeOfferingId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drnomMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drnomMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "emEvents",
                        "type": "List Event"
                    }
                ],
                "name": "EventsMessage",
                "resultWrapper": "DescribeEventsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "emMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeEvents",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeEvents",
            "method": "post",
            "documentation": "\u003cp\u003e Returns events related to clusters, security groups, snapshots, and parameter groups for the past 14 days. Events specific to a particular cluster, security group, snapshot or parameter group can be obtained by providing the name as a parameter. By default, the past hour of events are returned. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "DescribeEventsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demSourceIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demSourceType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demStartTime",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demEndTime",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demDuration",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rnmReservedNodes",
                        "type": "List ReservedNode"
                    }
                ],
                "name": "ReservedNodesMessage",
                "resultWrapper": "DescribeReservedNodesResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rnmMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeReservedNodes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeReservedNodes",
            "method": "post",
            "documentation": "\u003cp\u003e Returns the descriptions of the reserved nodes. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "DescribeReservedNodesMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drnmReservedNodeId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drnmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drnmMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cpgmParameterGroups",
                        "type": "List ClusterParameterGroup"
                    }
                ],
                "name": "ClusterParameterGroupsMessage",
                "resultWrapper": "DescribeClusterParameterGroupsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cpgmMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeClusterParameterGroups",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeClusterParameterGroups",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of Amazon Redshift parameter groups, including parameter groups you created and the default parameter group. For each parameter group, the response includes the parameter group name, description, and parameter group family name. You can optionally specify a name to retrieve the description of a specific parameter group. \u003c/p\u003e \u003cp\u003e For more information about managing parameter groups, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html\"\u003eAmazon Redshift Parameter Groups\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "DescribeClusterParameterGroupsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcpgm1ParameterGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcpgm1MaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcpgm1Marker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "LoggingStatus",
                "resultWrapper": "EnableLoggingResult",
                "type": "empty"
            },
            "namespace": "Network.AWS.Redshift.EnableLogging",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "EnableLogging",
            "method": "post",
            "documentation": "\u003cp\u003eStarts logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "elmClusterIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "elmBucketName",
                        "type": "Text"
                    }
                ],
                "name": "EnableLoggingMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "elmS3KeyPrefix",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ccsgrClusterSubnetGroup",
                    "type": "Maybe ClusterSubnetGroup"
                },
                "wrapper": true,
                "name": "CreateClusterSubnetGroupResult",
                "resultWrapper": "CreateClusterSubnetGroupResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.CreateClusterSubnetGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "CreateClusterSubnetGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new Amazon Redshift subnet group. You must provide a list of one or more subnets in your existing Amazon Virtual Private Cloud (Amazon VPC) when creating Amazon Redshift subnet group. \u003c/p\u003e \u003cp\u003e For information about subnet groups, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-cluster-subnet-groups.html\"\u003eAmazon Redshift Cluster Subnet Groups\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccsgm1ClusterSubnetGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccsgm1Description",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccsgm1SubnetIds",
                        "type": "List Text"
                    }
                ],
                "name": "CreateClusterSubnetGroupMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.Redshift.DeleteClusterParameterGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DeleteClusterParameterGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes a specified Amazon Redshift parameter group. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dcpgmParameterGroupName",
                    "type": "Text"
                },
                "name": "DeleteClusterParameterGroupMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csgm1ClusterSecurityGroups",
                        "type": "List ClusterSecurityGroup"
                    }
                ],
                "name": "ClusterSecurityGroupMessage",
                "resultWrapper": "DescribeClusterSecurityGroupsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csgm1Marker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeClusterSecurityGroups",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeClusterSecurityGroups",
            "method": "post",
            "documentation": "\u003cp\u003e Returns information about Amazon Redshift security groups. If the name of a security group is specified, the response will contain only information about only that security group. \u003c/p\u003e \u003cp\u003e For information about managing security groups, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html\"\u003eAmazon Redshift Cluster Security Groups\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "DescribeClusterSecurityGroupsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsgm2ClusterSecurityGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsgm2MaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsgm2Marker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "escrCluster",
                    "type": "Maybe Cluster"
                },
                "wrapper": true,
                "name": "EnableSnapshotCopyResult",
                "resultWrapper": "EnableSnapshotCopyResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.EnableSnapshotCopy",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "EnableSnapshotCopy",
            "method": "post",
            "documentation": "\u003cp\u003eEnables the automatic copy of snapshots from one region to another region for a specified cluster.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "escmClusterIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "escmDestinationRegion",
                        "type": "Text"
                    }
                ],
                "name": "EnableSnapshotCopyMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "escmRetentionPeriod",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "smSnapshots",
                        "type": "List Snapshot"
                    }
                ],
                "name": "SnapshotMessage",
                "resultWrapper": "DescribeClusterSnapshotsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "smMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeClusterSnapshots",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeClusterSnapshots",
            "method": "post",
            "documentation": "\u003cp\u003e Returns one or more snapshot objects, which contain metadata about your cluster snapshots. By default, this operation returns information about all snapshots of all clusters that are owned by you AWS customer account. No information is returned for snapshots owned by inactive AWS customer accounts. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "DescribeClusterSnapshotsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsm1ClusterIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsm1SnapshotIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsm1SnapshotType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsm1StartTime",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsm1EndTime",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsm1MaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsm1Marker",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsm1OwnerAccount",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csgmClusterSubnetGroups",
                        "type": "List ClusterSubnetGroup"
                    }
                ],
                "name": "ClusterSubnetGroupMessage",
                "resultWrapper": "DescribeClusterSubnetGroupsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "csgmMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeClusterSubnetGroups",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeClusterSubnetGroups",
            "method": "post",
            "documentation": "\u003cp\u003e Returns one or more cluster subnet group objects, which contain metadata about your cluster subnet groups. By default, this operation returns information about all cluster subnet groups that are defined in you AWS account. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "DescribeClusterSubnetGroupsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsgm1ClusterSubnetGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsgm1MaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcsgm1Marker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "mscrprCluster",
                    "type": "Maybe Cluster"
                },
                "wrapper": true,
                "name": "ModifySnapshotCopyRetentionPeriodResult",
                "resultWrapper": "ModifySnapshotCopyRetentionPeriodResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.ModifySnapshotCopyRetentionPeriod",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "ModifySnapshotCopyRetentionPeriod",
            "method": "post",
            "documentation": "\u003cp\u003e Modifies the number of days to retain automated snapshots in the destination region after they are copied from the source region. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mscrpmClusterIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mscrpmRetentionPeriod",
                        "type": "Int"
                    }
                ],
                "name": "ModifySnapshotCopyRetentionPeriodMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "asarSnapshot",
                    "type": "Maybe Snapshot"
                },
                "wrapper": true,
                "name": "AuthorizeSnapshotAccessResult",
                "resultWrapper": "AuthorizeSnapshotAccessResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.AuthorizeSnapshotAccess",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "AuthorizeSnapshotAccess",
            "method": "post",
            "documentation": "\u003cp\u003e Authorizes the specified AWS customer account to restore the specified snapshot. \u003c/p\u003e \u003cp\u003e For more information about working with snapshots, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html\"\u003eAmazon Redshift Snapshots\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "asamSnapshotIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "asamAccountWithRestoreAccess",
                        "type": "Text"
                    }
                ],
                "name": "AuthorizeSnapshotAccessMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "asamSnapshotClusterIdentifier",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rcrCluster",
                    "type": "Maybe Cluster"
                },
                "wrapper": true,
                "name": "RebootClusterResult",
                "resultWrapper": "RebootClusterResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.RebootCluster",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "RebootCluster",
            "method": "post",
            "documentation": "\u003cp\u003e Reboots a cluster. This action is taken as soon as possible. It results in a momentary outage to the cluster, during which the cluster status is set to \u003ccode\u003erebooting\u003c/code\u003e. A cluster event is created when the reboot is completed. Any pending cluster modifications (see \u003ca\u003eModifyCluster\u003c/a\u003e) are applied at this reboot. For more information about managing clusters, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html\"\u003eAmazon Redshift Clusters\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rcmClusterIdentifier",
                    "type": "Text"
                },
                "name": "RebootClusterMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dcrCluster",
                    "type": "Maybe Cluster"
                },
                "wrapper": true,
                "name": "DeleteClusterResult",
                "resultWrapper": "DeleteClusterResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.DeleteCluster",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DeleteCluster",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes a previously provisioned cluster. A successful response from the web service indicates that the request was received correctly. Use \u003ca\u003eDescribeClusters\u003c/a\u003e to monitor the status of the deletion. The delete operation cannot be canceled or reverted once submitted. For more information about managing clusters, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html\"\u003eAmazon Redshift Clusters\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e . \u003c/p\u003e \u003cp\u003e If you want to shut down the cluster and retain it for future use, set \u003ci\u003eSkipFinalClusterSnapshot\u003c/i\u003e to \u003ccode\u003efalse\u003c/code\u003e and specify a name for \u003ci\u003eFinalClusterSnapshotIdentifier\u003c/i\u003e. You can later restore this snapshot to resume using the cluster. If a final cluster snapshot is requested, the status of the cluster will be \"final-snapshot\" while the snapshot is being taken, then it's \"deleting\" once Amazon Redshift begins deleting the cluster. \u003c/p\u003e \u003cp\u003e For more information about managing clusters, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html\"\u003eAmazon Redshift Clusters\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e . \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcmClusterIdentifier",
                        "type": "Text"
                    }
                ],
                "name": "DeleteClusterMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcmSkipFinalClusterSnapshot",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcmFinalClusterSnapshotIdentifier",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cesrEventSubscription",
                    "type": "Maybe EventSubscription"
                },
                "wrapper": true,
                "name": "CreateEventSubscriptionResult",
                "resultWrapper": "CreateEventSubscriptionResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.CreateEventSubscription",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "CreateEventSubscription",
            "method": "post",
            "documentation": "\u003cp\u003e Creates an Amazon Redshift event notification subscription. This action requires an ARN (Amazon Resource Name) of an Amazon SNS topic created by either the Amazon Redshift console, the Amazon SNS console, or the Amazon SNS API. To obtain an ARN with Amazon SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console. \u003c/p\u003e \u003cp\u003e You can specify the source type, and lists of Amazon Redshift source IDs, event categories, and event severities. Notifications will be sent for all events you want that match those criteria. For example, you can specify source type = cluster, source ID = my-cluster-1 and mycluster2, event categories = Availability, Backup, and severity = ERROR. The subscription will only send notifications for those ERROR events in the Availability and Backup categories for the specified clusters. \u003c/p\u003e \u003cp\u003e If you specify both the source type and source IDs, such as source type = cluster and source identifier = my-cluster-1, notifications will be sent for all the cluster events for my-cluster-1. If you specify a source type but do not specify a source identifier, you will receive notice of the events for the objects of that type in your AWS account. If you do not specify either the SourceType nor the SourceIdentifier, you will be notified of events generated from all Amazon Redshift sources belonging to your AWS account. You must specify a source type if you specify a source ID. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cesmSubscriptionName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cesmSnsTopicArn",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cesmSourceIds",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cesmEventCategories",
                        "type": "List Text"
                    }
                ],
                "name": "CreateEventSubscriptionMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cesmSourceType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cesmSeverity",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cesmEnabled",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ocomOrderableClusterOptions",
                        "type": "List OrderableClusterOption"
                    }
                ],
                "name": "OrderableClusterOptionsMessage",
                "resultWrapper": "DescribeOrderableClusterOptionsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ocomMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeOrderableClusterOptions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeOrderableClusterOptions",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of orderable cluster options. Before you create a new cluster you can use this operation to find what options are available, such as the EC2 Availability Zones (AZ) in the specific AWS region that you can specify, and the node types you can request. The node types differ by available storage, memory, CPU and price. With the cost involved you might want to obtain a list of cluster options in the specific region and specify values when creating a cluster. For more information about managing clusters, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html\"\u003eAmazon Redshift Clusters\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "DescribeOrderableClusterOptionsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "docomClusterVersion",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "docomNodeType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "docomMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "docomMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ccrCluster",
                    "type": "Maybe Cluster"
                },
                "wrapper": true,
                "name": "CreateClusterResult",
                "resultWrapper": "CreateClusterResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.CreateCluster",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "CreateCluster",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new cluster. To create the cluster in virtual private cloud (VPC), you must provide cluster subnet group name. If you don't provide a cluster subnet group name or the cluster security group parameter, Amazon Redshift creates a non-VPC cluster, it associates the default cluster security group with the cluster. For more information about managing clusters, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html\"\u003eAmazon Redshift Clusters\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e . \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmClusterIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmNodeType",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmMasterUsername",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmMasterUserPassword",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmClusterSecurityGroups",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmVpcSecurityGroupIds",
                        "type": "List Text"
                    }
                ],
                "name": "CreateClusterMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmDBName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmClusterType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmClusterSubnetGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmAvailabilityZone",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmPreferredMaintenanceWindow",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmClusterParameterGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmAutomatedSnapshotRetentionPeriod",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmPort",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmClusterVersion",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmAllowVersionUpgrade",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmNumberOfNodes",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmPubliclyAccessible",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmEncrypted",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmHsmClientCertificateIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmHsmConfigurationIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccmElasticIp",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "chccrHsmClientCertificate",
                    "type": "Maybe HsmClientCertificate"
                },
                "wrapper": true,
                "name": "CreateHsmClientCertificateResult",
                "resultWrapper": "CreateHsmClientCertificateResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.CreateHsmClientCertificate",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "CreateHsmClientCertificate",
            "method": "post",
            "documentation": "\u003cp\u003eCreates an HSM client certificate that an Amazon Redshift cluster will use to connect to the client's HSM in order to store and retrieve the keys used to encrypt the cluster databases.\u003c/p\u003e \u003cp\u003eThe command returns a public key, which you must store in the HSM. In addition to creating the HSM certificate, you must create an Amazon Redshift HSM configuration that provides a cluster the information needed to store and use encryption keys in the HSM. For more information, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html\"\u003eHardware Security Modules\u003c/a\u003e in the Amazon Redshift Management Guide.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "chccmHsmClientCertificateIdentifier",
                    "type": "Text"
                },
                "name": "CreateHsmClientCertificateMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddcprDefaultClusterParameters",
                    "type": "Maybe DefaultClusterParameters"
                },
                "wrapper": true,
                "name": "DescribeDefaultClusterParametersResult",
                "resultWrapper": "DescribeDefaultClusterParametersResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.DescribeDefaultClusterParameters",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeDefaultClusterParameters",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of parameter settings for the specified parameter group family. \u003c/p\u003e \u003cp\u003e For more information about managing parameter groups, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html\"\u003eAmazon Redshift Parameter Groups\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddcpmParameterGroupFamily",
                        "type": "Text"
                    }
                ],
                "name": "DescribeDefaultClusterParametersMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddcpmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddcpmMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.Redshift.DeleteEventSubscription",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DeleteEventSubscription",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes an Amazon Redshift event notification subscription. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "desm1SubscriptionName",
                    "type": "Text"
                },
                "name": "DeleteEventSubscriptionMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "ClusterParameterGroupNameMessage",
                "resultWrapper": "ResetClusterParameterGroupResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cpgnmParameterGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cpgnmParameterGroupStatus",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.ResetClusterParameterGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "ResetClusterParameterGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Sets one or more parameters of the specified parameter group to their default values and sets the source values of the parameters to \"engine-default\". To reset the entire parameter group specify the \u003ci\u003eResetAllParameters\u003c/i\u003e parameter. For parameter changes to take effect you must reboot any associated clusters. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rcpgmParameterGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rcpgmParameters",
                        "type": "List Parameter"
                    }
                ],
                "name": "ResetClusterParameterGroupMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rcpgmResetAllParameters",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "esmEventSubscriptionsList",
                        "type": "List EventSubscription"
                    }
                ],
                "name": "EventSubscriptionsMessage",
                "resultWrapper": "DescribeEventSubscriptionsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "esmMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeEventSubscriptions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeEventSubscriptions",
            "method": "post",
            "documentation": "\u003cp\u003e Lists descriptions of all the Amazon Redshift event notifications subscription for a customer account. If you specify a subscription name, lists the description for that subscription. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "DescribeEventSubscriptionsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "desmSubscriptionName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "desmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "desmMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rcsgirClusterSecurityGroup",
                    "type": "Maybe ClusterSecurityGroup"
                },
                "wrapper": true,
                "name": "RevokeClusterSecurityGroupIngressResult",
                "resultWrapper": "RevokeClusterSecurityGroupIngressResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.RevokeClusterSecurityGroupIngress",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "RevokeClusterSecurityGroupIngress",
            "method": "post",
            "documentation": "\u003cp\u003e Revokes an ingress rule in an Amazon Redshift security group for a previously authorized IP range or Amazon EC2 security group. To add an ingress rule, see \u003ca\u003eAuthorizeClusterSecurityGroupIngress\u003c/a\u003e. For information about managing security groups, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html\"\u003eAmazon Redshift Cluster Security Groups\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rcsgimClusterSecurityGroupName",
                        "type": "Text"
                    }
                ],
                "name": "RevokeClusterSecurityGroupIngressMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rcsgimCIDRIP",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rcsgimEC2SecurityGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rcsgimEC2SecurityGroupOwnerId",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "hccmHsmClientCertificates",
                        "type": "List HsmClientCertificate"
                    }
                ],
                "name": "HsmClientCertificateMessage",
                "resultWrapper": "DescribeHsmClientCertificatesResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "hccmMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeHsmClientCertificates",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeHsmClientCertificates",
            "method": "post",
            "documentation": "\u003cp\u003eReturns information about the specified HSM client certificate. If no certificate ID is specified, returns information about all the HSM certificates owned by your AWS customer account.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "DescribeHsmClientCertificatesMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dhccmHsmClientCertificateIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dhccmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dhccmMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "ClusterParameterGroupNameMessage",
                "resultWrapper": "ModifyClusterParameterGroupResult",
                "type": "empty"
            },
            "namespace": "Network.AWS.Redshift.ModifyClusterParameterGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "ModifyClusterParameterGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Modifies the parameters of a parameter group. \u003c/p\u003e \u003cp\u003e For more information about managing parameter groups, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html\"\u003eAmazon Redshift Parameter Groups\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcpgmParameterGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcpgmParameters",
                        "type": "List Parameter"
                    }
                ],
                "name": "ModifyClusterParameterGroupMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ccsgrClusterSecurityGroup",
                    "type": "Maybe ClusterSecurityGroup"
                },
                "wrapper": true,
                "name": "CreateClusterSecurityGroupResult",
                "resultWrapper": "CreateClusterSecurityGroupResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.CreateClusterSecurityGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "CreateClusterSecurityGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new Amazon Redshift security group. You use security groups to control access to non-VPC clusters. \u003c/p\u003e \u003cp\u003e For information about managing security groups, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html\"\u003eAmazon Redshift Cluster Security Groups\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccsgmClusterSecurityGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccsgmDescription",
                        "type": "Text"
                    }
                ],
                "name": "CreateClusterSecurityGroupMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ecmEventCategoriesMapList",
                    "type": "List EventCategoriesMap"
                },
                "wrapper": false,
                "name": "EventCategoriesMessage",
                "resultWrapper": "DescribeEventCategoriesResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.DescribeEventCategories",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeEventCategories",
            "method": "post",
            "documentation": "\u003cp\u003eDisplays a list of event categories for all event source types, or for a specified source type. For a list of the event categories and source types, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-event-notifications.html\"\u003eAmazon Redshift Event Notifications\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "decmSourceType",
                    "type": "Maybe Text"
                },
                "name": "DescribeEventCategoriesMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rpmImportTablesCompleted",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rpmImportTablesInProgress",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rpmImportTablesNotStarted",
                        "type": "List Text"
                    }
                ],
                "name": "ResizeProgressMessage",
                "resultWrapper": "DescribeResizeResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rpmTargetNodeType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rpmTargetNumberOfNodes",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rpmTargetClusterType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rpmStatus",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rpmAvgResizeRateInMegaBytesPerSecond",
                        "type": "Maybe Double"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rpmTotalResizeDataInMegaBytes",
                        "type": "Maybe Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rpmProgressInMegaBytes",
                        "type": "Maybe Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rpmElapsedTimeInSeconds",
                        "type": "Maybe Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rpmEstimatedTimeToCompletionInSeconds",
                        "type": "Maybe Integer"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeResize",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeResize",
            "method": "post",
            "documentation": "\u003cp\u003e Returns information about the last resize operation for the specified cluster. If no resize operation has ever been initiated for the specified cluster, a \u003ccode\u003eHTTP 404\u003c/code\u003e error is returned. If a resize operation was initiated and completed, the status of the resize remains as \u003ccode\u003eSUCCEEDED\u003c/code\u003e until the next resize. \u003c/p\u003e \u003cp\u003e A resize operation can be requested using \u003ca\u003eModifyCluster\u003c/a\u003e and specifying a different number or type of nodes for the cluster. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "drmClusterIdentifier",
                    "type": "Text"
                },
                "name": "DescribeResizeMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.Redshift.DeleteHsmConfiguration",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DeleteHsmConfiguration",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified Amazon Redshift HSM configuration.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dhcm1HsmConfigurationIdentifier",
                    "type": "Text"
                },
                "name": "DeleteHsmConfigurationMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "acsgirClusterSecurityGroup",
                    "type": "Maybe ClusterSecurityGroup"
                },
                "wrapper": true,
                "name": "AuthorizeClusterSecurityGroupIngressResult",
                "resultWrapper": "AuthorizeClusterSecurityGroupIngressResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.AuthorizeClusterSecurityGroupIngress",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "AuthorizeClusterSecurityGroupIngress",
            "method": "post",
            "documentation": "\u003cp\u003e Adds an inbound (ingress) rule to an Amazon Redshift security group. Depending on whether the application accessing your cluster is running on the Internet or an EC2 instance, you can authorize inbound access to either a Classless Interdomain Routing (CIDR) IP address range or an EC2 security group. You can add as many as 20 ingress rules to an Amazon Redshift security group. \u003c/p\u003e \u003cp\u003eFor an overview of CIDR blocks, see the Wikipedia article on \u003ca href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\"\u003eClassless Inter-Domain Routing\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e You must also associate the security group with a cluster so that clients running on these IP addresses or the EC2 instance are authorized to connect to the cluster. For information about managing security groups, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html\"\u003eWorking with Security Groups\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "acsgimClusterSecurityGroupName",
                        "type": "Text"
                    }
                ],
                "name": "AuthorizeClusterSecurityGroupIngressMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "acsgimCIDRIP",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "acsgimEC2SecurityGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "acsgimEC2SecurityGroupOwnerId",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ccsr1Snapshot",
                    "type": "Maybe Snapshot"
                },
                "wrapper": true,
                "name": "CreateClusterSnapshotResult",
                "resultWrapper": "CreateClusterSnapshotResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.CreateClusterSnapshot",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "CreateClusterSnapshot",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a manual snapshot of the specified cluster. The cluster must be in the \u003ccode\u003eavailable\u003c/code\u003e state. \u003c/p\u003e \u003cp\u003e For more information about working with snapshots, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html\"\u003eAmazon Redshift Snapshots\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccsmSnapshotIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccsmClusterIdentifier",
                        "type": "Text"
                    }
                ],
                "name": "CreateClusterSnapshotMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "chcrHsmConfiguration",
                    "type": "Maybe HsmConfiguration"
                },
                "wrapper": true,
                "name": "CreateHsmConfigurationResult",
                "resultWrapper": "CreateHsmConfigurationResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.CreateHsmConfiguration",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "CreateHsmConfiguration",
            "method": "post",
            "documentation": "\u003cp\u003eCreates an HSM configuration that contains the information required by an Amazon Redshift cluster to store and use database encryption keys in a Hardware Security Module (HSM). After creating the HSM configuration, you can specify it as a parameter when creating a cluster. The cluster will then store its encryption keys in the HSM.\u003c/p\u003e \u003cp\u003eIn addition to creating an HSM configuration, you must also create an HSM client certificate. For more information, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html\"\u003eHardware Security Modules\u003c/a\u003e in the Amazon Redshift Management Guide.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "chcmHsmConfigurationIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "chcmDescription",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "chcmHsmIpAddress",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "chcmHsmPartitionName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "chcmHsmPartitionPassword",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "chcmHsmServerPublicCertificate",
                        "type": "Text"
                    }
                ],
                "name": "CreateHsmConfigurationMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "LoggingStatus",
                "resultWrapper": "DescribeLoggingStatusResult",
                "type": "empty"
            },
            "namespace": "Network.AWS.Redshift.DescribeLoggingStatus",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeLoggingStatus",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes whether information, such as queries and connection attempts, is being logged for the specified Amazon Redshift cluster.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dlsmClusterIdentifier",
                    "type": "Text"
                },
                "name": "DescribeLoggingStatusMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "mcrCluster",
                    "type": "Maybe Cluster"
                },
                "wrapper": true,
                "name": "ModifyClusterResult",
                "resultWrapper": "ModifyClusterResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.ModifyCluster",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "ModifyCluster",
            "method": "post",
            "documentation": "\u003cp\u003e Modifies the settings for a cluster. For example, you can add another security or parameter group, update the preferred maintenance window, or change the master user password. Resetting a cluster password or modifying the security groups associated with a cluster do not need a reboot. However, modifying a parameter group requires a reboot for parameters to take effect. For more information about managing clusters, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html\"\u003eAmazon Redshift Clusters\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e . \u003c/p\u003e \u003cp\u003eYou can also change node type and the number of nodes to scale up or down the cluster. When resizing a cluster, you must specify both the number of nodes and the node type even if one of the parameters does not change.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmClusterIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmClusterSecurityGroups",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmVpcSecurityGroupIds",
                        "type": "List Text"
                    }
                ],
                "name": "ModifyClusterMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmClusterType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmNodeType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmNumberOfNodes",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmMasterUserPassword",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmClusterParameterGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmAutomatedSnapshotRetentionPeriod",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmPreferredMaintenanceWindow",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmClusterVersion",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmAllowVersionUpgrade",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmHsmClientCertificateIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmHsmConfigurationIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcmNewClusterIdentifier",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.Redshift.DeleteClusterSecurityGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DeleteClusterSecurityGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes an Amazon Redshift security group. \u003c/p\u003e \u003cp\u003e For information about managing security groups, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html\"\u003eAmazon Redshift Cluster Security Groups\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dcsgmClusterSecurityGroupName",
                    "type": "Text"
                },
                "name": "DeleteClusterSecurityGroupMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dscrCluster",
                    "type": "Maybe Cluster"
                },
                "wrapper": true,
                "name": "DisableSnapshotCopyResult",
                "resultWrapper": "DisableSnapshotCopyResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.DisableSnapshotCopy",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DisableSnapshotCopy",
            "method": "post",
            "documentation": "\u003cp\u003eDisables the automatic copying of snapshots from one region to another region for a specified cluster.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dscmClusterIdentifier",
                    "type": "Text"
                },
                "name": "DisableSnapshotCopyMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cpgdParameters",
                        "type": "List Parameter"
                    }
                ],
                "name": "ClusterParameterGroupDetails",
                "resultWrapper": "DescribeClusterParametersResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cpgdMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeClusterParameters",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeClusterParameters",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a detailed list of parameters contained within the specified Amazon Redshift parameter group. For each parameter the response includes information such as parameter name, description, data type, value, whether the parameter value is modifiable, and so on. \u003c/p\u003e \u003cp\u003eYou can specify \u003ci\u003esource\u003c/i\u003e filter to retrieve parameters of only specific type. For example, to retrieve parameters that were modified by a user action such as from \u003ca\u003eModifyClusterParameterGroup\u003c/a\u003e, you can specify \u003ci\u003esource\u003c/i\u003e equal to \u003ci\u003euser\u003c/i\u003e.\u003c/p\u003e \u003cp\u003e For more information about managing parameter groups, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html\"\u003eAmazon Redshift Parameter Groups\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcpmParameterGroupName",
                        "type": "Text"
                    }
                ],
                "name": "DescribeClusterParametersMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcpmSource",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcpmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcpmMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rfcsrCluster",
                    "type": "Maybe Cluster"
                },
                "wrapper": true,
                "name": "RestoreFromClusterSnapshotResult",
                "resultWrapper": "RestoreFromClusterSnapshotResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.RestoreFromClusterSnapshot",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "RestoreFromClusterSnapshot",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new cluster from a snapshot. Amazon Redshift creates the resulting cluster with the same configuration as the original cluster from which the snapshot was created, except that the new cluster is created with the default cluster security and parameter group. After Amazon Redshift creates the cluster you can use the \u003ca\u003eModifyCluster\u003c/a\u003e API to associate a different security group and different parameter group with the restored cluster. \u003c/p\u003e \u003cp\u003e If you restore a cluster into a VPC, you must provide a cluster subnet group where you want the cluster restored. \u003c/p\u003e \u003cp\u003e For more information about working with snapshots, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html\"\u003eAmazon Redshift Snapshots\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmClusterIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmSnapshotIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmClusterSecurityGroups",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmVpcSecurityGroupIds",
                        "type": "List Text"
                    }
                ],
                "name": "RestoreFromClusterSnapshotMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmSnapshotClusterIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmPort",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmAvailabilityZone",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmAllowVersionUpgrade",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmClusterSubnetGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmPubliclyAccessible",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmOwnerAccount",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmHsmClientCertificateIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmHsmConfigurationIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmElasticIp",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmClusterParameterGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmPreferredMaintenanceWindow",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rfcsmAutomatedSnapshotRetentionPeriod",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ccpgrClusterParameterGroup",
                    "type": "Maybe ClusterParameterGroup"
                },
                "wrapper": true,
                "name": "CreateClusterParameterGroupResult",
                "resultWrapper": "CreateClusterParameterGroupResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.CreateClusterParameterGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "CreateClusterParameterGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Creates an Amazon Redshift parameter group. \u003c/p\u003e \u003cp\u003eCreating parameter groups is independent of creating clusters. You can associate a cluster with a parameter group when you create the cluster. You can also associate an existing cluster with a parameter group after the cluster is created by using \u003ca\u003eModifyCluster\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e Parameters in the parameter group define specific behavior that applies to the databases you create on the cluster. For more information about managing parameter groups, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html\"\u003eAmazon Redshift Parameter Groups\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccpgmParameterGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccpgmParameterGroupFamily",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccpgmDescription",
                        "type": "Text"
                    }
                ],
                "name": "CreateClusterParameterGroupMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rsarSnapshot",
                    "type": "Maybe Snapshot"
                },
                "wrapper": true,
                "name": "RevokeSnapshotAccessResult",
                "resultWrapper": "RevokeSnapshotAccessResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.RevokeSnapshotAccess",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "RevokeSnapshotAccess",
            "method": "post",
            "documentation": "\u003cp\u003e Removes the ability of the specified AWS customer account to restore the specified snapshot. If the account is currently restoring the snapshot, the restore will run to completion. \u003c/p\u003e \u003cp\u003e For more information about working with snapshots, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html\"\u003eAmazon Redshift Snapshots\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rsamSnapshotIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rsamAccountWithRestoreAccess",
                        "type": "Text"
                    }
                ],
                "name": "RevokeSnapshotAccessMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rsamSnapshotClusterIdentifier",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "hcmHsmConfigurations",
                        "type": "List HsmConfiguration"
                    }
                ],
                "name": "HsmConfigurationMessage",
                "resultWrapper": "DescribeHsmConfigurationsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "hcmMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeHsmConfigurations",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeHsmConfigurations",
            "method": "post",
            "documentation": "\u003cp\u003eReturns information about the specified Amazon Redshift HSM configuration. If no configuration ID is specified, returns information about all the HSM configurations owned by your AWS customer account.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "DescribeHsmConfigurationsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dhcmHsmConfigurationIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dhcmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dhcmMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ccsrSnapshot",
                    "type": "Maybe Snapshot"
                },
                "wrapper": true,
                "name": "CopyClusterSnapshotResult",
                "resultWrapper": "CopyClusterSnapshotResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.CopyClusterSnapshot",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "CopyClusterSnapshot",
            "method": "post",
            "documentation": "\u003cp\u003e Copies the specified automated cluster snapshot to a new manual cluster snapshot. The source must be an automated snapshot and it must be in the available state. \u003c/p\u003e \u003cp\u003e When you delete a cluster, Amazon Redshift deletes any automated snapshots of the cluster. Also, when the retention period of the snapshot expires, Amazon Redshift automatically deletes it. If you want to keep an automated snapshot for a longer period, you can make a manual copy of the snapshot. Manual snapshots are retained until you delete them. \u003c/p\u003e \u003cp\u003e For more information about working with snapshots, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html\"\u003eAmazon Redshift Snapshots\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccsmSourceSnapshotIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccsmTargetSnapshotIdentifier",
                        "type": "Text"
                    }
                ],
                "name": "CopyClusterSnapshotMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ccsmSourceSnapshotClusterIdentifier",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.Redshift.DeleteHsmClientCertificate",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DeleteHsmClientCertificate",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified HSM client certificate.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dhccm1HsmClientCertificateIdentifier",
                    "type": "Text"
                },
                "name": "DeleteHsmClientCertificateMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cvmClusterVersions",
                        "type": "List ClusterVersion"
                    }
                ],
                "name": "ClusterVersionsMessage",
                "resultWrapper": "DescribeClusterVersionsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cvmMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Redshift.DescribeClusterVersions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "DescribeClusterVersions",
            "method": "post",
            "documentation": "\u003cp\u003e Returns descriptions of the available Amazon Redshift cluster versions. You can call this operation even before creating any clusters to learn more about the Amazon Redshift versions. For more information about managing clusters, go to \u003ca href=\"http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html\"\u003eAmazon Redshift Clusters\u003c/a\u003e in the \u003ci\u003eAmazon Redshift Management Guide\u003c/i\u003e \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "DescribeClusterVersionsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcvmClusterVersion",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcvmClusterParameterGroupFamily",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcvmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dcvmMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "mcsgrClusterSubnetGroup",
                    "type": "Maybe ClusterSubnetGroup"
                },
                "wrapper": true,
                "name": "ModifyClusterSubnetGroupResult",
                "resultWrapper": "ModifyClusterSubnetGroupResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.ModifyClusterSubnetGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "ModifyClusterSubnetGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Modifies a cluster subnet group to include the specified list of VPC subnets. The operation replaces the existing list of subnets with the new list of subnets. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcsgmClusterSubnetGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcsgmSubnetIds",
                        "type": "List Text"
                    }
                ],
                "name": "ModifyClusterSubnetGroupMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mcsgmDescription",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rekrCluster",
                    "type": "Maybe Cluster"
                },
                "wrapper": true,
                "name": "RotateEncryptionKeyResult",
                "resultWrapper": "RotateEncryptionKeyResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.Redshift.RotateEncryptionKey",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.Redshift.Types"
            ],
            "name": "RotateEncryptionKey",
            "method": "post",
            "documentation": "\u003cp\u003e Rotates the encryption keys for a cluster. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rekmClusterIdentifier",
                    "type": "Text"
                },
                "name": "RotateEncryptionKeyMessage",
                "type": "newtype"
            }
        }
    ]
}